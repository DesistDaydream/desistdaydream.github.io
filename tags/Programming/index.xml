<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Programming on 断念梦的站点</title><link>https://desistdaydream.github.io/tags/Programming/</link><description>Recent content in Programming on 断念梦的站点</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/tags/Programming/index.xml" rel="self" type="application/rss+xml"/><item><title>编程</title><link>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/%E7%BC%96%E7%A8%8B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/%E7%BC%96%E7%A8%8B/</guid><description>概述 参考：
Wiki, Computer Programming(计算机编程) Wiki, Programmig Language(编程语言) Programming(编程) 是编写程序的行为。
无论处于上层的软件多么的高级, 想要在 CPU 执行, 就必须被翻译成“机器码”， 翻译这个工作由编译器来执行. 编译器在这个过程中, 要经过“编译”，“汇编”，“链接”几个步骤, 最后生成“可执行文件”。可执行文件中保存的是二进制机器码， 这串机器码可以直接被 CPU 读取和执行。
编程学习资料 参考：
公众号，微软带头打了 30 年，这场屏幕的大乱斗，终于要结束了(前端浏览器的历史) 码农教程 菜鸟教程 参考：
官网 菜鸟教程提供了基础编程技术教程。
菜鸟教程的 Slogan 为：学的不仅是技术，更是梦想！
记住：再牛逼的梦想也抵不住傻逼似的坚持！
本站域名为 runoob.com, runoob 为 Running Noob 的缩写，意为：奔跑吧！菜鸟。
本站包括了 HTML、CSS、Javascript、PHP、C、Python 等各种基础编程教程。
同时本站中也提供了大量的在线实例，通过实例，您可以更好地学习如何建站。
本站致力于推广各种编程语言技术，所有资源是完全免费的，并且会根据当前互联网的变化实时更新本站内容。
同时本站内容如果有不足的地方，也欢迎广大编程爱好者在本站留言提供意见。
W3school 参考：
官网 W3school 中文 开发者资源网站(各种语言的教程、各种参考手册等等)
MDN 参考：
Wiki, MDN GitHub MDN 组织 Mozilla Developer Network(Mozilla 开发者网络，简称 MDN) 官网，这是一个汇集了众多 Mozilla 基金会产品和网络技术开发文档的网站。</description></item><item><title>指令集架构</title><link>https://desistdaydream.github.io/docs/0.%E8%AE%A1%E7%AE%97%E6%9C%BA/CPU/%E6%8C%87%E4%BB%A4%E9%9B%86%E6%9E%B6%E6%9E%84/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/0.%E8%AE%A1%E7%AE%97%E6%9C%BA/CPU/%E6%8C%87%E4%BB%A4%E9%9B%86%E6%9E%B6%E6%9E%84/</guid><description>概述 参考：
Wiki, InstructionSetArchitecture(指令集架构) https://picture.iczhiku.com/weixin/message1583925567196.html https://a-suozhang.xyz/2019/09/27/ISA/ Instruction set architecture(指令集架构，简称 ISA) 是软件和硬件之间的接口，是一套标准规范，并不具备实体，我们可以根据这套规范去设计 CPU 和对应的软件系统，并最终形成产品。
执行 ISA 描述中的指令的设备，称为 implementation(实现)，实现这个功能的设备，通常都是 CPU。
常见的指令集如：
AMD(X86_64) ARM RISC-V 等 如果把软件和硬件看成螺母和螺钉，那么 ISA 就是螺母和螺钉之间对接的规范(e.g.尺寸、螺纹 之类的)。螺母和螺钉都按照相同的尺寸(i.e.相同的规范)去设计，即使是由不同的厂商来生产，也可以保证最终所有的螺钉都能拧到螺母上。
指令集向上承载的是整个软件生态，向下则规范了以处理器芯片为代表的整个硬件生态。根据一份指令集规范，设计一款处理器，其上可以运行同样遵循该指令集规范所编写的软件代码。故而，我们在提到指令集的时候，有时候也指的是其背后的整个软硬件生态系统，包括外围芯片、操作系统、编译器和诸多应用软件（浏览器、游戏软件等）。事实证明，每一种芯片在市场竞争中要取得成功，很大程度上取决于其生态系统。
指令 &amp;amp; 指令集 &amp;amp; 指令集架构 历史 B 站，【差评】乐疯了：为什么美国想用RISC-V搞死中国，是本年度最大的笑话。。。
RISC 与 CISC 参考:
Wiki, Complex instruction set computer Wiki, Reduced instruction set computer Complex instruction set computer(复杂指令集计算机，简称 CISC)
Reduced instruction set computer(精简指令集极端及，简称 RISC)</description></item></channel></rss>