<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Network_analyzer on 断念梦的站点</title><link>https://desistdaydream.github.io/tags/Network_analyzer/</link><description>Recent content in Network_analyzer on 断念梦的站点</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/tags/Network_analyzer/index.xml" rel="self" type="application/rss+xml"/><item><title>hping</title><link>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/Utility/hping/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/Utility/hping/</guid><description>概述 参考：
GitHub 项目，antirez/hping https://www.kali.org/tools/hping3/ https://salsa.debian.org/debian/hping3 Wiki, Hping 原始 GitHub 项目截至 2024-04-18 已经有 10 年没更新了。
hping 不支持 IPv6
https://github.com/TeddyGuo/tping 像 hping，但支持 IPv6，Python 编写
nping 由 Nmap
hping 是由 Salvatore Sanfilippo（也称为 Antirez）创建的 TCP/IP 协议的开源数据包生成器和分析器。它是用于防火墙和网络安全审计和测试的常用工具之一，用于利用空闲扫描扫描技术（也是由 hping 作者发明的），现在在 Nmap Security Scanner 中实现。新版本的 hping，hping3，可以使用 Tcl 语言编写脚本，并实现一个基于字符串的、人类可读的 TCP/IP 数据包描述引擎，以便程序员可以编写与低级 TCP/IP 数据包操作和分析相关的脚本。很短的时间。
Syntax(语法) EXAMPLE https://www.cnblogs.com/Higgerw/p/16469371.html
通过 eth1，发送 SYN 报文到 172.24.194.179 的 80 端口。源地址伪造为 192.168.180.131，时间间隔 1000us
hping3 -I eth0 -S 172.24.194.179 -p 80 -a 192.168.180.131 -i u1000 通过 eth1, 发送 SYN 报文到 192.</description></item><item><title>Netcat</title><link>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/Utility/Netcat/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/Utility/Netcat/</guid><description>概述 参考：
Wike，Netcat Ncat Manual(手册) https://zhuanlan.zhihu.com/p/83959309 Netcat 是一个简单的实用程序通过 TCP 或 UDP 网络连接读取和写入数据。它旨在成为一个可靠的后端工具，可直接使用或轻松由其他程序和脚本驱动。同时，它还是一个功能丰富的网络调试和探索工具，因为它几乎可以创建您需要的任何类型的连接，包括端口绑定以接受传入连接。
由于 Netcat 的设计理念和功能，被人亲切的亲切得称为 网络工具中的瑞士军刀
最初的 Netcat 是由 hobbit 于 1995 年发布的，尽管它很受欢迎，但它并没有得到维护。有时甚至很难找到v1.10 源代码的副本。该工具的灵活性和实用性促使 Nmap 项目产生 Ncat)，这是一种支持 SSL、IPv6、SOCKS 和 http 代理、连接代理等的现代重新实现。除了 Nmap 项目重新了 Netcat，还有很多重写甚至扩展了 Netcat 的工具
Socat OpenBSD 的 Netcat Cryptcat Netcat6 pnetcat SBD 所谓的GNU Netcat 如需下载和更多信息， 访问 Netcat 主页。
Ncat 参考：
Nmap，ncat Ncat 是一个功能丰富的网络实用程序，它可以从命令行跨网络读取和写入数据。Ncat 由 Nmap 项目编写的，是对古老的 Netcat 的大大改进的重新实现。它同时使用 TCP 和 UDP 进行通信，并被设计为一种可靠的后端工具，可立即为其他应用程序和用户提供网络连接。Ncat 不仅适用于 IPv4 和 IPv6，还为用户提供了几乎无限的潜在用途。
在 Ncat 的众多功能中，包括将 Ncat 链接在一起、将 TCP 和 UDP 端口重定向到其他站点、SSL 支持以及通过 SOCKS4 或 HTTP（CONNECT 方法）代理（以及可选的代理身份验证）进行代理连接的能力。一些通用原则适用于大多数应用程序，从而使您能够立即向通常不支持它的软件添加网络支持。</description></item><item><title>Nmap</title><link>https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Utility/Nmap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Utility/Nmap/</guid><description>概述 参考：
官网 Manual(手册)，NMAP(1) Network Mapper(网络映射器，简称 Nmap) 是一个用于网络探索和安全审计的开源工具。旨在快速扫描大型网络。
Nmap 项目除了有自己的 nmap 工具外，还有很多实用程序，比如 Netcat、etc.
Syntax(语法) nmap [Scan Type&amp;hellip;] [OPTIONS] {TARGET}
Scan Type(扫描类型) # TARGET # 扫描目标 直接使用 nmap IP 即可开始一个简单的扫描任务
OPTIONS 参考：
https://nmap.org/book/man-briefoptions.html 规避防火墙/IDS 与 伪装 FIREWALL/IDS EVASION AND SPOOFING
TODO
-f; --mtu &amp;lt;val&amp;gt;: fragment packets (optionally w/given MTU) -D &amp;lt;decoy1,decoy2[,ME],...&amp;gt;: Cloak a scan with decoys -S &amp;lt;IP_Address&amp;gt;: Spoof source address -e &amp;lt;iface&amp;gt;: Use specified interface -g/--source-port &amp;lt;portnum&amp;gt;: Use given port number --proxies &amp;lt;url1,[url2],.</description></item><item><title>nping</title><link>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/Utility/nping/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/Utility/nping/</guid><description>概述 参考：
Nmap，nping 由 Nmap 项目组开发的类似 hping 的工具
每次的发包都称为一次 Probe(探测)
Syntax(语法) 参考：
Manual(手册)，nping nping [OPTIONS] {&amp;lt;targets&amp;gt;}
OPTIONS &amp;ndash;tcp # 使用 TCP 探针模式
TCP 探针模式选项 -g, &amp;ndash;source-port PORT_NUMBER # 设置源端口
&amp;ndash;flags FLAG_LIST # 设置 TCP 的 Flag, 多个 Flag 以逗号分隔
IPv4 选项 -S, &amp;ndash;source-ip # 设置源 IP 地址
Timing 和 Performance &amp;ndash;delay TIME # 前后两次发送探测行为的间隔. i.e. 每隔 TIME 探测一次
其他 -c, &amp;ndash;count N # 在发送 N 次后停止程序. 若 N 设为 0 则永不停止.</description></item></channel></rss>