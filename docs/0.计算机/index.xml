<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>💻0.计算机 on 断念梦的站点</title><link>https://desistdaydream.github.io/docs/0.%E8%AE%A1%E7%AE%97%E6%9C%BA/</link><description>Recent content in 💻0.计算机 on 断念梦的站点</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/0.%E8%AE%A1%E7%AE%97%E6%9C%BA/index.xml" rel="self" type="application/rss+xml"/><item><title>Computer</title><link>https://desistdaydream.github.io/docs/0.%E8%AE%A1%E7%AE%97%E6%9C%BA/Computer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/0.%E8%AE%A1%E7%AE%97%E6%9C%BA/Computer/</guid><description>概述 参考：
Wiki, Computer 冯·诺依曼
CPU
Memory
Disk
计算机工作的原理 参考：
公众号-码农的荒岛求生，你管这破玩意叫 CPU ？ B 站-幼麟实验室，迷你计算机(小白入门)：计算机工作的原理 每次回家开灯时你有没有想过，用你按的简单开关实际上能打造出复杂的 CPU 来，只不过需要的数量会比较多，也就几十亿个吧。
伟大的发明-晶体管 过去 200 年人类最重要的发明是什么？蒸汽机？电灯？火箭？这些可能都不是，最重要的也许是这个小东西：
这个小东西就叫晶体管，你可能会问，晶体管有什么用呢？
实际上晶体管的功能简单到不能再简单，给一端通上电，那么电流可以从另外两端通过，否则不能通过，其本质就是一个开关。
就是这个小东西的发明让三个人获得了诺贝尔物理学奖，可见其举足轻重的地位。
无论程序员编写的程序多么复杂，软件承载的功能最终都是通过这个小东西简单的开闭完成的，除了神奇二字，我想不出其它词来。
AND、OR、NOT 现在有了晶体管，也就是开关，在此基础之上就可以搭积木了，你随手搭建出来这样三种组合：
两个开关只有同时打开电流才会通过，灯才会亮 两个开关中只要有一个打开电流就能通过，灯就会亮 当开关关闭时电流通过灯会亮，打开开关灯反而电流不能通过灯会灭 天赋异禀的你搭建的上述组合分别就是：与门，AND Gate、或门，OR gate、非门，NOT gate，用符号表示就是这样：
道生一、一生二、二生三、三生万物
最神奇的是，你随手搭建的三种电路竟然有一种很 amazing 的特性，那就是：任何一个逻辑函数最终都可以通过 AND、OR 以及 NOT 表达出来，这就是所谓的逻辑完备性，就是这么神奇。
也就是说**给定足够的 AND、OR 以及 NOT 门，就可以实现任何一个逻辑函数，除此之外我们不需要任何其它类型的逻辑门电路，**这时我们认为 AND、OR、NOT 门就是逻辑完备的。
这一结论的得出吹响了计算机革命的号角，这个结论告诉我们计算机最终可以通过简单的 AND、OR、NOT 门构造出来，这些简单的逻辑门电路就好比基因。 老子有云：道生一、一生二、二生三、三生万物，实乃异曲同工之妙。
虽然，我们可以用 AND、OR、NOT 来实现所有的逻辑运算，但我们真的需要把所有的逻辑运算都用 AND、OR、NOT 门实现出来吗？显然不是，而且这也不太可行。
逻辑门 计算能力是怎么来的 现在能生成万物的基础元素与或非门出现了，接下来我们着手设计 CPU 最重要的能力：计算，以加法为例。
由于 CPU 只认知 0 和 1，也就是二进制，那么二进制的加法有哪些组合呢：</description></item><item><title>I/O</title><link>https://desistdaydream.github.io/docs/0.%E8%AE%A1%E7%AE%97%E6%9C%BA/I_O/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/0.%E8%AE%A1%E7%AE%97%E6%9C%BA/I_O/</guid><description>概述 参考：
Wiki, Input/output 在计算中，Input/Output(输入/输出，简称 I/O。或非正式的 io 或 IO) 是信息处理系统（例如计算机）与外部世界（例如另一个计算机系统、外围设备或计算机）之间的通信。人类操作员。输入是系统接收的信号或数据，输出是系统发送的信号或数据。该术语也可以用作动作的一部分； “执行I/O”是执行输入或输出操作。
I/O 设备是人类（或其他系统）用来与计算机通信的硬件。例如，键盘或计算机鼠标是计算机的输入设备，而监视器和打印机是输出设备。用于计算机之间通信的设备（例如调制解调器和网卡）通常执行输入和输出操作。交互者与系统的任何交互都是输入，系统响应的反应称为输出。
将设备指定为输入或输出取决于视角。鼠标和键盘接收人类用户输出的物理动作，并将其转换为计算机可以理解的输入信号；这些设备的输出就是计算机的输入。同样，打印机和显示器将计算机输出的信号作为输入，并将这些信号转换为人类用户可以理解的表示形式。从人类用户的角度来看，阅读或查看这些表示的过程就是接收输出；计算机和人类之间的这种类型的交互是在人机交互领域进行研究的。更复杂的是，传统上被视为输入设备的设备，例如读卡器、键盘，可以接受控制命令以例如选择堆叠器、显示键盘灯，而传统上被视为输出设备的设备可以提供状态数据（例如，状态数据）。碳粉不足、缺纸、卡纸）。
在计算机体系结构中，CPU 和主存储器的组合被认为是计算机的大脑，CPU 可以使用单独的指令直接读取或写入主存储器。与 CPU/内存组合之间的任何信息传输（例如通过从磁盘驱动器读取数据）都被视为 I/O。CPU及其支持电路可以提供在低级计算机编程中使用的存储器映射 I/O，例如在设备驱动程序的实现中，或者可以提供对 I/O 通道的访问。 I/O 算法是一种设计用于利用局部性并在与辅助存储设备（例如磁盘驱动器）交换数据时高效执行的算法。
什么是 I/O https://mp.weixin.qq.com/s/EYc7PcxukBKOx8U5X8Sh8w
I_O 就是简单的数据 Copy，仅此而已。I/O 仅仅就是数据 copy、I/O 仅仅就是数据 copy。
既然是 copy 数据，又是从哪里 copy 到哪里呢？
如果数据是从外部设备 copy 到内存中，这就是 Input。
如果数据是从内存 copy 到外部设备，这就是 Output。
内存与外部设备之间不嫌麻烦的来回 copy 数据就是 Input and Output(输入/输出，简称 I/O)，仅此而已。</description></item><item><title>Rack</title><link>https://desistdaydream.github.io/docs/0.%E8%AE%A1%E7%AE%97%E6%9C%BA/Rack/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/0.%E8%AE%A1%E7%AE%97%E6%9C%BA/Rack/</guid><description>概述 参考：
https://en.wikipedia.org/wiki/19-inch_rack https://en.wikipedia.org/wiki/Rack_unit 机柜单元，所以 1U 就是 1 unit，指 1单元 Rack(机柜)
A full-height rack cabinet 全高机架柜</description></item><item><title>计算机厂家信息</title><link>https://desistdaydream.github.io/docs/0.%E8%AE%A1%E7%AE%97%E6%9C%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%8E%82%E5%AE%B6%E4%BF%A1%E6%81%AF/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/0.%E8%AE%A1%E7%AE%97%E6%9C%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%8E%82%E5%AE%B6%E4%BF%A1%E6%81%AF/</guid><description>Dell 信息查询：https://www.dell.com/support/home/zh-cn
报修热线：
华三 信息查询：https://es.h3c.com/entitlement/
报修热线：
可以通过微信小程序建单 浪潮 信息查询：https://www.inspur.com/eportal/ui?pageId=2317460
报修热线：4008600011
其他 七彩虹 举办比赛，开奖时第一和第二名是没参加过比赛
https://www.bilibili.com/video/BV17EyKYcEeY/ https://www.bilibili.com/video/BV1wVmKYLE77</description></item><item><title>小型机器</title><link>https://desistdaydream.github.io/docs/0.%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%B0%8F%E5%9E%8B%E6%9C%BA%E5%99%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/0.%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%B0%8F%E5%9E%8B%E6%9C%BA%E5%99%A8/</guid><description>概述 参考：
PC 基准测试网站 小型机器常用来作为桌面终端、工控机、软路由、等等 使用。
CPU 对比网站
【零基础】软路由保姆级入门教程 一篇看懂软路由
下图截至 2021-09-22</description></item></channel></rss>