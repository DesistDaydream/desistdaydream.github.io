<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦的站点 – Memory</title><link>https://desistdaydream.github.io/docs/0.%E8%AE%A1%E7%AE%97%E6%9C%BA/Memory/</link><description>Recent content in Memory on 断念梦的站点</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/0.%E8%AE%A1%E7%AE%97%E6%9C%BA/Memory/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Memory</title><link>https://desistdaydream.github.io/docs/0.%E8%AE%A1%E7%AE%97%E6%9C%BA/Memory/Memory/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/0.%E8%AE%A1%E7%AE%97%E6%9C%BA/Memory/Memory/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Computer_memory">Wiki，Computer memory&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;strong>Random Access Memory(随机存取存储器，简称 RAM，也叫主存)，平时大家都叫 Memory(内存)&lt;/strong>。&lt;/p>
&lt;p>RAM 是一种形式的计算机存储器可被读取和以任何顺序发生变化，通常用于存储工作数据和机器代码。甲随机存取存储器设备允许数据项被读出或写入在几乎相同的时间量，而不管存储器内数据的物理位置的。相反，对于其他直接访问数据存储介质，例如硬盘，CD-RW，DVD-RW和较旧的磁带和磁鼓存储器一样，由于机械限制（例如介质旋转速度和机械臂移动），读写数据项所需的时间根据其在记录介质上的物理位置而有很大不同。&lt;/p>
&lt;p>RAM包含多路复用和多路分解电路，用于将数据线连接到寻址的存储器，以读取或写入条目。通常，同一地址访问的存储空间不止一位，而RAM设备通常具有多条数据线，并且被称为“ 8位”或“ 16位”等设备。&lt;/p>
&lt;p>在当今的技术中，随机存取存储器采用具有MOS（金属氧化物半导体）存储单元的集成电路（IC）芯片的形式。RAM通常与易失性类型的内存（例如动态随机存取存储器（DRAM）模块）相关联，尽管已经开发了非易失性RAM，但如果断电，则会丢失存储的信息。存在其他类型的非易失性存储器，它们允许对读操作进行随机访问，但要么不允许写操作，要么对其具有其他种类的限制。其中包括大多数类型的ROM和一种闪存称为_NOR-Flash_。&lt;/p>
&lt;p>易失性随机存取半导体存储器的两种主要类型是静态随机存取存储器（SRAM）和动态随机存取存储器（DRAM）。半导体RAM的商业用途可以追溯到1965年，当时IBM为他们的System / 360 Model 95计算机引入了SP95 SRAM芯片，而东芝则为其Toscal BC-1411电子计算器使用了DRAM存储单元，两者均基于双极晶体管。基于MOS晶体管的商用MOS存储器是在1960年代后期开发的，此后一直是所有商用半导体存储器的基础。1970年10月推出了第一款商用DRAM IC芯片Intel 1103。同步动态随机存取存储器（SDRAM）随后于1992年与三星KM48SL2000芯片一起首次亮相。&lt;/p>
&lt;h1 id="error-correcting-code-memory">Error-Correcting Code memory&lt;a class="td-heading-self-link" href="#error-correcting-code-memory" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h1 id="rank-位宽-颗粒">Rank, 位宽, 颗粒&lt;a class="td-heading-self-link" href="#rank-%e4%bd%8d%e5%ae%bd-%e9%a2%97%e7%b2%92" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;a href="https://mp.weixin.qq.com/s/wCzeFhTE8OEWaZmMhc0iUw">公众号 - 开发内功修炼，理解内存的Rank、位宽以及内存颗粒内部结构&lt;/a>&lt;/p></description></item><item><title>Docs: MMU</title><link>https://desistdaydream.github.io/docs/0.%E8%AE%A1%E7%AE%97%E6%9C%BA/Memory/MMU/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/0.%E8%AE%A1%E7%AE%97%E6%9C%BA/Memory/MMU/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Memory_management_unit">Wiki，Memory management unit&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>CPU 芯片中的 &lt;strong>Memory management unit(内存管理单元，简称 MMU)&lt;/strong>&lt;/p></description></item><item><title>Docs: TLB</title><link>https://desistdaydream.github.io/docs/0.%E8%AE%A1%E7%AE%97%E6%9C%BA/Memory/TLB/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/0.%E8%AE%A1%E7%AE%97%E6%9C%BA/Memory/TLB/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Translation_lookaside_buffer">Wiki，Translation lookaside buffer&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;strong>translation lookaside buffer(转换后被缓冲区，简称 TLB)&lt;/strong> 用于减少访问用户内存位置所需的时间，是 MMU 的一部分&lt;/p>
&lt;p>TLB 是一种 &lt;a href="https://desistdaydream.github.io/docs/8.%E9%80%9A%E7%94%A8%E6%8A%80%E6%9C%AF/Cache.md">Cache&lt;/a> 功能，CPU 在寻址时，若是从 TLB 没有查到虚拟内存地址与物理内存地址的对应关系，称为 &lt;strong>未命中&lt;/strong>，此时会去查找常规的页表。&lt;/p></description></item></channel></rss>