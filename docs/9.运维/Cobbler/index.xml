<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦的站点 – Cobbler</title><link>https://desistdaydream.github.io/docs/9.%E8%BF%90%E7%BB%B4/Cobbler/</link><description>Recent content in Cobbler on 断念梦的站点</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/9.%E8%BF%90%E7%BB%B4/Cobbler/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Cobbler</title><link>https://desistdaydream.github.io/docs/9.%E8%BF%90%E7%BB%B4/Cobbler/Cobbler/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/9.%E8%BF%90%E7%BB%B4/Cobbler/Cobbler/</guid><description>
&lt;h1 id="前言">前言&lt;a class="td-heading-self-link" href="#%e5%89%8d%e8%a8%80" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>网络安装服务器套件 Cobbler(补鞋匠) 出现以前，我们一直在做装机民工这份很有前途的职业。自打若干年前 Red Hat 推出了 Kickstart，此后我们顿觉身价倍增。不再需要刻了光盘一台一台地安装 Linux，只要搞定 PXE、DHCP、 TFTP，还有那满屏眼花缭乱不知所云的 Kickstart 脚本，我们就可以像哈里波特一样，轻点魔棒，瞬间安装上百台服务器。这一堆花里胡哨的东西可不是一般人都能整明白的，没有大专以上学历，通不过英语四级， 根本别想玩转。&lt;/p>
&lt;p>总而言之，这是一份多么有前途，多么有技术含量的工作啊。&lt;/p>
&lt;p>很不幸，Red Hat 最新（Cobbler 项目最初在 2008 年左右发布）发布了网络安装服务器套件 Cobbler(补鞋匠)，它已将 Linux 网络安装的技术门槛，从大专以上文化水平，成功降低到初中以下，连补鞋匠都能学会。&lt;/p>
&lt;p>对于我们这些在装机领域浸淫多年，经验丰富，老骥伏枥，志在千里的民工兄弟们来说，不啻为一个晴天霹雳。&lt;/p>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/cobbler/cobbler">GitHub 项目，cobbler/cobbler&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://cobbler.github.io/">官网&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>Cobbler 是一个 Linux 服务器快速网络安装的服务，而且在经过调整也可以支持网络安装 windows。&lt;/p>
&lt;p>该工具使用 python 开发，小巧轻便（才 15k 行 python 代码），可以通过网络启动(PXE)的方式来快速安装、重装物理服务器和虚拟机，同时还可以管理 DHCP，DNS，TFTP、RSYNC 以及 yum 仓库、构造系统 ISO 镜像。&lt;/p>
&lt;p>Cobbler 可以使用命令行方式管理，也提供了基于 Web 的界面管理工具(cobbler-web)，还提供了 API 接口，可以方便二次开发使用。&lt;/p>
&lt;p>Cobbler 是较早前的 kickstart 的升级版，优点是比较容易配置，还自带 web 界面比较易于管理。&lt;/p>
&lt;p>Cobbler 内置了一个轻量级配置管理系统，但它也支持和其它配置管理系统集成，如 Puppet，暂时不支持 SaltStack。&lt;/p>
&lt;p>Cobbler 客户端 Koan 支持虚拟机安装和操作系统重新安装，使重装系统更便捷。&lt;/p>
&lt;h2 id="cobbler-可以干啥">Cobbler 可以干啥&lt;a class="td-heading-self-link" href="#cobbler-%e5%8f%af%e4%bb%a5%e5%b9%b2%e5%95%a5" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>使用 Cobbler，您无需进行人工干预即可安装机器。Cobbler 设置一个 PXE 引导环境（它还可以使用 yaboot 支持 PowerPC），并 控制与安装相关的所有方面，比如网络引导服务（DHCP 和 TFTP）与存储库镜像。当希望安装一台新机器时，Cobbler 可以：&lt;/p>
&lt;p>1）使用一个以前定义的模板来配置 DHCP 服务（如果启用了管理 DHCP）&lt;/p>
&lt;p>2）将一个存储库（yum 或 rsync）建立镜像或解压缩一个媒介，以注册一个新操作系统&lt;/p>
&lt;p>3）在 DHCP 配置文件中为需要安装的机器创建一个条目，并使用指定的参数（IP 和 MAC）&lt;/p>
&lt;p>4）在 TFTP 服务目录下创建适当的 PXE 文件&lt;/p>
&lt;p>5）重新启动 DHCP 服务来反应新的更改&lt;/p>
&lt;p>6）重新启动机器以开始安装（如果电源管理已启动）&lt;/p>
&lt;h2 id="cobbler-支持的系统和功能">Cobbler 支持的系统和功能&lt;a class="td-heading-self-link" href="#cobbler-%e6%94%af%e6%8c%81%e7%9a%84%e7%b3%bb%e7%bb%9f%e5%92%8c%e5%8a%9f%e8%83%bd" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>Cobbler 支持众多的发行版：RedHat、Fedora、CentOS、Debian、Ubuntu 和 SUSE。当添加一个操作系统（通常通过使用 ISO 文件）时，Cobbler 知道如何解压缩合适的文件并调整网络服务，以正确引导机器。&lt;/p>
&lt;p>Cobbler 可以使用 kickstart 模板。基于 Red Hat 或 Fedora 的系统使用 kickstart 文件来自动化安装流程。通过使用模板，就会拥有基本的 kickstart 模板，然后定义如何针对一种配置文件或 机器配置而替换其中的变量。例如，一个模板可能包含两个变量 &lt;code>$domain&lt;/code> 和 &lt;code>$machine_name&lt;/code> 在 Cobbler 配置中，一个配置文件指定 domain=mydomain.com，并且每台使用该配置文件的机器在 machine_name 变量中指定其名称。该配置文件的所有机器都使用相同的 kickstart 安装且针对 domain=mydomain.com 进行配置，但每台机器拥有其自己的机器名称。您仍然可以使用 kickstart 模板 在不同的域中安装其他机器并使用不同的机器名称。&lt;/p>
&lt;p>为了协助管理系统，Cobbler 可通过 fence scripts 连接到各个电源管理环境。Cobbler 支持 apc_snmp、bladecenter、bullpap、drac、 ether_wake、ilo、integrity、ipmilan、ipmitool、lpar、rsa、virsh 和 wti。要重新安装一台机器，可 运行 reboot system foo 命令，而且 Cobbler 会使用必要的 和信息来为您运行恰当的 fence scripts（比如机器插槽数）。&lt;/p>
&lt;p>除了这些特性，还可以使用一个配置管理系统（CMS）。你有两种选择：该工具内的一个内部系统，或者现成的外部 CMS，比如 Chef 或 Puppet。借助内部系统，你可以指定文件模板，这些模板会依据配置参数进行处理（与 kickstart 模板的处理方式一样），然后复制到你指定的位 置。如果必须自动将配置文件部署到特定机器，那么此功能很有用。&lt;/p>
&lt;p>使用 koan 客户端，Cobbler 可从客户端配置虚拟机并重新安装系统。&lt;/p>
&lt;h2 id="cobbler-各个组件之间关系">Cobbler 各个组件之间关系&lt;a class="td-heading-self-link" href="#cobbler-%e5%90%84%e4%b8%aa%e7%bb%84%e4%bb%b6%e4%b9%8b%e9%97%b4%e5%85%b3%e7%b3%bb" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/tegfcw/1616125382993-9ef824a6-a456-4fc4-9eeb-8ca756ca7705.jpeg" alt="">&lt;/p>
&lt;p>主要目的配置网络接口：&lt;/p>
&lt;p>Cobbler 的配置结构基于一组注册的对象。每个对象表示一个与另一个实体相关联的实体（该对象指向另一个对象，或者另一个对象指向该对象）。当一个对象指向另一个对象时，它就继承了被指向对象的数据，并可覆盖或添加更多特定信息。以下对象类型的定义&lt;/p>
&lt;ul>
&lt;li>Distros（发行版）：表示一个操作系统，它承载了内核和 initrd 的信息，以及内核参数等其他数据。使用 cobbler import 命令后即可生成该对象&lt;/li>
&lt;li>Profile（配置文件）：包含一个 Distros、一个 kickstart 文件以及可能的存储库，还包含更多特定的内核参数等其他数据。使用 cobbler import 命令后，会默认使用名为/var/lib/cobbler/kickstarts/sample_end.ks 的 kickstart 文件。&lt;/li>
&lt;li>Systems（系统）：表示将要安装的新机器。它包含一个配置文件或一个镜像，还包含该机器的 IP 和 MAC 地址、电源管理（地址、凭据、类型）、（网卡绑定、设置 valn 等）&lt;/li>
&lt;li>Repository（镜像）：保存一个 yum 或 rsync 存储库的镜像信息&lt;/li>
&lt;li>Image（存储库）：可替换一个包含不属于此类比的额文件的发行版对象（例如，无法分为内核和 initrd 的对象）。&lt;/li>
&lt;/ul>
&lt;p>基于注册的对象以及各个对象之间的关联，Cobbler 知道如何更改文件系统以反应具体配置。因为系统配置的内部是抽象的，所以可以仅关注想要执行的操作。&lt;/p></description></item><item><title>Docs: Cobbler 部署</title><link>https://desistdaydream.github.io/docs/9.%E8%BF%90%E7%BB%B4/Cobbler/Cobbler-%E9%83%A8%E7%BD%B2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/9.%E8%BF%90%E7%BB%B4/Cobbler/Cobbler-%E9%83%A8%E7%BD%B2/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h2 id="基础环境准备">基础环境准备&lt;a class="td-heading-self-link" href="#%e5%9f%ba%e7%a1%80%e7%8e%af%e5%a2%83%e5%87%86%e5%a4%87" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>检测 selinux 是否关闭(必须关闭)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>setenforce &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sed -i &lt;span style="color:#e6db74">&amp;#39;s/SELINUX=enforcing/SELINUX=disabled/&amp;#39;&lt;/span> /etc/selinux/config
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>检测防火墙是否关闭(必须关闭)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>systemctl disable firewalld &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> systemctl stop firewalld
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>注意：&lt;/p>
&lt;ul>
&lt;li>虚拟机网卡采用桥接模式，不使用 NAT 模式，我们会搭建 DHCP 服务器，在同一局域网多个 DHCP 服务会有冲突，所以最好把路由器的 DHCP 服务关闭&lt;/li>
&lt;/ul>
&lt;h2 id="安装-cobbler-以及相关功能配件">安装 Cobbler 以及相关功能配件&lt;a class="td-heading-self-link" href="#%e5%ae%89%e8%a3%85-cobbler-%e4%bb%a5%e5%8f%8a%e7%9b%b8%e5%85%b3%e5%8a%9f%e8%83%bd%e9%85%8d%e4%bb%b6" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>yum install cobbler cobbler-web pykickstart httpd dhcp tftp-server fence-agents -y&lt;/p>
&lt;ul>
&lt;li>cobbler # cobbler 程序包&lt;/li>
&lt;li>cobbler-web # cobbler 的 web 服务包&lt;/li>
&lt;li>pykickstart # cobbler 检查 kickstart 语法错误&lt;/li>
&lt;li>httpd # Apache web 服务&lt;/li>
&lt;li>dhcp # dhcp 服务&lt;/li>
&lt;li>tftp-server # tftp 服务&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>systemctl enable cobblerd httpd tftp rsyncd dhcpd &amp;amp;&amp;amp; systemctl start cobblerd httpd tftp rsyncd dhcpd&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="检测-cobbler">检测 Cobbler&lt;a class="td-heading-self-link" href="#%e6%a3%80%e6%b5%8b-cobbler" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>cobbler 的运行依赖于 dhcp、tftp、rsync 及 dns 服务，其中 dhcp 可由 dhcpd（isc）提供，也可由 dnsmasq 提供；tftp 可由 tftp-server 程序包提供，也可由 cobbler 功能提供，rsync 有 rsync 程序包提供，dns 可由 bind 提供，也可由 dnsmasq 提供&lt;/p>
&lt;p>cobbler 可自行管理这些服务中的部分甚至是全部，但需要配置文件 /etc/cobbler/settings 中的 “manange_dhcp”、“manager_tftpd”、“manager_rsync”、“manager_dns” 分别来进行定义，另外，由于各种服务都有着不同的实现方式，如若需要进行自定义，需要通过修改/etc/cobbler/modules.conf 配置文件中各服务的模块参数的值来实现。&lt;/p>
&lt;h3 id="检查配置文件并修改其中的错误提示需要在-cobblerd-和-httpd-启动的情况下检查">检查配置文件，并修改其中的错误提示。需要在 cobblerd 和 httpd 启动的情况下检查&lt;a class="td-heading-self-link" href="#%e6%a3%80%e6%9f%a5%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6%e5%b9%b6%e4%bf%ae%e6%94%b9%e5%85%b6%e4%b8%ad%e7%9a%84%e9%94%99%e8%af%af%e6%8f%90%e7%a4%ba%e9%9c%80%e8%a6%81%e5%9c%a8-cobblerd-%e5%92%8c-httpd-%e5%90%af%e5%8a%a8%e7%9a%84%e6%83%85%e5%86%b5%e4%b8%8b%e6%a3%80%e6%9f%a5" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>检查 cobbler 配置存在的问题,逐一解决&lt;/p>
&lt;p>&lt;code>cobbler check&lt;/code>&lt;/p>
&lt;p>使用该命令后，会出现若干报错，以下是对几个报错的总结&lt;/p>
&lt;p>备份将要修改的文件文件&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cp /etc/cobbler/settings&lt;span style="color:#f92672">{&lt;/span>,.bak&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cp /etc/xinetd.d/tftp&lt;span style="color:#f92672">{&lt;/span>,.bak&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &amp;lsquo;server&amp;rsquo; field in /etc/cobbler/settings must be set to something other than localhost, or kickstarting features will not work. This should be a resolvable hostname or IP for the boot server as reachable by all machines that will use it.&lt;/p>
&lt;p>修改/etc/cobbler/settings 文件中的 server 参数的值为提供 cobbler 服务的主机相应的 IP 地址或主机名 server，Cobbler 服务器的 IP，修改 384 行 server: 127.0.0.1&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sed -i &lt;span style="color:#e6db74">&amp;#39;s/server: 127.0.0.1/server: 192.168.10.11/&amp;#39;&lt;/span> /etc/cobbler/settings
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>For PXE to be functional, the &amp;rsquo;next_server&amp;rsquo; field in /etc/cobbler/settings must be set to something other than 127.0.0.1, and should match the IP of the boot server on the PXE network&lt;/p>
&lt;p>修改/etc/cobbler/settings 文件中的 next_server 参数的值为提供 PXE 服务的主机相应的 IP 地址，如 next_server: 192.168.31.73；&lt;/p>
&lt;p>server，pxe 服务器的 IP，由于这里使用的是同一台机器，所以填 Cobbler 服务器的 IP，修改 272 行 next_server: 127.0.0.1&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sed -i &lt;span style="color:#e6db74">&amp;#39;s/next_server: 127.0.0.1/next_server: 192.168.10.11/&amp;#39;&lt;/span> /etc/cobbler/settings
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>change &amp;lsquo;disable&amp;rsquo; to &amp;rsquo;no&amp;rsquo; in /etc/xinetd.d/tftp&lt;/p>
&lt;p>修改/etc/xinetd.d/tftp 文件中的 disable 参数修改为 disable = no&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sed -i &lt;span style="color:#e6db74">&amp;#39;s/disable.\*= yes/disable = no/g&amp;#39;&lt;/span> /etc/xinetd.d/tftp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>some network boot-loaders are missing from /var/lib/cobbler/loaders, you may run &amp;lsquo;cobbler get-loaders&amp;rsquo; to download them, or, if you only want to handle x86/x86&lt;em>64 netbooting, you may ensure that you have installed a _recent&lt;/em> version of the syslinux package installed and can ignore this message entirely. Files in this directory, should you want to support all architectures, should include pxelinux.0, menu.c32, elilo.efi, and yaboot. The &amp;lsquo;cobbler get-loaders&amp;rsquo; command is the easiest way to resolve these requirements.&lt;/p>
&lt;p>执行 &lt;code>cobbler get-loaders&lt;/code> 命令即可；否则，需要安装 syslinux 程序包，而后复制/usr/share/syslinux/{pxelinux.0,memu.c32}等文件至/var/lib/cobbler/loaders/目录中&lt;/p>
&lt;p>debmirror package is not installed, it will be required to manage debian deployments and repositories&lt;/p>
&lt;p>安装 debmirror&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>yum install debmirror -y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cp /etc/debmirror.conf&lt;span style="color:#f92672">{&lt;/span>,.bak&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sed -i &lt;span style="color:#e6db74">&amp;#39;/@dists/s/^/#&amp;amp;/&amp;#39;&lt;/span> /etc/debmirror.conf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sed -i &lt;span style="color:#e6db74">&amp;#39;/@arches/s/^/#&amp;amp;/&amp;#39;&lt;/span> /etc/debmirror.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The default password used by the sample templates for newly installed machines (default_password_crypted in /etc/cobbler/settings) is still set to &amp;lsquo;cobbler&amp;rsquo; and should be changed, try: &amp;ldquo;openssl passwd -1 -salt &amp;lsquo;random-phrase-here&amp;rsquo; &amp;lsquo;your-password-here&amp;rsquo;&amp;rdquo; to generate new one&lt;/p>
&lt;p>生成密码来取代默认的密码，更安全。该密码用来给新安装的设备提供 root 密码。根据提示 your-password-here，这里是自己的密码，random-phrase-here，这里是随机的干扰码&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>openssl passwd -1 -salt &lt;span style="color:#e6db74">&amp;#39;lichenhao&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;123456&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sed -i &lt;span style="color:#e6db74">&amp;#39;s/&amp;#39;&lt;/span>default_password_crypted:.&lt;span style="color:#ae81ff">\*&lt;/span>&lt;span style="color:#e6db74">&amp;#39;/&amp;#39;&lt;/span>default_password_crypted: &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$1$lichenha$UkZ9KiUaiwS&lt;span style="color:#e6db74">/0C324YtoP0&amp;#34;&lt;/span>/g&lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span> /etc/cobbler/settings
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>生成的加密内容：&lt;code>$1$lichenha$UkZ9KiUaiwS/0C324YtoP0&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>其他一些没有提示报错的小修改&lt;/p>
&lt;p>用 cobbler 管理 DHCP，修改 242 行 manage_dhcp: 0&lt;/p>
&lt;p>&lt;code>sed -i 's/manage_dhcp: 0/manage_dhcp: 1/g' /etc/cobbler/settings&lt;/code>&lt;/p>
&lt;p>防止循环装系统，适用于服务器第一启动项是 PXE 启动，修改 292 行 pxe_just_once: 0&lt;/p>
&lt;p>&lt;code>sed -i 's/pxe_just_once: 0/pxe_just_once: 1/' /etc/cobbler/settings&lt;/code>&lt;/p>
&lt;p>修改完后重启服务再进行一次检测,若提示 No configuration problems found. All systems go. 则可继续后续步骤&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>systemctl restart cobblerd.service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cobbler check
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="配置-dhcp">配置 DHCP&lt;a class="td-heading-self-link" href="#%e9%85%8d%e7%bd%ae-dhcp" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>修改 cobbler 的 dhcp 模版，这个模板会覆盖 dhcp 本身的配置文件。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cp /etc/cobbler/dhcp.template&lt;span style="color:#f92672">{&lt;/span>,.bak&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vim /etc/cobbler/dhcp.template
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在文件末尾添加如下内容&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">subnet 192.168.10.0 netmask 255.255.255.0 { # 规划一段子网以便用于被安装系统的设备来获取这一段 IP&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">option domain-name-servers 114.114.114.114; # 指定该子网的 DNS&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">option routers 192.168.10.2; # 指定该段子网的网关&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">range dynamic-bootp 192.168.10.100 192.168.10.250; # 指定给被安装系统的设备可用的 IP 段&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">option subnet-mask 255.255.255.0; # 指定该子网的掩码&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">next-server $next_server;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">default-lease-time 43200;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">max-lease-time 86400;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="导入镜像">导入镜像&lt;a class="td-heading-self-link" href="#%e5%af%bc%e5%85%a5%e9%95%9c%e5%83%8f" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>挂载 centos 光盘镜像&lt;/p>
&lt;ul>
&lt;li>mount /dev/cdrom /mnt/&lt;/li>
&lt;/ul>
&lt;p>导入镜像,创建一个可以提供给其余被安装设备将要使用到的系统镜像&lt;/p>
&lt;ul>
&lt;li>cobbler import &amp;ndash;path=/mnt/ &amp;ndash;name=CentOS7-2003 &amp;ndash;arch=x86_64&lt;/li>
&lt;li>安装源的唯一标示就是根据 name 参数来定义，本例导入成功后，安装源的唯一标示就是：CentOS7-2003-x86_64，如果重复，系统会提示导入失败。&lt;/li>
&lt;/ul>
&lt;p>同步 cobbler 的配置，可以看到同步干了哪些事&lt;/p>
&lt;ul>
&lt;li>cobbler sync&lt;/li>
&lt;/ul>
&lt;p>查看镜像列表&lt;/p>
&lt;ul>
&lt;li>cobbler distro list
&lt;ul>
&lt;li>镜像存放目录，cobbler 会将镜像中的所有安装文件拷贝到本地一份，放在/var/www/cobbler/ks_mirror 下的 CentOS7-2003-x86_64 目录下。因此/var/www/cobbler 目录必须具有足够容纳安装文件的空间，查看一下目录内容
&lt;ul>
&lt;li>cd /var/www/cobbler/ks_mirror/&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="配置-kscfg">配置 ks.cfg&lt;a class="td-heading-self-link" href="#%e9%85%8d%e7%bd%ae-kscfg" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>cd /var/lib/cobbler/kickstarts/&lt;/li>
&lt;li>vim centos7.ks # （sample_end.ks（默认使用的 ks 文件））修改成以下内容&lt;/li>
&lt;li>注意：文件中不能有中文，即使注释掉也不行，否则会导致安装失败&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>#platform=x86, AMD64, or Intel EM64T
# System authorization information系统认证信息，使用加密，md5方式加密
auth --useshadow --enablemd5
# System bootloader configuration系统引导配置
# --location指定创建引导的位置，在mbr中创建引导；--append指定内核参数，crashkernel为开启kdump
bootloader --location=mbr --append=&amp;#34;crashkernel=auto&amp;#34;
# Partition clearing information分区清除信息
# 清除所有分区，并初始化磁盘标签
clearpart --all --initlabel
# Use text mode install
text
# Firewall configuration关闭防火墙
firewall --disabled
# Run the Setup Agent on first boot
firstboot --disable
# System keyboard系统键盘
keyboard us
# System language系统语言
lang en_US
# Use network installation指明安装系统的方式，这里使用网络方式安装，指明提供安装程序的服务器地址和路径
url --url=$tree
# If any cobbler repo definitions were referenced in the kickstart profile, include them here.
$yum_repo_stanza
# $SNIPPET变量括号内的值是目录/var/lib/cobbler/snippets下的文件，该文件中可以写入linux命令，当做脚本文件来说明
# Network information
$SNIPPET(&amp;#39;network_config&amp;#39;)
# Reboot after installation安装完成后重启系统
reboot
#Root password设定root的密码
rootpw --iscrypted $default_password_crypted
# SELinux configuration关闭SELinux
selinux --disabled
# Do not configure the X Window System不要配置X window系统
skipx
# System timezone设定系统时区
timezone Asia/Shanghai
# Install OS instead of upgrade重新安装操作系统，而不是升级
install
# Clear the Master Boot Record清除主引导记录
zerombr
# Allow anaconda to partition the system as needed该选项用于自动分区
#autopart
# Disk partitioning information磁盘分区信息
part /boot --fstype=xfs --asprimary --size=500
part biosboot --fstype=biosboot --asprimary --size=2
part pv.01 --size=1 --grow
volgroup vg0 pv.01
logvol / --fstype xfs --size=10240 --name=root --vgname=vg0
logvol swap --fstype swap --size=1024 --name=swap --vgname=vg0
logvol /var --fstype xfs --size=1 --grow --name=var --vgname=vg0
%pre
# %pre段落为安装前执行的任务
%end
%packages
# %package段落中指定要安装的软件包
@^minimal
@core
kexec-tools
%end
%post
#`%post`段落为安装系统完成后执行的任务
# 自定义系统配置
# 安装工具，在/var/lib/cobbler/snippets目录下添加名为tools的文件，文件中可以写入想要执行的linux命令
$SNIPPET(&amp;#39;tools&amp;#39;)
# End final steps
%end
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>在第一次导入系统镜像后，Cobbler 会给镜像指定一个默认的 kickstart 自动安装文件在/var/lib/cobbler/kickstarts 下的 sample_end.ks。&lt;/li>
&lt;li>cobbler list&lt;/li>
&lt;li>查看所有的 profile 设置
&lt;ul>
&lt;li>cobbler profile report&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>编辑 profile，修改关联的 ks 文件
&lt;ul>
&lt;li>cobbler profile edit &amp;ndash;name=CentOS7-2003-x86_64 &amp;ndash;kickstart=/var/lib/cobbler/kickstarts/CentOS7.ks&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>（可选）修改安装系统的内核参数，使得网卡名变为 eth
&lt;ul>
&lt;li>cobbler profile edit &amp;ndash;name=CentOS7-2003-x86_64 &amp;ndash;kopts=&amp;lsquo;net.ifnames=0 biosdevname=0&amp;rsquo;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>可以看到下面 Kickstart 那里的配置 cfg 文件地址被改变了&lt;/p>
&lt;pre tabindex="0">&lt;code>[root@cobbler kickstarts]# cobbler profile report --name=CentOS7-2003-x86_64 Name : CentOS7-2003-x86_64 TFTP Boot Files : {}Comment : DHCP Tag : defaultDistribution : CentOS7-2003-x86_64 Enable gPXE? : 0Enable PXE Menu? : 1Fetchable Files : {}Kernel Options : {}Kernel Options (Post Install) : {}Kickstart : /var/lib/cobbler/kickstarts/CentOS7-2003-x86_64.cfgKickstart Metadata : {}Management Classes : \[]Management Parameters : &amp;lt;&amp;gt;Name Servers : \[]Name Servers Search Path : \[]Owners : \[&amp;#39;admin&amp;#39;]Parent Profile : Internal proxy : Red Hat Management Key : &amp;lt;&amp;gt;Red Hat Management Server : &amp;lt;&amp;gt;Repos : \[]Server Override : &amp;lt;&amp;gt;Template Files : {}Virt Auto Boot : 1Virt Bridge : xenbr0Virt CPUs : 1Virt Disk Driver Type : rawVirt File Size(GB) : 5Virt Path : Virt RAM (MB) : 512Virt Type : kvm#同步下 cobbler 数据，每次修改完都要镜像同步
&lt;/code>&lt;/pre>&lt;h2 id="开始批量安装系统">开始批量安装系统&lt;a class="td-heading-self-link" href="#%e5%bc%80%e5%a7%8b%e6%89%b9%e9%87%8f%e5%ae%89%e8%a3%85%e7%b3%bb%e7%bb%9f" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>cobbler 已经配置完成，开机后，使用 PXE 启动后，如果 DHCP 运行正常，则可看到如下界面&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/wf5w0g/1616125382981-7146a22b-241d-4c33-96f5-7167cabf7bf4.jpeg" alt="">&lt;/p>
&lt;p>这里如果方向键不选择第二项就无法装机，不算自动化，我们需要进行手动指定才可以完全自动化&lt;/p>
&lt;h2 id="全自动化安装">全自动化安装&lt;a class="td-heading-self-link" href="#%e5%85%a8%e8%87%aa%e5%8a%a8%e5%8c%96%e5%ae%89%e8%a3%85" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>上面可以看到在开机之后，还需要手动选择一下，还不够完全自动，如果想要开机之后，不用任何操作即可安装系统，那么可以使用 cobbler system 命令，通过 mac 来区分设备，当 cobbler 识别到 mac 时，就会自动选择 profiles 进行安装。&lt;/p>
&lt;p>VMware 查看物理 MAC 地址&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/wf5w0g/1616125383095-bb54ec6c-c5ff-49ea-a276-16b88900e2d7.jpeg" alt="">&lt;/p>
&lt;ul>
&lt;li>cobbler system add &amp;ndash;name=test &amp;ndash;mac=52:54:00:be:29:97 &amp;ndash;profile=CentOS8-2004-x86_64 &amp;ndash;ip-address=10.10.100.230 &amp;ndash;subnet=255.255.255.0 &amp;ndash;gateway=10.10.100.254 &amp;ndash;interface=eth0 &amp;ndash;static=1 &amp;ndash;hostname=cobbler-system-test &amp;ndash;name-servers=&amp;ldquo;223.5.5.5&amp;rdquo;&lt;/li>
&lt;/ul>
&lt;p>Note：&lt;/p>
&lt;ul>
&lt;li>此功能需要在 ks 文件中添加如下内容，否则在自动安装中，读取 ks 文件的时候会报错：unable to open input kickstart file:error opening file:No such file or directory: &amp;lsquo;/tmp/pre_install_network_config&amp;rsquo;&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>%pre
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$SNIPPET&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;pre_install_network_config&amp;#39;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>%end
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>... &lt;span style="color:#75715e"># 后面是%packages的配置&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>如果有多块网卡的话，只自定义第二块网卡为外网，第一块网卡不一起配置，就会还是出现上文。多网卡像这样指定 IP 和网卡&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#75715e"># cobbler system add --name=test --mac=52:54:00:be:29:97 --profile=CentOS8-2004-x86_64 --ip-address=10.0.0.82 --subnet=255.255.255.0 --interface=eth0 --static=1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#75715e"># cobbler system edit --name=test --mac=52:54:00:04:89:ee --profile=CentOS8-2004-x86_64 --ip-address=192.168.31.82 --subnet=255.255.255.0 --gateway=192.168.31.1 --interface=eth1 --static=1 --hostname=zabbix --name-servers=&amp;#34;223.5.5.5&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>其实 interface 的值可以随便写，因为 cobbler 是根据 mac 选择的，interface 的值没啥意义&lt;/li>
&lt;/ul>
&lt;h1 id="cobbler-关联文件与配置">Cobbler 关联文件与配置&lt;a class="td-heading-self-link" href="#cobbler-%e5%85%b3%e8%81%94%e6%96%87%e4%bb%b6%e4%b8%8e%e9%85%8d%e7%bd%ae" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;strong>/etc/cobbler/&lt;/strong> # 基础配置文件路径&lt;/p>
&lt;ul>
&lt;li>&lt;strong>./setting&lt;/strong> # cobbler 服务的配置文件&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>/var/lib/cobbler/&lt;/strong> # cobbler 数据保存路径&lt;/p>
&lt;ul>
&lt;li>&lt;strong>./kickstarts/&lt;/strong> # 从该路径下读取 kickstarts 文件。&lt;/li>
&lt;li>&lt;strong>./snippets/&lt;/strong> # kickstart 文件中$SNIPPET 变量内所用到的文件&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>/var/www/cobbler/&lt;/strong> # cobble 数据保存路径&lt;/p>
&lt;ul>
&lt;li>&lt;strong>./ks_mirror/&lt;/strong> # 镜像存放目录，cobbler 会将镜像中的所有安装文件拷贝到本地一份，放在该目录下，该目录下的目录名是以 import 时指定的 name 来命名的。因此/var/www/cobbler 目录必须具有足够容纳安装文件的空间&lt;/li>
&lt;/ul>
&lt;h1 id="cobbler-的-web-管理界面的安装与配置">Cobbler 的 Web 管理界面的安装与配置&lt;a class="td-heading-self-link" href="#cobbler-%e7%9a%84-web-%e7%ae%a1%e7%90%86%e7%95%8c%e9%9d%a2%e7%9a%84%e5%ae%89%e8%a3%85%e4%b8%8e%e9%85%8d%e7%bd%ae" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>新版 Cobbler 的 Web 界面使用的是 https&lt;/p>
&lt;p>如果 web 界面报错，详见该文章的解决方式&lt;a href="http://www.trgeek.com/linux/2019/01/94.html">http://www.trgeek.com/linux/2019/01/94.html&lt;/a>，如果 google 浏览器打不开就用火狐，证书问题&lt;/p>
&lt;p>登录 URL: &lt;a href="https://10.10.100.250/cobbler_web">https://10.10.100.250/cobbler_web&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/wf5w0g/1616125383019-05bbc151-eeb0-4b67-b89b-e089ef3df4ef.jpeg" alt="">&lt;/p>
&lt;p>默认用户名：cobbler&lt;/p>
&lt;p>默认密码 ：cobbler&lt;/p>
&lt;p>/etc/cobbler/users.conf # Web 服务授权配置文件&lt;/p>
&lt;p>/etc/cobbler/users.digest # 用于 web 访问的用户名密码配置文件&lt;/p>
&lt;p>#在 Cobbler 组添加 ren 用户，提示输入 2 遍密码确认&lt;/p>
&lt;p>[root@cobbler kickstarts]# htdigest /etc/cobbler/users.digest &amp;ldquo;Cobbler&amp;rdquo; ren&lt;/p>
&lt;p>Adding user ren in realm Cobbler&lt;/p>
&lt;p>New password:&lt;/p>
&lt;p>Re-type new password:&lt;/p>
&lt;p>同步下&lt;/p>
&lt;p>[root@cobbler kickstarts]# cobbler sync&lt;/p>
&lt;h1 id="cobbler-的跨网段部署">Cobbler 的跨网段部署&lt;a class="td-heading-self-link" href="#cobbler-%e7%9a%84%e8%b7%a8%e7%bd%91%e6%ae%b5%e9%83%a8%e7%bd%b2" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>如果想实现跨网段部署，需要注意以下几点&lt;/p>
&lt;ul>
&lt;li>修改/etc/cobbler/dhcp.template 中的配置信息，想给哪个网段部署系统，就加上该网段的配置。配置如下面的&lt;/li>
&lt;li>在没有 DHCP 服务的网段中的设备上开启 dhcp 中继服务，需要安装 DHCP 包。&lt;/li>
&lt;li>i.e.使用命令&lt;code>dhcrelay IP&lt;/code>(IP 为 DHCP 服务所在设备的 IP)来开启 DHCP 代理服务，这样在与 cobbler 不同网段的设备，也可以实现自动部署系统了。dhcrelay 命令还可以使用&lt;code>-i&lt;/code>选项指定网卡名，来确定代理从哪个网卡进来的 dhcp 流量&lt;/li>
&lt;li>还可以直接修改 dhcrelay 服务的配置文件，e.g.&lt;code>sed -i '/ExecStart=/s/$/&amp;amp; 192.168.20.12/g' /etc/systemd/system/dhcrelay.service&lt;/code>&lt;/li>
&lt;li>e.g.Cobbler 所在网段为 192.168.1.0/24，现在想给 192.168.2.0/24 网段的其中一台设备安装系统，这时候就需要在 192.168.2.0/24 网段那种找一台系统，开启 dhcp 中继&lt;/li>
&lt;/ul>
&lt;p>e.g./etc/cobbler/dhcp.template&lt;/p>
&lt;p>注意：&lt;/p>
&lt;ul>
&lt;li>需要注释掉 cobbler 与 dhcp 设备所在网段的网关配置，否则部署不同网段会失败，原因未知，待验证&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-nginx" data-lang="nginx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">ddns-update-style&lt;/span> &lt;span style="color:#e6db74">interim&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">allow&lt;/span> &lt;span style="color:#e6db74">booting&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">allow&lt;/span> &lt;span style="color:#e6db74">bootp&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">ignore&lt;/span> &lt;span style="color:#e6db74">client-updates&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">set&lt;/span> &lt;span style="color:#e6db74">vendorclass&lt;/span> = &lt;span style="color:#e6db74">option&lt;/span> &lt;span style="color:#e6db74">vendor-class-identifier&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">option&lt;/span> &lt;span style="color:#e6db74">pxe-system-type&lt;/span> &lt;span style="color:#e6db74">code&lt;/span> &lt;span style="color:#ae81ff">93&lt;/span> = &lt;span style="color:#e6db74">unsigned&lt;/span> &lt;span style="color:#e6db74">integer&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">subnet&lt;/span> &lt;span style="color:#ae81ff">192&lt;/span>&lt;span style="color:#e6db74">.168.20.0&lt;/span> &lt;span style="color:#e6db74">netmask&lt;/span> &lt;span style="color:#ae81ff">255&lt;/span>&lt;span style="color:#e6db74">.255.255.0&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># option routers 192.168.20.254;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">option&lt;/span> &lt;span style="color:#e6db74">domain-name-servers&lt;/span> &lt;span style="color:#ae81ff">114&lt;/span>&lt;span style="color:#e6db74">.114.114.114&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">option&lt;/span> &lt;span style="color:#e6db74">subnet-mask&lt;/span> &lt;span style="color:#ae81ff">255&lt;/span>&lt;span style="color:#e6db74">.255.255.0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">range&lt;/span> &lt;span style="color:#e6db74">dynamic-bootp&lt;/span> &lt;span style="color:#ae81ff">192&lt;/span>&lt;span style="color:#e6db74">.168.20.100&lt;/span> &lt;span style="color:#ae81ff">192&lt;/span>&lt;span style="color:#e6db74">.168.20.254&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">default-lease-time&lt;/span> &lt;span style="color:#ae81ff">21600&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">max-lease-time&lt;/span> &lt;span style="color:#ae81ff">43200&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">next-server&lt;/span> $next_server;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">class&lt;/span> &lt;span style="color:#e6db74">&amp;#34;pxeclients&amp;#34;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">match&lt;/span> &lt;span style="color:#e6db74">if&lt;/span> &lt;span style="color:#e6db74">substring&lt;/span> &lt;span style="color:#e6db74">(option&lt;/span> &lt;span style="color:#e6db74">vendor-class-identifier,&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#e6db74">,&lt;/span> &lt;span style="color:#ae81ff">9&lt;/span>&lt;span style="color:#e6db74">)&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;PXEClient&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">if&lt;/span> &lt;span style="color:#e6db74">option&lt;/span> &lt;span style="color:#e6db74">pxe-system-type&lt;/span> = 00:&lt;span style="color:#ae81ff">02&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">filename&lt;/span> &lt;span style="color:#e6db74">&amp;#34;ia64/elilo.efi&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#f92672">else&lt;/span> &lt;span style="color:#e6db74">if&lt;/span> &lt;span style="color:#e6db74">option&lt;/span> &lt;span style="color:#e6db74">pxe-system-type&lt;/span> = 00:&lt;span style="color:#ae81ff">06&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">filename&lt;/span> &lt;span style="color:#e6db74">&amp;#34;grub/grub-x86.efi&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#f92672">else&lt;/span> &lt;span style="color:#e6db74">if&lt;/span> &lt;span style="color:#e6db74">option&lt;/span> &lt;span style="color:#e6db74">pxe-system-type&lt;/span> = 00:&lt;span style="color:#ae81ff">07&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">filename&lt;/span> &lt;span style="color:#e6db74">&amp;#34;grub/grub-x86_64.efi&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#f92672">else&lt;/span> &lt;span style="color:#e6db74">if&lt;/span> &lt;span style="color:#e6db74">option&lt;/span> &lt;span style="color:#e6db74">pxe-system-type&lt;/span> = 00:&lt;span style="color:#ae81ff">09&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">filename&lt;/span> &lt;span style="color:#e6db74">&amp;#34;grub/grub-x86_64.efi&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#f92672">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">filename&lt;/span> &lt;span style="color:#e6db74">&amp;#34;pxelinux.0&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">subnet&lt;/span> &lt;span style="color:#ae81ff">192&lt;/span>&lt;span style="color:#e6db74">.168.30.0&lt;/span> &lt;span style="color:#e6db74">netmask&lt;/span> &lt;span style="color:#ae81ff">255&lt;/span>&lt;span style="color:#e6db74">.255.255.0&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">option&lt;/span> &lt;span style="color:#e6db74">domain-name-servers&lt;/span> &lt;span style="color:#ae81ff">114&lt;/span>&lt;span style="color:#e6db74">.114.114.114&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">option&lt;/span> &lt;span style="color:#e6db74">routers&lt;/span> &lt;span style="color:#ae81ff">192&lt;/span>&lt;span style="color:#e6db74">.168.30.254&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">range&lt;/span> &lt;span style="color:#e6db74">dynamic-bootp&lt;/span> &lt;span style="color:#ae81ff">192&lt;/span>&lt;span style="color:#e6db74">.168.30.100&lt;/span> &lt;span style="color:#ae81ff">192&lt;/span>&lt;span style="color:#e6db74">.168.30.250&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">option&lt;/span> &lt;span style="color:#e6db74">subnet-mask&lt;/span> &lt;span style="color:#ae81ff">255&lt;/span>&lt;span style="color:#e6db74">.255.255.0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">next-server&lt;/span> $next_server;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">default-lease-time&lt;/span> &lt;span style="color:#ae81ff">21600&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">max-lease-time&lt;/span> &lt;span style="color:#ae81ff">43200&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="附录">附录&lt;a class="td-heading-self-link" href="#%e9%99%84%e5%bd%95" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>添加 repos 源&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>1.添加repo源
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#举个栗子，centos7.2版本的openstack的repo源&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>root@cobbler02 ~&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#75715e"># cobbler repo add --name=centos7.2-openstack-mitaka --mirror=http://mirrors.aliyun.com/centos/7.2.1511/cloud/x86_64/openstack-mitaka/ --arch=x86_64 --breed=yum &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#添加repo源，举个栗子，centos7版本的epel源&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>root@cobbler02 ~&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#75715e"># cobbler repo add --name=centos7-x86_64-epel --mirror=http://mirrors.aliyun.com/epel/7/x86_64/ --arch=x86_64 --breed=yum&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2.同步repo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>root@cobbler02 ~&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#75715e"># cobbler reposync&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3.添加repo到对应的profile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cobbler profile edit --name&lt;span style="color:#f92672">=&lt;/span>Centos-7-x86_64 --repos&lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>4.修改kickstart文件。添加。（些到%post %end中间）
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>%post
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>systemctl disable postfix.service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$yum_config_stanza
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>%end
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>5.添加定时任务，定期同步repo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>客户机重装系统教程：1&lt;/p>
&lt;p>centos7 系列：&lt;/p>
&lt;p>1)不指定详细 system 模板，让 cobbler 自己装一台 centos7 的镜像&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#注意上面如果没有指定epel源的是无法装koan包的&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#执行这个命令：wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>root@zabbix ~&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#75715e"># yum install -y koan&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#指定cobbler的服务器&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>root@zabbix ~&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#75715e"># koan --server=192.168.31.73 --list=profiles&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- looking &lt;span style="color:#66d9ef">for&lt;/span> Cobbler at http://192.168.31.73:80/cobbler_api
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CentOS-7.2-x86_64
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#指定从哪个镜像进行安装&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>root@zabbix ~&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#75715e"># koan --replace-self --server=192.168.31.73 --profile=CentOS-7.2-x86_64&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- looking &lt;span style="color:#66d9ef">for&lt;/span> Cobbler at http://192.168.31.73:80/cobbler_api
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- reading URL: http://192.168.31.73/cblr/svc/op/ks/profile/CentOS-7.2-x86_64
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>install_tree: http://192.168.31.73/cblr/links/CentOS-7.2-x86_64
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>downloading initrd initrd.img to /boot/initrd.img_koan
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>url&lt;span style="color:#f92672">=&lt;/span>http://192.168.31.73/cobbler/p_w_picpaths/CentOS-7.2-x86_64/initrd.img
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- reading URL: http://192.168.31.73/cobbler/p_w_picpaths/CentOS-7.2-x86_64/initrd.img
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>downloading kernel vmlinuz to /boot/vmlinuz_koan
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>url&lt;span style="color:#f92672">=&lt;/span>http://192.168.31.73/cobbler/p_w_picpaths/CentOS-7.2-x86_64/vmlinuz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- reading URL: http://192.168.31.73/cobbler/p_w_picpaths/CentOS-7.2-x86_64/vmlinuz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#e6db74">&amp;#39;/sbin/grubby&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;--add-kernel&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;/boot/vmlinuz_koan&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;--initrd&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;/boot/initrd.img_koan&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;--args&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;&amp;#34;ksdevice=link lang= text net.ifnames=0 ks=http://192.168.31.73/cblr/svc/op/ks/profile/CentOS-7.2-x86_64 biosdevname=0 kssendmac &amp;#34;&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;--copy-default&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;--make-default&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;--title=kick1464687061&amp;#39;&lt;/span>&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#e6db74">&amp;#39;/sbin/grubby&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;--update-kernel&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;/boot/vmlinuz_koan&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;--remove-args=root&amp;#39;&lt;/span>&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- reboot to apply changes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#重启系统&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>root@zabbix ~&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#75715e"># reboot&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>2)指定设定好的系统配置，让系统生成一个指定的 mac 地址绑定的 ip 和其他你指定的东西&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>root@zabbix ~&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#75715e"># yum install -y koan&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#指定cobbler的服务器选择system模板&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>root@MiWiFi-R2D-srv ~&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#75715e"># koan --server=192.168.31.73 --list=system&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- looking &lt;span style="color:#66d9ef">for&lt;/span> Cobbler at http://192.168.31.73:80/cobbler_api
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>koan does not know how
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>root@MiWiFi-R2D-srv ~&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#75715e"># koan --replace-self --server=192.168.31.73 --system=zabbix02&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- looking &lt;span style="color:#66d9ef">for&lt;/span> Cobbler at http://192.168.31.73:80/cobbler_api
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- reading URL: http://192.168.31.73/cblr/svc/op/ks/system/zabbix02
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>install_tree: http://192.168.31.73/cblr/links/CentOS-7.2-x86_64
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>downloading initrd initrd.img to /boot/initrd.img_koan
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>url&lt;span style="color:#f92672">=&lt;/span>http://192.168.31.73/cobbler/p_w_picpaths/CentOS-7.2-x86_64/initrd.img
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- reading URL: http://192.168.31.73/cobbler/p_w_picpaths/CentOS-7.2-x86_64/initrd.img
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>downloading kernel vmlinuz to /boot/vmlinuz_koan
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>url&lt;span style="color:#f92672">=&lt;/span>http://192.168.31.73/cobbler/p_w_picpaths/CentOS-7.2-x86_64/vmlinuz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- reading URL: http://192.168.31.73/cobbler/p_w_picpaths/CentOS-7.2-x86_64/vmlinuz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#e6db74">&amp;#39;/sbin/grubby&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;--add-kernel&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;/boot/vmlinuz_koan&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;--initrd&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;/boot/initrd.img_koan&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;--args&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;&amp;#34;ksdevice=link lang= text net.ifnames=0 ks=http://192.168.31.73/cblr/svc/op/ks/system/zabbix02 biosdevname=0 kssendmac &amp;#34;&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;--copy-default&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;--make-default&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;--title=kick1464688081&amp;#39;&lt;/span>&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#e6db74">&amp;#39;/sbin/grubby&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;--update-kernel&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;/boot/vmlinuz_koan&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;--remove-args=root&amp;#39;&lt;/span>&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- reboot to apply changes to list that
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>root@MiWiFi-R2D-srv ~&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#75715e"># reboot&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/wf5w0g/1616125383019-fc08ace0-55f9-4c41-873e-43b8a4aeae90.jpeg" alt="">&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/wf5w0g/1616125383004-27cf30e1-7d74-49f2-9840-c7f2fce73950.jpeg" alt="">&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/wf5w0g/1616125383082-57129950-42f7-4ea1-8837-579b371c54e0.jpeg" alt="">&lt;/p>
&lt;p>已经按照指定的 system 配置安装好了，但是这里出现了一个问题，双网卡的话，两个网段，现在的路由都是同一个了，所以上不了网了，求高手解决&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/wf5w0g/1616125383011-006ecd1b-39f8-40de-8836-92a1b578d936.jpeg" alt="">&lt;/p></description></item><item><title>Docs: cobbler 命令说明</title><link>https://desistdaydream.github.io/docs/9.%E8%BF%90%E7%BB%B4/Cobbler/cobbler-%E5%91%BD%E4%BB%A4%E8%AF%B4%E6%98%8E/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/9.%E8%BF%90%E7%BB%B4/Cobbler/cobbler-%E5%91%BD%E4%BB%A4%E8%AF%B4%E6%98%8E/</guid><description>
&lt;h2 id="distro">distro&lt;a class="td-heading-self-link" href="#distro" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>cobbler distro report &amp;ndash;name=CentOS7-1810 # 查看安装镜像文件信息&lt;/li>
&lt;/ul>
&lt;h2 id="import">import&lt;a class="td-heading-self-link" href="#import" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>cobbler import [OPTIONS]&lt;/p>
&lt;p>OPTIONS&lt;/p>
&lt;ul>
&lt;li>&amp;ndash;path # 指定制作部署系统时的镜像所用到的光盘镜像的路径&lt;/li>
&lt;li>&amp;ndash;name # 为安装源定义一个名字，指定部署系统所用的镜像名&lt;/li>
&lt;li>&amp;ndash;arch # 指定安装源是 32 位、64 位、ia64, 目前支持的选项有: x86│x86_64│ia64&lt;/li>
&lt;/ul>
&lt;p>EXAMPLE&lt;/p>
&lt;ul>
&lt;li>cobbler import &amp;ndash;path=/mnt/ &amp;ndash;name=CentOS7-1810 &amp;ndash;arch=x86_64&lt;/li>
&lt;/ul>
&lt;h2 id="profile">profile&lt;a class="td-heading-self-link" href="#profile" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>cobbler profile report &amp;ndash;name=CentOS7-x86_64 # 查看指定的 profile 设置&lt;/li>
&lt;/ul>
&lt;h2 id="system">system&lt;a class="td-heading-self-link" href="#system" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>cobbler system list # 列出&lt;/li>
&lt;/ul>
&lt;h2 id="ksvalidator-file">ksvalidator FILE&lt;a class="td-heading-self-link" href="#ksvalidator-file" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>用于测试指定 FILE 的 kickstart 语法是否正确&lt;/p></description></item><item><title>Docs: kickstart 介绍</title><link>https://desistdaydream.github.io/docs/9.%E8%BF%90%E7%BB%B4/Cobbler/kickstart-%E4%BB%8B%E7%BB%8D/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/9.%E8%BF%90%E7%BB%B4/Cobbler/kickstart-%E4%BB%8B%E7%BB%8D/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.centos.org/en-US/centos/install-guide/Kickstart2">官方文档&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h1 id="kickstart-语法参考">Kickstart 语法参考&lt;a class="td-heading-self-link" href="#kickstart-%e8%af%ad%e6%b3%95%e5%8f%82%e8%80%83" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>官方文档：&lt;a href="https://docs.centos.org/en-US/centos/install-guide/Kickstart2/#sect-kickstart-syntax">https://docs.centos.org/en-US/centos/install-guide/Kickstart2/#sect-kickstart-syntax&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h2 id="磁盘配置">磁盘配置&lt;a class="td-heading-self-link" href="#%e7%a3%81%e7%9b%98%e9%85%8d%e7%bd%ae" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>bootloader [OPTIONS] # 引导程序(boot loader)的相关配置。&lt;/p>
&lt;p>&amp;ndash;location=VALUE # 指定引导程序的安装位置为 VALUE&lt;/p>
&lt;ul>
&lt;li>mbr # 默认值。取决于磁盘格式是 MBR 还是 GUID&lt;/li>
&lt;li>partition # 将引导程序安装在包含内核的分区的第一个扇区中&lt;/li>
&lt;li>none # 不安装引导程序&lt;/li>
&lt;li>boot # 未知，待更新&lt;/li>
&lt;/ul>
&lt;p>磁盘分区相关配置&lt;/p>
&lt;p>part MntPoint [OPTIONS] # 创建一个分区，挂载点为 MntPoint，&lt;/p>
&lt;p>MntPoint # 可用的挂载点有如下几种。&lt;/p>
&lt;ul>
&lt;li>/PATH # 指定挂载点到具体路径下&lt;/li>
&lt;li>swap # 指定该分区为 swap&lt;/li>
&lt;li>raid.ID&lt;/li>
&lt;li>pv.ID # 指定该分区用于 lvm，即创建一个 pv(物理卷)&lt;/li>
&lt;li>biosboot # 指定该分区用于 BIOS 引导,建议大小为 2MiB&lt;/li>
&lt;li>/boot/efi # 指定该分区用于 UEFI 引导，建议大小为 200MiB.&lt;/li>
&lt;/ul>
&lt;p>OPTIONS&lt;/p>
&lt;ul>
&lt;li>&amp;ndash;size=NUM # 指定该分区的大小，单位为 MiB。Note：NUM 为一个正整数(不包含单位)&lt;/li>
&lt;li>&amp;ndash;grow # 将该分区大小设置为所有剩余可用的空间。如果指定了 &amp;ndash;maximum 选项，则将该分区设置为该选项值的大小。&lt;/li>
&lt;li>&amp;ndash;asprimary # 指定该分区为主分区。Note：对于 GUID 分区表(GPT),该选项没有任何意义。&lt;/li>
&lt;li>&amp;ndash;fstype=TYPE # 指定该分区的文件系统类型。可用类型有 xfs、ext2、ext3、ext4、swap、vfat、efi、biosboot&lt;/li>
&lt;li>&amp;ndash;ondisk= # 指定要使用的磁盘名称&lt;/li>
&lt;/ul>
&lt;p>volgroup Name PartName # 创建名为 NAME 卷组，使用名为 PartName 分区&lt;/p>
&lt;p>logvol PATH &amp;ndash;vgname=VGNAME &amp;ndash;name=NAME [OPTIONS] # 创建名为 NAME 逻辑卷，使用名为 VGNAME 的卷组&lt;/p>
&lt;p>配置示例：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 配置引导程序的信息，将引导程序安装到 mbr 中，&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bootloader --location&lt;span style="color:#f92672">=&lt;/span>mbr --append&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;crashkernel=auto&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 清理所有分区&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>clearpart --all --initlabel
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 创建主分区，挂载到/boot，文件系统类型为xfs，大小为500M，使用sda磁盘&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>part /boot --fstype&lt;span style="color:#f92672">=&lt;/span>xfs --asprimary --size&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">500&lt;/span> --ondisk&lt;span style="color:#f92672">=&lt;/span>sda
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>part biosboot --fstype&lt;span style="color:#f92672">=&lt;/span>biosboot --asprimary --size&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span> --ondisk&lt;span style="color:#f92672">=&lt;/span>sda
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 分区，创建一个名为pv.01的物理卷，大小为磁盘剩余的所有空间，使用sda磁盘&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>part pv.01 --size&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> --grow --ondisk&lt;span style="color:#f92672">=&lt;/span>sda
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 使用pv.01来创建一个vg0的卷组&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>volgroup vg0 pv.01
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 使用vg0卷组来创建逻辑卷，逻辑卷为swap分区，文件系统类型为swap，大小为32G，名字为swap&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>logvol swap --fstype swap --size&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">32768&lt;/span> --name&lt;span style="color:#f92672">=&lt;/span>swap --vgname&lt;span style="color:#f92672">=&lt;/span>vg0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 使用vg0卷组来创建逻辑卷，挂载到/目录下，文件系统类型为xfs，大小使用逻辑卷剩下的所有空间，名字为root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>logvol / --fstype xfs --size&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> --grow --name&lt;span style="color:#f92672">=&lt;/span>root --vgname&lt;span style="color:#f92672">=&lt;/span>vg0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 分区，创建一个名为pv.02的物理卷，大小为磁盘剩余的所有空间，使用sdb磁盘&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>part pv.02 --size&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> --grow --ondisk&lt;span style="color:#f92672">=&lt;/span>sdb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>volgroup vg1 pv.02
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>logvol /app --fstype xfs --size&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> --grow --name&lt;span style="color:#f92672">=&lt;/span>app --vgname&lt;span style="color:#f92672">=&lt;/span>vg1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># UEFI模式下需要增加下面一条分区，且不用创建biosboot分区&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>part /boot/efi --fstype&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;efi&amp;#34;&lt;/span> --ondisk&lt;span style="color:#f92672">=&lt;/span>sda --size&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">500&lt;/span> --fsoptions&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;umask=0077,shortname=winnt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="packages-安装配置">Packages 安装配置&lt;a class="td-heading-self-link" href="#packages-%e5%ae%89%e8%a3%85%e9%85%8d%e7%bd%ae" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>官方文档：&lt;a href="https://docs.centos.org/en-US/centos/install-guide/Kickstart2/#sect-kickstart-packages">https://docs.centos.org/en-US/centos/install-guide/Kickstart2/#sect-kickstart-packages&lt;/a>&lt;/p>
&lt;p>使用 ％packages %end 关键字指定 Kickstart 安装哪些软件包以及如何安装它们，可以指定 environment、group 或者单独的包名。这些可用的 packages 可以在 CentOS 的安装镜像的 .repodata/ 目录中找到&lt;/p>
&lt;p>比如当我把 iso 镜像文件挂载到 /mnt 目录下时，可以看到如下内容。(那些 xml 文件中可以看到 packages 列表及其依赖)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#75715e"># pwd&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/mnt/BaseOS/repodata
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#75715e"># ls&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>08a9add0907af002934460d81ea0edc8bb4154db679cdc113d4c51efcbddfce4-comps-BaseOS.x86_64.xml.xz 89376911bec34defd11535ee1f9e74237ec25e63c4dc5041ed519f1166d1cdca-other.xml.gz repomd.xml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>190ce1d49a76eafb61b0e2738d7331a45f1efbdfb4c2c274176486f8c82f7f80-primary.xml.gz a6e31179a63dffb12846a2f8ad848618e7669225deb4222acadcbabb04d522f0-filelists.sqlite.xz TRANS.TBL
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2caf33eae61c01725123a875217fe6bb0754c2916e7336286fbc392d23f42b57-other.sqlite.xz a9b7530c36c9681b97c159cd98693e7fffecf2d1018d508f990934a4fa71b447-primary.sqlite.xz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>53db8eac92f79abf479e202fb013aca86d5060fd948e1ed7ea8f9493e72fd4d1-filelists.xml.gz fe7d9972481aaef922e8a2fafa4065c4eb9422125da783a058a9988cd9f3eb27-comps-BaseOS.x86_64.xml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>.xml 文件中包含描述可用环境（用标记）和组（标记）的结构。每个条目都有一个 ID，用户可见性的值，名称，描述和包列表。如果选择了要安装的组，则始终会安装软件包列表中标记为必选的软件包，如果未在其他位置专门排除标记为默认的软件包，则即使已选择该组，也必须在其他位置特别包括标记为可选的软件包。&lt;/p>
&lt;p>配置示例：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>%packages
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>安装 minimal-enviroment 环境的所有软件包，一个 Kickstart 文件仅可指定一个 environment 包
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>@^minimal-environment
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>安装 core 组下的所有软件包
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>@core
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>安装 kexec-tools 软件包
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kexec-tools
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>%end
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="kickstart-配置文件样例">kickstart 配置文件样例&lt;a class="td-heading-self-link" href="#kickstart-%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6%e6%a0%b7%e4%be%8b" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># platform=x86, AMD64, or Intel EM64T&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># System authorization information系统认证信息，使用加密，md5方式加密&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>auth --useshadow --enablemd5
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># System bootloader configuration 系统引导配置&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># --location指定创建引导的位置，在mbr中创建引导；--append指定内核参数，crashkernel为开启kdump&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bootloader --location&lt;span style="color:#f92672">=&lt;/span>mbr --append&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;crashkernel=auto&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Partition clearing information分区清除信息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 清除所有分区，并初始化磁盘标签&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>clearpart --all --initlabel
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Use text mode install&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Firewall configuration 关闭防火墙&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>firewall --disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Run the Setup Agent on first boot&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>firstboot --disable
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># System keyboard 系统键盘&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>keyboard us
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># System language 系统语言&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lang en_US
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Use network installation 指明安装系统的方式，这里使用网络方式安装，指明提供安装程序的服务器地址和路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>url --url&lt;span style="color:#f92672">=&lt;/span>$tree
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># If any cobbler repo definitions were referenced in the kickstart profile, include them here.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$yum_repo_stanza
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># $SNIPPET 变量括号内的值是目录/var/lib/cobbler/snippets下的文件，该文件中可以写入linux命令，当做脚本文件来说明&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Network information&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$SNIPPET&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;network_config&amp;#39;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Reboot after installation 安装完成后重启系统&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>reboot
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#Root password设定root的密码&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rootpw --iscrypted $default_password_crypted
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># SELinux configuration关闭SELinux&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>selinux --disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Do not configure the X Window System不要配置X window系统&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>skipx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># System timezone设定系统时区&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>timezone Asia/Shanghai
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Install OS instead of upgrade 重新安装操作系统，而不是升级&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>install
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Clear the Master Boot Record清除主引导记录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zerombr
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Allow anaconda to partition the system as needed该选项用于自动分区&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#autopart&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Disk partitioning information磁盘分区信息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>part /boot --fstype&lt;span style="color:#f92672">=&lt;/span>xfs --asprimary --size&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">500&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>part biosboot --fstype&lt;span style="color:#f92672">=&lt;/span>biosboot --asprimary --size&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>part pv.01 --size&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> --grow
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>volgroup vg0 pv.01
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>logvol / --fstype xfs --size&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">10240&lt;/span> --name&lt;span style="color:#f92672">=&lt;/span>root --vgname&lt;span style="color:#f92672">=&lt;/span>vg0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>logvol swap --fstype swap --size&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1024&lt;/span> --name&lt;span style="color:#f92672">=&lt;/span>swap --vgname&lt;span style="color:#f92672">=&lt;/span>vg0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>logvol /var --fstype xfs --size&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> --grow --name&lt;span style="color:#f92672">=&lt;/span>var --vgname&lt;span style="color:#f92672">=&lt;/span>vg0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>%pre
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># %pre段落为安装前执行的任务&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>%end
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>%packages
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># %package段落中指定要安装的软件包&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>@^minimal
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>@core
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kexec-tools
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>%end
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>%post
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#`%post`段落为安装系统完成后执行的任务&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 自定义系统配置&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 安装工具，在/var/lib/cobbler/snippets目录下添加名为tools的文件，文件中可以写入想要执行的linux命令&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$SNIPPET&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;tools&amp;#39;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># End final steps&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>%end
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>