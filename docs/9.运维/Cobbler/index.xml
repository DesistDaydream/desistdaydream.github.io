<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cobbler on 断念梦的站点</title><link>https://desistdaydream.github.io/docs/9.%E8%BF%90%E7%BB%B4/Cobbler/</link><description>Recent content in Cobbler on 断念梦的站点</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/9.%E8%BF%90%E7%BB%B4/Cobbler/index.xml" rel="self" type="application/rss+xml"/><item><title>Cobbler</title><link>https://desistdaydream.github.io/docs/9.%E8%BF%90%E7%BB%B4/Cobbler/Cobbler/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/9.%E8%BF%90%E7%BB%B4/Cobbler/Cobbler/</guid><description>前言 网络安装服务器套件 Cobbler(补鞋匠) 出现以前，我们一直在做装机民工这份很有前途的职业。自打若干年前 Red Hat 推出了 Kickstart，此后我们顿觉身价倍增。不再需要刻了光盘一台一台地安装 Linux，只要搞定 PXE、DHCP、 TFTP，还有那满屏眼花缭乱不知所云的 Kickstart 脚本，我们就可以像哈里波特一样，轻点魔棒，瞬间安装上百台服务器。这一堆花里胡哨的东西可不是一般人都能整明白的，没有大专以上学历，通不过英语四级， 根本别想玩转。
总而言之，这是一份多么有前途，多么有技术含量的工作啊。
很不幸，Red Hat 最新（Cobbler 项目最初在 2008 年左右发布）发布了网络安装服务器套件 Cobbler(补鞋匠)，它已将 Linux 网络安装的技术门槛，从大专以上文化水平，成功降低到初中以下，连补鞋匠都能学会。
对于我们这些在装机领域浸淫多年，经验丰富，老骥伏枥，志在千里的民工兄弟们来说，不啻为一个晴天霹雳。
概述 参考：
GitHub 项目，cobbler/cobbler 官网 Cobbler 是一个 Linux 服务器快速网络安装的服务，而且在经过调整也可以支持网络安装 windows。
该工具使用 python 开发，小巧轻便（才 15k 行 python 代码），可以通过网络启动(PXE)的方式来快速安装、重装物理服务器和虚拟机，同时还可以管理 DHCP，DNS，TFTP、RSYNC 以及 yum 仓库、构造系统 ISO 镜像。
Cobbler 可以使用命令行方式管理，也提供了基于 Web 的界面管理工具(cobbler-web)，还提供了 API 接口，可以方便二次开发使用。
Cobbler 是较早前的 kickstart 的升级版，优点是比较容易配置，还自带 web 界面比较易于管理。
Cobbler 内置了一个轻量级配置管理系统，但它也支持和其它配置管理系统集成，如 Puppet，暂时不支持 SaltStack。
Cobbler 客户端 Koan 支持虚拟机安装和操作系统重新安装，使重装系统更便捷。
Cobbler 可以干啥 使用 Cobbler，您无需进行人工干预即可安装机器。Cobbler 设置一个 PXE 引导环境（它还可以使用 yaboot 支持 PowerPC），并 控制与安装相关的所有方面，比如网络引导服务（DHCP 和 TFTP）与存储库镜像。当希望安装一台新机器时，Cobbler 可以：</description></item><item><title>Cobbler 部署</title><link>https://desistdaydream.github.io/docs/9.%E8%BF%90%E7%BB%B4/Cobbler/Cobbler-%E9%83%A8%E7%BD%B2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/9.%E8%BF%90%E7%BB%B4/Cobbler/Cobbler-%E9%83%A8%E7%BD%B2/</guid><description>概述 基础环境准备 检测 selinux 是否关闭(必须关闭)
setenforce 0 sed -i &amp;#39;s/SELINUX=enforcing/SELINUX=disabled/&amp;#39; /etc/selinux/config 检测防火墙是否关闭(必须关闭)
systemctl disable firewalld &amp;amp;&amp;amp; systemctl stop firewalld 注意：
虚拟机网卡采用桥接模式，不使用 NAT 模式，我们会搭建 DHCP 服务器，在同一局域网多个 DHCP 服务会有冲突，所以最好把路由器的 DHCP 服务关闭 安装 Cobbler 以及相关功能配件 yum install cobbler cobbler-web pykickstart httpd dhcp tftp-server fence-agents -y
cobbler # cobbler 程序包 cobbler-web # cobbler 的 web 服务包 pykickstart # cobbler 检查 kickstart 语法错误 httpd # Apache web 服务 dhcp # dhcp 服务 tftp-server # tftp 服务 systemctl enable cobblerd httpd tftp rsyncd dhcpd &amp;amp;&amp;amp; systemctl start cobblerd httpd tftp rsyncd dhcpd</description></item><item><title>cobbler 命令说明</title><link>https://desistdaydream.github.io/docs/9.%E8%BF%90%E7%BB%B4/Cobbler/cobbler-%E5%91%BD%E4%BB%A4%E8%AF%B4%E6%98%8E/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/9.%E8%BF%90%E7%BB%B4/Cobbler/cobbler-%E5%91%BD%E4%BB%A4%E8%AF%B4%E6%98%8E/</guid><description>distro cobbler distro report &amp;ndash;name=CentOS7-1810 # 查看安装镜像文件信息 import cobbler import [OPTIONS]
OPTIONS
&amp;ndash;path # 指定制作部署系统时的镜像所用到的光盘镜像的路径 &amp;ndash;name # 为安装源定义一个名字，指定部署系统所用的镜像名 &amp;ndash;arch # 指定安装源是 32 位、64 位、ia64, 目前支持的选项有: x86│x86_64│ia64 EXAMPLE
cobbler import &amp;ndash;path=/mnt/ &amp;ndash;name=CentOS7-1810 &amp;ndash;arch=x86_64 profile cobbler profile report &amp;ndash;name=CentOS7-x86_64 # 查看指定的 profile 设置 system cobbler system list # 列出 ksvalidator FILE 用于测试指定 FILE 的 kickstart 语法是否正确</description></item><item><title>kickstart 介绍</title><link>https://desistdaydream.github.io/docs/9.%E8%BF%90%E7%BB%B4/Cobbler/kickstart-%E4%BB%8B%E7%BB%8D/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/9.%E8%BF%90%E7%BB%B4/Cobbler/kickstart-%E4%BB%8B%E7%BB%8D/</guid><description>概述 参考：
官方文档 Kickstart 语法参考 参考：
官方文档：https://docs.centos.org/en-US/centos/install-guide/Kickstart2/#sect-kickstart-syntax 磁盘配置 bootloader [OPTIONS] # 引导程序(boot loader)的相关配置。
&amp;ndash;location=VALUE # 指定引导程序的安装位置为 VALUE
mbr # 默认值。取决于磁盘格式是 MBR 还是 GUID partition # 将引导程序安装在包含内核的分区的第一个扇区中 none # 不安装引导程序 boot # 未知，待更新 磁盘分区相关配置
part MntPoint [OPTIONS] # 创建一个分区，挂载点为 MntPoint，
MntPoint # 可用的挂载点有如下几种。
/PATH # 指定挂载点到具体路径下 swap # 指定该分区为 swap raid.ID pv.ID # 指定该分区用于 lvm，即创建一个 pv(物理卷) biosboot # 指定该分区用于 BIOS 引导,建议大小为 2MiB /boot/efi # 指定该分区用于 UEFI 引导，建议大小为 200MiB. OPTIONS
&amp;ndash;size=NUM # 指定该分区的大小，单位为 MiB。Note：NUM 为一个正整数(不包含单位) &amp;ndash;grow # 将该分区大小设置为所有剩余可用的空间。如果指定了 &amp;ndash;maximum 选项，则将该分区设置为该选项值的大小。 &amp;ndash;asprimary # 指定该分区为主分区。Note：对于 GUID 分区表(GPT),该选项没有任何意义。 &amp;ndash;fstype=TYPE # 指定该分区的文件系统类型。可用类型有 xfs、ext2、ext3、ext4、swap、vfat、efi、biosboot &amp;ndash;ondisk= # 指定要使用的磁盘名称 volgroup Name PartName # 创建名为 NAME 卷组，使用名为 PartName 分区</description></item></channel></rss>