<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ansible Variables on 断念梦的站点</title><link>https://desistdaydream.github.io/docs/9.%E8%BF%90%E7%BB%B4/Ansible/Ansible-Variables/</link><description>Recent content in Ansible Variables on 断念梦的站点</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/9.%E8%BF%90%E7%BB%B4/Ansible/Ansible-Variables/index.xml" rel="self" type="application/rss+xml"/><item><title>Fact Variables</title><link>https://desistdaydream.github.io/docs/9.%E8%BF%90%E7%BB%B4/Ansible/Ansible-Variables/Fact-Variables/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/9.%E8%BF%90%E7%BB%B4/Ansible/Ansible-Variables/Fact-Variables/</guid><description>概述 参考：
官方文档，Playbook 指南-facts 和 magic 变量 在 ansible 执行任务时，会默认执行名为 Gathering Facts 的任务，以获取目标主机的一些系统信息，如图所示
这些信息以变量的形式体现，每个变量都有其对应的值。可以通过命令 ansible all -m setup 获取这些信息。即通过 setup 模块实现。如下所示
ansible_facts 字段下面的所有字段才是可以直接引用的变量
~]# ansible all -m setup 10.10.100.249 | SUCCESS =&amp;gt; { &amp;#34;ansible_facts&amp;#34;: { &amp;#34;ansible_all_ipv4_addresses&amp;#34;: [ &amp;#34;10.10.100.249&amp;#34; ], &amp;#34;ansible_all_ipv6_addresses&amp;#34;: [ &amp;#34;fe80::47e1:ea44:cfc8:cad0&amp;#34; ], &amp;#34;ansible_devices&amp;#34;: { &amp;#34;fd0&amp;#34;: { &amp;#34;holders&amp;#34;: [], &amp;#34;host&amp;#34;: &amp;#34;&amp;#34;, &amp;#34;model&amp;#34;: null, &amp;#34;partitions&amp;#34;: {}, &amp;#34;removable&amp;#34;: &amp;#34;1&amp;#34;, &amp;#34;rotational&amp;#34;: &amp;#34;1&amp;#34;, &amp;#34;scheduler_mode&amp;#34;: &amp;#34;deadline&amp;#34;, &amp;#34;sectors&amp;#34;: &amp;#34;0&amp;#34;, &amp;#34;sectorsize&amp;#34;: &amp;#34;512&amp;#34;, &amp;#34;size&amp;#34;: &amp;#34;0.00 Bytes&amp;#34;, &amp;#34;support_discard&amp;#34;: &amp;#34;0&amp;#34;, &amp;#34;vendor&amp;#34;: null }, &amp;#34;sda&amp;#34;: { &amp;#34;holders&amp;#34;: [], &amp;#34;host&amp;#34;: &amp;#34;SCSI storage controller: LSI Logic / Symbios Logic 53c1030 PCI-X Fusion-MPT Dual Ultra320 SCSI (rev 01)&amp;#34;, &amp;#34;model&amp;#34;: &amp;#34;VMware Virtual S&amp;#34;, &amp;#34;partitions&amp;#34;: { &amp;#34;sda1&amp;#34;: { &amp;#34;sectors&amp;#34;: &amp;#34;39843840&amp;#34;, &amp;#34;sectorsize&amp;#34;: 512, &amp;#34;size&amp;#34;: &amp;#34;19.</description></item><item><title>Ansible Variables</title><link>https://desistdaydream.github.io/docs/9.%E8%BF%90%E7%BB%B4/Ansible/Ansible-Variables/Ansible-Variables/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/9.%E8%BF%90%E7%BB%B4/Ansible/Ansible-Variables/Ansible-Variables/</guid><description>group_vars 概述 参考：
官方文档，传统目录 - 使用变量 官方文档，传统目录 - 使用变量 - 变量优先级 虽然通过自动化可以使事情更简单、更可重复，但是并非所有系统都完全相同。在某些情况下，观察到一个系统的行为或状态可能会影响到配置其他系统的方式。比如，我们可能需要找出一个系统的 IP 地址，并将这个 IP 地址作为另一个系统中配置的值。
基于上述目的，Ansible 可以通过 Variables(变量) 来管理各个系统之间的差异。
Ansible 的变量就跟编程语言中的变量概念一样，同样可以定义、引用。我们使用标准的 YAML 语法创建变量，包括列表和字典；可以这么说，YAML 中每个字段的 key 就是变量名，value 就是变量的值。我们可以在 Playbooks、Inventory、甚至命令行中定义与引用变量。我们还可以在 Playbooks 运行期间，将任务的返回值注册为变量，以创建一个新的变量。
创建变量后，我们可以在 模块的参数、模板、控制结构 中使用这些变量。在 GitHub 中有一个 Ansible 示例的目录，可以看到很多 Ansible 使用变量的例子
下面的示例就是在命令行中使用 debug 模块，查看了一下 inventory_hostname 这个默认变量的值
~]$ ansible -i ../inventory/ all -m debug -a &amp;#39;msg={{inventory_hostname}}&amp;#39; hw-cloud-xngy-jump-server-linux-2 | SUCCESS =&amp;gt; { &amp;#34;msg&amp;#34;: &amp;#34;hw-cloud-xngy-jump-server-linux-2&amp;#34; } 变量的优先级 变量可以是自带的，就是由人们自行定义的，可以在多个地方定义变量，(e.g.在某些文件里定义变量、通过命令行传递变量等等。由于 ansible 所要处理的的文件有很多，不同类型的文件下定义的变量的优先级也不同)
下面的优先级列表由低到高，最下面的变量优先级最高
command line values (eg “-u user”) role defaults # 定义在 ${ROLE}/defaults/main.</description></item></channel></rss>