<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦的站点 – DevOps</title><link>https://desistdaydream.github.io/docs/9.%E8%BF%90%E7%BB%B4/DevOps/</link><description>Recent content in DevOps on 断念梦的站点</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/9.%E8%BF%90%E7%BB%B4/DevOps/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: DevOps</title><link>https://desistdaydream.github.io/docs/9.%E8%BF%90%E7%BB%B4/DevOps/DevOps/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/9.%E8%BF%90%E7%BB%B4/DevOps/DevOps/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;strong>Developer(开发者)&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Operator(操作者(运维))&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/mcelwu/1616077542789-b79d4008-5e43-4380-a6a5-ab0c2b95cdd2.jpeg" alt="">&lt;/p>
&lt;p>敏捷开发（Agile Development）、持续集成（Continuous Integration）、持续交付（Continuous Delivery）、开发运维一体化（Development Operations），所覆盖的软件生命周期的阶段不同。&lt;/p>
&lt;p>DevOps 是一种文化，是一组过程、方法与系统的统称，用于促进开发（应用程序/软件工程）、技术运营和质量保障（QA）部门之间的沟通、协作与整合。&lt;/p>
&lt;p>它是一种重视“软件开发人员（Dev）”和“IT 运维技术人员（Ops）”之间沟通合作的文化、运动或惯例。透过自动化“软件交付”和“架构变更”的流程，来使得构建、测试、发布软件能够更加地快捷、频繁和可靠。&lt;/p>
&lt;p>它的出现是由于软件行业日益清晰地认识到：为了按时交付软件产品和服务，开发和运营工作必须紧密合作。&lt;/p>
&lt;p>计划-开发-构建-测试-修复-测试-交付运维-部署&lt;/p>
&lt;ul>
&lt;li>CI：持续集成
&lt;ul>
&lt;li>当程序员开发完提交代码到类似 github 的地方上之后，有一款工具可以自动拉去代码进行构建，当出现问题时，会报告给程序员，重复执行“构建-测试”的过程&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>CD：持续交付 Delivery
&lt;ul>
&lt;li>当有一款工具自动把测试好的东西(比如一个容器用的镜像)交付给运维，自动执行“构建-交付”的过程&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>CD：持续部署 Deployment
&lt;ul>
&lt;li>当有一款工具，运维都不用了，可以直接部署的时候&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="gitops">GitOps&lt;a class="td-heading-self-link" href="#gitops" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://mp.weixin.qq.com/s/JkZP9X2g9TOj6QkrbCDRQQ">公众号-云原声实验室，大妈都能看懂的 GitOps 入门指南&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>GitOps 这个概念最早是由 Kubernetes 管理公司 Weaveworks 公司在 2017 年提出的，如今已经过去了 5 个年头，想必大家对这个概念早有耳闻，但你可能并不知道它到底是什么，它和 DevOps 到底是啥关系，本文就来帮大家一一解惑。&lt;/p>
&lt;p>GitOps = IaC + Git + CI/CD，即基于 IaC 的版本化 CI/CD。它的核心是使用 Git 仓库来管理基础设施和应用的配置，并且&lt;strong>以 Git 仓库作为基础设施和应用的单一事实来源&lt;/strong>，你从其他地方修改配置（比如手动改线上配置）一概不予通过。&lt;/p>
&lt;p>Git 仓库中的声明式配置描述了目标环境当前所需基础设施的期望状态，借助于 GitOps，如果集群的实际状态与 Git 仓库中定义的期望状态不匹配，Kubernetes reconcilers 会根据期望状态来调整当前的状态，最终使实际状态符合期望状态。
另一方面，现代应用的开发更多关注的是迭代速度和规模，拥有成熟 DevOps 文化的组织每天可以将代码部署到生成环境中数百次，DevOps 团队可以通过版本控制、代码审查以及自动测试和部署的 CI/CD 流水线等最佳实践来实现这一目标，这就是 GitOps 干的事情。&lt;/p>
&lt;h1 id="cicd-工具">CI/CD 工具&lt;a class="td-heading-self-link" href="#cicd-%e5%b7%a5%e5%85%b7" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://desistdaydream.github.io/docs/9.%E8%BF%90%E7%BB%B4/DevOps/Jenkins/Jenkins.md">Jenkins&lt;/a>&lt;/li>
&lt;li>Tekton # 云原生推荐&lt;/li>
&lt;li>Argocd # 云原生推荐&lt;/li>
&lt;li>&lt;a href="https://desistdaydream.github.io/docs/9.%E8%BF%90%E7%BB%B4/DevOps/Drone/Drone.md">Drone&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://desistdaydream.github.io/docs/9.%E8%BF%90%E7%BB%B4/DevOps/Skaffold/Skaffold.md">Skaffold&lt;/a>(k8s 专属)&lt;/li>
&lt;li>&lt;a href="https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming%20tools/SCM/GitLab/GitLab.md">GitLab&lt;/a>-ci&lt;/li>
&lt;li>Dagger # Docker 创始人 Solomon Hykes 推出的产品
&lt;ul>
&lt;li>&lt;a href="https://mp.weixin.qq.com/s/4hwtgV6WJ-60FL1lGHoAQw">公众号，k8s 技术圈-Docker 创始人的新产品 Dagger 好用吗？&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://mp.weixin.qq.com/s/J2Hid1dO8ebkWL5UrVBeyA">公众号，k8s 技术圈-数据约束语言 CUE 是何方神圣？&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Zadig # &lt;a href="https://github.com/koderover/zadig">GitHub 项目，koderover/zadig&lt;/a>
&lt;ul>
&lt;li>一款面向开发者设计的云原生持续交付(Continuous Delivery)产品，具备高可用 CI/CD 能力，提供云原生运行环境，支持开发者本地联调、微服务并行构建和部署、集成测试等。Zadig 不改变现有流程，无缝集成 Github/Gitlab、Jenkins、多家云厂商等，运维成本极低。我们的目标是通过云原生技术的运用和工程产品赋能，打造极致、高效、愉悦的开发者工作体验，让工程师成为企业创新的核心引擎。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>Docs: ArgoCD</title><link>https://desistdaydream.github.io/docs/9.%E8%BF%90%E7%BB%B4/DevOps/ArgoCD/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/9.%E8%BF%90%E7%BB%B4/DevOps/ArgoCD/</guid><description/></item><item><title>Docs: Drone</title><link>https://desistdaydream.github.io/docs/9.%E8%BF%90%E7%BB%B4/DevOps/Drone/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/9.%E8%BF%90%E7%BB%B4/DevOps/Drone/</guid><description/></item><item><title>Docs: Jenkins</title><link>https://desistdaydream.github.io/docs/9.%E8%BF%90%E7%BB%B4/DevOps/Jenkins/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/9.%E8%BF%90%E7%BB%B4/DevOps/Jenkins/</guid><description/></item><item><title>Docs: Jenkins 与 skaffold 示例</title><link>https://desistdaydream.github.io/docs/9.%E8%BF%90%E7%BB%B4/DevOps/Jenkins-%E4%B8%8E-skaffold-%E7%A4%BA%E4%BE%8B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/9.%E8%BF%90%E7%BB%B4/DevOps/Jenkins-%E4%B8%8E-skaffold-%E7%A4%BA%E4%BE%8B/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>准备操作&lt;/p>
&lt;p>配置 webhook&lt;/p>
&lt;p>配置 Jenkins Pipeline 自动 clone 代码并获取 Jenkinsfile 文件&lt;/p>
&lt;p>代码示例&lt;/p>
&lt;p>Jenkinsfile&lt;/p>
&lt;p>skaffold.yaml&lt;/p>
&lt;p>main.go&lt;/p>
&lt;p>Dockerfile&lt;/p>
&lt;p>k8s-pod.yaml&lt;/p>
&lt;p>运行结果：&lt;/p>
&lt;h1 id="准备操作">准备操作&lt;a class="td-heading-self-link" href="#%e5%87%86%e5%a4%87%e6%93%8d%e4%bd%9c" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h1 id="配置-webhook">配置 webhook&lt;a class="td-heading-self-link" href="#%e9%85%8d%e7%bd%ae-webhook" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>从 jenkins 项目中，获取 webhook 的 URL 和 TOKEN，填到 gitlab 指定项目的 webhooks 中。&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/cyuibc/1616077495082-a11319fe-589d-4c0f-b45d-bb0b3bc52777.jpeg" alt="">&lt;/p>
&lt;p>Jenkins 项目的 TOKEN 需要在构建触发器栏目中，点击 高级，然后点击 Generate 来生成。&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/cyuibc/1616077495099-5da918fd-e308-4ccd-9873-19a87c8ae444.jpeg" alt="">&lt;/p>
&lt;p>在 GitLab 中填写 URL 和 TOKEN ，并点击 Add Webhook 即可，添加完成后，可以在最下方点击 Test 来测试连通性。&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/cyuibc/1616077495099-b091204a-a450-4b67-b215-cf3e5ec8a350.jpeg" alt="">&lt;/p>
&lt;p>配置 Jenkins Pipeline 自动 clone 代码并获取 Jenkinsfile 文件&lt;/p>
&lt;p>使用如下配置，开始构建前，让 Jenkins 自动获取代码仓库中的 Jenkinsfile 文件，并根据该文件执行 pipeline&lt;/p>
&lt;p>在流水线类型的任务中，进行如下配置&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/cyuibc/1616077495088-a4c61fb6-b61f-4697-a5ca-19877f84dad8.jpeg" alt="">&lt;/p>
&lt;h1 id="代码示例">代码示例&lt;a class="td-heading-self-link" href="#%e4%bb%a3%e7%a0%81%e7%a4%ba%e4%be%8b" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h2 id="jenkinsfile">Jenkinsfile&lt;a class="td-heading-self-link" href="#jenkinsfile" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;pre>&lt;code>pipeline {
agent any
stages {
stage('build') {
steps {
sh 'export TAG=1.0 &amp;amp;&amp;amp; skaffold run'
}
}
}
}
&lt;/code>&lt;/pre>
&lt;p>skaffold.yaml&lt;/p>
&lt;pre>&lt;code>apiVersion: skaffold/v2alpha1
kind: Config
build:
artifacts:
- image: 172.38.40.180/test/pipeline-test
tagPolicy:
envTemplate:
template: &amp;quot;{{.TAG}}&amp;quot;
local:
push: true
deploy:
kubectl:
manifests:
- k8s-*
&lt;/code>&lt;/pre>
&lt;p>main.go&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">package&lt;/span> &lt;span style="color:#000">main&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;time&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">func&lt;/span> &lt;span style="color:#000">main&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">fmt&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Println&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Hello Jenkins,Skafflod!&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">time&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Sleep&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">time&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Second&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">5&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Dockerfile&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Dockerfile" data-lang="Dockerfile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">FROM&lt;/span>&lt;span style="color:#4e9a06"> golang:1.14.7&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">WORKDIR&lt;/span>&lt;span style="color:#4e9a06"> /src&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">COPY&lt;/span> main.go .&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">RUN&lt;/span> go build main.go&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">FROM&lt;/span>&lt;span style="color:#4e9a06"> ubuntu&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">COPY&lt;/span> --from&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> /src/main .&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">CMD&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;./main&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>k8s-pod.yaml&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">v1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Pod&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">getting-started&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">containers&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">getting-started&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">image&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">172.38.40.180&lt;/span>&lt;span style="color:#000">/test/pipeline-test:1.0&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>运行结果：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>Started by GitLab push by DesistDaydream
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># 从配置中指定的 URL 中获取 Jenkinsfile&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Obtained Jenkinsfile from git http://10.20.5.5:10080//lich_wb/pipeline-skaffold-test.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Running in Durability level: MAX_SURVIVABILITY
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>Pipeline&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> Start of Pipeline
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>Pipeline&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> node
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Running on Jenkins in /opt/jenkins/jenkins-data/workspace/oc_dev/pipeline-skaffold-test
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>Pipeline&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>Pipeline&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> stage
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># 检查 SCM，并 clone 代码到本地。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>Pipeline&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>Declarative: Checkout SCM&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>Pipeline&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> checkout
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>using credential git_global
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;gt; /usr/bin/git rev-parse --is-inside-work-tree &lt;span style="color:#8f5902;font-style:italic"># timeout=10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Fetching changes from the remote Git repository
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;gt; /usr/bin/git config remote.origin.url http://10.20.5.5:10080//lich_wb/pipeline-skaffold-test.git &lt;span style="color:#8f5902;font-style:italic"># timeout=10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Fetching upstream changes from http://10.20.5.5:10080//lich_wb/pipeline-skaffold-test.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;gt; /usr/bin/git --version &lt;span style="color:#8f5902;font-style:italic"># timeout=10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>using GIT_ASKPASS to &lt;span style="color:#204a87">set&lt;/span> credentials
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;gt; /usr/bin/git fetch --tags --progress http://10.20.5.5:10080//lich_wb/pipeline-skaffold-test.git +refs/heads/*:refs/remotes/origin/* &lt;span style="color:#8f5902;font-style:italic"># timeout=10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>skipping resolution of commit remotes/origin/master, since it originates from another repository
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;gt; /usr/bin/git rev-parse refs/remotes/origin/master^&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>commit&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span> &lt;span style="color:#8f5902;font-style:italic"># timeout=10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;gt; /usr/bin/git rev-parse refs/remotes/origin/origin/master^&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>commit&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span> &lt;span style="color:#8f5902;font-style:italic"># timeout=10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Checking out Revision 4309c942163c122bfc706076a51e5de8118d1e37 &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>refs/remotes/origin/master&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;gt; /usr/bin/git config core.sparsecheckout &lt;span style="color:#8f5902;font-style:italic"># timeout=10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;gt; /usr/bin/git checkout -f 4309c942163c122bfc706076a51e5de8118d1e37 &lt;span style="color:#8f5902;font-style:italic"># timeout=10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Commit message: &lt;span style="color:#4e9a06">&amp;#34;change&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;gt; /usr/bin/git rev-list --no-walk 504d09cea618173edcc56ee4e9ea0edb573b0ccf &lt;span style="color:#8f5902;font-style:italic"># timeout=10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>Pipeline&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>Pipeline&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> // stage
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>Pipeline&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> withEnv
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>Pipeline&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>Pipeline&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> stage
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>Pipeline&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>build&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># 开始执行 skaffold，构建、推送、并部署到 kubernetes 集群&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>Pipeline&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+ &lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">TAG&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>1.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+ &lt;span style="color:#000">TAG&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>1.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+ skaffold run
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Generating tags...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - 172.38.40.180/test/pipeline-test -&amp;gt; 172.38.40.180/test/pipeline-test:1.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Checking cache...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - 172.38.40.180/test/pipeline-test: Found. Pushing
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>The push refers to repository &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>172.38.40.180/test/pipeline-test&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c22c4d1a8b07: Preparing
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>095624243293: Preparing
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>a37e74863e72: Preparing
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>8eeb4a14bcb4: Preparing
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ce3011290956: Preparing
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>a37e74863e72: Layer already exists
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>8eeb4a14bcb4: Layer already exists
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c22c4d1a8b07: Layer already exists
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>095624243293: Layer already exists
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ce3011290956: Layer already exists
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1.0: digest: sha256:7f7a76e3a0a0fafb43283a9269e6c370a883202d3a37640f43730487e9ad472b size: &lt;span style="color:#0000cf;font-weight:bold">1363&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Tags used in deployment:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - 172.38.40.180/test/pipeline-test -&amp;gt; 172.38.40.180/test/pipeline-test:1.0@sha256:7f7a76e3a0a0fafb43283a9269e6c370a883202d3a37640f43730487e9ad472b
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Starting deploy...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - pod/getting-started configured
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Waiting &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> deployments to stabilize...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Deployments stabilized in 31.474009ms
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>You can also run &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>skaffold run --tail&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> to get the logs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>Pipeline&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>Pipeline&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> // stage
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>Pipeline&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>Pipeline&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> // withEnv
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>Pipeline&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>Pipeline&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> // node
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>Pipeline&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> End of Pipeline
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Finished: SUCCESS
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: JenkinsX</title><link>https://desistdaydream.github.io/docs/9.%E8%BF%90%E7%BB%B4/DevOps/JenkinsX/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/9.%E8%BF%90%E7%BB%B4/DevOps/JenkinsX/</guid><description/></item><item><title>Docs: Skaffold</title><link>https://desistdaydream.github.io/docs/9.%E8%BF%90%E7%BB%B4/DevOps/Skaffold/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/9.%E8%BF%90%E7%BB%B4/DevOps/Skaffold/</guid><description/></item></channel></rss>