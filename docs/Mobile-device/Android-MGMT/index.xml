<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦的站点 – Android MGMT</title><link>https://desistdaydream.github.io/docs/Mobile-device/Android-MGMT/</link><description>Recent content in Android MGMT on 断念梦的站点</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/Mobile-device/Android-MGMT/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: ADB</title><link>https://desistdaydream.github.io/docs/Mobile-device/Android-MGMT/ADB/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/Mobile-device/Android-MGMT/ADB/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://developer.android.com/tools/adb">官方文档，SDK 工具-adb&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://developer.android.com/studio/command-line/adb?hl=zh-cn">官方文档-中文&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Android_Debug_Bridge">Wiki，Android_Debug_Bridge&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;strong>Android Debug Bridge(安卓调试桥，简称 ADB)&lt;/strong> 是一种功能多样的命令行工具，可让您与设备进行通信。&lt;code>adb&lt;/code> 命令可用于执行各种设备操作，例如安装和调试应用。&lt;code>adb&lt;/code> 提供对 Unix shell（可用来在设备上运行各种命令）的访问权限。它是一种 C/S 架构程序，包括以下三个组件：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>adb&lt;/strong> 命令行工具，在开发机器上运行
&lt;ul>
&lt;li>&lt;strong>客户端&lt;/strong>：用于发送命令。客户端在开发机器上运行。您可以通过发出 &lt;code>adb&lt;/code> 命令从命令行终端调用客户端。&lt;/li>
&lt;li>&lt;strong>服务端&lt;/strong>：用于管理客户端与守护程序之间的通信。服务端在开发机器上作为后台进程运行。默认监听 5037 端口&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>adbd&lt;/strong> 守护程序，在设备上运行。守护程序在每个设备上作为后台进程运行，以接收 adb 服务端发来的各种指令。&lt;/li>
&lt;/ul>
&lt;p>adb 命令行工具作为客户端运行时，会先检查是否有服务端在运行，如果没有，则会执行 &lt;code>adb -L tcp:5037 fork-server server --reply-fd 4&lt;/code> 命令以启动 adb 服务端，默认监听在 5037 端口，并接收 adb 客户端发出的命令。&lt;/p>
&lt;p>而 adbd 守护程序，通常是设备上默认自带的进程，但是默认并没有启动，如果想要启用设备上的 adbd，需要开启 &lt;strong>USB 调试&lt;/strong>，该功能通常存在于&lt;strong>开发者选项&lt;/strong>中，参考&lt;a href="https://developer.android.com/studio/debug/dev-options?hl=zh-cn#enable">这里&lt;/a>来启用开发者选项。&lt;/p>
&lt;p>adb 服务端启动后会自动发现 USB 连接的设备、 安卓 Studio 模拟的设备，然后通过 &lt;code>adb devices -l&lt;/code> 可以列出这些设备。&lt;/p>
&lt;h3 id="adb-连接设备">ADB 连接设备&lt;a class="td-heading-self-link" href="#adb-%e8%bf%9e%e6%8e%a5%e8%ae%be%e5%a4%87" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>&lt;a href="https://blog.51cto.com/u_15549234/5139197">https://blog.51cto.com/u_15549234/5139197&lt;/a>&lt;/p>
&lt;p>我们可以通过两种方式让 adb 连接到设备&lt;/p>
&lt;ul>
&lt;li>本地连接&lt;/li>
&lt;li>无线连接&lt;/li>
&lt;/ul>
&lt;p>本利连接一般是通过 USB 连接真实设备或连接本地 安卓 Studio 模拟的设备。打开设备的 USB 调试并插上线，一般电脑都会自动发现设备。&lt;/p>
&lt;p>无线连接则可以通过 Wi-Fi 连接到设备。通常手机的开发者选项中，有一个 &lt;strong>无线调试&lt;/strong> 能力，启用后会让 adbd 监听在某个 IP:PORT 上，然后使用 &lt;code>adb connect IP:PORT&lt;/code> 即可通过网络连接到设备。&lt;/p>
&lt;h3 id="adb-使用">ADB 使用&lt;a class="td-heading-self-link" href="#adb-%e4%bd%bf%e7%94%a8" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>adb 服务端连接到设备之后，就可以使用 adb &lt;font color="#ff0000">客户端向设备发送命令了&lt;/font>。最简单直接的方式是使用 &lt;code>adb shell&lt;/code> 命令打开一个 Shell，这就像使用 &lt;a href="https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/Utility/OpenSSH/OpenSSH.md">OpenSSH&lt;/a> 类似，可以通过一个 Shell 访问 Android 系统。&lt;/p>
&lt;blockquote>
&lt;p>获取 Root 权限的设备（比如通过 Magisk 授予 Shell 超级用户权限）可以通过 &lt;code>su&lt;/code> 命令直接切换到 root 用户。&lt;/p>
&lt;/blockquote>
&lt;h1 id="syntax语法">Syntax(语法)&lt;a class="td-heading-self-link" href="#syntax%e8%af%ad%e6%b3%95" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://android.googlesource.com/platform/packages/modules/adb/+/refs/heads/master/docs/user/adb.1.md">Manual(手册)，adb(1)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;strong>adb [GLOBAL_OPTIONS] command [COMMAND_OPTIONS]&lt;/strong>&lt;/p>
&lt;h2 id="global_options">GLOBAL_OPTIONS&lt;a class="td-heading-self-link" href="#global_options" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>-a&lt;/strong> # 监听所有网络接口，而不仅仅是本地主机&lt;/li>
&lt;li>&lt;strong>-s SERIAL&lt;/strong> # 指定要操作的设备（覆盖 $ANDROID_SERIAL），后续所有子命令都会对该选项指定的 device 进行控制。&lt;/li>
&lt;/ul>
&lt;h1 id="通用命令">通用命令&lt;a class="td-heading-self-link" href="#%e9%80%9a%e7%94%a8%e5%91%bd%e4%bb%a4" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h2 id="devices---列出已连接的设备">devices - 列出已连接的设备&lt;a class="td-heading-self-link" href="#devices---%e5%88%97%e5%87%ba%e5%b7%b2%e8%bf%9e%e6%8e%a5%e7%9a%84%e8%ae%be%e5%a4%87" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;h1 id="网络命令">网络命令&lt;a class="td-heading-self-link" href="#%e7%bd%91%e7%bb%9c%e5%91%bd%e4%bb%a4" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h2 id="connect---通过-tcpip-连接到设备">connect - 通过 TCP/IP 连接到设备&lt;a class="td-heading-self-link" href="#connect---%e9%80%9a%e8%bf%87-tcpip-%e8%bf%9e%e6%8e%a5%e5%88%b0%e8%ae%be%e5%a4%87" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;h2 id="disconnect---断开通过-tcpip-连接的设备">disconnect - 断开通过 TCP/IP 连接的设备&lt;a class="td-heading-self-link" href="#disconnect---%e6%96%ad%e5%bc%80%e9%80%9a%e8%bf%87-tcpip-%e8%bf%9e%e6%8e%a5%e7%9a%84%e8%ae%be%e5%a4%87" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;h3 id="syntax语法-1">Syntax(语法)&lt;a class="td-heading-self-link" href="#syntax%e8%af%ad%e6%b3%95-1" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>disconnect [HOST[:PORT]]&lt;/p>
&lt;h1 id="文件传输命令">文件传输命令&lt;a class="td-heading-self-link" href="#%e6%96%87%e4%bb%b6%e4%bc%a0%e8%be%93%e5%91%bd%e4%bb%a4" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;ul>
&lt;li>push&lt;/li>
&lt;li>pull&lt;/li>
&lt;li>sync&lt;/li>
&lt;/ul>
&lt;h1 id="shell-命令">Shell 命令&lt;a class="td-heading-self-link" href="#shell-%e5%91%bd%e4%bb%a4" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;ul>
&lt;li>shell&lt;/li>
&lt;/ul>
&lt;h1 id="应用安装命令">应用安装命令&lt;a class="td-heading-self-link" href="#%e5%ba%94%e7%94%a8%e5%ae%89%e8%a3%85%e5%91%bd%e4%bb%a4" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;ul>
&lt;li>install # 将单个包推送到设备并安装&lt;/li>
&lt;/ul>
&lt;h1 id="内部调试命令">内部调试命令&lt;a class="td-heading-self-link" href="#%e5%86%85%e9%83%a8%e8%b0%83%e8%af%95%e5%91%bd%e4%bb%a4" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h1 id="最佳实践">最佳实践&lt;a class="td-heading-self-link" href="#%e6%9c%80%e4%bd%b3%e5%ae%9e%e8%b7%b5" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>代理配置&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># 进入 shell&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>adb shell
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># 查看代理&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>settings get global http_proxy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># 设置代理&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>settings put global http_proxy 192.168.254.254:8888
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># 取消代理&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>settings put global http_proxy :0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># 或者注意删除代理信息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>settings delete global http_proxy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>settings delete global global_http_proxy_host
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>settings delete global global_http_proxy_port
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: Android MGMT</title><link>https://desistdaydream.github.io/docs/Mobile-device/Android-MGMT/Android-MGMT/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/Mobile-device/Android-MGMT/Android-MGMT/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h1 id="adb">ADB&lt;a class="td-heading-self-link" href="#adb" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;a href="https://desistdaydream.github.io/docs/Mobile%20device/Android%20MGMT/ADB.md">ADB&lt;/a>&lt;/p>
&lt;h1 id="scrcpy">Scrcpy&lt;a class="td-heading-self-link" href="#scrcpy" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/Genymobile/scrcpy">GitHub 项目，Genymobile/scrcpy&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>Scrcpy 可以显示和控制 Android 设备。&lt;/p>
&lt;p>该应用程序镜像通过 USB 或 TCP/IP 连接的 Android 设备（视频和音频），并允许使用计算机的键盘和鼠标控制设备。它不需要任何根访问权限。它适用于 Linux、Windows 和 macOS。&lt;/p>
&lt;blockquote>
&lt;p>[!Tip]&lt;/p>
&lt;p>使用 Scrcpy 连接运行在 Linux 容器中的 Android 系统，配合 &lt;a href="https://desistdaydream.github.io/docs/12.AI/AI%20Projects/Yolo.md">Yolo&lt;/a>。可以实现在电脑上自动玩手机游戏，比如 &lt;a href="https://www.bilibili.com/video/BV1mihkeTEDc">https://www.bilibili.com/video/BV1mihkeTEDc&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>Android 容器镜像&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://hub.docker.com/r/redroid/redroid">https://hub.docker.com/r/redroid/redroid&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/budtmo/docker-android">https://github.com/budtmo/docker-android&lt;/a> 好像跑不起来？&lt;/li>
&lt;/ul></description></item></channel></rss>