<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Android MGMT on 断念梦的站点</title><link>https://desistdaydream.github.io/docs/Mobile-device/Android-MGMT/</link><description>Recent content in Android MGMT on 断念梦的站点</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/Mobile-device/Android-MGMT/index.xml" rel="self" type="application/rss+xml"/><item><title>ADB</title><link>https://desistdaydream.github.io/docs/Mobile-device/Android-MGMT/ADB/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/Mobile-device/Android-MGMT/ADB/</guid><description>概述 参考：
官方文档，SDK 工具-adb 官方文档-中文 Wiki, Android_Debug_Bridge Android Debug Bridge(安卓调试桥，简称 ADB) 是一种功能多样的命令行工具，可让您与设备进行通信。adb 命令可用于执行各种设备操作，例如安装和调试应用。adb 提供对 Unix shell（可用来在设备上运行各种命令）的访问权限。它是一种 C/S 架构程序，包括以下三个组件：
adb 命令行工具，在开发机器上运行 客户端：用于发送命令。客户端在开发机器上运行。您可以通过发出 adb 命令从命令行终端调用客户端。 服务端：用于管理客户端与守护程序之间的通信。服务端在开发机器上作为后台进程运行。默认监听 5037 端口 adbd 守护程序，在设备上运行。守护程序在每个设备上作为后台进程运行，以接收 adb 服务端发来的各种指令。 adb 命令行工具作为客户端运行时，会先检查是否有服务端在运行，如果没有，则会执行 adb -L tcp:5037 fork-server server --reply-fd 4 命令以启动 adb 服务端，默认监听在 5037 端口，并接收 adb 客户端发出的命令。
而 adbd 守护程序，通常是设备上默认自带的进程，但是默认并没有启动，如果想要启用设备上的 adbd，需要开启 USB 调试，该功能通常存在于开发者选项中，参考这里来启用开发者选项。
adb 服务端启动后会自动发现 USB 连接的设备、 安卓 Studio 模拟的设备，然后通过 adb devices -l 可以列出这些设备。
ADB 连接设备 https://blog.51cto.com/u_15549234/5139197
我们可以通过两种方式让 adb 连接到设备
本地连接 无线连接 本利连接一般是通过 USB 连接真实设备或连接本地 安卓 Studio 模拟的设备。打开设备的 USB 调试并插上线，一般电脑都会自动发现设备。</description></item><item><title>Android MGMT</title><link>https://desistdaydream.github.io/docs/Mobile-device/Android-MGMT/Android-MGMT/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/Mobile-device/Android-MGMT/Android-MGMT/</guid><description>概述 参考：
ADB ADB
Scrcpy 参考:
GitHub 项目，Genymobile/scrcpy Scrcpy 可以显示和控制 Android 设备。
该应用程序镜像通过 USB 或 TCP/IP 连接的 Android 设备（视频和音频），并允许使用计算机的键盘和鼠标控制设备。它不需要任何根访问权限。它适用于 Linux、Windows 和 macOS。
[!Tip]
使用 Scrcpy 连接运行在 Linux 容器中的 Android 系统，配合 YOLO。可以实现在电脑上自动玩手机游戏，比如 https://www.bilibili.com/video/BV1mihkeTEDc
Android 容器镜像
https://hub.docker.com/r/redroid/redroid https://github.com/budtmo/docker-android 好像跑不起来？</description></item></channel></rss>