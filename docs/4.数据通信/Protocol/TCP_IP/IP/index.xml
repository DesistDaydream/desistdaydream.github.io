<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>IP on 断念梦的站点</title><link>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/Protocol/TCP_IP/IP/</link><description>Recent content in IP on 断念梦的站点</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/Protocol/TCP_IP/IP/index.xml" rel="self" type="application/rss+xml"/><item><title>IP</title><link>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/Protocol/TCP_IP/IP/IP/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/Protocol/TCP_IP/IP/IP/</guid><description>概述 参考：
RFC 791， INTERNET PROTOCOL PROTOCOL SPECIFICATION Wiki, Internet Protocol Wiki, IPv4 Wiki, Mask(掩码) Wiki, Classful Network(分类网络) IANA,IPv4 地址空间分配情况 APNIC(管理亚太地区的 IP 地址注册机构) APNIC,帮助-FTP 数据库(亚太地区所有分配的 IP 地址信息) IANA,IPv4 特殊用途地址注册表 Internet Protocol(互联网协议，简称 IP) 是互联网协议套件(其中包含 TCP/IP)中的主要通信协议，用于跨网络边界中继数据报。它的路由功能可实现互联网络，并实质上建立了 Internet。
Internet protocol suite(互联网协议套件) 是互联网和类似计算机网络中使用的概念模型和通信协议集。由于该套件中的基本协议是 TCP(传输控制协议) 和 IP(互联网协议)，因此通常被称为 TCP/IP。在其开发过程中，其版本被称为国防部（DoD）模型，因为联网方法的开发是由美国国防部通过 DARPA 资助的。它的实现是一个协议栈。
IP 基于数据包的 Header 中的 IP 地址，将数据包从源主机发送到目标主机。基于此目的，IP 还定义了数据包的封装结构、以及一种寻址方法。寻址方法用来使用源和目标的信息标记数据报。
从历史上看，IP 是在 1974 年由 Vint Cerf 和 Bob Kahn 引入的原始 Transmission Control Program(传输控制程序) 中的无连接数据报服务。该服务由一项面向连接的服务补充，成为 Transmission Control Protocol(传输控制协议，简称 TCP) 的基础。因此 IP 套件通常称为 TCP/IP。IP 的第一个版本是 IPv4，继任者是 IPv6</description></item><item><title>GeoIP</title><link>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/Protocol/TCP_IP/IP/GeoIP/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/Protocol/TCP_IP/IP/GeoIP/</guid><description>概述 参考：
Wiki, GeoIP 重定向到 Internet geolocation 在 IT 中，Internet geolocation(互联网地理定位，简称 GeoIP) 是能够推断连接到互联网的设备的地理位置的软件。例如，设备的 IP 地址可用于确定国家、城市或邮政编码，从而确定其地理位置。其他方法包括检查 Wi-Fi 热点、
IP 地址分配机制 参考：
IANA, 号码资源 APNIC, 搜索(通过给定的 IP 地址搜索谁拥有这个 IP) 面包板，你知道中国大陆一共有多少 IPv4 地址吗？ 公众号，k8s 中文社区-居然还有 2 亿多 IPv4 地址未分配 IPv4 和 IPv6 地址通常以分层方式分配。ISP(互联网服务提供商) 为用户分配 IP 地址。ISP 从 LIR(本地互联网注册机构) 或 NIR(国家互联网注册机构) 或 RIR(相应的区域互联网注册机构) 获取 IP 地址分配
登记处 覆盖面积 AFRINIC Africa Region(非洲地区) APNIC Asia/Pacific Region(亚洲/太平洋地区，亚太地区) ARIN Canada, USA, and some Caribbean Islands(加拿大、美国、一些加勒比岛屿) LACNIC Latin America and some Caribbean Islands(拉丁美洲、一些加勒比岛屿) RIPE NCC Europe, the Middle East, and Central Asia(欧洲、中东、中亚) 对 IP 地址的主要作用是根据全球政策所述的需求将未分配地址池分配给 RIR，并记录 IETF 所做的协议分配。当 RIR 需要在其区域内分配或分配更多 IP 地址时，我们会向 RIR 进行额外分配。我们不会直接向 ISP 或最终用户进行分配，除非在特定情况下，例如分配多播地址或其他协议特定需求。</description></item><item><title>IP Header</title><link>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/Protocol/TCP_IP/IP/IP-Header/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/Protocol/TCP_IP/IP/IP-Header/</guid><description>概述 参考：
RFC 791，3.1.Internet Header Format IPv4 数据报被封装在链路层的 Frame 中
IPv4 数据报首部共 14 个字段，其中 13 个是必须的，第 14 个是可选的。前 13 个字段长度固定为 20 Bytes，即 160 bit；第 14 个字段长度在 0 ~ 40 Bytes 之间。
对照 WireShark 中展示的内容看，排除 [] 中的内容，每一行就是首部中的一个字段
Version(版本) # IP 协议的版本号。IPv4 其版本号为 4，因此在这个字段上的值为“6”。 Internet Header Length(首部长度，简称 IHL) # 由于 Options 字段的长度是可变的。所以 IPv4 的首部长度也是可变的。该字段的值在 5 ~ 15 之间(该字段只有 4 bits，1111 即为 15) 首部长度的计算方式如下：IHL * 32 bits。 若 IHL 的值为 5，也就是说 Options 字段为 0，那么 IPv4 首部长度就是 5 * 32 bits = 160 bits = 20 Bytes 就像上面的 IPv4 的 Datagram 结构图一样，每行都是 32 bit，不算 Options 字段和 Payload，那么刚好是 5 行。 Differentiated Services Field # 差异化的服务字段，基本没啥用。。。。o(╯□╰)o Differentiated Services Code Point # 最初定义为 Type Of Service(服务类型，简称 TOS)， Explicit Congestion Notification # 该字段定义在 RFC3168 中， Total Length # 定义了整个 IP 数据报的大小，最小为 20 字节(Payload 字段无内容)，最大为 65535 字节。 Identification# 主要用于唯一标识单个 IP 数据报的片段组。 一些实验工作建议将 ID 字段用于其他目的，例如添加数据包跟踪信息以帮助跟踪具有欺骗源地址的数据报，[31] 但 RFC 6864 现在禁止任何此类使用。 Flags # 用来控制或识别 IP 分片之后的每个片段，这 3 个 bit 分别表示不同的含义，若字段值为 0 表示未设置，值为 1 表示设置，类似 TCP 首部中 Flags 字段的用法。 第一个 # Reserved，保留字段，必须为 0 第二个 # Don&amp;rsquo;t Fragment(DF) 第三个 # More Fragment(MF) Fragment Offset(分片偏移) # IP 分片之后的偏移量 Time To Live(存活时间，简称 TTL) # 其实用 Hop Limit 的描述更准确，封包每经过一个路由器，就会将 TTL 字段的值减 1，减到 0 是，该包将会被丢弃。 Protocol# 封装 IP 数据报的上层协议，比如 6 表示 TCP、1 表示 ICMP 每种协议根据 RFC 1700 都分配了一个固定的编号，该 RFC 1700 最终被 RFC 3232 废弃，并将协议编号的维护工作，转到IANA 的在线数据库中 Header Checksum # 当数据包到达路由器时，路由器会计算标头的校验和，并将其与校验和字段进行比较。如果值不匹配，则路由器会丢弃该数据包。 Source Address(源地址) # 发送端 IP 地址。 Destination Address(目标地址) # 接收端 IP 地址。 Options(选项) # 可变长度，0-40 Bytes。 TTL Time To Live(存活时间，简称 TTL)。这个生存时间是由源主机设置（IP 头里有一个 TTL 域）初始值但不是存的具体时间，而是存储了一个 IP 数据报可以经过最大路由数，每经过一个处理它的路由器此值就减 1，当此值为 0 则数据报将被丢弃，同时发送 ICMP 报文通知源主机。</description></item><item><title>IPv6</title><link>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/Protocol/TCP_IP/IP/IPv6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/Protocol/TCP_IP/IP/IPv6/</guid><description>概述 参考：
Wiki, IPv6 RFC,8200 IANA,IPv6 地址空间分配情况 GitHub 项目，IPv6-CN/ipv6cn.github.io(这个资料。。。怎么说呢。。。) https://www.bilibili.com/video/BV1J7411c7ae https://www.bilibili.com/video/BV1aF411v7hU https://www.zhihu.com/question/361275417 https://cloud.tencent.com/developer/article/1468099 Internet Protocol version 6(互联网协议版本 6，简称 IPv6) 是 Internet Protocol(互联网协议，简称 IP) 的最新版本(截止 2022 年 1 月 28 日)，该协议为网络上的计算机提供识别和定位系统并通过 Internet 路由流量。IPv6 由 Internet Engineering Task Force(互联网工程任务组，简称 IETF) 开发，旨在解决 IPv4 地址耗尽的问题。1998 年 12 月，IPv6 成为 IETF 的标准草案，2017 年 7 月 14 日将其批准为互联网标准。 困扰 1. IPv4 和 IPv6 只有地址格式不同吗 除了地址格式不同，IPv4 与 IPv6 协议栈也不同，他们在逻辑上是完全不同的 2 个世界 以下实践中经常会遇到的 4 个不同之处： ▷ 基本通讯过程：ND 替代 ARP、多播替代广播、fe80 地址成为标配、ICMP 成为通讯核心 ▷ IP 配置方式：客户端以无状态自动配置 IP 成为主流，弱化 DHCP ▷ DNS域名解析：AAAA 记录替代 IPv4 的 A 记录、对应用存在优先级问题（优先解析 AAAA 还是 A） ▷ 应用层适应性：socket 编程中 AF_INET 仅支持 IPv4，AF_INET6 仅支持 IPv6</description></item></channel></rss>