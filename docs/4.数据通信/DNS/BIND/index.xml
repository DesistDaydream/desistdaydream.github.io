<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦 – BIND</title><link>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/DNS/BIND/</link><description>Recent content in BIND on 断念梦</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/DNS/BIND/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: BIND</title><link>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/DNS/BIND/BIND/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/DNS/BIND/BIND/</guid><description>
&lt;h1 id="概述">概述&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.isc.org/bind/">ISC-BIND9 官方网站&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/BIND">Wiki,BIND&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;strong>Bekerley Internat Name Domain(伯克利互联网名字域，简称 BIND)&lt;/strong> 是实现 DNS 服务的应用程序。该程序最著名的组件被称为 &lt;strong>named&lt;/strong>，主要用来实现两个最主要的 DNS 功能：&lt;strong>NameServer(名称服务器)&lt;/strong> 与 &lt;strong>Resolver(解析器)&lt;/strong>。&lt;/p>
&lt;p>该软件最初是在 1980 年代初在加州大学伯克利分校 (UCB) 设计的。该名称起源于 Berkeley Internet Name Domain 的首字母缩写词，反映了该应用程序在 UCB 中的使用。最新版本是 BIND 9，于 2000 年首次发布，仍然由 Internet Systems Consortium (ISC) 积极维护，每年发布数次新版本。&lt;/p>
&lt;p>BIND9 已进化为一个非常灵活，全功能的 DNS 系统。无论您的应用程序是什么，绑定 9 可能具有所需的功能。作为第一个，最旧，最常见的解决方案，还有更多网络工程师已经熟悉绑定 9，而不是与任何其他系统。&lt;/p>
&lt;h1 id="bind-部署">BIND 部署&lt;/h1>
&lt;p>dns 服务，包名 bind，程序名 named&lt;/p>
&lt;p>基础程序包：bind 提供服务，bing-libs 提供库文件，bind-utils 提供测试程序&lt;/p>
&lt;p>rndc:remote name domain controller,默认与 bind 安装在同一主机，且只能通过 127.0.1 来连接 named 进程，提供辅助性的管理功能，使用 tcp 的 953 端口&lt;/p>
&lt;p>配置文件：&lt;/p>
&lt;ul>
&lt;li>/etc/named.conf&lt;/li>
&lt;li>/etc/named.rfc1912.zomes # 该文件的引用，定义在 named.conf 的最后几行&lt;/li>
&lt;li>/etc/rndc.key&lt;/li>
&lt;/ul>
&lt;p>解析库文件：/var/named/ZONE_NAME.ZONE,有以下注意事项&lt;/p>
&lt;ul>
&lt;li>一台物理服务器可以同时为多个区域提供解析&lt;/li>
&lt;li>必须要有根区域文件 named.ca&lt;/li>
&lt;li>应该有两个实现 localhost 和本地回环地址的解析库&lt;/li>
&lt;/ul>
&lt;p>/etc/named.conf # 配置文件 keywords 说明&lt;/p>
&lt;ol>
&lt;li>options{ # 用于全局 BIND 配置，BIND 的工作目录在 /var/named&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>listen-on port NUM { IP1; IP2; }; # 设置 DNS 服务监听的端口号 NUM 和监听该端口的 IP 地址&lt;/li>
&lt;li>allow-query { any; }; # 设置任何人都可以来这台服务器解析&lt;/li>
&lt;li>forward { first|only }； # 转发服务器配置，加了此项则定义先进行域名解析请求转发,转发不了再去迭代查询,可用 first 或者 only 模式&lt;/li>
&lt;li>forwarders { IP； } # 转发服务器配置，转发的 IP 地址&lt;/li>
&lt;li>}；&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>loggin{} # 配置哪些需要记录，哪些需要忽略&lt;/li>
&lt;li>zone &amp;ldquo;ZONE_NAME&amp;rdquo; IN { # 定义 DNS 区域。本机能够为哪些 zone(区域)进行解析，就要定义哪些 zone，比如域名 google.com，它包含子域名 mail.google.com 和 analytics.google.com 等。这几个域名都有一个由 zone 语句定义的区域，该定义可以直接写在.zone 的解析库文件里&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>type ; # 定义该服务器是什么职责，包括主，辅助，根，转发这四种&lt;/li>
&lt;li>file ”ZONE_NAME.zone“； # 区域解析库文件，默认在该文件在/var/named 目录下，所以该位置直接写文件名即可&lt;/li>
&lt;li>};&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>include # 在 named.conf 中包含另一个文件。比如 named.rfc1912.zomes 该文件包含其余定义的 zone 信息&lt;/li>
&lt;/ol>
&lt;p>/var/named/ZONE_NAME.zone # 解析库文件说明&lt;/p>
&lt;p>EXAMPLE&lt;/p>
&lt;ul>
&lt;li>$TTL 86400 # 该条目告诉 BIND 每个单独记录的 TTL 值（time to live，生存时间值）。它是以秒为单位的数值，比如 14,400 秒（4 个小时），因此 DNS 服务器最多缓存你的域文件 4 个小时，之后就会向你的 DNS 服务器重新查询。&lt;/li>
&lt;li>$ORIGIN baidu.com. # 定义该项后，资源格式里可以省略后面的根域名，顶级域名，所有写的域名自带该变量定义的域名&lt;/li>
&lt;li>@ IN SOA ns1.baidu.com. admin.baidu.com (&lt;/li>
&lt;li>2015042201&lt;/li>
&lt;li>1H&lt;/li>
&lt;li>5M&lt;/li>
&lt;li>7D&lt;/li>
&lt;li>1D )&lt;/li>
&lt;li>
&lt;pre>&lt;code> IN NS ns1.baidu.com
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;pre>&lt;code> IN NS ns2.baidu.com
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>ns1 IN A 1.1.1.1&lt;/li>
&lt;li>ns2 IN A 1.1.1.2&lt;/li>
&lt;li>www IN A 1.1.1.3&lt;/li>
&lt;li>IN A 1.1.1.4&lt;/li>
&lt;li>IN MX 10 mx1.baidu.com&lt;/li>
&lt;li>IN MX 20 mx2.baidu.com&lt;/li>
&lt;li>4.3.2.1in-addr.arpa. IN PTR &lt;a href="https://www.baidu.com">www.baidu.com&lt;/a>&lt;/li>
&lt;li>web IN CNAME &lt;a href="https://www.baidu.com">www.baidu.com&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>主从复制机制：&lt;/p>
&lt;ol>
&lt;li>应该为一台独立的名称服务器&lt;/li>
&lt;li>主服务器的区域解析库文件中必须有一条 NS 记录是指向从服务器&lt;/li>
&lt;li>从服务器只需定义区域，而无需提供解析库文件，解析库问文件应该放置于/var/named/slaves/目录中&lt;/li>
&lt;li>主服务器得允许从服务器作区域传送&lt;/li>
&lt;li>主从服务器时间应该同步，可通过 NTP 进行&lt;/li>
&lt;li>bind 程序的版本应该保持一致，如果无法一致，至少应该从高主低&lt;/li>
&lt;/ol>
&lt;p>日志文件说明&lt;/p>
&lt;p>当您写入域文件时，也许您忘记了一个句号或空格或其他任意错误。&lt;/p>
&lt;p>你可以从日志诊断 Linux DNS 服务器错误。BIND 服务通过/var/log/messages 上的错误，可以使用 tail 命令来查看实时错误日志，须使用-f 选项：$ tail -f /var /log/messages。&lt;/p>
&lt;p>因此，当你编写域文件或修改/etc/named.config 并重新启动服务时，显示错误之后，你可以从日志中轻松识别错误类型。&lt;/p>
&lt;p>定义一个主域服务器&lt;/p>
&lt;p>我们知道 DNS 服务器类型有主域名服务器、辅助域名服务器和缓存域名服务器。不同于缓存域名服务器，主域名服务器和辅助域名服务器在应答过程中是处于同等地位的。&lt;/p>
&lt;p>在 /etc/named.conf 的配置文件中，你可以使用如下语法定义一个主域服务器：&lt;/p>
&lt;p>包含主要区域信息的文件存放在 /var/named 目录下，从 options 可知，这是一个工作目录。&lt;/p>
&lt;p>注意：软件服务器或者托管面板会根据你的域名自动为你创建主域服务器信息的文件名，因此如果你的域名是 example.org，那么你主域服务器信息的文件就为 /var/named/example.org.db。&lt;/p>
&lt;p>类型为 master，也就是说这是一个主域服务器。&lt;/p>
&lt;p>定义一个辅助域服务器&lt;/p>
&lt;p>同定义一个主域服务器一样，辅助域服务器的定义稍微有些变化&lt;/p>
&lt;p>zone &amp;ldquo;ZONE_NAME&amp;rdquo; IN {&lt;/p>
&lt;p>type slave;&lt;/p>
&lt;p>masters I{ MASTER-IP; } ;&lt;/p>
&lt;p>file “slaves/ZONE_NAME.zone”;&lt;/p>
&lt;p>};&lt;/p>
&lt;p>对于辅助域服务器来说，它的域名和主域服务器是一样的。上述语法里的的 slave 类型表示这是一个辅助域服务器，“masters IP Address list”表示辅助域服务器中区域文件内的信息都是通过主域服务器中区域文件内的信息复制过来的。&lt;/p>
&lt;p>定义一个缓存服务器&lt;/p>
&lt;p>即使你已经配置了主域或者辅助域服务器，你仍有必要（不是必须）定义一个缓存服务器，因为这样你可以减少 DNS 服务器的查询次数。&lt;/p>
&lt;p>在定义缓存服务器之前，你需要先定义三个区域选择器，第一个：&lt;/p>
&lt;p>zone &amp;ldquo;.&amp;rdquo; IN {&lt;/p>
&lt;p>type hint;&lt;/p>
&lt;p>file &amp;ldquo;root.hint&amp;rdquo;;&lt;/p>
&lt;p>};&lt;/p>
&lt;p>zone &amp;ldquo;.&amp;rdquo; IN {&lt;/p>
&lt;p>type hint;&lt;/p>
&lt;p>file &amp;ldquo;root.hint&amp;rdquo;;&lt;/p>
&lt;p>};&lt;/p>
&lt;p>zone &amp;ldquo;.&amp;rdquo; IN {&lt;/p>
&lt;p>type hint;&lt;/p>
&lt;p>file &amp;ldquo;root.hint&amp;rdquo;;&lt;/p>
&lt;p>};&lt;/p>
&lt;p>zone &amp;ldquo;localhost&amp;rdquo; IN {&lt;/p>
&lt;p>type master;&lt;/p>
&lt;p>file &amp;ldquo;localhost.db&amp;rdquo;;&lt;/p>
&lt;p>};&lt;/p>
&lt;p>定义第三个区域是为了反向查找到本地主机。这种反向查找是把本地的 IP 地址执向本地主机。&lt;/p>
&lt;p>zone &amp;ldquo;0.0.127.in-addr.arpa&amp;rdquo; IN {&lt;/p>
&lt;p>type master;&lt;/p>
&lt;p>file &amp;ldquo;127.0.0.rev&amp;rdquo;;&lt;/p>
&lt;p>};&lt;/p>
&lt;p>把这三个区域信息放到/etc/named.conf 文件里，你的系统就可以以缓存服务器来工作了。&lt;/p>
&lt;p>TXT 记录&lt;/p>
&lt;p>您可以将任何信息存储到 TXT 记录中，例如你的联系方式或者你希望人们在查询 DNS 服务器时可获得的任意其他信息。&lt;/p>
&lt;p>你可以这样保存 TXT 记录：example.com. IN TXT ” YOUR INFO GOES HERE”.&lt;/p>
&lt;p>此外，RP 记录被创建为对 host 联系信息的显式容器：example.com. IN RP mail.example.com. example.com。&lt;/p>
&lt;p>Linux DNS 解析器&lt;/p>
&lt;p>我们已经知道 Linux DNS 服务器的工作原理以及如何配置它。另一部分当然是与 DNS 服务器交互的（正在与 DNS 服务器通信以将主机名解析为 IP 地址的）客户端。&lt;/p>
&lt;p>在 Linux 上，解析器位于 DNS 的客户端。要配置解析器，可以检查/etc/resolv.conf 这个配置文件。&lt;/p>
&lt;p>在基于 Debian 的发行版上，可以查看/etc/resolvconf/resolv.conf.d/目录。&lt;/p>
&lt;p>/etc/resolv.conf 文件中包含客户端用于获取其本地 DNS 服务器地址所需的信息。&lt;/p>
&lt;p>第一个表示默认搜索域，第二个表示主机名称服务器(nameserver)的 IP 地址。&lt;/p>
&lt;p>名称服务器行告诉解析器哪个名称服务器可使用。 只要你的 BIND 服务正在运行，你就可以使用自己的 DNS 服务器。&lt;/p>
&lt;h2 id="bind-的基础安全相关配置">BIND 的基础安全相关配置&lt;/h2>
&lt;p>acl：把一个或多个地址归位一个集合，并通过一个统一的名册很难过调用，这些配置放在 named.conf 配置文件中&lt;/p>
&lt;ul>
&lt;li>acl ACL-NAME {&lt;/li>
&lt;li>IP；&lt;/li>
&lt;li>IP;&lt;/li>
&lt;li>net/perlen;&lt;/li>
&lt;li>};&lt;/li>
&lt;/ul>
&lt;p>bind 有 4 个内置的 acl&lt;/p>
&lt;ol>
&lt;li>none:没有一个主机&lt;/li>
&lt;li>any：任意主机&lt;/li>
&lt;li>local：本机&lt;/li>
&lt;li>localnet：本机的 IP 同掩码运算后得到的网络地址&lt;/li>
&lt;/ol>
&lt;p>注意：只能先定义后使用，因此，一般定义在配置文件中 options 的前面&lt;/p>
&lt;p>访问控制的指令&lt;/p>
&lt;p>allow-query {} 允许查询的主机，白名单&lt;/p>
&lt;p>allow-transfer {} 允许区域传送的主机，白名单&lt;/p>
&lt;p>allow-recursion {} 允许递归的主机，白名单&lt;/p>
&lt;p>allow-update {} 允许更新区域数据库中的内容&lt;/p>
&lt;p>BIND VIEW：用于同一个域名解析成多个不同区域的 IP&lt;/p></description></item><item><title>Docs: 命令行工具</title><link>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/DNS/BIND/%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/DNS/BIND/%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/</guid><description>
&lt;p>注意： dig、nslookup 工具无法获取 /etc/hosts 文件内的信息。&lt;/p>
&lt;h1 id="dig-工具">dig 工具&lt;/h1>
&lt;p>dig [OPTIONS] NAME [@Server] [Query Options] # 用于测试 DNS 系统，因此不会查询 hosts 文件进行解析&lt;/p>
&lt;p>OPTIONS&lt;/p>
&lt;ul>
&lt;li>-t # 选择解析的资源类型&lt;/li>
&lt;li>-x # 通过 ip 查找域名&lt;/li>
&lt;/ul>
&lt;p>Query Options:&lt;/p>
&lt;ul>
&lt;li>+trace # 跟踪解析过程，在屏幕上显示解析的全部过程，包括去找哪台服务，重定向到哪台服务器等&lt;/li>
&lt;/ul>
&lt;p>EXAMPLE&lt;/p>
&lt;ul>
&lt;li>dig -t A baidu.com @192.168.0.1 # 用 192.168.0.1 这台机器解析 baidu.com 的 A 类型的域名&lt;/li>
&lt;/ul>
&lt;h1 id="nslookup-工具">nslookup 工具&lt;/h1>
&lt;p>nslookup [OPTIONS] [NAME| -] [SERVER] # 可以查看默认的 DNS 服务器地址，和查看该服务器解析到的域名的 IP 地址&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/mvbgvg/1616161003108-c44e1fb0-800d-4b5d-a492-24a3d8a4b1a1.jpeg" alt="">&lt;/p>
&lt;p>交互式命令：&lt;/p>
&lt;ul>
&lt;li>server IP # 指明使用哪个 DNS Server 进行查询&lt;/li>
&lt;li>q=RR-TYPE # 指明要解析的资源记录类型&lt;/li>
&lt;li>NAME # 要查询的域名&lt;/li>
&lt;/ul>
&lt;p>OPTIONS&lt;/p>
&lt;ul>
&lt;li>-t #&lt;/li>
&lt;li>-debug # 使用 debug 模式，追踪命令执行情况&lt;/li>
&lt;/ul>
&lt;h1 id="host-工具">host 工具&lt;/h1>
&lt;p>&lt;strong>host [OPTIONS]&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>OPTIONS
&lt;ul>
&lt;li>-t&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>rndc COMMAND&lt;/p>
&lt;ol>
&lt;li>COMMAND 包括的命令
&lt;ol>
&lt;li>reload 重载主配置文件和区域解析库文件&lt;/li>
&lt;li>reload zone&lt;/li>
&lt;li>retransfer zone 手动启动区域传送，而不用管序列号是否增加&lt;/li>
&lt;li>notify zone 重新对欲取传送发送通知&lt;/li>
&lt;li>reconfig 重载主配置文件&lt;/li>
&lt;li>querylog 开启或者关闭查询日志&lt;/li>
&lt;li>trace 递增 debug 级别&lt;/li>
&lt;li>trace LEVEL 指定使用的 debug 级别&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;p>named-checkconf # 检查配置文件有没有语法错误&lt;/p>
&lt;p>named-checkconf # 检查解析库文件有没有语法错误&lt;/p></description></item></channel></rss>