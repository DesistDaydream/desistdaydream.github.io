<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦的站点 – Utility</title><link>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/Utility/</link><description>Recent content in Utility on 断念梦的站点</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/Utility/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: hping</title><link>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/Utility/hping/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/Utility/hping/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/antirez/hping">GitHub 项目，antirez/hping&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://www.kali.org/tools/hping3/">https://www.kali.org/tools/hping3/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://salsa.debian.org/debian/hping3">https://salsa.debian.org/debian/hping3&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Hping">Wiki, Hping&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>原始 GitHub 项目截至 2024-04-18 已经有 10 年没更新了。&lt;/p>
&lt;p>hping 不支持 IPv6&lt;/p>
&lt;p>&lt;a href="https://github.com/TeddyGuo/tping">https://github.com/TeddyGuo/tping&lt;/a> 像 hping，但支持 IPv6，Python 编写&lt;/p>
&lt;p>&lt;a href="https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/Utility/nping.md">nping&lt;/a> 由 Nmap&lt;/p>
&lt;p>hping 是由 Salvatore Sanfilippo（也称为 Antirez）创建的 TCP/IP 协议的开源数据包生成器和分析器。它是用于防火墙和网络安全审计和测试的常用工具之一，用于利用空闲扫描扫描技术（也是由 hping 作者发明的），现在在 Nmap Security Scanner 中实现。新版本的 hping，hping3，可以使用 Tcl 语言编写脚本，并实现一个基于字符串的、人类可读的 TCP/IP 数据包描述引擎，以便程序员可以编写与低级 TCP/IP 数据包操作和分析相关的脚本。很短的时间。&lt;/p>
&lt;h1 id="syntax语法">Syntax(语法)&lt;a class="td-heading-self-link" href="#syntax%e8%af%ad%e6%b3%95" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h1 id="example">EXAMPLE&lt;a class="td-heading-self-link" href="#example" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;a href="https://www.cnblogs.com/Higgerw/p/16469371.html">https://www.cnblogs.com/Higgerw/p/16469371.html&lt;/a>&lt;/p>
&lt;p>通过 eth1，发送 SYN 报文到 172.24.194.179 的 80 端口。源地址伪造为 192.168.180.131，时间间隔 1000us&lt;/p>
&lt;ul>
&lt;li>&lt;code>hping3 -I eth0 -S 172.24.194.179 -p 80 -a 192.168.180.131 -i u1000&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>通过 eth1, 发送 SYN 报文到 192.168.180.133:80, 使用随机源地址, 时间间隔 1000us&lt;/p>
&lt;ul>
&lt;li>&lt;code>hping3 -I eth1 -S 192.168.180.133 -p 80 --rand-source -i u1000&lt;/code>&lt;/li>
&lt;/ul></description></item><item><title>Docs: Netcat</title><link>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/Utility/Netcat/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/Utility/Netcat/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Netcat">Wike，Netcat&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://nmap.org/book/ncat-man.html">Ncat Manual(手册)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/83959309">https://zhuanlan.zhihu.com/p/83959309&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>Netcat 是一个简单的实用程序通过 TCP 或 UDP 网络连接读取和写入数据。它旨在成为一个可靠的后端工具，可直接使用或轻松由其他程序和脚本驱动。同时，它还是一个功能丰富的网络调试和探索工具，因为它几乎可以创建您需要的任何类型的连接，包括端口绑定以接受传入连接。&lt;/p>
&lt;p>由于 Netcat 的设计理念和功能，被人亲切的亲切得称为 &lt;strong>网络工具中的瑞士军刀&lt;/strong>&lt;/p>
&lt;p>最初的 Netcat 是由 hobbit 于 1995 年&lt;a href="http://seclists.org/bugtraq/1995/Oct/0028.html">发布&lt;/a>的，尽管它很受欢迎，但它并没有得到维护。有时甚至很难找到&lt;a href="http://download.insecure.org/stf/nc110.tgz">v1.10 源代码的副本&lt;/a>。该工具的灵活性和实用性促使 Nmap 项目产生 &lt;a href="#Ncat">Ncat&lt;/a>)，这是一种支持 SSL、IPv6、SOCKS 和 http 代理、连接代理等的现代重新实现。除了 Nmap 项目重新了 Netcat，还有很多重写甚至扩展了 Netcat 的工具&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://sectools.org/tool/socat/">Socat&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.openbsd.org/cgi-bin/cvsweb/src/usr.bin/nc/">OpenBSD 的 Netcat&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://cryptcat.sourceforge.net/">Cryptcat&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.deepspace6.net/projects/netcat6.html">Netcat6&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://stromberg.dnsalias.org/~strombrg/pnetcat.html">pnetcat&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://cycom.se/dl/sbd">SBD&lt;/a>&lt;/li>
&lt;li>所谓的&lt;a href="http://netcat.sourceforge.net/">GNU Netcat&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>如需下载和更多信息， &lt;a href="http://en.wikipedia.org/wiki/Netcat">访问 Netcat 主页&lt;/a>。&lt;/p>
&lt;h2 id="ncat">Ncat&lt;a class="td-heading-self-link" href="#ncat" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://nmap.org/ncat/">Nmap，ncat&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>Ncat 是一个功能丰富的网络实用程序，它可以从命令行跨网络读取和写入数据。Ncat 由 Nmap 项目编写的，是对古老的 &lt;a href="http://sectools.org/tool/netcat/">Netcat&lt;/a> 的大大改进的重新实现。它同时使用 TCP 和 UDP 进行通信，并被设计为一种可靠的后端工具，可立即为其他应用程序和用户提供网络连接。Ncat 不仅适用于 IPv4 和 IPv6，还为用户提供了几乎无限的潜在用途。&lt;/p>
&lt;p>在 Ncat 的众多功能中，包括将 Ncat 链接在一起、将 TCP 和 UDP 端口重定向到其他站点、SSL 支持以及通过 SOCKS4 或 HTTP（CONNECT 方法）代理（以及可选的代理身份验证）进行代理连接的能力。一些通用原则适用于大多数应用程序，从而使您能够立即向通常不支持它的软件添加网络支持。&lt;/p>
&lt;p>Ncat 与 Nmap 集成，可在 Nmap 下载页面提供的标准 Nmap 下载包（包括源代码和 Linux、Windows 和 Mac 二进制文件）中找到。。也可以再 &lt;a href="http://nmap.org/book/install.html#inst-svn">SVN 源代码存储库中&lt;/a>找到它。&lt;/p>
&lt;p>许多用户要求提供一个静态编译的 ncat.exe 版本，他们可以将其放在 Windows 系统上并使用，而无需运行任何安装程序或复制额外的库文件。我们已经构建了一个静态编译的 Windows 二进制版本。可以在&lt;a href="http://nmap.org/dist/ncat-portable-5.59BETA1.zip">此处&lt;/a>下载 zip 文件。为确保文件未被篡改，可以检查&lt;a href="http://nmap.org/book/install.html#inst-integrity">加密签名&lt;/a>。如果您需要更新的 Ncat 版本的便携版本，请参阅 &lt;a href="https://secwiki.org/w/Nmap/Ncat_Portable">Ncat 便携编译说明&lt;/a>。&lt;/p>
&lt;p>该 &lt;a href="https://nmap.org/ncat/guide/index.html">NCAT 用户指南&lt;/a>包含完整的文档，包括很多技巧，窍门和实用现实生活的例子！还有一个&lt;a href="https://nmap.org/book/ncat-man.html">Ncat 手册页&lt;/a>用于快速使用摘要。&lt;/p>
&lt;h2 id="openbsd-netcat">OpenBSD Netcat&lt;a class="td-heading-self-link" href="#openbsd-netcat" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://man.openbsd.org/nc">OpenBSD-nc Manual(手册)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>由 OpenBSD 对原始 Netcat 的更新支持&lt;/p>
&lt;h1 id="netcat-安装">Netcat 安装&lt;a class="td-heading-self-link" href="#netcat-%e5%ae%89%e8%a3%85" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h2 id="ubuntu">Ubuntu&lt;a class="td-heading-self-link" href="#ubuntu" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>Ubuntu 使用 OpenBSD 的 Netcat 作为 Netcat 的替代品&lt;/p>
&lt;p>安装 netcat-openbsd 包即可，安装完成后，nc 命令本质上是 nc.openbsd 命令的软链接&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span> ~&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># ll /usr/bin/nc&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lrwxrwxrwx &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> root root &lt;span style="color:#0000cf;font-weight:bold">20&lt;/span> Aug &lt;span style="color:#0000cf;font-weight:bold">10&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2023&lt;/span> /usr/bin/nc -&amp;gt; /etc/alternatives/nc*
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># ll /etc/alternatives/nc&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lrwxrwxrwx &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> root root &lt;span style="color:#0000cf;font-weight:bold">15&lt;/span> Aug &lt;span style="color:#0000cf;font-weight:bold">10&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2023&lt;/span> /etc/alternatives/nc -&amp;gt; /bin/nc.openbsd*
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="centos">CentOS&lt;a class="td-heading-self-link" href="#centos" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>CentOS 使用 Nmap 的 Ncat 作为 Netcat 的替代品&lt;/p>
&lt;p>安装 nmap-ncat 包即可，安装完成后，nc 命令本质上是 ncat 命令的软链接&lt;/p>
&lt;h1 id="syntax语法">Syntax(语法)&lt;a class="td-heading-self-link" href="#syntax%e8%af%ad%e6%b3%95" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;strong>nc [&amp;lt;OPTIONS&amp;gt; &amp;hellip;] [ &amp;lt;hostname&amp;gt; ] [ &amp;lt;port&amp;gt; ]&lt;/strong>&lt;/p>
&lt;h2 id="options">OPTIONS&lt;a class="td-heading-self-link" href="#options" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>-k, &amp;ndash;keep-open&lt;/strong> # 通常与 -l 选项配合使用。在监听模式下接受多个连接。若不使用 -k 选项，则第一个连接断开后，监听也就结束了。&lt;/li>
&lt;li>&lt;strong>-l, &amp;ndash;listen &amp;lt;PORT&amp;gt;&lt;/strong> # 让程序监听指定的端口&lt;/li>
&lt;li>&lt;strong>-u, &amp;ndash;udp&lt;/strong> # 使用 UDP，而不是默认的 TCP&lt;/li>
&lt;/ul>
&lt;p>Ncat 与 OpenBSD-nc 这两个程序的选项有不同的地方&lt;/p>
&lt;h3 id="ncat-options">Ncat OPTIONS&lt;a class="td-heading-self-link" href="#ncat-options" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>&amp;ndash;proxy &lt;a href="ADDRESS:%5C%5BPORT%5D">ADDRESS:\[PORT]&lt;/a>&lt;/strong> # 连接目的地时所使用代理 IP 和 PORT。&lt;/li>
&lt;li>&lt;strong>&amp;ndash;proxy-type &amp;lt;STRING&amp;gt;&lt;/strong> # 连接目的地时所使用的代理类型(也就是代理协议)。可用的值有：
&lt;ul>
&lt;li>socks4 # 表示 SOCKS v.4&lt;/li>
&lt;li>socks5 # 表示 SOCKS v.5（默认值）&lt;/li>
&lt;li>http # 表示 HTTP&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="openbsd-nc-options">OpenBSD-nc OPTIONS&lt;a class="td-heading-self-link" href="#openbsd-nc-options" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>-x &amp;lt;ADDRESS[:PORT]&amp;gt;&lt;/strong> # 连接目的地时所使用代理 IP 和 PORT。代理不能与 -LsuU 这些选项一起使用。&lt;/li>
&lt;li>&lt;strong>-X &amp;lt;PROXY_PROTOCOL&amp;gt;&lt;/strong> # 连接目的地时所使用的代理协议。可用的值有：
&lt;ul>
&lt;li>4 # 表示 SOCKS v.4&lt;/li>
&lt;li>5 # 表示 SOCKS v.5（默认值）&lt;/li>
&lt;li>connect # 表示 HTTP&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="应用示例">应用示例&lt;a class="td-heading-self-link" href="#%e5%ba%94%e7%94%a8%e7%a4%ba%e4%be%8b" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;ul>
&lt;li>测试本地 323/udp 端口
&lt;ul>
&lt;li>nc -uvz localhost 323&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>测试本地 22/tcp 端口
&lt;ul>
&lt;li>nc -vz localhost 22&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>执行效果如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># nc -vz localhost 22&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Connection to localhost &lt;span style="color:#0000cf;font-weight:bold">22&lt;/span> port &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>tcp/ssh&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> succeeded!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># nc -uvz localhost 323&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Connection to localhost &lt;span style="color:#0000cf;font-weight:bold">323&lt;/span> port &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>udp/*&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> succeeded!
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>测试两台机器之间的 8080/udp 连接是否正常&lt;/p>
&lt;ul>
&lt;li>在主机 A 上监听 8080/udp
&lt;ul>
&lt;li>nc -u -l 8080&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>在主机 B 上测试主机 A 的 8080/udp 是否正常
&lt;ul>
&lt;li>nc -u 172.19.42.248 8080&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>然后在任意主机输入任意内容，只要另一个主机能看到相同内容，即表示连接正常&lt;/li>
&lt;/ul>
&lt;h1 id="常见问题">常见问题&lt;a class="td-heading-self-link" href="#%e5%b8%b8%e8%a7%81%e9%97%ae%e9%a2%98" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>在 Windows 使用 ncat 通过代理连接 ssh，报错 &lt;code>ssh_exchange_identification: Connection closed by remote host&lt;/code>&lt;/p>
&lt;p>问题 issue：&lt;a href="https://github.com/nmap/nmap/issues/2149">https://github.com/nmap/nmap/issues/2149&lt;/a>&lt;/p>
&lt;p>解决：下载 7.80 版本即可，将下载连接的版本号改为 7.80 即可下载。&lt;/p></description></item><item><title>Docs: Nmap</title><link>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/Utility/Nmap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/Utility/Nmap/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://nmap.org/">官网&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://nmap.org/book/man.html">Manual(手册)，NMAP(1)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;strong>Network Mapper(网络映射器，简称 Nmap)&lt;/strong> 是一个用于网络探索和安全审计的开源工具。旨在快速扫描大型网络。&lt;/p>
&lt;p>Nmap 项目除了有自己的 nmap 工具外，还有很多实用程序，比如 &lt;a href="https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/Utility/Netcat.md">Netcat&lt;/a>、etc.&lt;/p>
&lt;h1 id="syntax语法">Syntax(语法)&lt;a class="td-heading-self-link" href="#syntax%e8%af%ad%e6%b3%95" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;strong>nmap [Scan Type&amp;hellip;] [OPTIONS] {TARGET}&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Scan Type(扫描类型)&lt;/strong> #&lt;/li>
&lt;li>&lt;strong>TARGET&lt;/strong> # 扫描目标&lt;/li>
&lt;/ul>
&lt;p>直接使用 &lt;code>nmap IP&lt;/code> 即可开始一个简单的扫描任务&lt;/p>
&lt;h2 id="options">OPTIONS&lt;a class="td-heading-self-link" href="#options" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://nmap.org/book/man-briefoptions.html">https://nmap.org/book/man-briefoptions.html&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h3 id="规避防火墙ids-与-伪装">规避防火墙/IDS 与 伪装&lt;a class="td-heading-self-link" href="#%e8%a7%84%e9%81%bf%e9%98%b2%e7%81%ab%e5%a2%99ids-%e4%b8%8e-%e4%bc%aa%e8%a3%85" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;blockquote>
&lt;p>FIREWALL/IDS EVASION AND SPOOFING&lt;/p>
&lt;/blockquote>
&lt;p>TODO&lt;/p>
&lt;pre tabindex="0">&lt;code>-f; --mtu &amp;lt;val&amp;gt;: fragment packets (optionally w/given MTU)
-D &amp;lt;decoy1,decoy2[,ME],...&amp;gt;: Cloak a scan with decoys
-S &amp;lt;IP_Address&amp;gt;: Spoof source address
-e &amp;lt;iface&amp;gt;: Use specified interface
-g/--source-port &amp;lt;portnum&amp;gt;: Use given port number
--proxies &amp;lt;url1,[url2],...&amp;gt;: Relay connections through HTTP/SOCKS4 proxies
--data &amp;lt;hex string&amp;gt;: Append a custom payload to sent packets
--data-string &amp;lt;string&amp;gt;: Append a custom ASCII string to sent packets
--data-length &amp;lt;num&amp;gt;: Append random data to sent packets
--ip-options &amp;lt;options&amp;gt;: Send packets with specified ip options
--ttl &amp;lt;val&amp;gt;: Set IP time-to-live field
--spoof-mac &amp;lt;mac address/prefix/vendor name&amp;gt;: Spoof your MAC address
--badsum: Send packets with a bogus TCP/UDP/SCTP checksum
&lt;/code>&lt;/pre>&lt;h1 id="example">EXAMPLE&lt;a class="td-heading-self-link" href="#example" aria-label="Heading self-link">&lt;/a>&lt;/h1></description></item><item><title>Docs: nping</title><link>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/Utility/nping/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/Utility/nping/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://nmap.org/nping/">Nmap，nping&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>由 &lt;a href="https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/Utility/Nmap.md">Nmap&lt;/a> 项目组开发的类似 &lt;a href="https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/Utility/hping.md">hping&lt;/a> 的工具&lt;/p>
&lt;p>每次的发包都称为一次 Probe(探测)&lt;/p>
&lt;h1 id="syntax语法">Syntax(语法)&lt;a class="td-heading-self-link" href="#syntax%e8%af%ad%e6%b3%95" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://nmap.org/book/nping-man.html">Manual(手册)，nping&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;code>nping [OPTIONS] {&amp;lt;targets&amp;gt;}&lt;/code>&lt;/p>
&lt;h2 id="options">OPTIONS&lt;a class="td-heading-self-link" href="#options" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;strong>&amp;ndash;tcp&lt;/strong> # 使用 TCP 探针模式&lt;/p>
&lt;h3 id="tcp-探针模式选项">TCP 探针模式选项&lt;a class="td-heading-self-link" href="#tcp-%e6%8e%a2%e9%92%88%e6%a8%a1%e5%bc%8f%e9%80%89%e9%a1%b9" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>&lt;strong>-g, &amp;ndash;source-port PORT_NUMBER&lt;/strong> # 设置源端口&lt;/p>
&lt;p>&lt;strong>&amp;ndash;flags FLAG_LIST&lt;/strong> # 设置 TCP 的 Flag, 多个 Flag 以逗号分隔&lt;/p>
&lt;h3 id="ipv4-选项">IPv4 选项&lt;a class="td-heading-self-link" href="#ipv4-%e9%80%89%e9%a1%b9" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>&lt;strong>-S, &amp;ndash;source-ip&lt;/strong> # 设置源 IP 地址&lt;/p>
&lt;h2 id="timing-和-performance">Timing 和 Performance&lt;a class="td-heading-self-link" href="#timing-%e5%92%8c-performance" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;strong>&amp;ndash;delay TIME&lt;/strong> # 前后两次发送探测行为的间隔. i.e. 每隔 TIME 探测一次&lt;/p>
&lt;h3 id="其他">其他&lt;a class="td-heading-self-link" href="#%e5%85%b6%e4%bb%96" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>&lt;strong>-c, &amp;ndash;count N&lt;/strong> # 在发送 N 次后停止程序. 若 N 设为 0 则永不停止.&lt;/p>
&lt;h1 id="example">EXAMPLE&lt;a class="td-heading-self-link" href="#example" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>nping &amp;ndash;tcp -p 10080 &amp;ndash;flags SYN &amp;ndash;source-ip 192.168.180.131 &amp;ndash;delay 1000ms &amp;ndash;count 0 172.24.194.179&lt;/p></description></item><item><title>Docs: Secure Shell(SSH) 安全外壳协议</title><link>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/Utility/OpenSSH/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/Utility/OpenSSH/</guid><description/></item><item><title>Docs: vsftpd</title><link>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/Utility/vsftpd/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/Utility/vsftpd/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://security.appspot.com/vsftpd.html">https://security.appspot.com/vsftpd.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Vsftpd">Wiki, Vsftpd&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>vsftpd 是实现 &lt;a href="https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/Protocol/FTP.md">FTP&lt;/a> 协议的程序&lt;/p>
&lt;h2 id="vsftp-关联文件与配置">vsftp 关联文件与配置&lt;a class="td-heading-self-link" href="#vsftp-%e5%85%b3%e8%81%94%e6%96%87%e4%bb%b6%e4%b8%8e%e9%85%8d%e7%bd%ae" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;strong>/etc/vsftpd.conf&lt;/strong> # vsftpd 程序的配置文件&lt;/p>
&lt;p>&lt;strong>/etc/ftpusers&lt;/strong> # 此文件包含 &lt;em>禁止&lt;/em> FTP 登录的用户名，通常有&amp;quot;root&amp;quot;，&amp;ldquo;uucp&amp;rdquo;，&amp;ldquo;news&amp;rdquo; 之类，因为这些用户权限太高，登录 FTP 误操作危险性大。&lt;/p>
&lt;ul>
&lt;li>User NAME&lt;/li>
&lt;li>User NAME&lt;/li>
&lt;li>User NAME&lt;/li>
&lt;li>&amp;hellip;&amp;hellip;.&lt;/li>
&lt;li>User NAME&lt;/li>
&lt;/ul>
&lt;p>配置文件 keywords 说明&lt;/p>
&lt;p>最小基本配置&lt;/p>
&lt;ul>
&lt;li>write_enable=YES # 对 ftp 服务器是否有写的权限&lt;/li>
&lt;li>local_enable=YES # 是否允许本地用户登录(本地用户即 ftp 服务器自身的用户)&lt;/li>
&lt;li>anonymous_enable=NO # 是否允许匿名登录&lt;/li>
&lt;/ul>
&lt;p>扩展配置&lt;/p>
&lt;ul>
&lt;li>chroot_local_user=YES # 是否启动本地用户 chroot 规则，chroot 改变登录 ftp 的本地用户根的目录位置&lt;/li>
&lt;li>allow_writeable_chroot=YES # 允许在限定目录有写权限&lt;/li>
&lt;li>chroot_list_enable=YES # 是否启动不受 chroot 规则的用户名单&lt;/li>
&lt;li>chroot_list_file=/etc/vsftpd.chroot_list # 定义不受限制的用户名单在哪个文件中&lt;/li>
&lt;li>pam_service_name=vsftpd 改为 pam_service_name=ftp # 如果始终登录时候提示密码错误，则修改此项&lt;/li>
&lt;/ul>
&lt;p>vsftp 可以使用 &lt;a href="https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Kernel/Process/Chroot.md">Chroot&lt;/a> 功能。比如：下面第一个图是不启动 Chroot 规则的情况，第二张图是启用 Chroot 规则的情况，可以看到当使用 Chroot 时，&lt;code>/srv/ftp/&lt;/code> 目录对于 ftp 程序来说是作为 &lt;code>/&lt;/code> 存在的。由于这个原因，所以启动 Chroot 的时候，ftp 工具无法访问所设定的 &lt;code>/&lt;/code> 目录以外的其他目录&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/pvqe8m/1616165219993-ce6cd857-e9ba-4af0-b7fc-7d77cf547d84.jpeg" alt="">&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/pvqe8m/1616165220004-51f8038e-598e-427a-9b04-8f1987475f04.jpeg" alt="">&lt;/p>
&lt;ul>
&lt;li>/etc/vsftpd.chroot_list # 此文件包含对服务器上所有 FTP 内容有权限的用户名，该文件中每个用户名写一行&lt;/li>
&lt;/ul>
&lt;h2 id="ftp-命令行工具说明">FTP 命令行工具说明&lt;a class="td-heading-self-link" href="#ftp-%e5%91%bd%e4%bb%a4%e8%a1%8c%e5%b7%a5%e5%85%b7%e8%af%b4%e6%98%8e" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>ftp [[UserName@]目标 IP] # 可以使用 UserName 用户来登录目标 IP 的 ftp 服务器或直接进入 ftp 客户端&lt;/p>
&lt;ul>
&lt;li>open [IP] # 连接某个 FTP 服务器。&lt;/li>
&lt;li>close # 关闭连接&lt;/li>
&lt;li>user # 对已经连接的 FTP 再输入一次用户名和密码，类似于更改登陆账户&lt;/li>
&lt;li>？ # 查看可以使用的命令&lt;/li>
&lt;li>get [需要下载的文件] [下载路径以及定义文件名] # 下载文件&lt;/li>
&lt;li>put [需要上传的文件] [上传路径以及定义文件名] # 上传文件&lt;/li>
&lt;/ul>
&lt;p>注意：这些命令可以直接输入然后根据提示再输入想要执行的内容；也可直接在命令后接需要完成的动作，直接执行&lt;/p>
&lt;p>注意文件夹权限以免无法上传下载&lt;/p>
&lt;h1 id="ftp-被动模式注意事项">ftp 被动模式注意事项&lt;a class="td-heading-self-link" href="#ftp-%e8%a2%ab%e5%8a%a8%e6%a8%a1%e5%bc%8f%e6%b3%a8%e6%84%8f%e4%ba%8b%e9%a1%b9" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>如果 iptables 仅仅放了 21 端口，在启动被动模式后，需要给 iptables 添加模块以便被动模式正常运行&lt;/p>
&lt;p>在 /etc/sysconfig/iptalbes-conf 文件中，修改成 IPTABLES_MODULES=&amp;ldquo;nf_conntrack_ftp nf_nat_ftp&amp;rdquo; 这个内容&lt;/p></description></item></channel></rss>