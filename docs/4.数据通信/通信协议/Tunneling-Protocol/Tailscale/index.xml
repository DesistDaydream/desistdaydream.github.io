<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦的站点 – Tailscale</title><link>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/Tunneling-Protocol/Tailscale/</link><description>Recent content in Tailscale on 断念梦的站点</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/Tunneling-Protocol/Tailscale/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Tailscale</title><link>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/Tunneling-Protocol/Tailscale/Tailscale/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/Tunneling-Protocol/Tailscale/Tailscale/</guid><description>
&lt;p>WireGuard 相比于传统 VPN 的核心优势是没有 VPN 网关，所有节点之间都可以点对点（P2P）连接，也就是我之前提到的全互联模式（full mesh），效率更高，速度更快，成本更低。&lt;/p>
&lt;p>WireGuard 目前最大的痛点就是上层应用的功能不够健全，因为 WireGuard 推崇的是 Unix 的哲学，WireGuard 本身只是一个内核级别的模块，只是一个数据平面，至于上层的更高级的功能（比如秘钥交换机制，UDP 打洞，ACL 等），需要通过用户空间的应用来实现。&lt;/p>
&lt;p>所以为了基于 WireGuard 实现更完美的 VPN 工具，现在已经涌现出了很多项目在互相厮杀。Netmaker 通过可视化界面来配置 WireGuard 的全互联模式，它支持 UDP 打洞、多租户等各种高端功能，几乎适配所有平台，非常强大。然而现实世界是复杂的，无法保证所有的 NAT 都能打洞成功，且 Netmaker 目前还没有 fallback 机制，如果打洞失败，无法 fallback 改成走中继节点。Tailscale 在这一点上比 Netmaker 高明许多，它支持 fallback 机制，可以尽最大努力实现全互联模式，部分节点即使打洞不成功，也能通过中继节点在这个虚拟网络中畅通无阻。&lt;/p>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/tailscale/tailscale">GitHub 项目，tailscale/tailscale&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tailscale.com/">官网&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://mp.weixin.qq.com/s/Y3z5RzuapZc8jS0UuHLhBw">公众号，云原声实验室-Tailscal 开源版本让你的 WireGuard 直接起飞&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>Tailscale 是一种基于 WireGuard 的虚拟组网工具，和 Netmaker 类似，&lt;strong>最大的区别在于 Tailscale 是在用户态实现了 WireGuard 协议，而 Netmaker 直接使用了内核态的 WireGuard&lt;/strong>。所以 Tailscale 相比于内核态 WireGuard 性能会有所损失，但与 OpenVPN 之流相比还是能甩好几十条街的，Tailscale 虽然在性能上做了些许取舍，但在功能和易用性上绝对是完爆其他工具：&lt;/p>
&lt;ul>
&lt;li>开箱即用
&lt;ul>
&lt;li>无需配置防火墙&lt;/li>
&lt;li>没有额外的配置&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>高安全性/私密性
&lt;ul>
&lt;li>自动密钥轮换&lt;/li>
&lt;li>点对点连接&lt;/li>
&lt;li>支持用户审查端到端的访问记录&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>在原有的 ICE、STUN 等 UDP 协议外，实现了 DERP TCP 协议来实现 NAT 穿透&lt;/li>
&lt;li>基于公网的控制服务器下发 ACL 和配置，实现节点动态更新&lt;/li>
&lt;li>通过第三方（如 Google） SSO 服务生成用户和私钥，实现身份认证&lt;/li>
&lt;/ul>
&lt;p>简而言之，我们可以将 Tailscale 看成是更为易用、功能更完善的 WireGuard。&lt;/p>
&lt;p>Tailscale 是一款商业产品，但个人用户是可以白嫖的，个人用户在接入设备不超过 20 台的情况下是可以免费使用的（虽然有一些限制，比如子网网段无法自定义，且无法设置多个子网）。除 Windows 和 macOS 的图形应用程序外，其他 Tailscale 客户端的组件（包含 Android 客户端）是在 BSD 许可下以开源项目的形式开发的，你可以在他们的 GitHub 仓库找到各个操作系统的客户端源码。&lt;/p>
&lt;p>对于大部份用户来说，白嫖 Tailscale 已经足够了，如果你有更高的需求，比如自定义网段，可以选择付费。&lt;/p>
&lt;p>&lt;strong>我就不想付费行不行？行，不过得看 &lt;a href="https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/Tunneling%20Protocol/Tailscale/Headscale.md">Headscale&lt;/a>。&lt;/strong>&lt;/p>
&lt;h1 id="tailscale-架构概述">Tailscale 架构概述&lt;a class="td-heading-self-link" href="#tailscale-%e6%9e%b6%e6%9e%84%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;ul>
&lt;li>&lt;strong>控制台&lt;/strong> # 管理 Tailscale 客户端，向 Tailscale 客户端下发规则。
&lt;ul>
&lt;li>可以通过 &lt;a href="https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/Tunneling%20Protocol/Tailscale/Headscale.md">Headscale&lt;/a> 开源实现&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>客户端&lt;/strong> # 主要是 &lt;a href="https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/Tunneling%20Protocol/Tailscale/tailscale%20%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7.md">tailscale 命令行工具&lt;/a>。windows 也有调用 tailscale 命令行工具的守护进程以右下角小图标的形式存在&lt;/li>
&lt;li>&lt;a href="https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/Tunneling%20Protocol/Tailscale/Tailscale%20DERP.md">Tailscale DERP&lt;/a> # 当两个节点第一次连接以及两个节点直连失败时，会切换到通过 DERP 来连接。DERP 是 Tailscale 自研的协议，也是一个中继程序，用以代理两个节点的访问请求。
&lt;ul>
&lt;li>可以自行搭建 DERP&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="tailscale-工作逻辑">Tailscale 工作逻辑&lt;a class="td-heading-self-link" href="#tailscale-%e5%b7%a5%e4%bd%9c%e9%80%bb%e8%be%91" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>Tailscale 的 &lt;strong>所有客户端之间的连接都是先选择 DERP 模式（中继模式），这意味着连接立即就能建立（优先级最低但 100% 能成功的模式），用户不用任何等待&lt;/strong>。然后开始并行地进行路径发现，通常几秒钟之后，我们就能发现一条更优路径，然后将现有连接透明升级（upgrade）成点对点连接（直连）。&lt;/p>
&lt;p>可以通过 &lt;code>tailscale ping ${HOST}&lt;/code> 命令查看到目标 HOST 的路由路径是否经过 DERP&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/tailscale/202403212159148.png" alt="image.png">&lt;/p>
&lt;h1 id="tailscale-关联文件与配置">Tailscale 关联文件与配置&lt;a class="td-heading-self-link" href="#tailscale-%e5%85%b3%e8%81%94%e6%96%87%e4%bb%b6%e4%b8%8e%e9%85%8d%e7%bd%ae" aria-label="Heading self-link">&lt;/a>&lt;/h1></description></item><item><title>Docs: Headscale</title><link>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/Tunneling-Protocol/Tailscale/Headscale/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/Tunneling-Protocol/Tailscale/Headscale/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/juanfont/headscale">GitHub 项目，juanfont/headscale&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://mp.weixin.qq.com/s/Y3z5RzuapZc8jS0UuHLhBw">公众号，云原声实验室-Tailscal 开源版本让你的 WireGuard 直接起飞&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>Tailscale 的控制服务器是不开源的，而且对免费用户有诸多限制，这是人家的摇钱树，可以理解。好在目前有一款开源的实现叫 Headscale，这也是唯一的一款，希望能发展壮大。&lt;/p>
&lt;p>Headscale 由欧洲航天局的 Juan Font 使用 Go 语言开发，在 BSD 许可下发布，实现了 Tailscale 控制服务器的所有主要功能，可以部署在企业内部，没有任何设备数量的限制，且所有的网络流量都由自己控制。&lt;/p>
&lt;p>目前 Headscale 还没有可视化界面，期待后续更新吧。&lt;/p>
&lt;h1 id="headscale-关联文件与配置">Headscale 关联文件与配置&lt;a class="td-heading-self-link" href="#headscale-%e5%85%b3%e8%81%94%e6%96%87%e4%bb%b6%e4%b8%8e%e9%85%8d%e7%bd%ae" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;strong>/etc/headscale/config.yaml&lt;/strong> # Headscale 运行时配置文件&lt;/p>
&lt;p>&lt;strong>/var/lib/headscale/&lt;/strong># Headscale 运行时数据目录。包括 数据库文件、证书 等&lt;/p>
&lt;ul>
&lt;li>&lt;strong>./db.sqlite&lt;/strong> # Headscale 使用 sqlite 作为数据库&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://github.com/juanfont/headscale/blob/main/config-example.yaml">这里&lt;/a>是配置文件示例&lt;/p>
&lt;h1 id="headscale-部署">Headscale 部署&lt;a class="td-heading-self-link" href="#headscale-%e9%83%a8%e7%bd%b2" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>Headscale 部署很简单，推荐直接在 Linux 主机上安装。&lt;/p>
&lt;blockquote>
&lt;p>理论上来说只要你的 Headscale 服务可以暴露到公网出口就行，但最好不要有 NAT，所以推荐将 Headscale 部署在有公网 IP 的云主机上。&lt;/p>
&lt;/blockquote>
&lt;h2 id="准备一些环境变量">准备一些环境变量&lt;a class="td-heading-self-link" href="#%e5%87%86%e5%a4%87%e4%b8%80%e4%ba%9b%e7%8e%af%e5%a2%83%e5%8f%98%e9%87%8f" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">HeadscaleVersion&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;0.15.0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">HeadscaleArch&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;amd64&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># Headscale 用于与各个节点通信的 IP&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">HeadscaleIP&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;X.X.X.X&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="准备-headscale-相关文件及目录">准备 Headscale 相关文件及目录&lt;a class="td-heading-self-link" href="#%e5%87%86%e5%a4%87-headscale-%e7%9b%b8%e5%85%b3%e6%96%87%e4%bb%b6%e5%8f%8a%e7%9b%ae%e5%bd%95" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>从 &lt;a href="https://github.com/juanfont/headscale/releases">GitHub 仓库的 Release 页面&lt;/a>下载最新版的二进制文件。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>wget --output-document&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>/usr/local/bin/headscale &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> https://github.com/juanfont/headscale/releases/download/v&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">HeadscaleVersion&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>/headscale_&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">HeadscaleVersion&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>_linux_&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">HeadscaleArch&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chmod +x /usr/local/bin/headscale
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建相关目录及文件&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>mkdir -p /etc/headscale
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir -p /var/lib/headscale
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>touch /var/lib/headscale/db.sqlite
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建 headscale 用户，并修改相关文件权限：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>useradd headscale -d /home/headscale -m
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chown -R headscale:headscale /var/lib/headscale
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="创建-headscale-配置文件">创建 Headscale 配置文件&lt;a class="td-heading-self-link" href="#%e5%88%9b%e5%bb%ba-headscale-%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>有两种方式&lt;/p>
&lt;ul>
&lt;li>下载文件后修改内容&lt;/li>
&lt;li>直接按照自己的要求创建&lt;/li>
&lt;/ul>
&lt;p>下载配置文件&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>wget https://raw.githubusercontent.com/juanfont/headscale/v&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">HeadscaleVersion&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>/config-example.yaml -O /etc/headscale/config.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>修改配置文件
&lt;ul>
&lt;li>&lt;strong>server_url&lt;/strong> # 改为公网 IP 或域名。&lt;strong>如果是国内服务器，域名必须要备案&lt;/strong>。我的域名无法备案，所以我就直接用公网 IP 了。&lt;/li>
&lt;li>&lt;strong>magic_dns&lt;/strong> # 如果暂时用不到 DNS 功能，该值设为 false&lt;/li>
&lt;li>&lt;strong>unix_socket&lt;/strong> # unix_socket: /var/run/headscale/headscale.sock&lt;/li>
&lt;li>&lt;strong>ip_prefixes&lt;/strong> # 可自定义私有网段&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>直接创建配置&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">tee /etc/headscale/config.yaml &amp;gt; /dev/null &amp;lt;&amp;lt;EOF&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">server_url&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">http://${HeadscaleIP}:8080&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">listen_addr&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0.0.0.0&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">8080&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metrics_listen_addr&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">127.0.0.1&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">9090&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">grpc_listen_addr&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0.0.0.0&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">50443&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">grpc_allow_insecure&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">private_key_path&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">/var/lib/headscale/private.key&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">ip_prefixes&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">fd7a:115c:a1e0::/48&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#0000cf;font-weight:bold">100.64.0.0&lt;/span>&lt;span style="color:#000">/10&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">derp&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">server&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">enabled&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">region_id&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">999&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">region_code&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;headscale&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">region_name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Headscale Embedded DERP&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">stun_listen_addr&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;0.0.0.0:3478&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">urls&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">https://controlplane.tailscale.com/derpmap/default&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">paths&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">[]&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">auto_update_enabled&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">update_frequency&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">24h&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">disable_check_updates&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">ephemeral_node_inactivity_timeout&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">30m&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">db_type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">sqlite3&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">db_path&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">/var/lib/headscale/db.sqlite&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">acme_url&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">https://acme-v02.api.letsencrypt.org/directory&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">acme_email&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">tls_letsencrypt_hostname&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">tls_client_auth_mode&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">relaxed&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">tls_letsencrypt_cache_dir&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">/var/lib/headscale/cache&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">tls_letsencrypt_challenge_type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">HTTP-01&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">tls_letsencrypt_listen&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;:http&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">tls_cert_path&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">tls_key_path&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">log_level&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">info&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">acl_policy_path&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">dns_config&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">nameservers&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#0000cf;font-weight:bold">1.1.1.1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">domains&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">[]&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">magic_dns&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">base_domain&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example.com&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">unix_socket&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">/var/run/headscale/headscale.sock&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">unix_socket_permission&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;0770&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">EOF&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="创建-systemd-unit-文件">创建 Systemd Unit 文件&lt;a class="td-heading-self-link" href="#%e5%88%9b%e5%bb%ba-systemd-unit-%e6%96%87%e4%bb%b6" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;a href="https://github.com/juanfont/headscale/blob/main/docs/packaging/headscale.systemd.service">https://github.com/juanfont/headscale/blob/main/docs/packaging/headscale.systemd.service&lt;/a>&lt;/p>
&lt;h2 id="启动-headscale-服务">启动 Headscale 服务&lt;a class="td-heading-self-link" href="#%e5%90%af%e5%8a%a8-headscale-%e6%9c%8d%e5%8a%a1" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>systemctl daemon-reload
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>systemctl &lt;span style="color:#204a87">enable&lt;/span> headscale --now
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="创建-headscale-user">创建 Headscale User&lt;a class="td-heading-self-link" href="#%e5%88%9b%e5%bb%ba-headscale-user" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;blockquote>
&lt;p>Notes: 老版本是创建 Namesapce&lt;/p>
&lt;ul>
&lt;li>Tailscale 中有一个概念叫 tailnet，你可以理解成租户， Tailscale 与 Tailscale 之间是相互隔离的，具体看参考 Tailscale 的官方文档：&lt;a href="https://tailscale.com/kb/1136/tailnet/">What is a tailnet&lt;/a>。&lt;/li>
&lt;li>Headscale 也有类似的实现叫 namespace，即命名空间。Namespace 是一个实体拥有的机器的逻辑组，这个实体对于 Tailscale 来说，通常代表一个用户。&lt;/li>
&lt;li>我们需要先创建一个 namespace，以便后续客户端接入，例如：&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># 这部分命令不用再执行了&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># headscale namespaces create lichenhao&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Namespace created
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># headscale namespaces list&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ID &lt;span style="color:#000;font-weight:bold">|&lt;/span> Name &lt;span style="color:#000;font-weight:bold">|&lt;/span> Created
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> lichenhao &lt;span style="color:#000;font-weight:bold">|&lt;/span> 2022-03-24 04:23:04
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>注意：&lt;/p>
&lt;ul>
&lt;li>从 v0.15.0 开始，Namespace 之间的边界已经被移除了，所有节点默认可以通信，如果想要限制节点之间的访问，可以使用 &lt;a href="https://github.com/juanfont/headscale/blob/v0.15.0/docs/acls.md">ACL&lt;/a>。在配置文件中只用 &lt;code>acl_policy_path&lt;/code> 字段指定 ACL 配置文件路径，文件配置方式详见：&amp;lt;https://tailscale.com/kb/1018/acls/&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># headscale users create desistdaydream&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># headscale user list&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>An updated version of Headscale has been found &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>0.23.0-alpha5 vs. your current v0.22.3&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>. Check it out https://github.com/juanfont/headscale/releases
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ID &lt;span style="color:#000;font-weight:bold">|&lt;/span> Name &lt;span style="color:#000;font-weight:bold">|&lt;/span> Created
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> desistdaydream &lt;span style="color:#000;font-weight:bold">|&lt;/span> 2024-03-20 14:29:47
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="tailscale-客户端部署与接入-headscale">Tailscale 客户端部署与接入 Headscale&lt;a class="td-heading-self-link" href="#tailscale-%e5%ae%a2%e6%88%b7%e7%ab%af%e9%83%a8%e7%bd%b2%e4%b8%8e%e6%8e%a5%e5%85%a5-headscale" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>Headscale 只是实现了 Tailscale 的控制台，想要接入，依然需要使用 Tailscale 客户端。&lt;/p>
&lt;p>目前除了 iOS 客户端，其他平台的客户端都有办法自定义 Tailscale 的控制服务器。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>OS&lt;/th>
&lt;th>是否支持 Headscale&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Linux&lt;/td>
&lt;td>Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>OpenBSD&lt;/td>
&lt;td>Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>FreeBSD&lt;/td>
&lt;td>Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>macOS&lt;/td>
&lt;td>Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Windows&lt;/td>
&lt;td>Yes 参考 Windows 客户端文档&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Android&lt;/td>
&lt;td>需要自己编译客户端&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>iOS&lt;/td>
&lt;td>暂不支持&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>想要让 Tailscale 客户端接入 Headscale，大体分为两个部分&lt;/p>
&lt;ul>
&lt;li>下载并配置 Tailscale 客户端，获取加入节点的指令&lt;/li>
&lt;li>在 Headscale 上执行加入节点的指令&lt;/li>
&lt;/ul>
&lt;h2 id="部署-tailscale-客户端">部署 Tailscale 客户端&lt;a class="td-heading-self-link" href="#%e9%83%a8%e7%bd%b2-tailscale-%e5%ae%a2%e6%88%b7%e7%ab%af" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;h3 id="linux">Linux&lt;a class="td-heading-self-link" href="#linux" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>在 Tailscale 部署的节点准备环境变量&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">TailscaleVersion&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;1.26.1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">TailscaleArch&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;amd64&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">HeadscaleIP&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;X.X.X.X&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Tailscale 官方提供了各种 Linux 发行版的软件包，但在国内由于网络原因，这些软件源基本用不了。所以我们可以在&lt;a href="https://pkgs.tailscale.com/stable/#static">这里&lt;/a>可以找到所有 Tailscale 的二进制文件，下载，并解压&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>wget https://pkgs.tailscale.com/stable/tailscale_&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">TailscaleVersion&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>_&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">TailscaleArch&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>.tgz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tar -zxvf tailscale_&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">TailscaleVersion&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>_&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">TailscaleArch&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>.tgz
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这个包里包含如下文件：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>tailscale_&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">TailscaleVersion&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>_&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">TailscaleArch&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>/tailscale
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tailscale_&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">TailscaleVersion&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>_&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">TailscaleArch&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>/tailscaled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tailscale_&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">TailscaleVersion&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>_&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">TailscaleArch&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>/systemd/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tailscale_&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">TailscaleVersion&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>_&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">TailscaleArch&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>/systemd/tailscaled.defaults
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tailscale_&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">TailscaleVersion&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>_&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">TailscaleArch&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>/systemd/tailscaled.service
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>将文件复制到对应路径下(这里的路径其实就是通过各种软件源安装的路径)：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cp tailscale_&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">TailscaleVersion&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>_&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">TailscaleArch&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>/tailscaled /usr/sbin/tailscaled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cp tailscale_&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">TailscaleVersion&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>_&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">TailscaleArch&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>/tailscale /usr/bin/tailscale
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cp tailscale_&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">TailscaleVersion&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>_&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">TailscaleArch&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>/systemd/tailscaled.service /lib/systemd/system/tailscaled.service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cp tailscale_&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">TailscaleVersion&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>_&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">TailscaleArch&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>/systemd/tailscaled.defaults /etc/default/tailscaled
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>启动 tailscaled.service 并设置开机自启：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>systemctl &lt;span style="color:#204a87">enable&lt;/span> tailscaled --now
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Tailscale 接入 Headscale：&lt;/p>
&lt;blockquote>
&lt;p>这里推荐将 DNS 功能关闭，因为它会覆盖系统的默认 DNS。&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>tailscale up --login-server&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>http://&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">HeadscaleIP&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>:8080 --accept-routes&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87">true&lt;/span> --accept-dns&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87">false&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>执行完上面的命令后，会出现下面的信息：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>Warning: IP forwarding is disabled, subnet routing/exit nodes will not work.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>See https://tailscale.com/kb/1104/enable-ip-forwarding/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>To authenticate, visit:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> http://X.X.X.X:8080/register?key&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>30e9c9c952e2d66680b9904eb861e24a595e80c0839e3541142edb56c0d43e16
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Success.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在浏览器中打开该链接，就会出现如下的界面：&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/af37c7a5-9f8e-4905-a639-0a377cb44ee6/1648097896734-2252f545-7f43-46fb-ad3a-1e1c85ce3d08.png" alt="image.png">&lt;/p>
&lt;p>最后，根据 &lt;a href="#Headscale%20%E4%B8%AD%E6%B7%BB%E5%8A%A0%E8%8A%82%E7%82%B9">在 Headscale 中添加节点&lt;/a> 部分的文档，将节点接入到 Headscale 中。&lt;/p>
&lt;h3 id="windows">Windows&lt;a class="td-heading-self-link" href="#windows" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>&lt;a href="https://headscale.net/windows-client/">https://headscale.net/windows-client/&lt;/a>&lt;/p>
&lt;p>Windows Tailscale 客户端想要使用 Headscale 作为控制服务器，只需在浏览器中打开 &lt;code>http://${HeadscaleIP}:${HeadscalePORT}/windows&lt;/code>，根据页面提示，本质上是执行下面这些操作&lt;/p>
&lt;ul>
&lt;li>添加注册表信息（两种方式）（在 &lt;code>HKEY_LOCAL_MACHINE\SOFTWARE\Tailscale IPN&lt;/code> 位置生成信息）
&lt;ul>
&lt;li>点击页面中的 &lt;code>Windows registry file&lt;/code>，下载注册表文件，并运行&lt;/li>
&lt;li>或者执行下面的 PowerShell 命令添加注册表信息&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">$headscale_server&lt;/span>&lt;span style="color:#000;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;DOMAIN:PORT&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">New-Item&lt;/span> &lt;span style="color:#000">-Path&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;HKLM:\SOFTWARE\Tailscale IPN&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">New-ItemProperty&lt;/span> &lt;span style="color:#000">-Path&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;HKLM:\Software\Tailscale IPN&amp;#39;&lt;/span> &lt;span style="color:#000">-Name&lt;/span> &lt;span style="color:#000">UnattendedMode&lt;/span> &lt;span style="color:#000">-PropertyType&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">-Value&lt;/span> &lt;span style="color:#000">always&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">New-ItemProperty&lt;/span> &lt;span style="color:#000">-Path&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;HKLM:\Software\Tailscale IPN&amp;#39;&lt;/span> &lt;span style="color:#000">-Name&lt;/span> &lt;span style="color:#000">LoginURL&lt;/span> &lt;span style="color:#000">-PropertyType&lt;/span> &lt;span style="color:#000">String&lt;/span> &lt;span style="color:#000">-Value&lt;/span> &lt;span style="color:#000">http&lt;/span>&lt;span style="color:#a40000">:&lt;/span>&lt;span style="color:#000;font-weight:bold">//${&lt;/span>&lt;span style="color:#000">headscale_server&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>在&lt;a href="https://pkgs.tailscale.com/stable/#windows">这里&lt;/a>下载 Windows 版的 Tailscale 客户端并安装&lt;/li>
&lt;li>在 Powershell 执行 &lt;code>tailscale login --login-server=http://${headscale_server} --accept-routes=true --accept-dns=false&lt;/code>&lt;/li>
&lt;li>右键点击任务栏中的 Tailscale 图标，再点击 &lt;code>Log in&lt;/code> 获取接入 Headscale 的命令&lt;/li>
&lt;li>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/af37c7a5-9f8e-4905-a639-0a377cb44ee6/1648104111282-99d562e1-d7d9-4ea5-9943-f16861efe87e.png" alt="image.png">&lt;/li>
&lt;li>此时会自动在浏览器中出现接入 Headscale 的页面，记录下注册命令，去 Headscale 所在设备上执行命令添加节点。&lt;/li>
&lt;li>注册命令示例: &lt;code>headscale nodes register --user USERNAME --key nodekey:75b424a753067b906fee373411743bf34264a9c40a4f7798836bf28bb24d2467&lt;/code>&lt;/li>
&lt;li>根据 &lt;a href="#Headscale%20%E4%B8%AD%E6%B7%BB%E5%8A%A0%E8%8A%82%E7%82%B9">在 Headscale 中添加节点&lt;/a> 部分的文档，使用注册命令将节点接入到 Headscale 中。&lt;/li>
&lt;/ul>
&lt;h3 id="其他-linux-发行版">其他 Linux 发行版&lt;a class="td-heading-self-link" href="#%e5%85%b6%e4%bb%96-linux-%e5%8f%91%e8%a1%8c%e7%89%88" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>除了常规的 Linux 发行版之外，还有一些特殊场景的 Linux 发行版，比如 OpenWrt、威联通（QNAP）、群晖等，这些发行版的安装方法已经有人写好了，这里就不详细描述了，我只给出相关的 GitHub 仓库，大家如果自己有需求，直接去看相关仓库的文档即可。&lt;/p>
&lt;ul>
&lt;li>OpenWrt：&lt;a href="https://github.com/adyanth/openwrt-tailscale-enabler">https://github.com/adyanth/openwrt-tailscale-enabler&lt;/a>&lt;/li>
&lt;li>群晖：&lt;a href="https://github.com/tailscale/tailscale-synology">https://github.com/tailscale/tailscale-synology&lt;/a>&lt;/li>
&lt;li>威联通：&lt;a href="https://github.com/ivokub/tailscale-qpkg">https://github.com/ivokub/tailscale-qpkg&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="headscale-中添加节点">Headscale 中添加节点&lt;a class="td-heading-self-link" href="#headscale-%e4%b8%ad%e6%b7%bb%e5%8a%a0%e8%8a%82%e7%82%b9" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>将其中的命令复制粘贴到 Headscale 所在机器的终端中，并将 NAMESPACE 替换为前面所创建的 namespace。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">HeadscaleUser&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;desistdaydream&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># 上面例子中的 Linux 客户端&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>headscale -n &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">HeadscaleUser&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> nodes register --key 30e9c9c952e2d66680b9904eb861e24a595e80c0839e3541142edb56c0d43e16
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># 上面例子中的 Windows 客户端&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>headscale -n &lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">HeadscaleUser&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> nodes register --key 105363c37b5449b85bb3e4107b6f6bbd3a2bb379dcf731bc98f979584740644a
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>注册成功，查看注册的节点：&lt;/p>
&lt;blockquote>
&lt;p>这里可以看到，已经注册的节点将会分配一个 IP，这里是 100.64.0.1，其他注册的节点可以通过这个 IP 访问该节点。&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># headscale nodes list&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ID &lt;span style="color:#000;font-weight:bold">|&lt;/span> Hostname &lt;span style="color:#000;font-weight:bold">|&lt;/span> Name &lt;span style="color:#000;font-weight:bold">|&lt;/span> MachineKey &lt;span style="color:#000;font-weight:bold">|&lt;/span> NodeKey &lt;span style="color:#000;font-weight:bold">|&lt;/span> User &lt;span style="color:#000;font-weight:bold">|&lt;/span> IP addresses &lt;span style="color:#000;font-weight:bold">|&lt;/span> Ephemeral &lt;span style="color:#000;font-weight:bold">|&lt;/span> Last seen &lt;span style="color:#000;font-weight:bold">|&lt;/span> Expiration &lt;span style="color:#000;font-weight:bold">|&lt;/span> Online &lt;span style="color:#000;font-weight:bold">|&lt;/span> Expired
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> HOME-WUJI &lt;span style="color:#000;font-weight:bold">|&lt;/span> home-wuji &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>fqHlf&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>dbQkp&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> desistdaydream &lt;span style="color:#000;font-weight:bold">|&lt;/span> 100.64.0.1, fd7a:115c:a1e0::1 &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#204a87">false&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> 2024-03-20 15:55:30 &lt;span style="color:#000;font-weight:bold">|&lt;/span> 0001-01-01 00:00:00 &lt;span style="color:#000;font-weight:bold">|&lt;/span> online &lt;span style="color:#000;font-weight:bold">|&lt;/span> no
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> DESKTOP-R02G6RP &lt;span style="color:#000;font-weight:bold">|&lt;/span> desktop-r02g6rp &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>zMy/C&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>Utjz0&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> desistdaydream &lt;span style="color:#000;font-weight:bold">|&lt;/span> 100.64.0.2, fd7a:115c:a1e0::2 &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#204a87">false&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> 2024-03-20 15:55:36 &lt;span style="color:#000;font-weight:bold">|&lt;/span> 0001-01-01 00:00:00 &lt;span style="color:#000;font-weight:bold">|&lt;/span> online &lt;span style="color:#000;font-weight:bold">|&lt;/span> no
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="检查-tailscale">检查 Tailscale&lt;a class="td-heading-self-link" href="#%e6%a3%80%e6%9f%a5-tailscale" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>回到 Tailscale 客户端所在的 Linux 主机，可以看到 Tailscale 会自动创建相关的路由表和 iptables 规则。路由表可通过以下命令查看：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># ip rule show&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0: from all lookup &lt;span style="color:#204a87">local&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>5210: from all fwmark 0x80000 lookup main
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>5230: from all fwmark 0x80000 lookup default
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>5250: from all fwmark 0x80000 unreachable
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>5270: from all lookup &lt;span style="color:#0000cf;font-weight:bold">52&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>32766: from all lookup main
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>32767: from all lookup default
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># ip route show table 52&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>100.64.0.2 dev tailscale0 &lt;span style="color:#8f5902;font-style:italic"># 这就是那个 Windows 节点&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>100.100.100.100 dev tailscale0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>查看 iptables 规则：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># iptables -S&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-P INPUT ACCEPT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-P FORWARD ACCEPT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-P OUTPUT ACCEPT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-N ts-forward
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-N ts-input
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-A INPUT -j ts-input
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-A FORWARD -j ts-forward
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-A FORWARD -i company -j ACCEPT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-A FORWARD -o company -j ACCEPT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-A ts-forward -i tailscale0 -j MARK --set-xmark 0x40000/0xffffffff
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-A ts-forward -m mark --mark 0x40000 -j ACCEPT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-A ts-forward -s 100.64.0.0/10 -o tailscale0 -j DROP
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-A ts-forward -o tailscale0 -j ACCEPT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-A ts-input -s 100.64.0.1/32 -i lo -j ACCEPT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-A ts-input -s 100.115.92.0/23 ! -i tailscale0 -j RETURN
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-A ts-input -s 100.64.0.0/10 ! -i tailscale0 -j DROP
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># iptables -t nat -S&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-P PREROUTING ACCEPT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-P INPUT ACCEPT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-P OUTPUT ACCEPT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-P POSTROUTING ACCEPT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-N ts-postrouting
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-A POSTROUTING -j ts-postrouting
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-A POSTROUTING -o ens192 -j MASQUERADE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-A ts-postrouting -m mark --mark 0x40000 -j MASQUERADE
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="打通局域网">打通局域网&lt;a class="td-heading-self-link" href="#%e6%89%93%e9%80%9a%e5%b1%80%e5%9f%9f%e7%bd%91" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>到目前为止我们只是打造了一个点对点的 Mesh 网络，各个节点之间都可以通过 WireGuard 的私有网络 IP 进行直连(就是部署时默认使用的 100.64.0.0/10 网段中的 IP)。&lt;/p>
&lt;p>但我们可以更大胆一点，还记得我在文章开头提到的访问家庭内网的资源吗？我们可以通过适当的配置让每个节点都能访问其他节点的局域网 IP。这个使用场景就比较多了，你可以直接访问家庭内网的 NAS，或者内网的任何一个服务，&lt;strong>更高级的玩家可以使用这个方法来访问云上 Kubernetes 集群的 Pod IP 和 Service IP。&lt;/strong>&lt;/p>
&lt;p>假设你的家庭内网有一台 Linux 主机（比如 OpenWrt）安装了 Tailscale 客户端，我们希望其他 Tailscale 客户端可以直接通过家中的局域网 IP（例如 &lt;strong>192.168.100.0/24&lt;/strong>） 访问家庭内网的任何一台设备。&lt;/p>
&lt;p>配置方法很简单，首先需要设置 IPv4 与 IPv6 路由转发：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>tee /etc/sysctl.d/ipforwarding.conf &amp;gt; /dev/null &lt;span style="color:#4e9a06">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">net.ipv4.ip_forward = 1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">net.ipv6.conf.all.forwarding = 1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sysctl -p /etc/sysctl.d/ipforwarding.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>客户端修改注册节点的命令，在原来命令的基础上加上参数 &lt;code>--advertise-routes=192.168.100.0/24&lt;/code>。&lt;/p>
&lt;ul>
&lt;li>多个 CIDR 以 &lt;code>,&lt;/code> 分割&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>tailscale up --login-server&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>http://&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">HeadscaleIP&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>:8080 --accept-routes&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87">true&lt;/span> --accept-dns&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87">false&lt;/span> --advertise-routes&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>172.38.40.0/24,192.168.88.0/24
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在 Headscale 端查看路由，可以看到相关路由是关闭的。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># headscale nodes list&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ID &lt;span style="color:#000;font-weight:bold">|&lt;/span> Hostname &lt;span style="color:#000;font-weight:bold">|&lt;/span> Name &lt;span style="color:#000;font-weight:bold">|&lt;/span> MachineKey &lt;span style="color:#000;font-weight:bold">|&lt;/span> NodeKey &lt;span style="color:#000;font-weight:bold">|&lt;/span> User &lt;span style="color:#000;font-weight:bold">|&lt;/span> IP addresses &lt;span style="color:#000;font-weight:bold">|&lt;/span> Ephemeral &lt;span style="color:#000;font-weight:bold">|&lt;/span> Last seen &lt;span style="color:#000;font-weight:bold">|&lt;/span> Expiration &lt;span style="color:#000;font-weight:bold">|&lt;/span> Online &lt;span style="color:#000;font-weight:bold">|&lt;/span> Expired
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> HOME-WUJI &lt;span style="color:#000;font-weight:bold">|&lt;/span> home-wuji &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>fqHlf&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>dbQkp&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> desistdaydream &lt;span style="color:#000;font-weight:bold">|&lt;/span> 100.64.0.1, fd7a:115c:a1e0::1 &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#204a87">false&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> 2024-03-20 15:55:30 &lt;span style="color:#000;font-weight:bold">|&lt;/span> 0001-01-01 00:00:00 &lt;span style="color:#000;font-weight:bold">|&lt;/span> online &lt;span style="color:#000;font-weight:bold">|&lt;/span> no
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> DESKTOP-R02G6RP &lt;span style="color:#000;font-weight:bold">|&lt;/span> desktop-r02g6rp &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>zMy/C&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>Utjz0&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> desistdaydream &lt;span style="color:#000;font-weight:bold">|&lt;/span> 100.64.0.2, fd7a:115c:a1e0::2 &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#204a87">false&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> 2024-03-20 15:55:36 &lt;span style="color:#000;font-weight:bold">|&lt;/span> 0001-01-01 00:00:00 &lt;span style="color:#000;font-weight:bold">|&lt;/span> online &lt;span style="color:#000;font-weight:bold">|&lt;/span> no
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># headscale routes list&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ID &lt;span style="color:#000;font-weight:bold">|&lt;/span> Machine &lt;span style="color:#000;font-weight:bold">|&lt;/span> Prefix &lt;span style="color:#000;font-weight:bold">|&lt;/span> Advertised &lt;span style="color:#000;font-weight:bold">|&lt;/span> Enabled &lt;span style="color:#000;font-weight:bold">|&lt;/span> Primary
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> desktop-r02g6rp &lt;span style="color:#000;font-weight:bold">|&lt;/span> 172.38.40.0/24 &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#204a87">true&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#204a87">false&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#204a87">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> desktop-r02g6rp &lt;span style="color:#000;font-weight:bold">|&lt;/span> 192.168.88.0/24 &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#204a87">true&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#204a87">false&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#204a87">false&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>开启路由：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># headscale routes enable -r 1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># headscale routes enable -r 2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ID &lt;span style="color:#000;font-weight:bold">|&lt;/span> Machine &lt;span style="color:#000;font-weight:bold">|&lt;/span> Prefix &lt;span style="color:#000;font-weight:bold">|&lt;/span> Advertised &lt;span style="color:#000;font-weight:bold">|&lt;/span> Enabled &lt;span style="color:#000;font-weight:bold">|&lt;/span> Primary
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> desktop-r02g6rp &lt;span style="color:#000;font-weight:bold">|&lt;/span> 172.38.40.0/24 &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#204a87">true&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#204a87">true&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#204a87">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> desktop-r02g6rp &lt;span style="color:#000;font-weight:bold">|&lt;/span> 192.168.88.0/24 &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#204a87">true&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#204a87">true&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#204a87">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;del>其他非 Headscale 节点查看路由结果：&lt;/del>&lt;/p>
&lt;p>&lt;del>&lt;code>$ ip route show table 52|grep &amp;quot;172.38.40.0/24&amp;quot; 172.38.40.0/24 dev tailscale0&lt;/code>&lt;/del>&lt;/p>
&lt;h1 id="总结">总结&lt;a class="td-heading-self-link" href="#%e6%80%bb%e7%bb%93" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>目前从稳定性来看，Tailscale 比 Netmaker 略胜一筹，基本上不会像 Netmaker 一样时不时出现 ping 不通的情况，这取决于 Tailscale 在用户态对 NAT 穿透所做的种种优化，他们还专门写了一篇文章介绍 NAT 穿透的原理，中文版由国内的 eBPF 大佬赵亚楠翻译：&lt;a href="https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/NAT/NAT%20%E7%A9%BF%E9%80%8F%E6%98%AF%E5%A6%82%E4%BD%95%E5%B7%A5%E4%BD%9C%E7%9A%84%EF%BC%9A%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E5%8F%8A%E4%BC%81%E4%B8%9A%E7%BA%A7%E5%AE%9E%E8%B7%B5.md">NAT 穿透是如何工作的：技术原理及企业级实践&lt;/a>&lt;/p>
&lt;h1 id="headscale-内嵌-derp">Headscale 内嵌 DERP&lt;a class="td-heading-self-link" href="#headscale-%e5%86%85%e5%b5%8c-derp" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;a href="https://github.com/juanfont/headscale/issues/1326">https://github.com/juanfont/headscale/issues/1326&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://github.com/juanfont/headscale/pull/388">https://github.com/juanfont/headscale/pull/388&lt;/a>&lt;/p>
&lt;p>修改配置文件中的如下几个字段&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">derp&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">server&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">enable&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">tls_cert_path&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;/PATH/TO/FILE&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">tls_key_path&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;/PATH/TO/FILE&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>多监听 3478 端口，且可以通过 https 访问&lt;/p></description></item><item><title>Docs: Tailscale DERP</title><link>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/Tunneling-Protocol/Tailscale/Tailscale-DERP/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/Tunneling-Protocol/Tailscale/Tailscale-DERP/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://mp.weixin.qq.com/s/r5OQi9YreI-BFnClKhBR0w">公众号，自建 DERP 中继服务器，从此 Tailscale 畅通无阻&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tailscale.com/kb/1118/custom-derp-servers">官方文档，自定义 DERP 服务器&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;a href="https://mp.weixin.qq.com/s?__biz=MzU1MzY4NzQ1OA==&amp;amp;mid=2247504037&amp;amp;idx=1&amp;amp;sn=b059e0ed24be4ae39a25e5724700ff54&amp;amp;scene=21#wechat_redirect">👉 上篇文章&lt;/a>介绍了如何使用 &lt;code>Headscale&lt;/code> 替代 Tailscale 官方的控制服务器，并接入各个平台的客户端。本文将会介绍如何让 Tailscale 使用自定义的 DERP Servers。可能很多人都不知道 DERP 是个啥玩意儿，没关系，我先从 &lt;strong>中继服务器&lt;/strong> 开始讲起。&lt;/p>
&lt;h2 id="stun-是什么">STUN 是什么&lt;a class="td-heading-self-link" href="#stun-%e6%98%af%e4%bb%80%e4%b9%88" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>Tailscale 的终极目标是让两台&lt;strong>处于网络上的任何位置&lt;/strong>的机器建立&lt;strong>点对点连接&lt;/strong>（直连），但现实世界是复杂的，大部份情况下机器都位于 NAT 和防火墙后面，这时候就需要通过打洞来实现直连，也就是 NAT 穿透。&lt;/p>
&lt;p>NAT 按照 &lt;strong>NAT 映射行为&lt;/strong>和&lt;strong>有状态防火墙行为&lt;/strong>可以分为多种类型，但对于 NAT 穿透来说根本不需要关心这么多类型，只需要看 &lt;strong>NAT 或者有状态防火墙是否会严格检查目标 Endpoint&lt;/strong>，根据这个因素，可以将 NAT 分为  &lt;strong>Easy NAT&lt;/strong> 和 &lt;strong>Hard NAT&lt;/strong>。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Easy NAT&lt;/strong> 及其变种称为 “Endpoint-Independent Mapping” (&lt;strong>EIM，终点无关的映射&lt;/strong>) 这里的 Endpoint 指的是目标 Endpoint，也就是说，有状态防火墙只要看到有客户端自己发起的出向包，就会允许相应的入向包进入，&lt;strong>不管这个入向包是谁发进来的都可以&lt;/strong>。&lt;/li>
&lt;li>&lt;strong>hard NAT&lt;/strong> 以及变种称为 “Endpoint-Dependent Mapping”（&lt;strong>EDM，终点相关的映射&lt;/strong>） 这种 NAT 会针对每个目标 Endpoint 来生成一条相应的映射关系。在这样的设备上，如果客户端向某个目标 Endpoint 发起了出向包，假设客户端的公网 IP 是 2.2.2.2，那么有状态防火墙就会打开一个端口，假设是 4242。那么只有来自该目标 Endpoint 的入向包才允许通过 &lt;code>2.2.2.2:4242&lt;/code>，其他客户端一律不允许。这种 NAT 更加严格，所以叫 Hard NAT。&lt;/li>
&lt;/ul>
&lt;p>对于 Easy NAT，我们只需要提供一个第三方的服务，它能够告诉客户端“它看到的客户端的公网 ip:port 是什么”，然后将这个信息以某种方式告诉通信对端（peer），后者就知道该和哪个地址建连了！这种服务就叫 &lt;strong>STUN&lt;/strong> (Session Traversal Utilities for NAT，NAT 会话穿越应用程序)。它的工作流程如下图所示：&lt;/p>
&lt;ul>
&lt;li>笔记本向 STUN 服务器发送一个请求：“从你的角度看，我的地址什么？”&lt;/li>
&lt;li>STUN 服务器返回一个响应：“我看到你的 UDP 包是从这个地址来的：&lt;code>ip:port&lt;/code>”。&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/pq65ei/1648866197865-44dd313f-e0cb-4108-b4ca-52e285e1dac5.jpeg" alt="">&lt;/p>
&lt;h2 id="中继是什么">中继是什么&lt;a class="td-heading-self-link" href="#%e4%b8%ad%e7%bb%a7%e6%98%af%e4%bb%80%e4%b9%88" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>对于 &lt;strong>Hard NAT&lt;/strong> 来说，STUN 就不好使了，即使 STUN 拿到了客户端的公网 &lt;code>ip:port&lt;/code> 告诉通信对端也于事无补，因为防火墙是和 STUN 通信才打开的缺口，这个缺口只允许 STUN 的入向包进入，其他通信对端知道了这个缺口也进不来。通常企业级 NAT 都属于 Hard NAT。&lt;/p>
&lt;p>这种情况下打洞是不可能了，但也不能就此放弃，可以选择一种折衷的方式：创建一个中继服务器（relay server），客户端与中继服务器进行通信，中继服务器再将包中继（relay）给通信对端。&lt;/p>
&lt;p>至于中继的性能，那要看具体情况了：&lt;/p>
&lt;ul>
&lt;li>如果能直连，那显然没必要用中继方式；&lt;/li>
&lt;li>但如果无法直连，而中继路径又非常接近双方直连的真实路径，并且带宽足够大，那中继方式并不会明显降低通信质量。延迟肯定会增加一点，带宽会占用一些，但&lt;strong>相比完全连接不上，还是可以接受的&lt;/strong>。&lt;/li>
&lt;/ul>
&lt;p>事实上对于大部分网络而言，Tailscale 都可以通过各种黑科技打洞成功，只有极少数情况下才会选择中继，中继只是一种 fallback 机制。&lt;/p>
&lt;h2 id="中继协议简介">中继协议简介&lt;a class="td-heading-self-link" href="#%e4%b8%ad%e7%bb%a7%e5%8d%8f%e8%ae%ae%e7%ae%80%e4%bb%8b" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>中继协议有多种实现方式。&lt;/p>
&lt;h3 id="turn">TURN&lt;a class="td-heading-self-link" href="#turn" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>TURN 即 Traversal Using Relays around NAT，这是一种经典的中继实现方式，核心理念是：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>用户&lt;/strong>（人）先去公网上的 TURN 服务器认证，成功后后者会告诉你：“我已经为你分配了 ip:port，接下来将为你中继流量”，&lt;/li>
&lt;li>然后将这个 ip:port 地址告诉对方，让它去连接这个地址，接下去就是非常简单的客户端/服务器通信模型了。&lt;/li>
&lt;/ul>
&lt;p>与 STUN 不同，这种协议没有真正的交互性，不是很好用，因此 Tailscale 并没有采用 TURN 作为中继协议。&lt;/p>
&lt;h3 id="derp">DERP&lt;a class="td-heading-self-link" href="#derp" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>DERP 即 Detoured Encrypted Routing Protocol，这是 Tailscale 自研的一个协议：&lt;/p>
&lt;ul>
&lt;li>它是一个&lt;strong>通用目的包中继协议，运行在 HTTP 之上&lt;/strong>，而大部分网络都是允许 HTTP 通信的。&lt;/li>
&lt;li>它根据目的公钥（destination’s public key）来中继加密的流量（encrypted payloads）。&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/pq65ei/1648866197927-9bf9875f-5ee8-474f-ab5a-d6c8448b2697.svg" alt="">&lt;/p>
&lt;p>Tailscale 会自动选择离目标节点最近的 DERP server 来中继流量&lt;/p>
&lt;p>Tailscale 使用的算法很有趣，&lt;strong>所有客户端之间的连接都是先选择 DERP 模式（中继模式），这意味着连接立即就能建立（优先级最低但 100% 能成功的模式），用户不用任何等待&lt;/strong>。然后开始并行地进行路径发现，通常几秒钟之后，我们就能发现一条更优路径，然后将现有连接透明升级（upgrade）过去，变成点对点连接（直连）。&lt;/p>
&lt;p>因此，DERP 既是 Tailscale 在 NAT 穿透失败时的保底通信方式（此时的角色与 TURN 类似），也是在其他一些场景下帮助我们完成 NAT 穿透的旁路信道。换句话说，它既是我们的保底方式，也是有更好的穿透链路时，帮助我们进行连接升级（upgrade to a peer-to-peer connection）的基础设施。&lt;/p>
&lt;h2 id="自建私有-derp-server">自建私有 DERP server&lt;a class="td-heading-self-link" href="#%e8%87%aa%e5%bb%ba%e7%a7%81%e6%9c%89-derp-server" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>Tailscale 的私钥只会保存在当前节点，因此 DERP server 无法解密流量，它只能和互联网上的其他路由器一样，呆呆地将加密的流量从一个节点转发到另一个节点，只不过 DERP 使用了一个稍微高级一点的协议来防止滥用。&lt;/p>
&lt;p>Tailscale 开源了 DERP 服务器的代码，如果你感兴趣，可以阅读 &lt;a href="https://github.com/tailscale/tailscale/tree/main/derp">DERP 的源代码&lt;/a>。&lt;/p>
&lt;hr>
&lt;p>Tailscale 官方内置了很多 DERP 服务器，分步在全球各地，&lt;strong>惟独不包含中国大陆&lt;/strong>，原因你懂得。这就导致了一旦流量通过 DERP 服务器进行中继，延时就会非常高。而且官方提供的 DERP 服务器是万人骑，存在安全隐患。&lt;/p>
&lt;p>为了实现低延迟、高安全性，我们可以参考 &lt;a href="https://tailscale.com/kb/1118/custom-derp-servers">Tailscale 官方文档&lt;/a>自建私有的 DERP 服务器。有两种部署模式，一种是基于域名，另外一种不需要域名，可以直接使用 IP，不过需要一点黑科技。我们先来看最简单的使用域名的方案。&lt;/p>
&lt;h3 id="使用域名">使用域名&lt;a class="td-heading-self-link" href="#%e4%bd%bf%e7%94%a8%e5%9f%9f%e5%90%8d" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>这种方案需要满足以下几个条件：&lt;/p>
&lt;ul>
&lt;li>要有自己的域名，并且申请了 SSL 证书&lt;/li>
&lt;li>需要准备一台或多台云主机&lt;/li>
&lt;li>如果服务器在国内，域名需要备案&lt;/li>
&lt;li>如果服务器在国外，则不需要备案&lt;/li>
&lt;/ul>
&lt;p>如果以上条件都俱备，就可以按照下面的步骤开始部署了。&lt;/p>
&lt;p>推荐直接使用 Docker 来部署，我已经构建好了 Docker 镜像，直接部署就可以了：&lt;/p>
&lt;pre tabindex="0">&lt;code>docker run --restart always \
  --name derper -p 12345:12345 -p 3478:3478/udp \
  -v /root/.acme.sh/xxxx/:/app/certs \
  -e DERP_CERT_MODE=manual \
  -e DERP_ADDR=12345 \
  -e DERP_DOMAIN=xxxx \
  -d ghcr.io/yangchuansheng/derper:latest
&lt;/code>&lt;/pre>&lt;p>有几点需要注意：&lt;/p>
&lt;ul>
&lt;li>能用 443 端口尽量用 443 端口，实在不行再用别的端口；&lt;/li>
&lt;li>默认情况下也会开启 STUN 服务，UDP 端口是 &lt;code>3478&lt;/code>；&lt;/li>
&lt;li>防火墙需要放行端口 12345 和 3478；&lt;/li>
&lt;li>准备好 SSL 证书；&lt;/li>
&lt;li>域名部分我打了码，请换成你自己的域名。&lt;/li>
&lt;/ul>
&lt;p>关于证书部分需要重点说明：&lt;strong>假设你的域名是 &lt;code>xxx.com&lt;/code>&lt;/strong>，那么证书的名称必须是 &lt;strong>&lt;code>xxx.com.crt&lt;/code>&lt;/strong>，一个字符都不能错！同理，私钥名称必须是 &lt;strong>&lt;code>xxx.com.key&lt;/code>&lt;/strong>，一个字符都不能错！&lt;/p>
&lt;p>查看容器日志：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>🐳  → docker logs -f derper
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2022/03/26 11:36:28 no config path specified&lt;span style="color:#000;font-weight:bold">;&lt;/span> using /var/lib/derper/derper.key
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2022/03/26 11:36:28 derper: serving on :12345 with TLS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2022/03/26 11:36:28 running STUN server on &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>::&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>:3478
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>目前 derper 运行一段时间就会崩溃，暂时还没有更好的解决方案，只能通过定时重启来解决，比如通过 crontab 来设置每两小时重启一次容器：&lt;/p>
&lt;pre tabindex="0">&lt;code>0 */2 * * * docker restart derper &amp;amp;&amp;gt; /dev/null
&lt;/code>&lt;/pre>&lt;p>具体可参考这个 issue：&lt;a href="https://github.com/tailscale/tailscale/issues/4082">Derper TLS handshake error: remote error: tls: internal error&lt;/a>&lt;/p>
&lt;hr>
&lt;p>部署好 derper 之后，就可以修改 Headscale 的配置来使用自定义的 DERP 服务器了。Headscale 可以通过两种形式的配置来使用自定义 DERP：&lt;/p>
&lt;ul>
&lt;li>一种是在线 URL，格式是 &lt;code>JSON&lt;/code>，与 Tailscale 官方控制服务器使用的格式和语法相同。&lt;/li>
&lt;li>另一种是本地文件，格式是 &lt;code>YAML&lt;/code>。&lt;/li>
&lt;/ul>
&lt;p>我们可以直接使用本地的 YAML 配置文件，内容如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># /etc/headscale/derp.yaml &lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">regions&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">  &lt;/span>&lt;span style="color:#204a87;font-weight:bold">900&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">    &lt;/span>&lt;span style="color:#000">regionid: 900 &lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">    &lt;/span>&lt;span style="color:#000">regioncode: thk  &lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">    &lt;/span>&lt;span style="color:#000">regionname: Tencent Hongkong  &lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">    &lt;/span>&lt;span style="color:#204a87;font-weight:bold">nodes&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">      &lt;/span>-&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">name: 900a &lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">        &lt;/span>&lt;span style="color:#000">regionid: 900 &lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">        &lt;/span>&lt;span style="color:#000">hostname: xxxx &lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">        &lt;/span>&lt;span style="color:#000">ipv4: xxxx &lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">        &lt;/span>&lt;span style="color:#000">stunport: 3478 &lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">        &lt;/span>&lt;span style="color:#000">stunonly: false &lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">        &lt;/span>&lt;span style="color:#000">derpport: 12345 &lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">      &lt;/span>-&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">name: 900b &lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">        &lt;/span>&lt;span style="color:#000">regionid: 900 &lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">        &lt;/span>&lt;span style="color:#000">hostname: xxxx &lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">        &lt;/span>&lt;span style="color:#000">ipv4: xxxx &lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">        &lt;/span>&lt;span style="color:#000">stunport: 3478 &lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">        &lt;/span>&lt;span style="color:#000">stunonly: false &lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">        &lt;/span>&lt;span style="color:#000">derpport: 12345 &lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">  &lt;/span>&lt;span style="color:#204a87;font-weight:bold">901&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">    &lt;/span>&lt;span style="color:#000">regionid: 901 &lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">    &lt;/span>&lt;span style="color:#000">regioncode: hs  &lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">    &lt;/span>&lt;span style="color:#000">regionname: Huawei Shanghai  &lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">    &lt;/span>&lt;span style="color:#204a87;font-weight:bold">nodes&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">      &lt;/span>-&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">name: 901a &lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">        &lt;/span>&lt;span style="color:#000">regionid: 901 &lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">        &lt;/span>&lt;span style="color:#000">hostname: xxxx &lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">        &lt;/span>&lt;span style="color:#000">ipv4: xxxx &lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">        &lt;/span>&lt;span style="color:#000">stunport: 3478 &lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">        &lt;/span>&lt;span style="color:#000">stunonly: false &lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">        &lt;/span>&lt;span style="color:#000">derpport: 12345&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>配置说明：&lt;/p>
&lt;ul>
&lt;li>&lt;code>regions&lt;/code> 是 YAML 中的&lt;strong>对象&lt;/strong>，下面的每一个对象表示一个&lt;strong>可用区&lt;/strong>，每个&lt;strong>可用区&lt;/strong>里面可设置多个 DERP 节点，即 &lt;code>nodes&lt;/code>。&lt;/li>
&lt;li>每个可用区的 &lt;code>regionid&lt;/code> 不能重复。&lt;/li>
&lt;li>每个 &lt;code>node&lt;/code> 的 &lt;code>name&lt;/code> 不能重复。&lt;/li>
&lt;li>&lt;code>regionname&lt;/code> 一般用来描述可用区，&lt;code>regioncode&lt;/code> 一般设置成可用区的缩写。&lt;/li>
&lt;li>&lt;code>ipv4&lt;/code> 字段不是必须的，如果你的域名可以通过公网解析到你的 DERP 服务器地址，这里可以不填。如果你使用了一个二级域名，而这个域名你并没有在公共 DNS server 中添加相关的解析记录，那么这里就需要指定 IP（前提是你的证书包含了这个二级域名，这个很好支持，搞个泛域名证书就行了）。&lt;/li>
&lt;li>&lt;code>stunonly: false&lt;/code> 表示除了使用 STUN 服务，还可以使用 DERP 服务。&lt;/li>
&lt;li>上面的配置中域名和 IP 部分我都打码了，你需要根据你的实际情况填写。&lt;/li>
&lt;/ul>
&lt;p>接下来还需要修改 Headscale 的配置文件，引用上面的自定义 DERP 配置文件。需要修改的配置项如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># /etc/headscale/config.yaml &lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">derp&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">  &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># List of externally available DERP maps encoded in JSON &lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">  &lt;/span>&lt;span style="color:#204a87;font-weight:bold">urls&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">  &lt;/span>&lt;span style="color:#8f5902;font-style:italic">#  - https://controlplane.tailscale.com/derpmap/default &lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">  &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># Locally available DERP map files encoded in YAML &lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">  &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># &lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">  &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># This option is mostly interesting for people hosting &lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">  &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># their own DERP servers: &lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">  &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># https://tailscale.com/kb/1118/custom-derp-servers/ &lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">  &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># &lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">  &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># paths: &lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">  &lt;/span>&lt;span style="color:#8f5902;font-style:italic">#   - /etc/headscale/derp-example.yaml &lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">  &lt;/span>&lt;span style="color:#204a87;font-weight:bold">paths&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">    &lt;/span>-&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">/etc/headscale/derp.yaml &lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">  &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># If enabled, a worker will be set up to periodically &lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">  &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># refresh the given sources and update the derpmap &lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">  &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># will be set up. &lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">  &lt;/span>&lt;span style="color:#000">auto_update_enabled: true &lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">  &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># How often should we check for DERP updates? &lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">  &lt;/span>&lt;span style="color:#000">update_frequency: 24h&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以把 Tailscale 官方的 DERP 服务器禁用，来测试自建的 DERP 服务器是否能正常工作。&lt;/p>
&lt;p>修改完配置后，重启 headscale 服务：&lt;/p>
&lt;pre tabindex="0">&lt;code>$ systemctl restart headscale
&lt;/code>&lt;/pre>&lt;p>在 Tailscale 客户端上使用以下命令查看目前可以使用的 DERP 服务器：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ tailscale netcheck
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Report:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        * UDP: &lt;span style="color:#204a87">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        * IPv4: yes, xxxxx:57068
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        * IPv6: no
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        * MappingVariesByDestIP: &lt;span style="color:#204a87">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        * HairPinning: &lt;span style="color:#204a87">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        * PortMapping: 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        * Nearest DERP: Tencent Hongkong
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        * DERP latency:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>                - thk: 39.7ms &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>Tencent Hongkong&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>tailscale netcheck&lt;/code> 实际上只检测 &lt;code>3478/udp&lt;/code> 的端口， 就算 netcheck 显示能连，也不一定代表 12345 端口可以转发流量。最简单的办法是直接打开 DERP 服务器的 URL：https://xxxx:12345，如果看到如下页面，且地址栏的 SSL 证书标签显示正常可用，那才是真没问题了。&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/pq65ei/1648866197919-6ec2816f-e8f4-4be6-993d-c14fe47aa72a.png" alt="">&lt;/p>
&lt;p>查看与通信对端的连接方式：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ tailscale status
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10.1.0.5        coredns              default      linux   -
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>                carsondemacbook-pro  default      macOS   active&lt;span style="color:#000;font-weight:bold">;&lt;/span> direct xxxx:2756&lt;span style="color:#000;font-weight:bold">;&lt;/span> offline, tx 50424 rx &lt;span style="color:#0000cf;font-weight:bold">34056&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>                oneplus-8t           default      android active&lt;span style="color:#000;font-weight:bold">;&lt;/span> relay &lt;span style="color:#4e9a06">&amp;#34;thk&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span> offline, tx 1608 rx &lt;span style="color:#0000cf;font-weight:bold">1552&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>                openwrt              default      linux   active&lt;span style="color:#000;font-weight:bold">;&lt;/span> direct xxxx:2834&lt;span style="color:#000;font-weight:bold">;&lt;/span> offline, tx 1403688 rx &lt;span style="color:#0000cf;font-weight:bold">1217620&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这个客户端是一台云主机，有 3 个通信对端，分别是 macOS、OpenWRT 与 Android 手机，macOS 和 OpenWRT 都处于电信家庭内网中，Android 手机使用的是电信流量。可以看到只有 Android 手机是通过自定义的 DERP 服务器来中继流量的，打洞成功率相当高。使用 ping 来测试连通性：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ ping 10.1.0.8
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>PING 10.1.0.8 &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>10.1.0.8&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> 56&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>84&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> bytes of data.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>64 bytes from 10.1.0.8: &lt;span style="color:#000">icmp_seq&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>1 &lt;span style="color:#000">ttl&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>64 &lt;span style="color:#000">time&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>150 ms
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>64 bytes from 10.1.0.8: &lt;span style="color:#000">icmp_seq&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>2 &lt;span style="color:#000">ttl&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>64 &lt;span style="color:#000">time&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>131 ms
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>64 bytes from 10.1.0.8: &lt;span style="color:#000">icmp_seq&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>3 &lt;span style="color:#000">ttl&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>64 &lt;span style="color:#000">time&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>161 ms
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>64 bytes from 10.1.0.8: &lt;span style="color:#000">icmp_seq&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>4 &lt;span style="color:#000">ttl&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>64 &lt;span style="color:#000">time&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>137 ms
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>64 bytes from 10.1.0.8: &lt;span style="color:#000">icmp_seq&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>5 &lt;span style="color:#000">ttl&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>64 &lt;span style="color:#000">time&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>156 ms
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>64 bytes from 10.1.0.8: &lt;span style="color:#000">icmp_seq&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>6 &lt;span style="color:#000">ttl&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>64 &lt;span style="color:#000">time&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>169 ms
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>^C
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>--- 10.1.0.8 ping statistics ---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>6 packets transmitted, 6 received, 0% packet loss, &lt;span style="color:#204a87">time&lt;/span> 5005ms
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rtt min/avg/max/mdev &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> 131.728/151.154/169.627/13.193 ms
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>也可以使用 Tailscale 命令行工具来测试：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ tailscale ping 10.1.0.8
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pong from oneplus-8t &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>10.1.0.8&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> via DERP&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>thk&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> in 104ms
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pong from oneplus-8t &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>10.1.0.8&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> via DERP&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>thk&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> in 111ms
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pong from oneplus-8t &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>10.1.0.8&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> via DERP&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>thk&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> in 105ms
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这个更加友好一点，会直接告诉你是通过 DERP 中继服务器来和对方通信的。&lt;/p>
&lt;p>如果当前 Tailscale 客户端所在主机开启了 IPv6，那么与手机便可以直接通过 IPv6 点对点连接：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ /Applications/Tailscale.app/Contents/MacOS/Tailscale status
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>                coredns              default      linux   active&lt;span style="color:#000;font-weight:bold">;&lt;/span> direct xxxx:45986&lt;span style="color:#000;font-weight:bold">;&lt;/span> offline, tx 124352 rx &lt;span style="color:#0000cf;font-weight:bold">185736&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>                oneplus-8t           default      android active&lt;span style="color:#000;font-weight:bold">;&lt;/span> direct &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>240e:472:da0:24a2:a07f:2a67:2a1e:4475&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>:37237&lt;span style="color:#000;font-weight:bold">;&lt;/span> offline, tx 125216 rx &lt;span style="color:#0000cf;font-weight:bold">20052&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>                openwrt              default      linux   active&lt;span style="color:#000;font-weight:bold">;&lt;/span> direct &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>240e:390:caf:1870:c02c:e8ff:feb9:b0b&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>:41641&lt;span style="color:#000;font-weight:bold">;&lt;/span> offline, tx 181992 rx &lt;span style="color:#0000cf;font-weight:bold">3910120&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ /Applications/Tailscale.app/Contents/MacOS/Tailscale ping 10.1.0.8
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pong from oneplus-8t &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>10.1.0.8&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> via &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>240e:472:da0:24a2:a07f:2a67:2a1e:4475&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>:37237 in 62ms
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>所以如果你开启了 IPv6，可以大大增加&lt;strong>点对点连接&lt;/strong>的成功率。&lt;/p>
&lt;h3 id="使用纯-ip">使用纯 IP&lt;a class="td-heading-self-link" href="#%e4%bd%bf%e7%94%a8%e7%ba%af-ip" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>我知道，大部分人是没有自己的域名的。再退一步，就算有自己的域名，如果没有备案，也是没办法部署在国内服务器上使用的。&lt;/p>
&lt;p>这个时候我们就只能从 derper 源码上动手脚了，找到 tailscale 仓库中的 &lt;code>cmd/derper/cert.go&lt;/code> 文件，将与域名验证相关的内容删除或注释：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">func&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">m&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">manualCertManager&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#000">getCertificate&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">hi&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">tls&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ClientHelloInfo&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">tls&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Certificate&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">error&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">//if hi.ServerName != m.hostname {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">// return nil, fmt.Errorf(&amp;#34;cert mismatch with hostname: %q&amp;#34;, hi.ServerName)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#8f5902;font-style:italic">//}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">m&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">cert&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>还需要创建自签名证书，可以通过脚本来创建：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># build_cert.sh &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">#!/bin/bash &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">CERT_HOST&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">$1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">CERT_DIR&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">$2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">CONF_FILE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">$3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">echo&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;[req]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">default_bits  = 2048
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">distinguished_name = req_distinguished_name
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">req_extensions = req_ext
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">x509_extensions = v3_req
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">prompt = no
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">[req_distinguished_name]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">countryName = XX
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">stateOrProvinceName = N/A
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">localityName = N/A
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">organizationName = Self-signed certificate
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">commonName = &lt;/span>&lt;span style="color:#000">$CERT_HOST&lt;/span>&lt;span style="color:#4e9a06">: Self-signed certificate
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">[req_ext]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">subjectAltName = @alt_names
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">[v3_req]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">subjectAltName = @alt_names
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">[alt_names]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">IP.1 = &lt;/span>&lt;span style="color:#000">$CERT_HOST&lt;/span>&lt;span style="color:#4e9a06">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span> &amp;gt; &lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;span style="color:#000">$CONF_FILE&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir -p &lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;span style="color:#000">$CERT_DIR&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>openssl req -x509 -nodes -days 730 -newkey rsa:2048 -keyout &lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;span style="color:#000">$CERT_DIR&lt;/span>&lt;span style="color:#4e9a06">/&lt;/span>&lt;span style="color:#000">$CERT_HOST&lt;/span>&lt;span style="color:#4e9a06">.key&amp;#34;&lt;/span> -out &lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;span style="color:#000">$CERT_DIR&lt;/span>&lt;span style="color:#4e9a06">/&lt;/span>&lt;span style="color:#000">$CERT_HOST&lt;/span>&lt;span style="color:#4e9a06">.crt&amp;#34;&lt;/span> -config &lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;span style="color:#000">$CONF_FILE&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>重新编写 Dockerfile，将 derper 的域名设置为 &lt;code>127.0.0.1&lt;/code>：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">FROM&lt;/span>&lt;span style="color:#4e9a06"> golang:latest AS builder &lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">WORKDIR&lt;/span>&lt;span style="color:#4e9a06"> /app &lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># ========= CONFIG ========= &lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># - download links &lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">ENV&lt;/span> &lt;span style="color:#000">MODIFIED_DERPER_GIT&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>https://github.com/yangchuansheng/ip_derper.git &lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">ENV&lt;/span> &lt;span style="color:#000">BRANCH&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>ip_derper
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># ========================== &lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># build modified derper &lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">RUN&lt;/span> git clone -b &lt;span style="color:#000">$BRANCH&lt;/span> &lt;span style="color:#000">$MODIFIED_DERPER_GIT&lt;/span> tailscale --depth 1 &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#4e9a06">\ &lt;/span> &lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>    &lt;span style="color:#204a87">cd&lt;/span> /app/tailscale/cmd/derper &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#4e9a06">\ &lt;/span> &lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>    /usr/local/go/bin/go build -ldflags &lt;span style="color:#4e9a06">&amp;#34;-s -w&amp;#34;&lt;/span> -o /app/derper &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#4e9a06">\ &lt;/span> &lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>    &lt;span style="color:#204a87">cd&lt;/span> /app &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#4e9a06">\ &lt;/span> &lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>    rm -rf /app/tailscale &lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">FROM&lt;/span>&lt;span style="color:#4e9a06"> ubuntu:20.04 &lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">WORKDIR&lt;/span>&lt;span style="color:#4e9a06"> /app &lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># ========= CONFIG ========= &lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># - derper args &lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">ENV&lt;/span> &lt;span style="color:#000">DERP_HOST&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">127&lt;/span>.0.0.1 &lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">ENV&lt;/span> &lt;span style="color:#000">DERP_CERTS&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>/app/certs/ &lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">ENV&lt;/span> DERP_STUN &lt;span style="color:#204a87">true&lt;/span> &lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">ENV&lt;/span> DERP_VERIFY_CLIENTS &lt;span style="color:#204a87">false&lt;/span> &lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># ========================== &lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># apt &lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">RUN&lt;/span> apt-get update &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#4e9a06">\ &lt;/span> &lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>    apt-get install -y openssl curl &lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">COPY&lt;/span> build_cert.sh /app/ &lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">COPY&lt;/span> --from&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>builder /app/derper /app/derper &lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># build self-signed certs &amp;amp;&amp;amp; start derper &lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">CMD&lt;/span> bash /app/build_cert.sh &lt;span style="color:#000">$DERP_HOST&lt;/span> &lt;span style="color:#000">$DERP_CERTS&lt;/span> /app/san.conf &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#4e9a06">\ &lt;/span> &lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>    /app/derper --hostname&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">$DERP_HOST&lt;/span> &lt;span style="color:#4e9a06">\ &lt;/span> &lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>    --certmode&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>manual &lt;span style="color:#4e9a06">\ &lt;/span> &lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>    --certdir&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">$DERP_CERTS&lt;/span> &lt;span style="color:#4e9a06">\ &lt;/span> &lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>    --stun&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">$DERP_STUN&lt;/span>  &lt;span style="color:#4e9a06">\ &lt;/span> &lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>    --verify-clients&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">$DERP_VERIFY_CLIENTS&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>构建好镜像后，就可以在你想部署 derper 的主机上直接通过该镜像启动 derper 容器了，命令如下：&lt;/p>
&lt;pre tabindex="0">&lt;code>🐳  → docker run --restart always --net host --name derper -d ghcr.io/yangchuansheng/ip_derper
&lt;/code>&lt;/pre>&lt;p>和使用域名的方案一样，防火墙需要放行相应端口（12345 与 3478）。&lt;/p>
&lt;p>查看容器日志：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>🐳  → docker logs -f derper
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Generating a RSA private key
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.......................................+++++
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>..............+++++
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>writing new private key to &lt;span style="color:#4e9a06">&amp;#39;/app/certs//127.0.0.1.key&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-----
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2022/03/26 14:30:31 no config path specified&lt;span style="color:#000;font-weight:bold">;&lt;/span> using /var/lib/derper/derper.key
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2022/03/26 14:30:31 derper: serving on :443 with TLS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2022/03/26 14:30:31 running STUN server on &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>::&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>:3478
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果你想自己构建 derper 镜像，可以参考我的 GitHub 仓库[4]。&lt;/p>
&lt;hr>
&lt;p>下面就是骚操作了，我们在 Headscale 的配置中需要&lt;strong>将 DERP 的域名设置为 IP&lt;/strong>！不理解的可以再消化一下，然后继续往下看哈哈~~&lt;/p>
&lt;p>除了 derper 之外，Tailscale 客户端还需要&lt;strong>跳过域名验证&lt;/strong>，这个需要在 DERP 的配置中设置。而 Headscale 的本地 YAML 文件目前还不支持这个配置项，所以没办法，咱只能使用在线 URL 了。JSON 配置内容如下：&lt;/p>
&lt;pre tabindex="0">&lt;code>{
  &amp;#34;Regions&amp;#34;: {
    &amp;#34;901&amp;#34;: {
      &amp;#34;RegionID&amp;#34;: 901,
      &amp;#34;RegionCode&amp;#34;: &amp;#34;ali-sh&amp;#34;,
      &amp;#34;RegionName&amp;#34;: &amp;#34;Aliyun Shanghai&amp;#34;,
      &amp;#34;Nodes&amp;#34;: [
        {
          &amp;#34;Name&amp;#34;: &amp;#34;901a&amp;#34;,
          &amp;#34;RegionID&amp;#34;: 901,
          &amp;#34;DERPPort&amp;#34;: 443,
          &amp;#34;HostName&amp;#34;: &amp;#34;xxxx&amp;#34;,
          &amp;#34;IPv4&amp;#34;: &amp;#34;xxxx&amp;#34;,
          &amp;#34;InsecureForTests&amp;#34;: true
        }
      ]
    }
  }
}
&lt;/code>&lt;/pre>&lt;p>配置解析：&lt;/p>
&lt;ul>
&lt;li>&lt;code>HostName&lt;/code> 直接填 derper 的公网 IP，即和 &lt;code>IPv4&lt;/code> 的值相同。&lt;/li>
&lt;li>&lt;code>InsecureForTests&lt;/code> 一定要设置为 true，以跳过域名验证。&lt;/li>
&lt;/ul>
&lt;p>你需要把这个 JSON 文件变成 Headscale 服务器可以访问的 URL，比如在 Headscale 主机上搭个 Nginx，或者上传到对象存储（比如阿里云 OSS）。&lt;/p>
&lt;p>接下来还需要修改 Headscale 的配置文件，引用上面的自定义 DERP 的 URL。需要修改的配置项如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># /etc/headscale/config.yaml &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>derp:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  &lt;span style="color:#8f5902;font-style:italic"># List of externally available DERP maps encoded in JSON &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  urls:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  &lt;span style="color:#8f5902;font-style:italic">#  - https://controlplane.tailscale.com/derpmap/default &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    - https://xxxxx/derp.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  &lt;span style="color:#8f5902;font-style:italic"># Locally available DERP map files encoded in YAML &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  &lt;span style="color:#8f5902;font-style:italic"># &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  &lt;span style="color:#8f5902;font-style:italic"># This option is mostly interesting for people hosting &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  &lt;span style="color:#8f5902;font-style:italic"># their own DERP servers: &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  &lt;span style="color:#8f5902;font-style:italic"># https://tailscale.com/kb/1118/custom-derp-servers/ &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  &lt;span style="color:#8f5902;font-style:italic"># &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  &lt;span style="color:#8f5902;font-style:italic"># paths: &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  &lt;span style="color:#8f5902;font-style:italic">#   - /etc/headscale/derp-example.yaml &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  paths:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    - /etc/headscale/derp.yaml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  &lt;span style="color:#8f5902;font-style:italic"># If enabled, a worker will be set up to periodically &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  &lt;span style="color:#8f5902;font-style:italic"># refresh the given sources and update the derpmap &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  &lt;span style="color:#8f5902;font-style:italic"># will be set up. &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  auto_update_enabled: &lt;span style="color:#204a87">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  &lt;span style="color:#8f5902;font-style:italic"># How often should we check for DERP updates? &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  update_frequency: 24h
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>修改完配置后，重启 headscale 服务：&lt;/p>
&lt;p>&lt;code>$ systemctl restart headscale&lt;/code>&lt;/p>
&lt;p>在 Tailscale 客户端上使用以下命令查看目前可以使用的 DERP 服务器：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ tailscale netcheck
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Report:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * UDP: &lt;span style="color:#204a87">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * IPv4: yes, 192.168.100.1:49656
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * IPv6: no
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * MappingVariesByDestIP: &lt;span style="color:#204a87">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * HairPinning: &lt;span style="color:#204a87">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * PortMapping: UPnP
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Nearest DERP: Home Hangzhou
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * DERP latency:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  - home: 9.7ms   &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>Home Hangzhou&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  -  hs: 25.2ms  &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>Huawei Shanghai&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  - thk: 43.5ms  &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>Tencent Hongkong&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>再次查看与通信对端的连接方式：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ tailscale status
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>                coredns              default      linux   active&lt;span style="color:#000;font-weight:bold">;&lt;/span> direct xxxx:45986&lt;span style="color:#000;font-weight:bold">;&lt;/span> offline, tx 131012 rx &lt;span style="color:#0000cf;font-weight:bold">196020&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>                oneplus-8t           default      android active&lt;span style="color:#000;font-weight:bold">;&lt;/span> relay &lt;span style="color:#4e9a06">&amp;#34;home&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span> offline, tx 211900 rx &lt;span style="color:#0000cf;font-weight:bold">22780&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>                openwrt              default      linux   active&lt;span style="color:#000;font-weight:bold">;&lt;/span> direct 192.168.100.254:41641&lt;span style="color:#000;font-weight:bold">;&lt;/span> offline, tx 189868 rx &lt;span style="color:#0000cf;font-weight:bold">4074772&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以看到这一次 Tailscale 自动选择了一个线路最优的&lt;strong>国内的&lt;/strong> DERP 服务器作为中继，可以测试一下延迟：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ tailscale ping 10.1.0.8
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pong from oneplus-8t &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>10.1.0.8&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> via DERP&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>home&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> in 30ms
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pong from oneplus-8t &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>10.1.0.8&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> via DERP&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>home&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> in 45ms
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pong from oneplus-8t &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>10.1.0.8&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> via DERP&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>home&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> in 30ms
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>完美！这里的 home 当然是我的家庭宽带，部署方式与上面所说的国内云主机类似，你需要额外开启公网的端口映射（12345/tcp, 3478/udp）。还有一点需要注意的是配置内容：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Regions&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#204a87;font-weight:bold">&amp;#34;901&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>      &lt;span style="color:#204a87;font-weight:bold">&amp;#34;RegionID&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">901&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>      &lt;span style="color:#204a87;font-weight:bold">&amp;#34;RegionCode&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;ali-sh&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>      &lt;span style="color:#204a87;font-weight:bold">&amp;#34;RegionName&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Aliyun Shanghai&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>      &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Nodes&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>          &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Name&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;901a&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>          &lt;span style="color:#204a87;font-weight:bold">&amp;#34;RegionID&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">901&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>          &lt;span style="color:#204a87;font-weight:bold">&amp;#34;DERPPort&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">443&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>          &lt;span style="color:#204a87;font-weight:bold">&amp;#34;HostName&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;xxxx&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>          &lt;span style="color:#204a87;font-weight:bold">&amp;#34;IPv4&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;xxxx&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>          &lt;span style="color:#204a87;font-weight:bold">&amp;#34;InsecureForTests&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>      &lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#204a87;font-weight:bold">&amp;#34;902&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>      &lt;span style="color:#204a87;font-weight:bold">&amp;#34;RegionID&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">902&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>      &lt;span style="color:#204a87;font-weight:bold">&amp;#34;RegionCode&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;home&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>      &lt;span style="color:#204a87;font-weight:bold">&amp;#34;RegionName&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Home Hangzhou&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>      &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Nodes&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>          &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Name&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;902a&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>          &lt;span style="color:#204a87;font-weight:bold">&amp;#34;RegionID&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">902&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>          &lt;span style="color:#204a87;font-weight:bold">&amp;#34;DERPPort&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">12345&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>          &lt;span style="color:#204a87;font-weight:bold">&amp;#34;HostName&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;xxxx&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>          &lt;span style="color:#204a87;font-weight:bold">&amp;#34;InsecureForTests&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>      &lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>与国内云主机相比，家庭宽带的配置有两点不同：&lt;/p>
&lt;ul>
&lt;li>需要删除 &lt;code>IPv4&lt;/code> 配置项。因为家用宽带的公网 IP 是动态变化的，所以你需要使用 &lt;strong>DDNS&lt;/strong> 来动态解析公网 IP。&lt;/li>
&lt;li>&lt;code>HostName&lt;/code> 最好填域名，因为你的公网 IP 是动态变化的，没法填写 IP，除非你不停地修改配置文件。填域名也没关系啦，反正不会验证域名的，也不用关心证书的事情，&lt;strong>只要域名能解析到你的公网 IP 即可。&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h2 id="防止-derp-被白嫖">防止 DERP 被白嫖&lt;a class="td-heading-self-link" href="#%e9%98%b2%e6%ad%a2-derp-%e8%a2%ab%e7%99%bd%e5%ab%96" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>默认情况下 DERP 服务器是可以被白嫖的，只要别人知道了你的 DERP 服务器的地址和端口，就可以为他所用。如果你的服务器是个小水管，用的人多了可能会把你撑爆，因此我们需要修改配置来防止被白嫖。&lt;/p>
&lt;blockquote>
&lt;p>特别声明：只有使用域名的方式才可以通过认证防止被白嫖，使用纯 IP 的方式无法防白嫖，你只能小心翼翼地隐藏好你的 IP 和端口，不能让别人知道。&lt;/p>
&lt;/blockquote>
&lt;p>只需要做两件事情：&lt;/p>
&lt;p>&lt;strong>1、在 DERP 服务器上安装 Tailscale。&lt;/strong>&lt;/p>
&lt;p>第一步需要在 DERP 服务所在的主机上安装 Tailscale 客户端，&lt;strong>启动 tailscaled 进程&lt;/strong>。&lt;/p>
&lt;p>&lt;strong>2、derper 启动时加上参数 &lt;strong>&lt;code>**--verify-clients**&lt;/code>&lt;/strong>。&lt;/strong>&lt;/p>
&lt;p>本文推荐的是通过容器启动，Dockerfile 内容[5]如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">FROM&lt;/span>&lt;span style="color:#4e9a06"> golang:latest AS builder&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">LABEL&lt;/span> org.opencontainers.image.source &amp;lt;https://github.com/yangchuansheng/docker-image&amp;gt;&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">WORKDIR&lt;/span>&lt;span style="color:#4e9a06"> /app&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#4e9a06">\#&lt;/span> &amp;lt;https://tailscale.com/kb/1118/custom-derp-servers/&amp;gt;&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">RUN&lt;/span> go install tailscale.com/cmd/derper@main&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">FROM&lt;/span>&lt;span style="color:#4e9a06"> ubuntu&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">WORKDIR&lt;/span>&lt;span style="color:#4e9a06"> /app&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">ARG&lt;/span> &lt;span style="color:#000">DEBIAN_FRONTEND&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>noninteractive
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">RUN&lt;/span> apt-get update &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#4e9a06">\&amp;lt;&lt;/span>br /&amp;gt;    apt-get install -y --no-install-recommends apt-utils &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#4e9a06">\&amp;lt;&lt;/span>br /&amp;gt;    apt-get install -y ca-certificates &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#4e9a06">\&amp;lt;&lt;/span>br /&amp;gt;    mkdir /app/certs&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">ENV&lt;/span> DERP_DOMAIN your-hostname.com&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">ENV&lt;/span> DERP_CERT_MODE letsencrypt&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">ENV&lt;/span> DERP_CERT_DIR /app/certs&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">ENV&lt;/span> DERP_ADDR :443&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">ENV&lt;/span> DERP_STUN true&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">ENV&lt;/span> DERP_HTTP_PORT &lt;span style="color:#0000cf;font-weight:bold">80&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">ENV&lt;/span> DERP_VERIFY_CLIENTS false&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">COPY&lt;/span> --from&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>builder /go/bin/derper .&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">CMD&lt;/span> /app/derper --hostname&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>!&lt;span style="color:#ce5c00;font-weight:bold">[](&lt;/span>https://notes-learning.oss-cn-beijing.aliyuncs.com/pq65ei/latex&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>DERP_HTTP_PORT &lt;span style="color:#4e9a06">\&amp;lt;&lt;/span>br /&amp;gt;    --verify-clients&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">$DERP_VERIFY_CLIENTS&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>默认情况下 &lt;code>--verify-clients&lt;/code> 参数设置的是 &lt;code>false&lt;/code>。我们不需要对 Dockerfile 内容做任何改动，只需在容器启动时加上环境变量即可，将之前的启动命令修改一下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker run --restart always &lt;span style="color:#4e9a06">\ &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  --name derper -p 12345:12345 -p 3478:3478/udp &lt;span style="color:#4e9a06">\ &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  -v /root/.acme.sh/xxxx/:/app/certs &lt;span style="color:#4e9a06">\ &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  -e &lt;span style="color:#000">DERP_CERT_MODE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>manual &lt;span style="color:#4e9a06">\ &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  -e &lt;span style="color:#000">DERP_ADDR&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>12345 &lt;span style="color:#4e9a06">\ &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  -e &lt;span style="color:#000">DERP_DOMAIN&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>xxxx &lt;span style="color:#4e9a06">\ &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  -e &lt;span style="color:#000">DERP_VERIFY_CLIENTS&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87">true&lt;/span> &lt;span style="color:#4e9a06">\ &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  -d ghcr.io/yangchuansheng/derper:latest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这样就大功告成了，别人即使知道了你的 DERP 服务器地址也无法使用，但还是要说明一点，即便如此，你也应该尽量不让别人知道你的服务器地址，防止别人有可趁之机。&lt;/p>
&lt;h2 id="总结">总结&lt;a class="td-heading-self-link" href="#%e6%80%bb%e7%bb%93" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>本文给大家介绍了 STUN 对于辅助 NAT 穿透的意义，科普了几种常见的中继协议，包含 Tailscale 自研的 DERP 协议。最后手把手教大家如何自建私有的 DERP 服务器，并让 Tailscale 使用我们自建的 DERP 服务器。&lt;/p>
&lt;h2 id="参考资料">参考资料&lt;a class="td-heading-self-link" href="#%e5%8f%82%e8%80%83%e8%b5%84%e6%96%99" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>NAT 穿透是如何工作的：技术原理及企业级实践[6]&lt;/li>
&lt;li>Encrypted TCP relays (DERP)[8]&lt;/li>
&lt;/ul>
&lt;h3 id="引用链接">引用链接&lt;a class="td-heading-self-link" href="#%e5%bc%95%e7%94%a8%e9%93%be%e6%8e%a5" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>[4]我的 GitHub 仓库: &lt;a href="https://github.com/yangchuansheng/ip_derper">&lt;em>https://github.com/yangchuansheng/ip_derper&lt;/em>&lt;/a>&lt;/p>
&lt;p>[5]Dockerfile 内容: &lt;a href="https://github.com/yangchuansheng/docker-image/blob/master/derper/Dockerfile">&lt;em>https://github.com/yangchuansheng/docker-image/blob/master/derper/Dockerfile&lt;/em>&lt;/a>&lt;/p>
&lt;p>[6]NAT 穿透是如何工作的：技术原理及企业级实践: &lt;a href="https://arthurchiao.art/blog/how-nat-traversal-works-zh/">&lt;em>https://arthurchiao.art/blog/how-nat-traversal-works-zh/&lt;/em>&lt;/a>&lt;/p>
&lt;p>[7]Custom DERP Servers: &lt;a href="https://tailscale.com/kb/1118/custom-derp-servers/">&lt;em>https://tailscale.com/kb/1118/custom-derp-servers/&lt;/em>&lt;/a>&lt;/p>
&lt;p>[8]Encrypted TCP relays (DERP): &lt;a href="https://tailscale.com/blog/how-tailscale-works/#encrypted-tcp-relays-derp">&lt;em>https://tailscale.com/blog/how-tailscale-works/#encrypted-tcp-relays-derp&lt;/em>&lt;/a>&lt;/p></description></item><item><title>Docs: tailscale 命令行工具</title><link>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/Tunneling-Protocol/Tailscale/tailscale-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/Tunneling-Protocol/Tailscale/tailscale-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://tailscale.com/kb/1080/cli">官方文档，参考 - CLI&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h1 id="syntax语法">Syntax(语法)&lt;a class="td-heading-self-link" href="#syntax%e8%af%ad%e6%b3%95" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;strong>tailscale COMMAND&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>netcheck&lt;/strong> # 打印本地网络状况分析。主要是显示当前可用的 DERP 以及本机到各个 DERP 的连接延迟 等信息。&lt;/li>
&lt;li>&lt;strong>ping &amp;lt;HOST&amp;gt;&lt;/strong> # 通过 Tailscale ping 指定主机，看看本机是如何路由到目标的（是直通还是经过了 DERP）&lt;/li>
&lt;/ul></description></item><item><title>Docs: Tailscale ACL 访问控制策略</title><link>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/Tunneling-Protocol/Tailscale/Tailscale-ACL-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6%E7%AD%96%E7%95%A5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/Tunneling-Protocol/Tailscale/Tailscale-ACL-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6%E7%AD%96%E7%95%A5/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://mp.weixin.qq.com/s/JIbKEWJBDzP3mjWzlZ1DIA">公众号-云原生实验室，ailscale ACL 访问控制策略完全指南！&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>大家好，我是米开朗基杨。&lt;/p>
&lt;p>前面几篇文章给大家给介绍了 Tailscale 和 Headscale，包括 &lt;a href="https://mp.weixin.qq.com/s?__biz=MzU1MzY4NzQ1OA==&amp;amp;mid=2247504037&amp;amp;idx=1&amp;amp;sn=b059e0ed24be4ae39a25e5724700ff54&amp;amp;scene=21#wechat_redirect">👉Headscale 的安装部署和各个平台客户端的接入，以及如何打通各个节点所在的局域网&lt;/a>。同时还介绍了&lt;a href="https://mp.weixin.qq.com/s?__biz=MzU1MzY4NzQ1OA==&amp;amp;mid=2247504288&amp;amp;idx=1&amp;amp;sn=93d74eb52ac6d1bb176c1599b3c27962&amp;amp;scene=21#wechat_redirect">👉 如何自建私有的 DERP 服务器，并让 Tailscale 使用我们自建的 DERP 服务器&lt;/a>。&lt;/p>
&lt;p>今天我们来探索一下更复杂的场景。想象有这么一个场景，我系统通过 Tailscale 方便的连接一台不完全属于我的设备， 这台设备可能还有其他人也在使用。如果我仅仅是安装一个 Tailscale， 那么所有能登录这台设备的人都可以通过 Tailscale 连接我所有的设备。&lt;/p>
&lt;p>我能不能实现这样一种需求：&lt;strong>我可以连接这台节点，但是这台节点不能连接我的其他节点？&lt;/strong>&lt;/p>
&lt;p>这就是 Tailscale ACL（Access Control List）干的事情。ACL 可以严格限制特定用户或设备在 Tailscale 网络上访问的内容。&lt;/p>
&lt;blockquote>
&lt;p>❝ 虽然 Headscale 兼容 Tailscale 的 ACL，但还是有些许差异的。&lt;strong>本文所讲的 ACL 只适用于 Headscale&lt;/strong>，如果你使用的是官方的控制服务器，有些地方可能跟预期不符，请自行参考 Tailscale 的官方文档。&lt;/p>
&lt;/blockquote>
&lt;p>Tailscale/Headscale 的默认访问规则是 &lt;code>default deny&lt;/code>，也就是黑名单模式，只有在访问规则明确允许的情况下设备之间才能通信。所以 Tailscale/Headscale 默认会使用 &lt;code>allowall&lt;/code> 访问策略进行初始化，该策略允许加入到 Tailscale 网络的所有设备之间可以相互访问。&lt;/p>
&lt;p>Tailscale/Headscale 通过使用 group 这种概念，可以&lt;strong>只用非常少的规则就能表达大部分安全策略&lt;/strong>。除了 group 之外，还可以为设备打 tag 来进一步扩展访问策略。结合 group 和 tag 就可以构建出强大的基于角色的访问控制（RBAC）策略。&lt;/p>
&lt;p>关于 Tailscale 访问控制系统的详情可以参考这篇文章：基于角色的访问控制（RBAC）：演进历史、设计理念及简洁实现[1]。这篇文章深入探讨了访问控制系统的历史，从设计层面分析了 &lt;code>DAC -&amp;gt; MAC -&amp;gt; RBAC -&amp;gt; ABAC&lt;/code>  的演进历程及各模型的优缺点、适用场景等， 然后从实际需求出发，一步步地设计出一个实用、简洁、真正符合 RBAC 理念的访问控制系统。&lt;/p>
&lt;h2 id="tailscale-acl-语法">Tailscale ACL 语法&lt;a class="td-heading-self-link" href="#tailscale-acl-%e8%af%ad%e6%b3%95" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>Tailscale ACL 需要保存为 HuJSON 格式，也就是 human JSON[2]。HuJSON 是 JSON 的超集，允许添加注释以及结尾处添加逗号。这种格式更易于维护，对人类和机器都很友好。&lt;/p>
&lt;blockquote>
&lt;p>❝Headscale 除了支持 HuJSON 之外，还支持使用 YAML 来编写 ACL。本文如不作特殊说明，默认都使用 YAML 格式。&lt;/p>
&lt;/blockquote>
&lt;p>Headscale 的 ACL 策略主要包含以下几个部分：&lt;/p>
&lt;ul>
&lt;li>&lt;code>acls&lt;/code>：ACL 策略定义。&lt;/li>
&lt;li>&lt;code>groups&lt;/code>：用户的集合。Tailscale 官方控制器的“用户”指的是登录名，必须是邮箱格式。而 &lt;strong>Headscale 的用户就是 namesapce&lt;/strong>。&lt;/li>
&lt;li>&lt;code>hosts&lt;/code>：定义 IP 地址或者 CIDR 的别名。&lt;/li>
&lt;li>&lt;code>tagOwners&lt;/code>：指定哪些用户有权限给设备打 tag。&lt;/li>
&lt;li>&lt;code>autoApprovers&lt;/code>：允许哪些用户不需要控制端确认就可以宣告 Subnet 路由和 Exit Node。&lt;/li>
&lt;/ul>
&lt;h3 id="acl-规则">ACL 规则&lt;a class="td-heading-self-link" href="#acl-%e8%a7%84%e5%88%99" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>acls 部分是 ACL 规则主体，每个规则都是一个 HuJSON 对象，它授予从一组访问来源到一组访问目标的访问权限。&lt;/p>
&lt;p>所有的 ACL 规则最终表示的都是&lt;strong>允许从特定源 IP 地址到特定目标 IP 地址和端口的流量&lt;/strong>。虽然可以直接使用 IP 地址来编写 ACL 规则，但为了可读性以及方便维护，建议使用用户、Group 以及 tag 来编写规则，Tailscale 最终会将其转换为具体的 IP 地址和端口。&lt;/p>
&lt;p>每一个 ACL 访问规则长这个样子：&lt;/p>
&lt;p>&lt;code>- action: accept     src:       - xxx       - xxx       - ...     dst:       - xxx       - xxx       - ...     proto: protocol # 可选参数&lt;/code>&lt;/p>
&lt;p>Tailscale/Headscale 的默认访问规则是 &lt;code>default deny&lt;/code>，也就是黑名单模式，只有在访问规则明确允许的情况下设备之间才能通信。所以 ACL 规则中的 &lt;code>action&lt;/code> 值一般都写 &lt;code>accept&lt;/code>，毕竟默认是 deny 嘛。&lt;/p>
&lt;p>&lt;code>src&lt;/code> 字段表示访问来源列表，该字段可以填的值都在这个表格里：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>类型&lt;/th>
&lt;th>示例&lt;/th>
&lt;th>含义&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Any&lt;/td>
&lt;td>*&lt;/td>
&lt;td>无限制（即所有来源）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>用户(Namespace)&lt;/td>
&lt;td>dev1&lt;/td>
&lt;td>Headscale namespace 中的所有设备&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Group (ref)[3]&lt;/td>
&lt;td>group:example&lt;/td>
&lt;td>Group 中的所有用户&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tailscale IP&lt;/td>
&lt;td>100.101.102.103&lt;/td>
&lt;td>拥有给定 Tailscale IP 的设备&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Subnet CIDR (ref)[4]&lt;/td>
&lt;td>192.168.1.0/24&lt;/td>
&lt;td>CIDR 中的任意 IP&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Hosts (ref)[5]&lt;/td>
&lt;td>my-host&lt;/td>
&lt;td>&lt;code>hosts&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>字段中定义的任意 IP&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags (ref)[6]&lt;/td>
&lt;td>tag:production&lt;/td>
&lt;td>分配指定 tag 的所有设备&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tailnet members&lt;/td>
&lt;td>autogroup:members&lt;/td>
&lt;td>Tailscale 网络中的任意成员（设备）&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;code>proto&lt;/code> 字段是可选的，指定允许访问的协议。如歌不指定，默认可以访问所有 TCP 和 UDP 流量。&lt;/p>
&lt;p>&lt;code>proto&lt;/code> 可以指定为 IANA IP 协议编号[7] 1-255（例如 16）或以下命名别名之一（例如 sctp）：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>协议&lt;/th>
&lt;th>proto&lt;/th>
&lt;th>IANA 协议编号&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Internet Group Management (IGMP)&lt;/td>
&lt;td>igmp&lt;/td>
&lt;td>2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>IPv4 encapsulation&lt;/td>
&lt;td>ipv4, ip-in-ip&lt;/td>
&lt;td>4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Transmission Control (TCP)&lt;/td>
&lt;td>tcp&lt;/td>
&lt;td>6&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Exterior Gateway Protocol (EGP)&lt;/td>
&lt;td>egp&lt;/td>
&lt;td>8&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Any private interior gateway&lt;/td>
&lt;td>igp&lt;/td>
&lt;td>9&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>User Datagram (UDP)&lt;/td>
&lt;td>udp&lt;/td>
&lt;td>17&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Generic Routing Encapsulation (GRE)&lt;/td>
&lt;td>gre&lt;/td>
&lt;td>47&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Encap Security Payload (ESP)&lt;/td>
&lt;td>esp&lt;/td>
&lt;td>50&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Authentication Header (AH)&lt;/td>
&lt;td>ah&lt;/td>
&lt;td>51&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Stream Control Transmission Protocol (SCTP)&lt;/td>
&lt;td>sctp&lt;/td>
&lt;td>132&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>只有 TCP、UDP 和 SCTP 流量支持指定端口，其他协议的端口必须指定为 &lt;code>*&lt;/code>。&lt;/p>
&lt;p>dst 字段表示访问目标列表，列表中的每个元素都用 &lt;code>hosts:ports&lt;/code> 来表示。hosts 的取值范围如下：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>类型&lt;/th>
&lt;th>示例&lt;/th>
&lt;th>含义&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Any&lt;/td>
&lt;td>*&lt;/td>
&lt;td>无限制（即所有访问目标）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>用户（Namespace）&lt;/td>
&lt;td>dev1&lt;/td>
&lt;td>Headscale namespace 中的所有设备&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Group (ref)[8]&lt;/td>
&lt;td>group:example&lt;/td>
&lt;td>Group 中的所有用户&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tailscale IP&lt;/td>
&lt;td>100.101.102.103&lt;/td>
&lt;td>拥有给定 Tailscale IP 的设备&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Hosts (ref)[9]&lt;/td>
&lt;td>my-host&lt;/td>
&lt;td>&lt;code>hosts&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>字段中定义的任意 IP&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Subnet CIDR (ref)[10]&lt;/td>
&lt;td>192.168.1.0/24&lt;/td>
&lt;td>CIDR 中的任意 IP&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags (ref)[11]&lt;/td>
&lt;td>tag:production&lt;/td>
&lt;td>分配指定 tag 的所有设备&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Internet access (ref)[12]&lt;/td>
&lt;td>autogroup:internet&lt;/td>
&lt;td>通过 Exit Node 访问互联网&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Own devices&lt;/td>
&lt;td>autogroup:self&lt;/td>
&lt;td>允许 src 中定义的来源访问自己（不包含分配了 tag 的设备）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tailnet devices&lt;/td>
&lt;td>autogroup:members&lt;/td>
&lt;td>Tailscale 网络中的任意成员（设备）&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;code>ports&lt;/code> 的取值范围：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>类型&lt;/th>
&lt;th>示例&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Any&lt;/td>
&lt;td>*&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Single&lt;/td>
&lt;td>22&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Multiple&lt;/td>
&lt;td>80,443&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Range&lt;/td>
&lt;td>1000-2000&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="groups">Groups&lt;a class="td-heading-self-link" href="#groups" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>groups 定义了一组用户的集合，YAML 格式示例配置如下：&lt;/p>
&lt;p>&lt;code>groups:   group:admin:     - &amp;quot;admin1&amp;quot;   group:dev:     - &amp;quot;dev1&amp;quot;     - &amp;quot;dev2&amp;quot;&lt;/code>&lt;/p>
&lt;p>huJSON 格式：&lt;/p>
&lt;p>&lt;code>&amp;quot;groups&amp;quot;: {   &amp;quot;group:admin&amp;quot;: [&amp;quot;admin1&amp;quot;],   &amp;quot;group:dev&amp;quot;: [&amp;quot;dev1&amp;quot;, &amp;quot;dev2&amp;quot;], },&lt;/code>&lt;/p>
&lt;p>每个 Group 必须以 &lt;code>group:&lt;/code> 开头，Group 之间也不能相互嵌套。&lt;/p>
&lt;h3 id="autogroups">Autogroups&lt;a class="td-heading-self-link" href="#autogroups" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>autogroup 是一个特殊的 group，它自动包含具有相同属性的用户或者访问目标，可以在 ACL 规则中调用 autogroup。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Autogroup&lt;/th>
&lt;th>允许在 ACL 的哪个字段调用&lt;/th>
&lt;th>含义&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>autogroup:internet&lt;/td>
&lt;td>dst&lt;/td>
&lt;td>用来允许任何用户通过任意 Exit Node 访问你的 Tailscale 网络&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>autogroup:members&lt;/td>
&lt;td>src 或者 dst&lt;/td>
&lt;td>用来允许 Tailscale 网络中的任意成员（设备）访问别人或者被访问&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>autogroup:self&lt;/td>
&lt;td>dst&lt;/td>
&lt;td>用来允许 src 中定义的来源访问自己&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>示例配置：&lt;/p>
&lt;p>&lt;code>acls:   # 允许所有员工访问自己的设备   - action: accept     src:       - &amp;quot;autogroup:members&amp;quot;     dst:       - &amp;quot;autogroup:self:*&amp;quot;   # 允许所有员工访问打了标签 tag:corp 的设备   - action: accept     src:       - &amp;quot;autogroup:members&amp;quot;     dst:       - &amp;quot;tag:corp:*&amp;quot;&lt;/code>&lt;/p>
&lt;h3 id="hosts">Hosts&lt;a class="td-heading-self-link" href="#hosts" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>Hosts 用来定义 IP 地址或者 CIDR 的别名，使 ACL 可读性更强。示例配置：&lt;/p>
&lt;p>&lt;code>hosts:   example-host-1: &amp;quot;100.100.100.100&amp;quot;   example-network-1: &amp;quot;100.100.101.100/24&lt;/code>&lt;/p>
&lt;h3 id="tag-owners">Tag Owners&lt;a class="td-heading-self-link" href="#tag-owners" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>&lt;code>tagOwners&lt;/code> 定义了哪些用户有权限给设备分配指定的 tag。示例配置：&lt;/p>
&lt;p>&lt;code>tagOwners:   tag:webserver:     - group:engineering   tag:secure-server:     - group:security-admins     - dev1   tag:corp:     - autogroup:members&lt;/code>&lt;/p>
&lt;p>这里表示的是允许 Group &lt;code>group:engineering&lt;/code> 给设备添加 tag &lt;code>tag:webserver&lt;/code>；允许 Group &lt;code>group:security-admins&lt;/code> 和用户（也就是 namespace）dev1 给设备添加 tag &lt;code>tag:secure-server&lt;/code>；允许 Tailscale 网络中的任意成员（设备）给设备添加 tag &lt;code>tag:corp&lt;/code>。&lt;/p>
&lt;p>每个 tag 名称必须以 &lt;code>tag:&lt;/code> 开头，每个 tag 的所有者可以是用户、Group 或者 &lt;code>autogroup:members&lt;/code>。&lt;/p>
&lt;h3 id="auto-approvers">Auto Approvers&lt;a class="td-heading-self-link" href="#auto-approvers" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>&lt;code>autoApprovers&lt;/code> 定义了&lt;strong>无需 Headscale 控制端批准即可执行某些操作&lt;/strong>的用户列表，包括宣告特定的子网路由或者 Exit Node。&lt;/p>
&lt;p>当然了，即使可以通过 &lt;code>autoApprovers&lt;/code> 自动批准，Headscale 控制端仍然可以禁用路由或者 Exit Node，但不推荐这种做法，因为控制端只能临时修改，&lt;code>autoApprovers&lt;/code> 中定义的用户列表仍然可以继续宣告路由或 Exit Node，所以正确的做法应该是修改 &lt;code>autoApprovers&lt;/code> 中的用户列表来控制宣告的路由或者 Exit Node。&lt;/p>
&lt;p>autoApprovers 示例配置：&lt;/p>
&lt;p>&lt;code>autoApprovers:   exitNode:     - &amp;quot;default&amp;quot;     - &amp;quot;tag:bar&amp;quot;   routes:     &amp;quot;10.0.0.0/24&amp;quot;:       - &amp;quot;group:engineering&amp;quot;       - &amp;quot;dev1&amp;quot;       - &amp;quot;tag:foo&amp;quot;&lt;/code>&lt;/p>
&lt;p>这里表示允许 &lt;code>default&lt;/code> namespace 中的设备（以及打上标签 &lt;code>tag:bar&lt;/code> 的设备）将自己宣告为 Exit Node；允许 Group &lt;code>group:engineering&lt;/code> 中的设备（以及 dev1 namespace 中的设备和打上标签 &lt;code>tag:foo&lt;/code> 的设备）宣告子网 &lt;code>10.0.0.0/24&lt;/code> 的路由。&lt;/p>
&lt;h2 id="headscale-配置-acl-的方法">Headscale 配置 ACL 的方法&lt;a class="td-heading-self-link" href="#headscale-%e9%85%8d%e7%bd%ae-acl-%e7%9a%84%e6%96%b9%e6%b3%95" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>要想在 Headscale 中配置 ACL，只需使用 HuJSON 或者 YAML 编写相应的 ACL 规则（HuJSON 格式的文件名后缀为 hujson），然后在 Headscale 的配置文件中引用 ACL 规则文件即可。&lt;/p>
&lt;p>&lt;code># Path to a file containg ACL policies. # ACLs can be defined as YAML or HUJSON. # https://tailscale.com/kb/1018/acls/ acl_policy_path: &amp;quot;./acl.yaml&amp;quot;&lt;/code>&lt;/p>
&lt;h2 id="acl-规则示例">ACL 规则示例&lt;a class="td-heading-self-link" href="#acl-%e8%a7%84%e5%88%99%e7%a4%ba%e4%be%8b" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;h3 id="允许所有流量">允许所有流量&lt;a class="td-heading-self-link" href="#%e5%85%81%e8%ae%b8%e6%89%80%e6%9c%89%e6%b5%81%e9%87%8f" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>默认的 ACL 规则允许所有访问流量，规则内容如下：&lt;/p>
&lt;p>&lt;code># acl.yaml acls:   - action: accept     src:       - &amp;quot;*&amp;quot;     dst:       - &amp;quot;*:*&amp;quot;&lt;/code>&lt;/p>
&lt;h3 id="允许特定-ns-访问所有流量">允许特定 ns 访问所有流量&lt;a class="td-heading-self-link" href="#%e5%85%81%e8%ae%b8%e7%89%b9%e5%ae%9a-ns-%e8%ae%bf%e9%97%ae%e6%89%80%e6%9c%89%e6%b5%81%e9%87%8f" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>假设 Headscale 有两个 namesapce：&lt;code>default&lt;/code> 和 &lt;code>guest&lt;/code>。管理员的设备都在 &lt;code>default&lt;/code> namespace 中，访客的设备都在 &lt;code>guest&lt;/code> namespace 中。&lt;/p>
&lt;p>`$ headscale ns ls
ID | Name    | Created
1  | default | 2022-08-20 06:15:17
2  | guest   | 2022-11-27 09:20:25&lt;/p>
&lt;p>$ headscale -n default node ls
ID | Hostname               | Name                            | NodeKey | Namespace | IP addresses | Ephemeral | Last seen           | Online  | Expired
2  | OpenWrt                | openwrt-njprohi0                | [7LdVc] | default   | 10.1.0.2,    | false     | 2022-08-26 04:18:43 | offline | no
5  | tailscale              | tailscale-home                  | [pwlFE] | default   | 10.1.0.5,    | false     | 2022-11-27 10:02:35 | online  | no
10 | k3s-worker05           | share                           | [5Z38M] | default   | 10.1.0.9,    | false     | 2022-11-22 18:49:25 | offline | no
11 | Galaxy a52s            | galaxy-a52s-arg5owsh            | [U+0qY] | default   | 10.1.0.1,    | false     | 2022-11-27 10:02:34 | online  | no&lt;/p>
&lt;p>$ headscale -n guest node ls
ID | Hostname  | Name      | NodeKey | Namespace | IP addresses | Ephemeral | Last seen           | Online | Expired
12 | guest-1 | guest-1 | [75qSK] | guest     | 10.1.0.10,   | false     | 2022-11-27 10:05:33 | online | no
13 | guest-2 | guest-2 | [8lONp] | guest     | 10.1.0.11,   | false     | 2022-11-27 10:05:31 | online | no&lt;/p>
&lt;p>`&lt;/p>
&lt;p>现在我想让 &lt;code>default&lt;/code> namespace 中的设备可以访问所有设备，而 &lt;code>guest&lt;/code> namespace 中的设备只能访问 &lt;code>guest&lt;/code> namespace 中的设备，那么规则应该这么写：&lt;/p>
&lt;p>&lt;code># acl.yaml acls:   - action: accept     src:       - &amp;quot;default&amp;quot;     dst:       - &amp;quot;*:*&amp;quot;       - &amp;quot;guest:*&amp;quot;   - action: accept     src:       - &amp;quot;guest&amp;quot;     dst:       - &amp;quot;guest:*&amp;quot;&lt;/code>&lt;/p>
&lt;p>在 &lt;code>guest-1&lt;/code> 上查看 Tailscale 状态：&lt;/p>
&lt;p>&lt;code>$ tailscale status 10.1.0.10       ks-node-2            guest        linux   -                 desktop-aoulurh-j7dfnsul.default.example.com default      windows offline                 galaxy-a52s-arg5owsh.default.example.com default      android active; relay &amp;quot;hs&amp;quot;, tx 12112 rx 11988                 guest-3            guest        linux   active; direct 172.31.73.176:41641, tx 2552 rx 2440                 openwrt-njprohi0.default.example.com default      linux   offline                 tailscale-home.default.example.com default      linux   active; direct 60.184.243.56:41641, tx 3416 rx 25576&lt;/code>&lt;/p>
&lt;p>看起来 &lt;code>guest-1&lt;/code> 可以看到所有的设备，但事实上它只能 ping 通 &lt;code>guest-2&lt;/code>，我们来验证一下：&lt;/p>
&lt;p>&lt;code>$ ping 10.1.0.1 PING 10.1.0.1 (10.1.0.1) 56(84) bytes of data. ^C --- 10.1.0.1 ping statistics --- 9 packets transmitted, 0 received, 100% packet loss, time 8169ms&lt;/code>&lt;/p>
&lt;p>果然是 ping 不通的。但是 10.1.0.1 这个设备是&lt;strong>可以反向 ping 通&lt;/strong> guest-1 的：&lt;/p>
&lt;p>&lt;code># 在 10.1.0.1 所在的设备操作 $ ping 10.1.0.10 PING 10.1.0.10 (10.1.0.10) 56(84) bytes of data. 64 bytes from 10.1.0.10: icmp_seq=1 ttl=64 time=68.9 ms 64 bytes from 10.1.0.10: icmp_seq=2 ttl=64 time=91.5 ms 64 bytes from 10.1.0.10: icmp_seq=3 ttl=64 time=85.3 ms 64 bytes from 10.1.0.10: icmp_seq=4 ttl=64 time=79.7 ms ^C --- 10.1.0.10 ping statistics --- 4 packets transmitted, 4 received, 0% packet loss, time 3005ms rtt min/avg/max/mdev = 68.967/81.389/91.551/8.306 ms&lt;/code>&lt;/p>
&lt;p>ssh 测试一下：&lt;/p>
&lt;p>&lt;code>$ ssh root@10.1.0.10 root@10.1.0.10's password:&lt;/code>&lt;/p>
&lt;p>完美。&lt;/p>
&lt;p>下面再来看看 &lt;code>guest-1&lt;/code> 能不能 ping 通 &lt;code>guest-2&lt;/code>：&lt;/p>
&lt;p>&lt;code># 在 guest-1 设备上操作 $ ping 10.1.0.11 PING 10.1.0.11 (10.1.0.11) 56(84) bytes of data. 64 bytes from 10.1.0.11: icmp_seq=1 ttl=64 time=2.93 ms 64 bytes from 10.1.0.11: icmp_seq=2 ttl=64 time=1.33 ms ^C --- 10.1.0.11 ping statistics --- 2 packets transmitted, 2 received, 0% packet loss, time 1001ms rtt min/avg/max/mdev = 1.325/2.128/2.931/0.803 ms&lt;/code>&lt;/p>
&lt;p>和我在上面预测的效果一样，ACL 规则生效了。&lt;/p>
&lt;h3 id="神奇的-tag">神奇的 tag&lt;a class="td-heading-self-link" href="#%e7%a5%9e%e5%a5%87%e7%9a%84-tag" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>tag 有一个非常神奇的功效：它可以让 &lt;code>src&lt;/code> 和 &lt;code>dst&lt;/code> 中的元素失效。具体什么意思呢？&lt;strong>假设你的 src 或 dst 中指定了 namespace 或者 group，那么这个规则只对这个 namespace 或者 group 中（没有分配 tag 的设备）生效。&lt;/strong>&lt;/p>
&lt;p>举个例子你就明白了，现在我给 guest-2 打上一个 tag：&lt;/p>
&lt;p>`$ headscale node tag -i 13 -t tag:test
Machine updated&lt;/p>
&lt;p>$ headscale -n guest node ls -t
ID | Hostname  | Name      | NodeKey | Namespace | IP addresses | Ephemeral | Last seen           | Online | Expired | ForcedTags | InvalidTags | ValidTags
12 | ks-node-2 | ks-node-2 | [75qSK] | guest     | 10.1.0.10,   | false     | 2022-11-27 10:18:35 | online | no      |            |             |
13 | ks-node-3 | ks-node-3 | [8lONp] | guest     | 10.1.0.11,   | false     | 2022-11-27 10:18:31 | online | no      | tag:test   |             |&lt;/p>
&lt;p>`&lt;/p>
&lt;p>此时 guest-1 就 ping 不通 guest-2 了：&lt;/p>
&lt;p>&lt;code># 在 guest-1 设备上操作 $ ping 10.1.0.11 PING 10.1.0.11 (10.1.0.11) 56(84) bytes of data. ^C --- 10.1.0.11 ping statistics --- 4 packets transmitted, 0 received, 100% packet loss, time 3070ms&lt;/code>&lt;/p>
&lt;p>这就说明 guest-2 并不包含在 &lt;code>guest:*&lt;/code> 这个访问目标中，也就是说打了 tag 的设备并不包含在 &lt;code>guest:*&lt;/code> 这个访问目标中。&lt;/p>
&lt;p>此时其他设备如果还想继续 guest-2，必须在 dst 中指定 &lt;code>tag:test&lt;/code>：&lt;/p>
&lt;p>&lt;code>acls:   - action: accept     src:       - &amp;quot;default&amp;quot;     dst:       - &amp;quot;*:*&amp;quot;       - &amp;quot;guest:*&amp;quot;       - &amp;quot;tag:test:*&amp;quot;   - action: accept     src:       - &amp;quot;guest&amp;quot;     dst:       - &amp;quot;guest:*&amp;quot;       - &amp;quot;tag:test:*&amp;quot;&lt;/code>&lt;/p>
&lt;p>再次测试访问：&lt;/p>
&lt;p>&lt;code># 在 guest-1 设备上操作 $ ping 10.1.0.11 PING 10.1.0.11 (10.1.0.11) 56(84) bytes of data. 64 bytes from 10.1.0.11: icmp_seq=1 ttl=64 time=1.31 ms 64 bytes from 10.1.0.11: icmp_seq=2 ttl=64 time=3.40 ms ^C --- 10.1.0.11 ping statistics --- 2 packets transmitted, 2 received, 0% packet loss, time 1002ms rtt min/avg/max/mdev = 1.314/2.355/3.397/1.041 ms&lt;/code>&lt;/p>
&lt;p>果然可以 ping 通了。&lt;/p>
&lt;h2 id="总结">总结&lt;a class="td-heading-self-link" href="#%e6%80%bb%e7%bb%93" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>Tailscale/Headscale 的 ACL 非常强大，你可以基于 ACL 实现各种各样的访问控制策略，本文只是给出了几个关键示例，帮助大家理解其用法，更多功能大家可以自行探索（比如 group 等）。下篇文章将会给大家介绍如何配置 Headscale 的 Exit Node，以及各个设备如何使用 Exit Node，届时会用到 ACL 里面的 &lt;code>autoApprovers&lt;/code>，敬请期待！&lt;/p>
&lt;h3 id="引用链接">引用链接&lt;a class="td-heading-self-link" href="#%e5%bc%95%e7%94%a8%e9%93%be%e6%8e%a5" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;pre tabindex="0">&lt;code>\[1]基于角色的访问控制（RBAC）：演进历史、设计理念及简洁实现: [_http://arthurchiao.art/blog/rbac-as-it-meant-to-be-zh/_](http://arthurchiao.art/blog/rbac-as-it-meant-to-be-zh/)
\[2]human JSON: [_https://github.com/tailscale/hujson_](https://github.com/tailscale/hujson)
[3](ref): [_https://tailscale.com/kb/1018/acls/#groups_](https://tailscale.com/kb/1018/acls/#groups)
[4](ref): [_https://tailscale.com/kb/1019/subnets_](https://tailscale.com/kb/1019/subnets)
[5](ref): [_https://tailscale.com/kb/1018/acls/#hosts_](https://tailscale.com/kb/1018/acls/#hosts)
[6](ref): [_https://tailscale.com/kb/1068/acl-tags_](https://tailscale.com/kb/1068/acl-tags)
\[7]IANA IP 协议编号: [_https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml_](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)
[8](ref): [_https://tailscale.com/kb/1018/acls/#groups_](https://tailscale.com/kb/1018/acls/#groups)
[9](ref): [_https://tailscale.com/kb/1018/acls/#hosts_](https://tailscale.com/kb/1018/acls/#hosts)
[10](ref): [_https://tailscale.com/kb/1019/subnets_](https://tailscale.com/kb/1019/subnets)
[11](ref): [_https://tailscale.com/kb/1068/acl-tags_](https://tailscale.com/kb/1068/acl-tags)
[12](ref): [_https://tailscale.com/kb/1103/exit-nodes_](https://tailscale.com/kb/1103/exit-nodes)
&lt;/code>&lt;/pre></description></item></channel></rss>