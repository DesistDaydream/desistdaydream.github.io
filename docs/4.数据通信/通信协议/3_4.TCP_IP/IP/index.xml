<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦 – IP</title><link>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/3_4.TCP_IP/IP/</link><description>Recent content in IP on 断念梦</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/3_4.TCP_IP/IP/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: IP</title><link>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/3_4.TCP_IP/IP/IP/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/3_4.TCP_IP/IP/IP/</guid><description>
&lt;h1 id="概述">概述&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://datatracker.ietf.org/doc/html/rfc791">RFC,791&lt;/a>(IP 规范)&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Internet_Protocol">Wiki,Internet Protocol&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/IPv4">Wiki,IPv4&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Mask_(computing)">Wiki,Mask(掩码)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Classful_network">Wiki,Classful Network(分类网络)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.iana.org/assignments/ipv4-address-space/ipv4-address-space.xhtml">IANA,IPv4 地址空间分配情况&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://www.apnic.net/">APNIC&lt;/a>(管理亚太地区的 IP 地址注册机构)
&lt;ul>
&lt;li>&lt;a href="https://ftp.apnic.net/stats/apnic/">APNIC,帮助-FTP 数据库&lt;/a>(亚太地区所有分配的 IP 地址信息)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://www.iana.org/assignments/iana-ipv4-special-registry/iana-ipv4-special-registry.xhtml">IANA,IPv4 特殊用途地址注册表&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;strong>Internet Protocol(互联网协议，简称 IP)&lt;/strong> 是&lt;a href="https://en.wikipedia.org/wiki/Internet_protocol_suite">互联网协议套件&lt;/a>(其中包含 TCP/IP)中的主要通信协议，用于跨网络边界中继数据报。它的路由功能可实现互联网络，并实质上建立了 Internet。&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Internet protocol suite(互联网协议套件)&lt;/strong> 是互联网和类似计算机网络中使用的概念模型和通信协议集。由于该套件中的基本协议是 &lt;strong>TCP(传输控制协议)&lt;/strong> 和 &lt;strong>IP(互联网协议)&lt;/strong>，因此通常被称为 &lt;strong>TCP/IP&lt;/strong>。在其开发过程中，其版本被称为国防部（DoD）模型，因为联网方法的开发是由美国国防部通过 DARPA 资助的。它的实现是一个协议栈。&lt;/p>
&lt;/blockquote>
&lt;p>IP 基于数据包的 Header 中的 IP 地址，将数据包从源主机发送到目标主机。基于此目的，IP 还定义了数据包的封装结构、以及一种寻址方法。寻址方法用来使用源和目标的信息标记数据报。&lt;/p>
&lt;p>从历史上看，IP 是在 1974 年由 Vint Cerf 和 Bob Kahn 引入的原始 &lt;strong>Transmission Control Program(传输控制程序)&lt;/strong> 中的&lt;a href="https://en.wikipedia.org/wiki/Connectionless_communication">无连接&lt;/a>数据报服务。该服务由一项面向连接的服务补充，成为 &lt;a href="https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/3_4.TCP_IP/TCP/TCP.md">&lt;strong>Transmission Control Protocol(传输控制协议，简称 TCP)&lt;/strong>&lt;/a> 的基础。因此 IP 套件通常称为 TCP/IP。IP 的第一个版本是 IPv4，继任者是 IPv6&lt;/p>
&lt;h1 id="ipv4-地址">IPv4 地址&lt;/h1>
&lt;p>IPv4 地址最多使用 32 bit 表示，即最多 32 个 1，这 32 bit 以 &lt;code>点&lt;/code> 分割为 4 组，每组 8 bit，在使用时，使用十进制表示。比如：&lt;code>192.168.0.1&lt;/code>。
&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/nahgxm/1633534934848-ca44c51a-c787-47e7-a82b-589b6f78124b.jpeg" alt="">&lt;/p>
&lt;h2 id="ipv4-地址结构">IPv4 地址结构&lt;/h2>
&lt;p>IPv4 地址的这 32 bit 可以分为两部分&lt;/p>
&lt;ul>
&lt;li>网络位 # n bit&lt;/li>
&lt;li>主机位 # 32 - n bit&lt;/li>
&lt;/ul>
&lt;p>这两个部分通过 &lt;strong>Subnet Mast(子网掩码)&lt;/strong> 来区分，子网掩码由一连串的 1 和 0 组成，遵从以下规则：&lt;/p>
&lt;ul>
&lt;li>1 对应网络位&lt;/li>
&lt;li>0 对应主机位&lt;/li>
&lt;li>1 和 0 不能交叉出现&lt;/li>
&lt;/ul>
&lt;p>将子网掩码和 IP 地址作“与”操作后，IP 地址的主机部分将被丢弃，剩余的是网络地址和子网地址。&lt;/p>
&lt;p>例如：一个 IP 地址为 10.2.45.1，子网掩码为 255.255.252.0，“与” 运算得到：10.2.44.0，则网络设备认为该 IP 地址的网络号与子网号为 10.2.44.0，属于 10.2.44.0/22 网络，其中/22 表示子网掩码长度为 22 位，即从前向后连续的 22 个 1。&lt;/p>
&lt;p>00001010.00000010.00101101.00000001
与运算
11111111.11111111.11111100.00000000
结果为
00001010.00000010.00101100.00000001 即 10.2.44.0&lt;/p>
&lt;h2 id="ipv4-地址分类">IPv4 地址分类&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>单播地址&lt;/strong>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>类&lt;/th>
&lt;th>开头的 bit&lt;/th>
&lt;th>网络位 bit 数&lt;/th>
&lt;th>主机位 bit 数&lt;/th>
&lt;th>子网数量&lt;/th>
&lt;th>每个子网的地址数&lt;/th>
&lt;th>总地址数&lt;/th>
&lt;th>起始地址&lt;/th>
&lt;th>结束地址&lt;/th>
&lt;th>默认子网掩码&lt;/th>
&lt;th>&lt;a href="https://en.wikipedia.org/wiki/CIDR_notation">CIDR&lt;/a>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Class A&lt;/td>
&lt;td>0&lt;/td>
&lt;td>8&lt;/td>
&lt;td>24&lt;/td>
&lt;td>128 (27)&lt;/td>
&lt;td>16,777,216 (224)&lt;/td>
&lt;td>2,147,483,648 (231)&lt;/td>
&lt;td>0.0.0.0&lt;/td>
&lt;td>127.255.255.255&lt;a href="https://en.wikipedia.org/wiki/Classful_network#cite_note-5">[a]&lt;/a>&lt;/td>
&lt;td>255.0.0.0&lt;/td>
&lt;td>/8&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Class B&lt;/td>
&lt;td>10&lt;/td>
&lt;td>16&lt;/td>
&lt;td>16&lt;/td>
&lt;td>16,384 (214)&lt;/td>
&lt;td>65,536 (216)&lt;/td>
&lt;td>1,073,741,824 (230)&lt;/td>
&lt;td>128.0.0.0&lt;/td>
&lt;td>191.255.255.255&lt;/td>
&lt;td>255.255.0.0&lt;/td>
&lt;td>/16&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Class C&lt;/td>
&lt;td>110&lt;/td>
&lt;td>24&lt;/td>
&lt;td>8&lt;/td>
&lt;td>2,097,152 (221)&lt;/td>
&lt;td>256 (28)&lt;/td>
&lt;td>536,870,912 (229)&lt;/td>
&lt;td>192.0.0.0&lt;/td>
&lt;td>223.255.255.255&lt;/td>
&lt;td>255.255.255.0&lt;/td>
&lt;td>/24&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>组播地址&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>D 类 224-239 224.0.0.0 ~ 239.255.255.255&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>保留地址&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>E 类 240 - 254 240.0.0.0 ~ 255.255.255.255&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>特殊地址&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>网络地址&lt;/strong> # 网络位不变，主机位全为 0 的 IP 地址代表网络本身&lt;/li>
&lt;li>&lt;strong>Broadcast Address(广播地址)&lt;/strong> # 网络位不变，主机位全为 1 的 IP 地址代表本网络的广播。是专门用于同时向网络中所有&lt;a href="https://baike.baidu.com/item/%E5%B7%A5%E4%BD%9C%E7%AB%99/217955">工作站&lt;/a>进行发送的一个&lt;strong>地址&lt;/strong>。在使用&lt;a href="https://baike.baidu.com/item/TCP%2FIP%20%E5%8D%8F%E8%AE%AE/2116790">TCP/IP 协议&lt;/a>的网络中，&lt;a href="https://baike.baidu.com/item/%E4%B8%BB%E6%9C%BA/455151">主机&lt;/a>&lt;a href="https://baike.baidu.com/item/%E6%A0%87%E8%AF%86/6396929">标识&lt;/a>段 host ID 为全 1 的 IP 地址为广播地址，广播的分组传送给 host ID 段所涉及的所有&lt;a href="https://baike.baidu.com/item/%E8%AE%A1%E7%AE%97%E6%9C%BA/140338">计算机&lt;/a>。例如，对于 10.1.1.0 （255.0.0.0 ）网段，其直播&lt;a href="https://baike.baidu.com/item/%E5%B9%BF%E6%92%AD/656406">广播&lt;/a>地址为 10.255.255.255 （255 即为 2 进制的 11111111 ），当发出一个目的地址为 10.255.255.255 的分组（&lt;a href="https://baike.baidu.com/item/%E5%B0%81%E5%8C%85/2017669">封包&lt;/a>）时，它将被分发给该&lt;a href="https://baike.baidu.com/item/%E7%BD%91%E6%AE%B5/11026985">网段&lt;/a>上的所有计算机。&lt;/li>
&lt;li>&lt;strong>Link Local(链路本地地址)&lt;/strong> # 169.254.0.0 ~ 169.254.255.255。用于&lt;a href="https://en.wikipedia.org/wiki/Link-local_address">链路本地地址&lt;/a>&lt;a href="https://en.wikipedia.org/wiki/IPv4#cite_note-rfc3927-9">[9]&lt;/a>两台主机之间的单个链路上时，否则指定 IP 地址，如将有通常被从检索到的&lt;a href="https://en.wikipedia.org/wiki/DHCP">DHCP&lt;/a>服务器。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Private Network(私人网络地址)&lt;/strong>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>名称&lt;/th>
&lt;th>&lt;a href="https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing">CIDR&lt;/a>&lt;/th>
&lt;th>地址范围&lt;/th>
&lt;th>地址数量&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>24-bit block&lt;/td>
&lt;td>10.0.0.0/8&lt;/td>
&lt;td>10.0.0.0 – 10.255.255.255&lt;/td>
&lt;td>16777216&lt;/td>
&lt;td>一个完整的 A 类地址 Single Class A.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>20-bit block&lt;/td>
&lt;td>172.16.0.0/12&lt;/td>
&lt;td>172.16.0.0 – 172.31.255.255&lt;/td>
&lt;td>1048576&lt;/td>
&lt;td>Contiguous range of 16 Class B blocks.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>16-bit block&lt;/td>
&lt;td>192.168.0.0/16&lt;/td>
&lt;td>192.168.0.0 – 192.168.255.255&lt;/td>
&lt;td>65536&lt;/td>
&lt;td>Contiguous range of 256 Class C blocks.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h1 id="ipv4-datagram-结构">IPv4 Datagram 结构&lt;/h1>
&lt;p>IPv4 数据报被封装在链路层的 Frame 中&lt;/p>
&lt;p>IPv4 数据报首部共 14 个字段，其中 13 个是必须的，第 14 个是可选的。前 13 个字段长度固定为 20 Bytes，即 160 bit；第 14 个字段长度在 0 ~ 40 Bytes 之间。&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/nahgxm/1633533991076-2a9cb606-463a-4dd4-89c8-c3aae590c113.jpeg" alt="">&lt;/p>
&lt;p>对照 WireShark 中展示的内容看，排除 &lt;code>[]&lt;/code> 中的内容，每一行就是首部中的一个字段&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/nahgxm/1633532862295-9b420f37-7a97-43b9-85c8-1e973ea1aa59.png" alt="image.png">&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Version(版本)&lt;/strong> # IP 协议的版本号。IPv4 其版本号为 4，因此在这个字段上的值为“6”。&lt;/li>
&lt;li>&lt;strong>Internet Header Length(首部长度，简称 IHL)&lt;/strong> # 由于 Options 字段的长度是可变的。所以 IPv4 的首部长度也是可变的。该字段的值在 5 ~ 15 之间(该字段只有 4 bits，1111 即为 15)
&lt;ul>
&lt;li>首部长度的计算方式如下：&lt;code>IHL * 32 bits&lt;/code>。
&lt;ul>
&lt;li>若 IHL 的值为 5，也就是说 Options 字段为 0，那么 IPv4 首部长度就是 5 * 32 bits = 160 bits = 20 Bytes&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>就像上面的 IPv4 的 Datagram 结构图一样，每行都是 32 bit，不算 Options 字段和 Payload，那么刚好是 5 行。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Differentiated Services Field&lt;/strong> # 差异化的服务字段，基本没啥用。。。。o(╯□╰)o
&lt;ul>
&lt;li>&lt;strong>Differentiated Services Code Point&lt;/strong> # 最初定义为 Type Of Service(服务类型，简称 TOS)，&lt;/li>
&lt;li>&lt;strong>Explicit Congestion Notification&lt;/strong> # 该字段定义在 RFC3168 中，&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Total Length&lt;/strong> # 定义了整个 IP 数据报的大小，最小为 20 字节(Payload 字段无内容)，最大为 65535 字节。&lt;/li>
&lt;li>&lt;strong>Identification&lt;/strong># 主要用于唯一标识单个 IP 数据报的片段组。
&lt;ul>
&lt;li>一些实验工作建议将 ID 字段用于其他目的，例如添加数据包跟踪信息以帮助跟踪具有欺骗源地址的数据报，[31] 但 RFC 6864 现在禁止任何此类使用。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Flags&lt;/strong># 用来控制或识别 IP 分片之后的每个片段，这 3 个 bit 分别表示不同的含义，若字段值为 0 表示未设置，值为 1 表示设置，类似 TCP 首部中 Flags 字段的用法。
&lt;ul>
&lt;li>第一个 # Reserved，保留字段，必须为 0&lt;/li>
&lt;li>第二个 # Don&amp;rsquo;t Fragment(DF)&lt;/li>
&lt;li>第三个 # More Fragment(MF)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Fragment Offset(分片偏移)&lt;/strong> # IP 分片之后的偏移量&lt;/li>
&lt;li>&lt;strong>Time To Live(存活时间，简称 TTL)&lt;/strong> # 其实用 Hop Limit 的描述更准确，封包每经过一个路由器，怎会将 TTL 字段的值减 1，减到 0 是，该包将会被丢弃。&lt;/li>
&lt;li>&lt;strong>Protocol&lt;/strong># 封装 IP 数据报的上层协议，比如 6 表示 TCP、1 表示 ICMP
&lt;ul>
&lt;li>每种协议根据 &lt;a href="https://datatracker.ietf.org/doc/html/rfc1700">RFC 1700&lt;/a> 都分配了一个固定的编号，该 RFC 1700 最终被 RFC 3232 废弃，并将协议编号的维护工作，转到&lt;a href="https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml">IANA 的在线数据库&lt;/a>中&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Header Checksum&lt;/strong> # 当数据包到达路由器时，路由器会计算标头的校验和，并将其与校验和字段进行比较。如果值不匹配，则路由器会丢弃该数据包。&lt;/li>
&lt;li>&lt;strong>Source Address(源地址)&lt;/strong> # 发送端 IP 地址。&lt;/li>
&lt;li>&lt;strong>Destination Address(目标地址)&lt;/strong> # 接收端 IP 地址。&lt;/li>
&lt;li>&lt;strong>Options(选项)&lt;/strong># 可变长度，0-40 Bytes。&lt;/li>
&lt;/ul>
&lt;h1 id="ipv4-fragment">IPv4 Fragment&lt;/h1>
&lt;p>IP Fragment(分片) 主要通过首部中的 Identification、Flags、Fragment Offset 这三个字段对每一个分片进行唯一标识&lt;/p>
&lt;h1 id="ip-地址分配机制">IP 地址分配机制&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.iana.org/numbers">IANA,号码资源&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.eet-china.com/mp/a54338.html">面包板，你知道中国大陆一共有多少 IPv4 地址吗？&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://mp.weixin.qq.com/s/GHYYgZwAuEV4qPCwdI8Bjg">公众号，k8s 中文社区-居然还有 2 亿多 IPv4 地址未分配&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://wq.apnic.net/static/search.html">APNIC,搜索&lt;/a>(通过给定的 IP 地址搜索谁拥有这个 IP)&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>IPv4 和 IPv6 地址通常以分层方式分配。&lt;strong>ISP(互联网服务提供商)&lt;/strong> 为用户分配 IP 地址。ISP 从 &lt;strong>LIR(本地互联网注册机构)&lt;/strong> 或 &lt;strong>NIR(国家互联网注册机构)&lt;/strong> 或 &lt;strong>RIR(相应的区域互联网注册机构)&lt;/strong> 获取 IP 地址分配
&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/nahgxm/1646384624162-21c9bca1-0960-45e4-87bb-3802eca96278.svg" alt="">&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>登记处&lt;/th>
&lt;th>覆盖面积&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a href="http://www.afrinic.net/">AFRINIC&lt;/a>&lt;/td>
&lt;td>Africa Region(非洲地区)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="http://www.apnic.net/">APNIC&lt;/a>&lt;/td>
&lt;td>Asia/Pacific Region(亚洲/太平洋地区，亚太地区)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="http://www.arin.net/">ARIN&lt;/a>&lt;/td>
&lt;td>Canada, USA, and some Caribbean Islands(加拿大、美国、一些加勒比岛屿)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="http://www.lacnic.net/">LACNIC&lt;/a>&lt;/td>
&lt;td>Latin America and some Caribbean Islands(拉丁美洲、一些加勒比岛屿)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="http://www.ripe.net/">RIPE NCC&lt;/a>&lt;/td>
&lt;td>Europe, the Middle East, and Central Asia(欧洲、中东、中亚)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;a href="http://www.icann.org/en/general/global-addressing-policies.html">对 IP 地址的主要作用是根据全球政策&lt;/a>所述的需求将未分配地址池分配给 RIR，并记录 &lt;a href="http://www.ietf.org/">IETF&lt;/a> 所做的协议分配。当 RIR 需要在其区域内分配或分配更多 IP 地址时，我们会向 RIR 进行额外分配。我们不会直接向 ISP 或最终用户进行分配，除非在特定情况下，例如分配多播地址或其他协议特定需求。&lt;/p>
&lt;p>APNIC 是全球 5 个地区级的 Internet 注册机构（RIR）之一，负责亚太地区的以下事务：&lt;/p>
&lt;ol>
&lt;li>分配 IPv4 和 IPv6 地址空间，AS 号；&lt;/li>
&lt;li>为亚太地区维护 Whois 数据库；&lt;/li>
&lt;li>反向 DNS 指派；&lt;/li>
&lt;li>在全球范围内作为亚太地区的 Internet 社区的代表。&lt;/li>
&lt;/ol>
&lt;p>所以，中国大陆境内的地址都会登记在 APNIC 的地址库内。地址库获取方式：&lt;a href="http://ftp.apnic.net/apnic/stats/apnic/delegated-apnic-latest">http://ftp.apnic.net/apnic/stats/apnic/delegated-apnic-latest&lt;/a>
例如在 Linux 系统中，使用 wget 命令可以拉取文件。&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/nahgxm/1646295854669-69e90c43-6765-415a-be08-ba15cdf1f6c3.png" alt="image.png">&lt;/p>
&lt;p>文件内容条目参考如下：&lt;/p>
&lt;p>apnic|JP|asn|173|1|20020801|allocated
apnic|ID|ipv4|43.240.228.0|1024|20140818|allocated
apnic|HK|ipv6|2001:df5:b800::|48|20140514|assigned&lt;/p>
&lt;p>条目格式如下：&lt;/p>
&lt;p>注册机构|国家代码|类型|起始位|长度|分配日期|状态&lt;/p>
&lt;ul>
&lt;li>&lt;strong>注册机构&lt;/strong>：亚太地区一般为 apnic&lt;/li>
&lt;li>&lt;strong>国家代码&lt;/strong>：ISO-3166 定义的两位国家或地区代码，如中国为 CN&lt;/li>
&lt;li>&lt;strong>类型&lt;/strong>：asn（Autonomous System Number，自治系统编号），也就是 BGP 的 AS 编号；ipv4，IPv4 地址；ipv6，IPv6 地址&lt;/li>
&lt;li>&lt;strong>起始位&lt;/strong>：第一个 ASN 编号或 IP 地址&lt;/li>
&lt;li>&lt;strong>长度&lt;/strong>：从第一个起始位开始，申请分配多少的编号或地址&lt;/li>
&lt;li>&lt;strong>分配日期&lt;/strong>：国家或地区向 APNIC 申请的日期&lt;/li>
&lt;li>&lt;strong>状态&lt;/strong>：allocated 和 assigned，都是已分配&lt;/li>
&lt;/ul>
&lt;p>所以，需要将 delegated-apnic-latest 文件中所有国家为 CN、且类型为 ipv4 的条目导出，并转换为静态路由格式。&lt;/p>
&lt;p>例如使用命令将符合条件的条目导入到 china 文件中。&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/nahgxm/1646295854726-90496001-56ba-4bbb-9e7c-48568a601999.png" alt="image.png">&lt;/p>
&lt;p>可以查看文件行数，代表有多少条明细条目。&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/nahgxm/1646295854636-89ef24bb-cb5c-4832-a3af-bcc97cffc042.png" alt="image.png">&lt;/p>
&lt;p>然后根据起始位和长度，转换出静态路由所需的目的地址和掩码即可。在 excel 中通过对长度进行函数运算，可以得到掩码长度，如：=32-LOG(E2,2)，代入 2048 的话，可得到掩码长度为 21。操作后得到类似下图的表格：&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/nahgxm/1646295854710-c698ce59-e5fb-4e59-97cc-77a1a81bfc81.png" alt="image.png">&lt;/p>
&lt;p>先将表格内容复制到记事本中，再从记事本粘贴到 Word 中，即可得到带有内容字段、tab 制表符和段落标记的内容。如下：&lt;/p>
&lt;ul>
&lt;li>1.0.1.0 CN 24 apnic&lt;/li>
&lt;li>1.0.2.0 CN 23 apnic&lt;/li>
&lt;li>1.0.8.0 CN 21 apnic&lt;/li>
&lt;/ul>
&lt;p>这就简单了，使用 Word 的替换功能，对对应字段进行替换就可以得到形如下文的配置：&lt;/p>
&lt;ul>
&lt;li>int loop 1&lt;/li>
&lt;li>ip add 1.12.0.1 14&lt;/li>
&lt;li>int loop 2&lt;/li>
&lt;li>ip add 1.24.0.1 13&lt;/li>
&lt;li>int loop 3&lt;/li>
&lt;li>ip add 1.48.0.1 15&lt;/li>
&lt;li>int loop 4&lt;/li>
&lt;li>ip add 1.56.0.1 13&lt;/li>
&lt;li>int loop 5&lt;/li>
&lt;li>ip add 1.68.0.1 14&lt;/li>
&lt;/ul>
&lt;p>再把配置分别刷入到 11 台设备当中，配置好 OSPF 和 BGP 就可以了。&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/nahgxm/1646295854663-30f55fe1-a908-42e8-8b91-e95b33552417.png" alt="image.png">&lt;/p>
&lt;h2 id="ip-应用场景">IP 应用场景&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>标记&lt;/th>
&lt;th>中文&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>ANY&lt;/td>
&lt;td>任播网络&lt;/td>
&lt;td>属于数据中心的一部分，任播网络；如：8.8.8.8&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CDN&lt;/td>
&lt;td>内容分发&lt;/td>
&lt;td>属于数据中心的一部分，内容分发网络&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>COM&lt;/td>
&lt;td>商业公司&lt;/td>
&lt;td>以盈利为目的的公司&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DNS&lt;/td>
&lt;td>域名解析&lt;/td>
&lt;td>用户提供域名解析服务的 IP；如：8.8.8.8，114.114.114.114&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>EDU&lt;/td>
&lt;td>教育机构&lt;/td>
&lt;td>学校/教育机构使用的 IP&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>GTW&lt;/td>
&lt;td>企业专线&lt;/td>
&lt;td>固定 IP，中大型公司专线上网的 IP&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>GOV&lt;/td>
&lt;td>政府机构&lt;/td>
&lt;td>政府单位使用的 IP&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DYN&lt;/td>
&lt;td>动态 IP&lt;/td>
&lt;td>家庭住宅用户使用的 IP&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>IDC&lt;/td>
&lt;td>数据中心&lt;/td>
&lt;td>机房/云服务商使用的 IP&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>IXP&lt;/td>
&lt;td>交换中心&lt;/td>
&lt;td>网络交换中心使用的 IP&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>MOB&lt;/td>
&lt;td>移动网络&lt;/td>
&lt;td>基站出口 IP（2G/3G/4G/5G）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>NET&lt;/td>
&lt;td>基础设施&lt;/td>
&lt;td>网络设备骨干路由使用的 IP&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ORG&lt;/td>
&lt;td>组织机构&lt;/td>
&lt;td>非营利性组织机构&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SAT&lt;/td>
&lt;td>卫星通信&lt;/td>
&lt;td>通过卫星上网的出口 IP&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>VPN&lt;/td>
&lt;td>代理网络&lt;/td>
&lt;td>属于数据中心的一部分，专门做 VPN 业务的&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>Docs: IPv6</title><link>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/3_4.TCP_IP/IP/IPv6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/3_4.TCP_IP/IP/IPv6/</guid><description>
&lt;h1 id="概述">概述&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/IPv6">Wiki,IPv6&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://datatracker.ietf.org/doc/html/rfc8200">RFC,8200&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.iana.org/assignments/ipv6-address-space/ipv6-address-space.xhtml">IANA,IPv6 地址空间分配情况&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/IPv6-CN/ipv6-cn.github.io">GitHub 项目，IPv6-CN/ipv6cn.github.io&lt;/a>(这个资料。。。怎么说呢。。。)&lt;/li>
&lt;li>&lt;a href="https://www.bilibili.com/video/BV1J7411c7ae">https://www.bilibili.com/video/BV1J7411c7ae&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.bilibili.com/video/BV1aF411v7hU">https://www.bilibili.com/video/BV1aF411v7hU&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.zhihu.com/question/361275417">https://www.zhihu.com/question/361275417&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cloud.tencent.com/developer/article/1468099">https://cloud.tencent.com/developer/article/1468099&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;strong>Internet Protocol version 6(互联网协议版本 6，简称 IPv6)&lt;/strong> 是 Internet Protocol(互联网协议，简称 IP) 的最新版本(截止 2022 年 1 月 28 日)，该协议为网络上的计算机提供识别和定位系统并通过 Internet 路由流量。IPv6 由 Internet Engineering Task Force(互联网工程任务组，简称 IETF) 开发，旨在解决 IPv4 地址耗尽的问题。1998 年 12 月，IPv6 成为 IETF 的标准草案，2017 年 7 月 14 日将其批准为互联网标准。
&lt;a href="https://www.bilibili.com/video/BV1J7411c7ae">
&lt;/a>&lt;/p>
&lt;h2 id="困扰-1-ipv4-和-ipv6-只有地址格式不同吗">困扰 1. IPv4 和 IPv6 只有地址格式不同吗&lt;/h2>
&lt;p>除了地址格式不同，IPv4 与 IPv6 协议栈也不同，他们在逻辑上是&lt;strong>完全不同的 2 个世界&lt;/strong>
以下实践中经常会遇到的 4 个不同之处：
▷ &lt;strong>基本通讯过程&lt;/strong>：ND 替代 ARP、多播替代广播、fe80 地址成为标配、ICMP 成为通讯核心
▷ &lt;strong>IP 配置方式&lt;/strong>：客户端以无状态自动配置 IP 成为主流，弱化 DHCP
▷ &lt;strong>DNS&lt;/strong>&lt;a href="https://cloud.tencent.com/product/cns?from=10680">域名解析&lt;/a>：AAAA 记录替代 IPv4 的 A 记录、对应用存在优先级问题（优先解析 AAAA 还是 A）
▷ &lt;strong>应用层适应性&lt;/strong>：socket 编程中 AF_INET 仅支持 IPv4，AF_INET6 仅支持 IPv6&lt;/p>
&lt;hr>
&lt;h2 id="困扰-2-ipv4-到-ipv6-对应用程序是透明无感知的吗">困扰 2. IPv4 到 IPv6 对应用程序是透明无感知的吗&lt;/h2>
&lt;p>&lt;strong>错，是有感知的&lt;/strong>，上层应用程序需要进行改造。
举个例子，当访问 fzxiaomange.com 时候，是要优先解析 IPv6 地址（AAAA）还是 IPv4 地址（A），因为总得选一条线路来发送请求。现在许多框架会优先选择 IPv6。
注意：如果解析出 AAAA 记录，即使本机没有可路由 IPv6 地址，也有可能&lt;strong>依然尝试通过 IPv6 进行请求，导致请求失败&lt;/strong>。
还有一个典型的例子，是程序会在&lt;strong>应用层里交互底层 IP 地址&lt;/strong>，比如 FTP 主动模式会在应用层里交互 IPv4 地址，而如果实际可用的是 IPv6 地址，就可能导致后续连接的异常。
&lt;strong>无法做到透明无感知，是导致产生 IPv4 到 IPv6 的部分过渡方案的原因之一。&lt;/strong>&lt;/p>
&lt;hr>
&lt;h2 id="困扰-3-提供-web-服务需要每台服务器都配置-ipv6-地址吗">困扰 3. 提供 WEB 服务，需要每台服务器都配置 IPv6 地址吗&lt;/h2>
&lt;p>现在有一种言论，说“IPv6 地址无限多，每台服务器都可以配一个 IP 地址，不用做 NAT”。
&lt;strong>这很容易误导人，具体如何使用 IPv6，还得根据场景而定&lt;/strong>。比如笔者的个人博客 fzxiaomange.com，由 nginx-&amp;gt;php-&amp;gt;mysql 组成，分别位于 3 台服务器上，那只需要在 nginx 上配置 IPv6 地址，并在 DNS 上添加一条 AAAA 记录指向 L7 的 IPv6 地址即可。完全没必要在 php、mysql 服务器上配置 IPv6 地址，而且一旦配置了，就直接暴露内网了。
每个设备都配置 IPv6，主要适用于&lt;strong>偏客户端以及地址需求量大的场景&lt;/strong>，诸如物联网设备、手机 4G、家庭宽带等。
另外，&lt;strong>IPv6 有 NAT&lt;/strong>，适用于办公 PC、机房服务器等需要访问 IPv6 网络，而不想被别人主动访问的场景。&lt;/p>
&lt;hr>
&lt;h2 id="困扰-4-ipv4-和-ipv6-要配在同一张网卡上吗">困扰 4. IPv4 和 IPv6 要配在同一张网卡上吗&lt;/h2>
&lt;p>都可以，首先需要先了解 2 个词**“Single-Stack(单栈)”&lt;strong>和&lt;/strong>“Dual-Stack(双栈)”**：
&lt;strong>以节点为角度&lt;/strong>（通用的解释）：&lt;/p>
&lt;ul>
&lt;li>单栈：表示一个 IPv6 节点，也就是一台服务器，或一部手机，仅有 IPv6 地址，或仅有 IPv4 地址，前者叫做**“IPv6 单栈”&lt;strong>或&lt;/strong>“IPv6-Only”&lt;strong>，后者叫&lt;/strong>“IPv4 单栈”&lt;strong>或&lt;/strong>“IPv4-Only”**。&lt;/li>
&lt;li>双栈：表示一个 IPv6 节点，同时拥有 IPv6 地址和 IPv4 地址&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>以网卡为角度&lt;/strong>：
▷ 单栈：表示一张网卡仅有 IPv6 地址，或仅有 IPv4 地址，示意图如下
&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/mzn9uc/1643343522816-f045574f-93d4-4ed9-9356-4045d7acaa38.png" alt="image.png">
▷ 双栈：表示一张网卡同时拥有 IPv6 地址和 IPv4 地址
&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/mzn9uc/1643343532878-4cb46010-1684-4e57-88f5-29e2472d56d2.png" alt="image.png">
IPv4 和 IPv6 在逻辑上是两个完全不相交的世界。如果终端处位于同一个物理层，比如同一个 VLAN，那么网卡就只能同时配置 IPv6 地址和 IPv4 地址；反之，就必须一张网卡配置 IPv6，另一张网卡配置 IPv4。所以，&lt;strong>关键看网络架构是如何设计，各有利弊&lt;/strong>。比如放同一张网卡上，就可以做到带宽共享，而放不同网卡，可以做到带宽分别限制与计费。&lt;/p>
&lt;hr>
&lt;h2 id="困扰-5-我的网卡有-fe80-开头的地址可以用来上公网吗">困扰 5. 我的网卡有 fe80 开头的地址，可以用来上公网吗&lt;/h2>
&lt;p>当网卡启动的时候，会自动生成**“链路本地地址”（Link-Local Address）&lt;strong>，这是一个&lt;/strong>fe80::/10&lt;strong>的单播地址。“链路本地地址”用于&lt;/strong>IP 自动配置**、&lt;strong>邻居发现&lt;/strong>等。
&lt;strong>注意事项&lt;/strong>：
▷ 核心：每张网卡都会存在“链路本地地址”，这是 IPv6 协议通讯的核心，不应当删掉
▷ 范围：仅在同一个二层范围内进行传播，不会被路由器做转发
▷ 地址：“链路本地地址”的算法不统一，有的操作系统会根据 mac 地址计算而来（EUI-64），而有的则是随机或其他某种算法计算而来
▷ 服务：“链路本地地址”虽然可以在二层内互通，但主要用于核心通讯以及某些网络高级协议。不适用于上层应用业务之间的通讯。因此不能用来上公网，也不能用于对外提供服务&lt;/p>
&lt;hr>
&lt;h2 id="困扰-8-ipv6-使用多播替代广播需要做哪些改造">困扰 8. IPv6 使用多播替代广播，需要做哪些改造&lt;/h2>
&lt;p>IPv6 使用多播替代了广播，多播的特点是不会像广播那样完全泛洪，而是数据包只发送给加入了多播组的机器。
但是，这有个前提，就是&lt;strong>交换机要能识别并维护多播组的信息&lt;/strong>，主流交换机都具备此功能，然而并不都是默认开启的。对于二层交换机来说，需要开启&lt;strong>MLDv2 Snooping&lt;/strong>。
顾名思义，就是交换机会识别**“MLDv2 成员报告”**报文从哪个端口发来的，并记录下来，之后当交换机收到多播包后，会先查找其多播地址是否能在缓存里匹配上
▷ 匹配成功：仅会将数据包从相应的端口发出
▷ 匹配失败：就会泛洪，此时和广播毫无差异&lt;/p>
&lt;hr>
&lt;h2 id="困扰-9-ipv6-真的安全吗">困扰 9. IPv6 真的安全吗&lt;/h2>
&lt;p>&lt;strong>理想很美好&lt;/strong>，IPv6 从设计之初，就进行了大量的安全方面的设计，“完整的”IPv6 在安全方面有至少以下 3 个优势：
▷ 原生支持的端到端加密
▷ 安全的邻居发现（&lt;strong>Secure Neighbor Discovery，简称 SEND&lt;/strong>）
▷ 更大的地址空间
&lt;strong>现实很残酷&lt;/strong>，只有第 3 点发挥了作用，更大的地址空间，减少了被非法扫描到的概率。而第 1、2 点并没真正普及起来，因为&lt;strong>协议本身就很复杂、学习难度很大、实现起来也很不容易&lt;/strong>。因此 IETF 为了加速 IPv6 的普及，&lt;strong>对安全性不再强制要求&lt;/strong>。这也导致了 IPv6 实际上并没有预期中的那么安全，在 IPv4 里存在的地址欺骗、虚假网关等情况，在 IPv6 里依然存在。&lt;/p>
&lt;hr>
&lt;h2 id="困扰-10-如何学习-ipv6">困扰 10. 如何学习 IPv6&lt;/h2>
&lt;p>网上能找到非常多的 IPv6 教程，其中有很多教程都是通篇讲 IPv6 地址、IP 包格式、ICMP 包格式，这很容易让初学者打退堂鼓。笔者虽然不是专业的网工，但愿能抛砖引玉，推荐的学习步骤如下：
1️⃣ IPv6 的历史、设计理念
2️⃣ IPv6 的地址格式、分类、前缀计算，以及与 IPv4 的对比
3️⃣ IP 地址、网关路由的配置与查看
4️⃣ 服务端实践，尝试给自己的网站增加 IPv6
5️⃣ 客户端实践，让自己的 PC 访问 IPv6 互联网
6️⃣ 应用层实践，自己写一对 C/S 程序，能同时支持 IPv4 与 IPv6
7️⃣ IPv6 通讯原理，抓包分析每个包，熟悉 ND、DHCPv6 等
8️⃣ IPv4 与 IPv6 的互访、过渡
9️⃣ IPv6 安全
🔟 具体领域的 IPv6，例如移动 IPv6[&lt;/p>
&lt;p>](&lt;a href="https://www.bilibili.com/video/BV1J7411c7ae">https://www.bilibili.com/video/BV1J7411c7ae&lt;/a>)&lt;/p>
&lt;h1 id="ipv6-地址">IPv6 地址&lt;/h1>
&lt;p>IPv6 地址最多使用 128 bit 表示，即最多 128 个 1，这 128 bit 以 &lt;code>冒号&lt;/code> 分割为 8 组，每组 16 bit，在使用时，使用十六进制表示。比如：&lt;code>2031:0000:130F:0000:0000:09C0:876A:130B&lt;/code>。
&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/mzn9uc/1631498641648-aa666528-2155-4dfb-8969-d44a5eee7e35.jpeg" alt="">
为了书写方便，IPv6 的十六进制表示方法，可以进行压缩，具体压缩规则为：&lt;/p>
&lt;ul>
&lt;li>每组的前导 &lt;code>0&lt;/code> 可以省略，所以上面的例子可以写为：&lt;code>2031:0:130F:0:0:9C0:876A:130B&lt;/code>&lt;/li>
&lt;li>地址中包含的连续两个或多个均为 0 的组，可以用 &lt;code>::&lt;/code>(双冒号) 代替，所以上面的例子可以进一步简写为：&lt;code>2031:0:130F::9C0:876A:130B&lt;/code>
&lt;ul>
&lt;li>注意：一个 IPv6 地址中，只能使用一次双冒号，否则当计算机将压缩后的地址恢复成 128 bit 时，无法确定每段中 0 的个数。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="ipv6-地址结构">IPv6 地址结构&lt;/h2>
&lt;p>IPv6 地址的这 128 bit 可以分为两部分：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Network prefix(网络前缀)&lt;/strong> # n bit，相当于 IPv4 地址中的网络 ID。
&lt;ul>
&lt;li>网络前缀由 IANA 一层层分配。IANA 组织当前划定的单播地址是 &lt;code>2000::/3&lt;/code>。也就是说从 &lt;code>2000::&lt;/code> 到 &lt;code>3FFF:FFFF:FFFF:FFFF:FFFF:FFFF:FFFF:FFFF&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Interface Identify(接口标识)&lt;/strong> # 128-n bit，相当于 IPv4 地址中的主机 ID&lt;/li>
&lt;li>&lt;strong>Prefix length(前缀长度)&lt;/strong> # IPv6 没有子网掩码，通过在地址后面添加 &lt;code>/NUM&lt;/code> 来区分一个地址的 网络前缀 和 接口表示，比如 &lt;code>/64&lt;/code> 表示前 64 位是网络前缀，后 64 位为接口标识&lt;/li>
&lt;/ul>
&lt;p>接口标识可以通过三种方式生成&lt;/p>
&lt;ul>
&lt;li>&lt;strong>手动配置&lt;/strong> #&lt;/li>
&lt;li>&lt;strong>通过软件自动生成&lt;/strong> # 在有的地方称为有状态配置&lt;/li>
&lt;li>&lt;strong>通过 IEEE 的 EUI-64 规范生成&lt;/strong> # 这是最常用的方式。在有的地方，也称为无状态配置&lt;/li>
&lt;/ul>
&lt;p>IEEE EUI-64 规范是将网络设备的 MAC 地址转换为 IPv6 接口标识的过程，如下图所示，MAC 地址的前 24 位（用 c 表示的部分）为公司标识，后 24 位（用 m 表示的部分）为扩展标识符。高 7 位是 0 表示了 MAC 地址本地唯一。转换的第一步将 FFFE 插入 MAC 地址的公司标识和扩展标识符之间， 第二步将高 7 位的 0 改为 1 表示此接口标识全球唯一。
&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/mzn9uc/1631458464439-6142be5c-2a5e-4c08-8aa2-87abcc2ba854.png" alt="image.png">
例如：MAC 地址：&lt;code>00-0E-0C-82-C4-D4&lt;/code>；转换后：&lt;code>020E:0CFF:FE:82:C4D4&lt;/code>。
这种由 MAC 地址产生 IPv6 地址接口标识的方法可以减少配置的工作量，尤其是当采用无状态地址自动配置时，只需要获取一个 IPv6 前缀就可以与接口标识形成 IPv6 地址。但是使用这种方式最大的缺点是任何人都可以通过二层 MAC 地址推算出三层 IPv6 地址。&lt;/p>
&lt;h2 id="ipv6-地址分类">IPv6 地址分类&lt;/h2>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/mzn9uc/1631432277341-adbd47b9-16b3-4918-91d3-b473806fe36e.png" alt="image.png">
IPv6 没有广播地址(以更丰富的组播地址代替)，分类如下&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Unicast Address(单播地址)&lt;/strong> # 全局单播地址可以分配给任何一个想要接入互联网的设备。
&lt;ul>
&lt;li>&lt;strong>共有地址&lt;/strong>
&lt;ul>
&lt;li>&lt;strong>Global Unicast Address(全局单播地址)&lt;/strong># 前缀为 &lt;code>2000::/3&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>私有地址&lt;/strong> #
&lt;ul>
&lt;li>&lt;strong>Link-local Address(链路本地地址)&lt;/strong> # 前缀为 &lt;code>FE80::/10&lt;/code>。当两个支持 IPv6 特性的设备直连时，直连的接口会自动给自己分配一个链路本地地址，用来在没有管理员的配置下设备之间就能相互通信，并完成邻居发现等工作。这类地址的前 10 bit 是 &lt;code>FE80&lt;/code>，后 54 bit 全是 0，最后 64 bit 是 EUI-64 地址，所以，上面例子中的链路本地地址是 &lt;code>FE80::0000:09C0:876A:130B&lt;/code>。
&lt;ul>
&lt;li>IPv4 中的 169.254.0.0/8 就是链路本地地址。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Unique Local Address(唯一本地地址)&lt;/strong> # 前缀为 &lt;code>FC00::/7&lt;/code>。与链路本地地址一样，区别在于链路本地地址只能用于共享链路上的设备，而站点本地地址可以用于站点内部，获得站点本地地址的设备是不能将数据包路由到站点之外的，也就是说，站点本地地址将限制数据包的传递。
&lt;ul>
&lt;li>&lt;strong>Site-local Address(站点本地地址)&lt;/strong> # 在 RFC 3879 中阐述了站点本地地址会产生的问题，于 2004 年 9 月被启用，使用 Unique Local Address 代替。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>loopbak(环回地址)&lt;/strong> # 前缀为 &lt;code>::1/128&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Anycat Address(任意播地址)&lt;/strong> #&lt;/li>
&lt;li>&lt;strong>Multicast Address(组播地址)&lt;/strong> # 前缀为 &lt;code>FF00::/8&lt;/code>，作用和 IPv4 的组播相同
&lt;ul>
&lt;li>被请求节点组播地址 # 前缀为 &lt;code>FF02::1FF00:0000/104&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>备注：&lt;/p>
&lt;ul>
&lt;li>为什么这里叫做“全局单播地址”，而“唯一本地地址”却不叫做“唯一本地单播地址”，好吧，其实都是简称，在 RFC 里是这么定义的：“Global Unicast Addresses”、“Link-Local IPv6 Unicast Addresses”。其实“全局单播地址”是可以叫做“全局地址”的，只是这样显得有点别扭。&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>这是一个设备上 IPv6 的地址&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>以太网适配器 以太网:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 连接特定的 DNS 后缀 . . . . . . . : lan
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> IPv6 地址 . . . . . . . . . . . . : 2408:8210:3c36:c1c0::a2a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> IPv6 地址 . . . . . . . . . . . . : 2408:8210:3c36:c1c0:42e:b860:ccb3:81e9
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 临时 IPv6 地址. . . . . . . . . . : 2408:8210:3c36:c1c0:f4ba:1e1e:cc62:938a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 本地链接 IPv6 地址. . . . . . . . : fe80::42e:b860:ccb3:81e9%10
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> IPv4 地址 . . . . . . . . . . . . : 192.168.254.245
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 子网掩码 . . . . . . . . . . . . : 255.255.255.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 默认网关. . . . . . . . . . . . . : fe80::ded8:7cff:fe11:ebdf%10
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 192.168.254.1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="全局单播地址">全局单播地址&lt;/h2>
&lt;p>当我们需要给设备配置 IPv6 地址时，与 IPv4 公网地址类似，分为这么几部分：&lt;/p>
&lt;ul>
&lt;li>网络前缀&lt;/li>
&lt;li>子网 ID&lt;/li>
&lt;li>接口标识&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/mzn9uc/1631505253266-7dddac0e-c557-4e7d-973a-ea776134ef66.png" alt="image.png">
IANA 组织当前划定的单播地址是 &lt;code>2000::/3&lt;/code>，这个地址段占整个 IPv6 地址空间的 1/8，然后再将这个地址段逐级分下去。&lt;code>/23&lt;/code> 是注册机构前缀，&lt;code>/32&lt;/code> 是 ISP(运营商) 前缀，&lt;code>/48&lt;/code> 是站点前缀，&lt;code>/64&lt;/code> 是子网前缀。&lt;/p>
&lt;ul>
&lt;li>根据 &lt;a href="https://www.rfc-editor.org/rfc/rfc4291.html#section-2.5.1">RFC 4191-2.5.1&lt;/a> 中的描述，对于 IPv6 所有单播地址，如果地址的前 3 bit 不是 000，则接口标识必须为 64 bit；如果地址前 3 bit 是 000，则没有此限制。
&lt;ul>
&lt;li>这里前 3 bit 为 0，也就意味着，IP 地址从 &lt;code>2000::&lt;/code> 开始，如果是小于 &lt;code>2000::&lt;/code> 的话，前 3 bit 肯定是 0。所以，这里的规定也与 &lt;code>2000::&lt;/code> 开始的地址都是单播地址这个规定对应上了。&lt;/li>
&lt;li>并且，通常来说，单播地址都是 &lt;code>/64&lt;/code> 的。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>前 64 bit
&lt;ul>
&lt;li>前 48 位由互联网网络提供商(IANA、RIR、ISP 等)分配&lt;/li>
&lt;li>后面 16 是个人根据前 48 位而划分的子网&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>后 64 bit
&lt;ul>
&lt;li>就是子网下的主机了&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>在 IPv6 地址空间中的脚注中，可以看到很多 IANA 保留的全局单播地址前缀：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>2001:0::/23&lt;/strong> # 为 IETF 协议分配 [ RFC2928 ] 保留。&lt;/li>
&lt;li>&lt;strong>2001:0::/32&lt;/strong> # 为 TEREDO [ RFC4380 ] 保留。&lt;/li>
&lt;li>&lt;strong>2001:2::/48&lt;/strong> # 保留用于基准测试 [ RFC5180 ][ RFC Errata 1752 ]。&lt;/li>
&lt;li>&lt;strong>2001:3::/32&lt;/strong> # 为 AMT [ RFC7450 ] 保留。&lt;/li>
&lt;li>&lt;strong>2001:4:112::/48&lt;/strong> # 为 AS112-v6 [ RFC7535 ] 保留。&lt;/li>
&lt;li>&lt;strong>2001:10::/28&lt;/strong> # 已弃用（以前称为 ORCHID）[ RFC4843 ]。&lt;/li>
&lt;li>&lt;strong>2001:20::/28&lt;/strong> # 为 ORCHIDv2 [ RFC7343 ] 保留。&lt;/li>
&lt;li>&lt;strong>2001:db8::/32&lt;/strong> # 为文档保留，也就是说在书籍、文档等地方使用 IPv6 地址示例时，使用这个前缀的地址。参考：&lt;a href="https://www.iana.org/go/rfc3849">RFC3849&lt;/a>。&lt;/li>
&lt;li>&lt;strong>2002::/16&lt;/strong> # 为 6to4 [ RFC3056 ] 保留。&lt;/li>
&lt;/ul>
&lt;h1 id="ipv6-地址的配置方式">IPv6 地址的配置方式&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/radvd-project">GitHub 组织，radvd-project&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://datatracker.ietf.org/doc/html/rfc4862">RFC 4862，IPv6 Stateless Address Autoconfiguration&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>与 IPv4 一样，在 IPv6 里，任何单播地址都可以自动生成，也可以手工配置固定 IP，具体看应用场景：&lt;/p>
&lt;ul>
&lt;li>客户端：如果我想访问 ipv6 互联网，而不对外提供服务，那么使用自动生成即可，无需使用固定的 ip 地址&lt;/li>
&lt;li>服务端：如果需要对外提供服务，那么 ip 地址就需要固定了，不能使用自动生成&lt;/li>
&lt;/ul>
&lt;p>自动配置地址的场景，在 IPv6 里分为 2 种方法：“有状态”与“无状态”&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Stateful(有状态)&lt;/strong> # 地址由 DHCPv6 Server 统一管理，DHCPv6 Client 从中获得一个可用的 IP 地址&lt;/li>
&lt;li>&lt;strong>Stateless(无状态)&lt;/strong> # 路由器发出“路由通告”报文（Router Advertisement，简称 RA），报文内包含了 IPv6 地址的前缀信息。当收到 RA 包后，就会根据其中前缀信息，自动生成一个或多个 IP 地址&lt;/li>
&lt;/ul>
&lt;h2 id="stateless无状态">Stateless(无状态)&lt;/h2>
&lt;p>**Stateless Address Autoconfiguration(无状态地址自动配置，简称 SLAAC)**是 IPv6 中用于自动生成 IPv6 地址的策略。&lt;/p>
&lt;p>在操作系统启动时，会自动在每个启用 IPv6 的接口上创建“链路本地地址”，当连接到网络时，会执行冲突解决。这个地址默认使用 &lt;code>fe80::/64&lt;/code> 作为前缀。该行为使用 &lt;strong>Neighbor Discovery Protocol(邻居发现协议，简称 DNP)&lt;/strong> 的一个组件，通过 SLAAC 独立进行&lt;/p>
&lt;blockquote>
&lt;p>当自动生成的链路本地地址在网络上冲突时，该 IP 地址的状态会提示 &lt;a href="#VNOuu">tentative noprefixroute dadfailed&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>除了“链路本地地址”，路由器会通过 &lt;strong>Router Advertisement(路由通过，简称 RA)&lt;/strong> 提供给主机一个网络前缀，以便操作系统自动配置一个 IPv6 “单播地址”。所以，尽管存在 DHCPv6，但是 IPv6 主机通常都是使用 RA 来自动创建全局可路由的单播地址。&lt;/p>
&lt;p>与 IPv4 一样，IPv6 支持全球唯一的 IP 地址。 IPv6 的设计旨在通过淘汰网络地址转换，重新强调网络设计的端到端原则，该原则最初是在早期 Internet 建立期间构想的。因此，网络上的每个设备都可以直接从任何其他设备全局寻址。&lt;/p>
&lt;p>一个稳定的、唯一的、全球可寻址的 IP 地址将有助于跨网络跟踪设备。因此，对于笔记本电脑和手机等移动设备而言，此类地址是一个特殊的隐私问题。为了解决这些隐私问题，SLAAC 协议包括通常称为“隐私地址”或更准确地说是 &lt;strong>Temporary Addresses(临时地址)&lt;/strong> 的内容，编入 RFC 4941，“IPv6 中无状态地址自动配置的隐私扩展”。临时地址是随机且不稳定的。典型的消费设备每天都会生成一个新的临时地址，一周后会忽略发往旧地址的流量。 Windows 自 XP SP1 起默认使用临时地址，macOS 自 (Mac OS X) 10.7 起，Android 自 4.0 起，iOS 自 4.3 版起默认使用。 Linux 发行版对临时地址的使用各不相同。&lt;/p>
&lt;h3 id="neighbor-discovery-protocol邻居发现协议">Neighbor Discovery Protocol(邻居发现协议)&lt;/h3>
&lt;p>ARP 协议是 IPv4 用于解析目标 MAC 地址的协议，而在 IPv6 里，解析地址采用的是&lt;strong>邻居发现（Neighbor Discovery Protocol，简称 NDP 或 ND）&lt;/strong>&lt;/p>
&lt;p>ND 不是一个具体协议，而是用来描述多个相关功能的协议的&lt;strong>抽象集合&lt;/strong>，所涵盖的所有协议均是基于 ICMPv6。其中有 2 种报文与解析 MAC 地址有关：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>邻居请求报文 NS（Neighbor Solicitation）&lt;/strong>：请求解析&lt;/li>
&lt;li>&lt;strong>邻居通告报文 NA（Neighbor Advertisement）&lt;/strong>：响应解析&lt;/li>
&lt;/ul>
&lt;p>这与 ping 是非常类似的：&lt;/p>
&lt;ul>
&lt;li>ping：发送 icmp 的 echo request 报文，对端响应 icmp 的 echo reply 报文&lt;/li>
&lt;li>地址解析：发送 icmp 的 ns 报文，对端响应 icmp 的 na 报文&lt;/li>
&lt;/ul>
&lt;p>更多详情见《&lt;a href="https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/2.ARP%20%E4%B8%8E%20NDP.md">ARP 与 NDP&lt;/a>》&lt;/p>
&lt;h3 id="router-advertisement路由通告">Router Advertisement(路由通告)&lt;/h3>
&lt;p>&lt;strong>Router Advertisement(路由通告，简称 RA)&lt;/strong>&lt;/p>
&lt;p>在 Linux 中，有一个名为 &lt;a href="https://github.com/radvd-project">radvd&lt;/a> 的程序，可以让服务器发送 RA 报文。&lt;/p>
&lt;h3 id="temporary-addresses临时地址">Temporary addresses(临时地址)&lt;/h3>
&lt;p>无状态地址自动配置使用全局唯一和静态 MAC 地址来创建接口标识符，提供了跟踪用户设备（跨时间和 IPv6 网络前缀更改）以及用户的机会。&lt;/p>
&lt;blockquote>
&lt;p>因为知道了 MAC，就可以推导出来 IPv6 地址&lt;/p>
&lt;/blockquote>
&lt;p>为了减少用户身份永久绑定到 IPv6 地址部分的可能性，节点可以创建具有基于随时间变化的随机位字符串和相对较短的生命周期（数小时到数天）的接口标识符的临时地址，之后它们替换为新地址。&lt;/p>
&lt;p>临时地址可用作发起连接的源地址，而外部主机通过查询域名系统使用公共地址。&lt;/p>
&lt;p>默认情况下，为 IPv6 配置的网络接口在 OS X Lion 和更高版本的 Apple 系统以及 Windows Vista、Windows 2008 Server 和更高版本的 Microsoft 系统中使用临时地址。&lt;/p>
&lt;h2 id="常用-ipv6-地址">常用 IPv6 地址&lt;/h2>
&lt;p>运营商前缀&lt;/p>
&lt;ul>
&lt;li>电信为 240e::/20&lt;/li>
&lt;li>移动为 2409:8000::/20&lt;/li>
&lt;li>联通为 2408:8000::/20&lt;/li>
&lt;/ul>
&lt;p>2001:db8:0:1::/64 # 通常使用这个网段的地址，很多网站(比如 Redhat、ISC-DHCP 等)的例子都是这个段，比如：&lt;/p>
&lt;ul>
&lt;li>2001:db8:0:1::1&lt;/li>
&lt;li>2001:db8:0:1::2&lt;/li>
&lt;li>&amp;hellip;&amp;hellip;&lt;/li>
&lt;li>2001:db8:42:1::&lt;/li>
&lt;li>&amp;hellip;&amp;hellip;&lt;/li>
&lt;li>2001:db8:0:1::fffe&lt;/li>
&lt;/ul>
&lt;h1 id="ipv6-datagram-结构">IPv6 Datagram 结构&lt;/h1>
&lt;p>IPv6 数据报被封装在链路层的 Frame 中&lt;/p>
&lt;p>首部长度固定为 40 Bytes，即 320 bit。
&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/mzn9uc/1631514605323-4532e443-754c-44ce-8c4f-70c31b7065e8.jpeg" alt="">&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Version(版本)&lt;/strong> # 和 IPv4 一样，由 4 比特构成。IPv6 其版本号为 6，因此在这个字段上的值为“6”。&lt;/li>
&lt;li>&lt;strong>Traffic Class(通信类)&lt;/strong> # 相当于 IPv4 的 Type Of Service(TOS) 字段，也由 8 bit 构成。但 TOS 在 IPv4 中几乎没有什么建树，未能成为卓有成效的技术，本来计划在 IPv6 中删掉这个字段，不过出于今后研究的考虑还是保留了该字段。&lt;/li>
&lt;li>&lt;strong>Flow Label(流标签)&lt;/strong> # 由 20 bit 构成，准备用于 Quality Of Service(服务质量，简称 QOS) 控制。使用这个字段提供怎样的服务已经成为未来研究的课题。不适用 Qos 时每一位可以全部设置为 0。 在进行服务质量控制的时，将流标号设置为一个随机数，然后利用一种可以设置流的协议 RSVP（Resource Reservation Protocol ）在路由器上进行 Qos 设置。当某个包在发送途中需要 Qos 时，需要附上 RSVP 预想的流标号。路由器接收到这样的 IP 包后现先将流标号作为查找关键字，迅速从服务质量控制信息中查找并做相应处理。此外，只有流标号、源地址以及目标地址三项完全一致时，才被认为是一个流。&lt;/li>
&lt;li>&lt;strong>Payload Length(有效荷载长度)&lt;/strong> # 上层 PDU 与 扩展首部的和，单位是字节。 IPv4 的 TL(Total Length) 是指包含首部在内的所有长度。然而 IPv6 中的这个 Playload Length 不包括首部，只表示数据部分的长度。由于 IPv6 的可选项是指连接 IPv6 首部的数据，只有当有可选项时，此处包含可选项数据的所有长度就是 Playload Length。&lt;/li>
&lt;li>&lt;strong>Next Header(下一个首部)&lt;/strong> # 相当于 IPv4 中的协议字段。由 8 比特构成。通常表示 IP 的上一层协议是 TCP 或 UDP。不过在有 IPv6 扩展首部的情况下，该字段表示后面第一个扩展首部的协议类。&lt;/li>
&lt;li>&lt;strong>Hop Limit(跳数限制)&lt;/strong> # 由 8 bit 构成。与 IPv4 中的 TTL 意思相同。为了强调“可通过路由器个数”这个概念，才将名字改为 Hop Limit。数据每经过一次路由器就减 1，减到 0 则丢弃数据。&lt;/li>
&lt;li>&lt;strong>Source Address(源地址)&lt;/strong> # 由 128 bit 构成，表示发送端 IP 地址。&lt;/li>
&lt;li>&lt;strong>Destination Address(目标地址)&lt;/strong> # 由 128 bit 构成，表示接收端 IP 地址。&lt;/li>
&lt;li>&lt;strong>Extension Head(扩展首部)&lt;/strong> # IPv6 的首部长度固定，无法将可选项将入其中，取而代之的是通过扩展首部对功能进行了有效扩展。 扩展首部通常介于 IPv6 首部与 TCP/UDP 首部中间。在 IPv4 中可选项长度固定为 40 字节，但是在 IPv6 中没有这样的限制。也就是说，IPv6 的扩展首部可以是任意长度。扩展首部当中还可以包含扩展首部协议以及下一个扩展首部字段。
&lt;ul>
&lt;li>IPv6 的分片机制，也是通过 IPv6 的扩展首部来实现的。不再像 IPv4 一样，通过首部中的 标示、标志和偏移字段 进行分片识别。IPv6 网络中的中间路由器不再处理分片，只在产生数据包的源节点处理分片。&lt;/li>
&lt;li>IPv6 数据报中包含 0 个、1 个或多个扩展首部。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="ipv6-扩展首部">IPv6 扩展首部&lt;/h2>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/mzn9uc/1631515308493-c6b27a8f-9a24-4c8e-b6c7-f5e8caaa9ab6.png" alt="image.png">&lt;/p>
&lt;h1 id="ipv6-问题总结">IPv6 问题总结&lt;/h1>
&lt;p>使用 WireGuard 时，如果中继服务器的两端的 Peer，一个是 IPv4、一个是 IPv6，那么交互时，如果使用 ps -ef 这种命令，显示将会卡住，无法刷出后半部分内容。&lt;/p>
&lt;h2 id="tentative-noprefixroute-dadfailed-状态">tentative noprefixroute dadfailed 状态&lt;/h2>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/mzn9uc/1643038958219-72693ffb-e644-42ac-b20f-320e6bb6c9eb.png" alt="image.png">
可能的原因是 IP 地址冲突，比如虚拟机的 MAC 相同了，生成的 IPv6 就会相同&lt;/p>
&lt;p>如果不换 MAC，还可以修改内核参数解决&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>net.ipv6.conf.all.accept_dad &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>net.ipv6.conf.default.accept_dad &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>net.ipv6.conf.all.use_tempaddr &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>net.ipv6.conf.default.use_tempaddr &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="ipv6-地址的分配机制">IPv6 地址的分配机制&lt;/h1>
&lt;p>网络前缀由 IANA 一层层分配。&lt;a href="https://www.iana.org/assignments/ipv6-address-space/ipv6-address-space.xhtml">IPv6 地址空间&lt;/a> 中包含了当前 IPv6 地址的总体分配情况，&lt;a href="https://www.iana.org/assignments/ipv6-unicast-address-assignments/ipv6-unicast-address-assignments.xhtml">IPv6 全局单播地址分配&lt;/a>中，则是单播地址的分配情况。&lt;/p>
&lt;p>详见&lt;a href="https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/3_4.TCP_IP/IP/IP.md#IP%20%E5%9C%B0%E5%9D%80%E5%88%86%E9%85%8D%E6%9C%BA%E5%88%B6">《IP》章节的 Ip 地址分配机制&lt;/a>部分&lt;/p>
&lt;h2 id="isp-分配机制">ISP 分配机制&lt;/h2>
&lt;p>ISP 给我们分配 IPv6 时，会同时分配两个不同网段的 IPv6 地址&lt;/p>
&lt;ul>
&lt;li>唯一地址 # 为光猫分配的地址，不会作下行分配(即，光猫内的设备不用使用这个地址进行访问)&lt;/li>
&lt;li>前缀地址 # 为光猫内部设备分配地址的地址段&lt;/li>
&lt;/ul>
&lt;p>按照 IPv6 的分配规则，前缀地址必须在/60 位以内。目前中国的运营商有两种前缀，一个是 56 位，一个是 60 位。电信多是 56，联通移动多是 60 的。&lt;/p>
&lt;blockquote>
&lt;p>电信为 240e::/18
移动为 2409:8000::/20
联通为 2408:8000::/20&lt;/p>
&lt;/blockquote>
&lt;p>当然，这个长度没有好与坏，不管是 56 还是 60，你获得的剩余地址量都是用不完的，哪怕是给你家里每一粒灰尘都分配上公网 IP。
问题就在于，运营商只会给你分配一次前缀地址，当你的路由器获取到前缀地址后，你其它的设备都会通过这个前缀地址向下分配剩余的地址。打个比方，通过 PPPoE 拨号，你将会获取到 WAN 口 IP 地址，这个机制和 IPv4 是一样的：
&lt;code>2408:8210:4703:130b:9032:f35a:a8ab:fdf1/64&lt;/code>
然后你还可以获取到一个前缀 IP 地址：
&lt;code>2408:8210:3c36:c1c0::1/56&lt;/code>
当你的手机连接 WIFI 的时候，路由器就会按照这个前缀地址给你的手机向下分配剩余的地址，如：
&lt;code>2408:8210:3c36:c1c0:XXXX:XXXX:XXXX:XXXX&lt;/code>
&lt;a href="https://cloud.tencent.com/developer/article/1468099">&lt;/a>&lt;/p></description></item></channel></rss>