<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PowerShell 内置管理工具 on 断念梦的站点</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/Windows-%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/PowerShell-%E5%86%85%E7%BD%AE%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</link><description>Recent content in PowerShell 内置管理工具 on 断念梦的站点</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/Windows-%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/PowerShell-%E5%86%85%E7%BD%AE%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/index.xml" rel="self" type="application/rss+xml"/><item><title>PowerShell 内置管理工具</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/Windows-%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/PowerShell-%E5%86%85%E7%BD%AE%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/PowerShell-%E5%86%85%E7%BD%AE%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/Windows-%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/PowerShell-%E5%86%85%E7%BD%AE%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/PowerShell-%E5%86%85%E7%BD%AE%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</guid><description>概述 参考：
官方文档，PowerShell 模块参考 PowerShell 内置的管理工具都是 cmdlet，以模块形式提供，这个目录下记录的笔记中，每个文件或目录名都是一个模块的名称
CimCmdlets https://learn.microsoft.com/en-us/powershell/module/cimcmdlets
通用模块 Core
Management
Security
CimCmdlets
Utility
etc.
特定于 Windows 的模块 https://learn.microsoft.com/en-us/powershell/module/?view=windowsserver2025-ps
NetTCPIP 参考：
官方文档 - PowerShell，参考 - NetTCPIP Get-NetTCPConnection https://learn.microsoft.com/en-us/powershell/module/nettcpip/get-nettcpconnection
Syntax(语法) OPTIONS
-LocalPort([]INT) # 查看指定的端口，多个端口以 , 分割。 -State([]STRING) # 查看指定 TCP 状态的端口。可用的值有: Bound, Closed, CloseWait, Closing, DeleteTCB, Established, FinWait1, FinWait2, LastAck, Listen, SynReceived, SynSent, TimeWait Example 利用该模块可以比 netstat 命令更方便得获取各种基于网络连接的信息以及监听该端口的进程信息
获取监听在 1080 端口上的程序的路径
(get-process -id (Get-NetTCPConnection -LocalPort 10800 -State Listen).OwningProcess).path 甚至可以像这样组合出人类可读的信息
PS C:\Users\DesistDaydream&amp;gt; Get-NetTCPConnection -LocalPort 1080 -State Listen | Select-Object LocalAddress, LocalPort, @{Name=&amp;#34;PID&amp;#34;;Expression={$_.</description></item><item><title>Core</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/Windows-%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/PowerShell-%E5%86%85%E7%BD%AE%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/Core/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/Windows-%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/PowerShell-%E5%86%85%E7%BD%AE%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/Core/</guid><description>概述 参考：
官方文档 - PowerShell，模块 - Core 核心模块包含管理 PowerShell 基本功能的 cmdlet 和提供程序。
Get-Command https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/get-command
获取所有命令
Syntax(语法) Get-Command [OPTIONS]
OPTIONS
-Name(PATTERN) # 列出匹配到名字的命令。支持通配符。默认值：None -CommandType(STRING) # 列出指定类型的命令。默认值：cmdlet,function,alias。可用的类型有：Alias、All、Application、Cmdlet、ExternalScript、Filter、Function、Script EXAMPLE</description></item><item><title>CimCmdlets</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/Windows-%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/PowerShell-%E5%86%85%E7%BD%AE%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/CimCmdlets/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/Windows-%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/PowerShell-%E5%86%85%E7%BD%AE%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/CimCmdlets/</guid><description>概述 参考：
官方文档 - PowerShell，模块 - CimCmdlets https://learn.microsoft.com/zh-cn/powershell/scripting/learn/ps101/07-working-with-wmi
PowerShell 早期使用 Windows Management Instrumentation(简称 WMI) cmdlet，后改用 CIM cmdlet。可以使用 Get-Command -Module CimCmdlets 命令查看所有可用的 CimCmdlets
CommandType Name Version Source ----------- ---- ------- ------ Cmdlet Get-CimAssociatedInstance 7.0.0.0 CimCmdlets Cmdlet Get-CimClass 7.0.0.0 CimCmdlets Cmdlet Get-CimInstance 7.0.0.0 CimCmdlets Cmdlet Get-CimSession 7.0.0.0 CimCmdlets Cmdlet Invoke-CimMethod 7.0.0.0 CimCmdlets Cmdlet New-CimInstance 7.0.0.0 CimCmdlets Cmdlet New-CimSession 7.0.0.0 CimCmdlets Cmdlet New-CimSessionOption 7.0.0.0 CimCmdlets Cmdlet Register-CimIndicationEvent 7.0.0.0 CimCmdlets Cmdlet Remove-CimInstance 7.0.0.0 CimCmdlets Cmdlet Remove-CimSession 7.</description></item><item><title>Management</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/Windows-%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/PowerShell-%E5%86%85%E7%BD%AE%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/Management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/Windows-%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/PowerShell-%E5%86%85%E7%BD%AE%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/Management/</guid><description>概述 参考：
官方文档 - PowerShell，模块 - Management 管理模块可以让我们在 PowerShell 中管理系统中的 进程、服务、Item 等。
Item 管理工具 Clear-Item Copy-Item Get-Item Invoke-Item Move-Item New-Item Remove-Item Rename-Item Set-Item Get-ChildItem # 获取指定位置的 Item 和 子Item。类似 ls 命令 New-Item https://learn.microsoft.com/zh-cn/powershell/module/microsoft.powershell.management/new-item
创建一个新的 Item 并设置它的值。可以创建的 Item 类型取决于当前所使用的 ProwerShell 提供程序。例如，在文件系统中，创建文件、目录、符号链接、等等；在注册表中，创建注册表条目
Syntax(语法) OPTIONS
-ItemType STRING # 指定新 Item 类型，可用的类型取决于 PowerShell 的提供程序 由于不同提供可用的类型非常多，笔记里就不写了，具体还是看 Net-Item 官方文档吧 EXAMPLE 创建符号链接(软连接)
创建 C:/Users/DesistDaydream/AppData/Roaming/yuzu 符号链接文件，指向 E:/emulator/yuzu_data/user New-Item -ItemType SymbolicLink -Path &amp;quot;C:/Users/DesistDaydream/AppData/Roaming/yuzu&amp;quot; -Target &amp;quot;E:/emulator/yuzu_data/user&amp;quot; Notes: 这种用法可以代替 mklink 命令 查看符号链接文件所指向的原始文件路径 (Get-Item ${PathToFile}).</description></item><item><title>Security</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/Windows-%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/PowerShell-%E5%86%85%E7%BD%AE%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/Security/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/Windows-%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/PowerShell-%E5%86%85%E7%BD%AE%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/Security/</guid><description>概述 参考：
官方文档 - PowerShell，模块 - Security Get-ExecutionPolicy 获取当前会话的执行策略。
Restricted 执行策略不允许任何脚本运行。 AllSigned 和 RemoteSigned 执行策略可防止 Windows PowerShell 运行没有数字签名的脚本。 默认使用 Restricted 策略，此时当我们执行脚本时将会失败，并报错：
无法加载文件 XXXXX，因为在此系统上禁止运行脚本。有关详细信息，请参阅 https:/go.microsof t.com/fwlink/?LinkID=135170 中的 about_Execution_Policies。 Syntax(语法) EXAMPLE Set-ExecutionPolicy 为 Windows 计算机设置 PowerShell 执行策略
Syntax(语法) Get-Command
EXAMPLE 设置策略为 RemoteSigned
Set-ExecutionPolicy RemoteSigned</description></item><item><title>Utility</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/Windows-%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/PowerShell-%E5%86%85%E7%BD%AE%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/Utility/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/Windows-%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/PowerShell-%E5%86%85%E7%BD%AE%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/Utility/</guid><description>概述 参考：
官方文档 - PowerShell，模块 - Utility Select-String https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/select-string?view=powershell-7.4
Select-String cmdlet 使用正则表达式匹配来搜索输入字符串和文件中的文本模式。Select-String 可以实现类似于 Unix-like OS 中的 grep 命令或 Windows 中的 findstr.exe 的效果。</description></item></channel></rss>