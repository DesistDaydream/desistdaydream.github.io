<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦的站点 – Windows 管理</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/</link><description>Recent content in Windows 管理 on 断念梦的站点</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: File System 管理</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/File-System-%E7%AE%A1%E7%90%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/File-System-%E7%AE%A1%E7%90%86/</guid><description/></item><item><title>Docs: Microsoft Management Console</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/Microsoft-Management-Console/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/Microsoft-Management-Console/</guid><description/></item><item><title>Docs: Windows Management Instrumentation</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/Windows-Management-Instrumentation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/Windows-Management-Instrumentation/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/windows/win32/wmisdk/wmi-start-page">官方文档&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Windows_Management_Instrumentation">Wiki, Windows_Management_Instrumentation&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;strong>Windows Management Instrumentation(简称 WMI)&lt;/strong> 使用 &lt;a href="https://desistdaydream.github.io/docs/Standard/IT/DMTF.md#CIM">CIM&lt;/a>(通用信息模型) 行业标准来表示系统、应用程序、网络、设备和其他受管理的组件。&lt;/p>
&lt;p>&lt;a href="https://www.syscom.com.tw/ePaper_Content_EPArticledetail.aspx?id=76&amp;amp;EPID=159&amp;amp;j=4&amp;amp;HeaderName=%E7%A0%94%E7%99%BC%E6%96%B0%E8%A6%96%E7%95%8C">https://www.syscom.com.tw/ePaper_Content_EPArticledetail.aspx?id=76&amp;amp;EPID=159&amp;amp;j=4&amp;amp;HeaderName=%E7%A0%94%E7%99%BC%E6%96%B0%E8%A6%96%E7%95%8C&lt;/a>&lt;/p>
&lt;h2 id="在-powershell-中使用-wmi">在 PowerShell 中使用 WMI&lt;a class="td-heading-self-link" href="#%e5%9c%a8-powershell-%e4%b8%ad%e4%bd%bf%e7%94%a8-wmi" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;a href="https://learn.microsoft.com/zh-cn/powershell/scripting/learn/ps101/07-working-with-wmi">https://learn.microsoft.com/zh-cn/powershell/scripting/learn/ps101/07-working-with-wmi&lt;/a>&lt;/p>
&lt;p>Windows &lt;a href="https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Terminal%20%E4%B8%8E%20Shell/WindowsShell/PowerShell/PowerShell.md">PowerShell&lt;/a> 早期 WMI cmdlet 已弃用，在 PowerShell 6+ 中不可用，请改用 CIM cmdlet。&lt;/p>
&lt;p>PowerShell 中存在多个本机 WMI cmdlet，且无需安装任何其他软件或模块。 &lt;code>Get-Command&lt;/code> 可用于确定 Windows PowerShell 中存在哪些 WMI cmdlet。 以下结果来自运行 5.1 版 PowerShell 的 Windows 10 实验环境计算机。 结果因运行的 PowerShell 版本而异。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">Get-Command&lt;/span> &lt;span style="color:#000">-Noun&lt;/span> &lt;span style="color:#000">WMI&lt;/span>&lt;span style="color:#000;font-weight:bold">*&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>CommandType Name Version Source
----------- ---- ------- ------
Cmdlet Get-WmiObject 3.1.0.0 Microsof...
Cmdlet Invoke-WmiMethod 3.1.0.0 Microsof...
Cmdlet Register-WmiEvent 3.1.0.0 Microsof...
Cmdlet Remove-WmiObject 3.1.0.0 Microsof...
Cmdlet Set-WmiInstance 3.1.0.0 Microsof...
&lt;/code>&lt;/pre>&lt;p>PowerShell 版本 3.0 中引入了通用信息模型 (CIM) cmdlet。 CIM cmdlet 的设计目的是使其可以同时在 Windows 和非 Windows 计算机上使用。&lt;/p>
&lt;p>所有 CIM cmdlet 都包含在一个模块中。 若要获取 CIM cmdlet 的列表，请结合使用 &lt;code>Get-Command&lt;/code> 与 Module 参数，如以下示例中所示。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">Get-Command&lt;/span> &lt;span style="color:#000">-Module&lt;/span> &lt;span style="color:#000">CimCmdlets&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>CommandType Name Version Source
----------- ---- ------- ------
Cmdlet Export-BinaryMiLog 1.0.0.0 CimCmdlets
Cmdlet Get-CimAssociatedInstance 1.0.0.0 CimCmdlets
Cmdlet Get-CimClass 1.0.0.0 CimCmdlets
Cmdlet Get-CimInstance 1.0.0.0 CimCmdlets
Cmdlet Get-CimSession 1.0.0.0 CimCmdlets
Cmdlet Import-BinaryMiLog 1.0.0.0 CimCmdlets
Cmdlet Invoke-CimMethod 1.0.0.0 CimCmdlets
Cmdlet New-CimInstance 1.0.0.0 CimCmdlets
Cmdlet New-CimSession 1.0.0.0 CimCmdlets
Cmdlet New-CimSessionOption 1.0.0.0 CimCmdlets
Cmdlet Register-CimIndicationEvent 1.0.0.0 CimCmdlets
Cmdlet Remove-CimInstance 1.0.0.0 CimCmdlets
Cmdlet Remove-CimSession 1.0.0.0 CimCmdlets
Cmdlet Set-CimInstance 1.0.0.0 CimCmdlets
&lt;/code>&lt;/pre></description></item><item><title>Docs: Windows 共享</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/Windows-%E5%85%B1%E4%BA%AB/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/Windows-%E5%85%B1%E4%BA%AB/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>保证机器在“专用网络”，打开共享&lt;/p></description></item><item><title>Docs: Windwos 管理工具</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/Windows-%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/Windows-%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</guid><description/></item><item><title>Docs: WSA</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/WSA/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/WSA/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/microsoft/WSA">GitHub 项目，microsoft/WSA&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/zh-cn/windows/android/wsa/">官方文档，windows-android-wsa&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;blockquote>
&lt;p>[!Warning]
微软将在 2025 年 3 月 5 日停止支持 WSA。&lt;a href="https://learn.microsoft.com/en-us/windows/android/wsa/">Learn more&lt;/a>.&lt;/p>
&lt;/blockquote>
&lt;p>Windows Subsystem for Android with Amazon Appsotre&lt;/p>
&lt;p>WSA 管理器若没有打开任何应用、文件管理等功能，过一会会自动关闭 WSA，此时 adb 工具也连接不上，要想保持连接，至少要开着一个 WSA 系统中的功能。&lt;/p>
&lt;h1 id="关联文件与配置">关联文件与配置&lt;a class="td-heading-self-link" href="#%e5%85%b3%e8%81%94%e6%96%87%e4%bb%b6%e4%b8%8e%e9%85%8d%e7%bd%ae" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;code>%LOCALAPPDATA%/Packages/MicrosoftCorporationII.WindowsSubsystemForAndroid_8wekyb3d8bbwe/&lt;/code> # 安装目录？数据保存目录？&lt;/p>
&lt;p>在浏览器或资源管理器的导航栏中输入 &lt;code>wsa://com.android.settings&lt;/code> 即可打开像手机设置一样的 WSA 安卓设置。&lt;/p>
&lt;h1 id="安装-wsa">安装 WSA&lt;a class="td-heading-self-link" href="#%e5%ae%89%e8%a3%85-wsa" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.tjsky.net/tutorial/384">秋风于渭水，win11 安卓子系统（WSA）ROOT安装面具（Magisk）与谷歌框架（Google Apps）&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.xenori.com/2023/05/capture-android-https-network-packet-with-wsa/">bitxeno&amp;rsquo;s notes，通过 WSA 抓取 android 的 https 网络请求包&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.52pojie.cn/thread-1790633-1-1.html">吾爱破解，[Android Tools] WSA with Magisk Root安装配置教程(2023.5)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Notes: 截至 2024.1.13，微软官方还未向中国地区推送 WSA，在商店搜索不到，就算通过网页上的商店连接打开电脑上的 Microsoft Store，一会提示所在地去不可用，所以需要先修改系统中的 &lt;strong>国际或地区&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;p>“系统设置”→“时间和语言”→“语言和区域”→“区域”→“国家或地区”，选择「美国」&lt;/p>
&lt;p>Notes: 如果系统中的 Microsoft Store 搜不到 WSA，可以通过下面的网页链接打开 Microsoft Store 对应的页面进行安装&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://apps.microsoft.com/detail/9P3395VX91NR?hl=en-us&amp;amp;gl=US">https://apps.microsoft.com/detail/9P3395VX91NR?hl=en-us&amp;amp;gl=US&lt;/a> WSA 本体&lt;/li>
&lt;li>WSA 增强工具（非官方）
&lt;ul>
&lt;li>&lt;a href="https://apps.microsoft.com/detail/9PPSP2MKVTGT?hl=zh-cn&amp;amp;gl=cn">https://apps.microsoft.com/detail/9PPSP2MKVTGT?hl=zh-cn&amp;amp;gl=cn&lt;/a> WSA 工具箱&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="安装已-root-的-wsa">安装已 root 的 WSA&lt;a class="td-heading-self-link" href="#%e5%ae%89%e8%a3%85%e5%b7%b2-root-%e7%9a%84-wsa" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>卸载官方的 WSA，后使用下面的项目构建安装包后安装。&lt;/p>
&lt;p>&lt;a href="https://github.com/LSPosed/MagiskOnWSALocal">GitHub 项目，LSPosed/MagiskOnWSALocal&lt;/a> 已 root 带 Magisk、Google app 的 WSA&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/MustardChef/WSABuilds">https://github.com/MustardChef/WSABuilds&lt;/a> # 好像是把 LSPosed/MagiskOnWSALocal 项目的内容构建出来放到 release 里了，不用自己再 clone 项目后运行。&lt;/li>
&lt;/ul>
&lt;p>安装完成后，启用开发者模式，可以看到启动的监听端口，使用 adb 工具可以控制 WSA。&lt;/p>
&lt;h3 id="问题">问题&lt;a class="td-heading-self-link" href="#%e9%97%ae%e9%a2%98" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>有个 BUG，在 Create system images 时报错: ERROR: Not yet implemented。用 &lt;a href="https://github.com/sn-o-w/MagiskOnWSALocal">https://github.com/sn-o-w/MagiskOnWSALocal&lt;/a> 这个构建能解决。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/LSPosed/MagiskOnWSALocal/issues/754">https://github.com/LSPosed/MagiskOnWSALocal/issues/754&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Magisk 安装完模块后，重启 WSA 后模块不显示&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/MustardChef/WSABuilds/issues/154">https://github.com/MustardChef/WSABuilds/issues/154&lt;/a>&lt;/li>
&lt;li>临时解决办法: &lt;a href="https://github.com/MustardChef/WSABuilds/issues/154#issuecomment-1729105000">https://github.com/MustardChef/WSABuilds/issues/154#issuecomment-1729105000&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="最佳实践">最佳实践&lt;a class="td-heading-self-link" href="#%e6%9c%80%e4%bd%b3%e5%ae%9e%e8%b7%b5" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h2 id="为-wsa-配置代理">为 WSA 配置代理&lt;a class="td-heading-self-link" href="#%e4%b8%ba-wsa-%e9%85%8d%e7%bd%ae%e4%bb%a3%e7%90%86" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;a href="https://www.tjsky.net/tutorial/391">秋风于渭水，Windows Android 子系统 WSA 代理设置方法教程&lt;/a>&lt;/p>
&lt;p>方法一、通过 &lt;a href="https://desistdaydream.github.io/docs/Mobile%20device/Android%20MGMT/ADB.md">ADB&lt;/a> 进入 shell 使用 settings 设置代理。&lt;/p>
&lt;ul>
&lt;li>有局限性，有些 APP 的包在 Windows 的 Charles 上收不到包，WSA 中浏览器访问的包很全。&lt;/li>
&lt;/ul>
&lt;p>方法二、（已作废）因为 WSA 系统网络机制的更新，在较新的 WSA 上，方法三已经作废。 如果找不到名为 VirtWifi 的 wifi 说明这个方法已经不适合你的 WSA 了。&lt;/p></description></item><item><title>Docs: WSL 配置详解</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/WSL-%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/WSL-%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/windows/wsl/wsl-config">官方文档，WSL 配置&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>wsl.conf 和 .wslconfig 是 &lt;a href="https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/%E6%97%A0%E6%B3%95%E5%88%86%E7%B1%BB%E7%9A%84%E8%AF%AD%E8%A8%80/INI.md">INI&lt;/a> 格式的配置文件，两者互相配合以定义 WSL 虚拟机的运行方式&lt;/p>
&lt;ul>
&lt;li>wsl.conf 是在每个 Linux 发行版中的配置。通常是指 &lt;strong>本地配置&lt;/strong>&lt;/li>
&lt;li>.wslconfig 是在 Windows 中为所有 WSL发行版配置。通常是指 &lt;strong>全局配置&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h1 id="wslconf">wsl.conf&lt;a class="td-heading-self-link" href="#wslconf" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h1 id="wslconfig">.wslconfig&lt;a class="td-heading-self-link" href="#wslconfig" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>.wslconfig 包含两个部分: [wsl2] 和 [experimental]&lt;/p>
&lt;h2 id="wsl2">[wsl2]&lt;a class="td-heading-self-link" href="#wsl2" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;a href="https://learn.microsoft.com/en-us/windows/wsl/wsl-config#main-wsl-settings">https://learn.microsoft.com/en-us/windows/wsl/wsl-config#main-wsl-settings&lt;/a>&lt;/p>
&lt;p>&lt;strong>networkingMode&lt;/strong>(STRING) # 如果该值是 mirrored，则这将打开镜像网络模式。&lt;code>默认值: NAT&lt;/code>&lt;/p>
&lt;ul>
&lt;li>mirrored 会让虚拟机镜像本地网络。WSL2 和 Windows 主机的网络互通而且 IP 地址相同了，还支持 IPv6 了，并且从外部（比如局域网）可以同时访问 WSL2 和 Windows 的网络。这波升级彻底带回以前 WSL1 那时候的无缝网络体验了，并且 Windows 防火墙也能过滤 WSL 里的包了，再也不需要什么桥接网卡、端口转发之类的操作了。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>dnsTunneling&lt;/strong>(BOOLEAN) # 更改 DNS 请求从 WSL 代理到 Windows 的方式。&lt;code>默认值: false&lt;/code>&lt;/p>
&lt;p>&lt;strong>firewall&lt;/strong>(BOOLEAN) # 将此设置为 true 允许 Windows 防火墙规则以及特定于 Hyper-V 流量的规则来过滤 WSL 网络流量。&lt;code>默认值: true&lt;/code>&lt;/p>
&lt;p>&lt;strong>autoProxy&lt;/strong>(BOOLEAN) # 强制 WSL 使用 Windows 的 HTTP 代理信息。&lt;code>默认值: false&lt;/code>&lt;/p>
&lt;h2 id="experimental">[experimental]&lt;a class="td-heading-self-link" href="#experimental" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;a href="https://learn.microsoft.com/en-us/windows/wsl/wsl-config#experimental-settings">https://learn.microsoft.com/en-us/windows/wsl/wsl-config#experimental-settings&lt;/a>&lt;/p>
&lt;p>&lt;strong>autoMemoryReclaim&lt;/strong>(STRING) # &lt;code>默认值: disable&lt;/code>&lt;/p>
&lt;h1 id="最佳实">最佳实&lt;a class="td-heading-self-link" href="#%e6%9c%80%e4%bd%b3%e5%ae%9e" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h2 id="wsl-配置网络">WSL 配置网络&lt;a class="td-heading-self-link" href="#wsl-%e9%85%8d%e7%bd%ae%e7%bd%91%e7%bb%9c" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;h3 id="配置桥接网络和静态-ip">配置桥接网络和静态 IP&lt;a class="td-heading-self-link" href="#%e9%85%8d%e7%bd%ae%e6%a1%a5%e6%8e%a5%e7%bd%91%e7%bb%9c%e5%92%8c%e9%9d%99%e6%80%81-ip" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.cnblogs.com/lic0914/p/17003251.html">博客园，WSL2使用桥接网络，并指定IP&lt;/a>
&lt;ul>
&lt;li>该文章参考的原文: &lt;a href="https://github.com/luxzg/WSL2-fixes/blob/master/networkingMode%3Dbridged.md">https://github.com/luxzg/WSL2-fixes/blob/master/networkingMode%3Dbridged.md&lt;/a>&lt;/li>
&lt;li>上面这些做法可以弃用了，使用 &lt;a href="https://github.com/microsoft/WSL/issues/10753#issuecomment-1814839310">https://github.com/microsoft/WSL/issues/10753#issuecomment-1814839310&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>常见问题&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/microsoft/WSL/issues/10753#issuecomment-1814839310">https://github.com/microsoft/WSL/issues/10753#issuecomment-1814839310&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/657110386">https://zhuanlan.zhihu.com/p/657110386&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>在 WSL2 的 &lt;a href="https://github.com/microsoft/WSL/releases/tag/2.0.0">Release 2.0.0&lt;/a> 版本更新日志中提到了网络模式，可以镜像主机，这样就不用任何配置即可使用主机网络、主机代理、等&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">[experimental]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c4a000">autoMemoryReclaim&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">gradual | dropcache | disabled # 好像推荐用 gradual&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c4a000">networkingMode&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">mirrored&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c4a000">dnsTunneling&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c4a000">firewall&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c4a000">autoProxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>再新一点的版本可以把多个配置移到 wsl2 部分&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">[wsl2]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c4a000">networkingMode&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">mirrored&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c4a000">dnsTunneling&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c4a000">firewall&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c4a000">autoProxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">[experimental]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c4a000">autoMemoryReclaim&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">gradual&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: 启动项</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/%E5%90%AF%E5%8A%A8%E9%A1%B9/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/%E5%90%AF%E5%8A%A8%E9%A1%B9/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>我们可以通过多种方式，让 Windows 启动后自动执行一些命令&lt;/p>
&lt;ul>
&lt;li>Windows 服务&lt;/li>
&lt;li>任务计划程序&lt;/li>
&lt;li>使用自启动目录&lt;/li>
&lt;li>TODO: 待总结&lt;/li>
&lt;/ul>
&lt;h1 id="任务管理器中的启动应用">任务管理器中的启动应用&lt;a class="td-heading-self-link" href="#%e4%bb%bb%e5%8a%a1%e7%ae%a1%e7%90%86%e5%99%a8%e4%b8%ad%e7%9a%84%e5%90%af%e5%8a%a8%e5%ba%94%e7%94%a8" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.gladtbam.top/posts/22537/">任务管理器启动项中出现 Program 解决办法&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>任务管理器中的启动应用信息保存在 &lt;a href="https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows%20%E7%AE%A1%E7%90%86/%E6%B3%A8%E5%86%8C%E8%A1%A8.md">注册表&lt;/a> 的如下几个位置&lt;/p>
&lt;pre tabindex="0">&lt;code>HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Run
HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run
HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run
&lt;/code>&lt;/pre>&lt;h1 id="autoruns-程序">Autoruns 程序&lt;a class="td-heading-self-link" href="#autoruns-%e7%a8%8b%e5%ba%8f" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/sysinternals/downloads/autoruns">官网&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>Autoruns 是微软官方推出的自启动程序管理器。&lt;/p>
&lt;p>只需运行 Autoruns，它就会向您显示当前配置的自动启动应用程序以及可用于自动启动配置的注册表和文件系统位置的完整列表。 Autoruns 显示的自动启动位置包括登录条目、Explorer 加载项、Internet Explorer 加载项（包括浏览器帮助程序对象 (BHO)、Appinit DLL、映像劫持、启动执行映像、Winlogon 通知 DLL、Windows 服务和 Winsock 分层服务提供程序、媒体）编解码器等等。切换选项卡以查看不同类别的自动启动。&lt;/p>
&lt;h1 id="最佳实践">最佳实践&lt;a class="td-heading-self-link" href="#%e6%9c%80%e4%bd%b3%e5%ae%9e%e8%b7%b5" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h2 id="开机后运行-powershell-脚本">开机后运行 Powershell 脚本&lt;a class="td-heading-self-link" href="#%e5%bc%80%e6%9c%ba%e5%90%8e%e8%bf%90%e8%a1%8c-powershell-%e8%84%9a%e6%9c%ac" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>编写 Powershell 脚本，X.ps1，并将 X.ps1 的快捷方式放到 `%appdata%\Microsoft\Windows\Start Menu\Programs\Startup\ 目录下&lt;/p>
&lt;p>设置 .ps1 后缀的默认应用为 Powershell(比如 pwsh、powershell 等)&lt;/p></description></item><item><title>Docs: 性能评估与故障处理</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/%E6%80%A7%E8%83%BD%E8%AF%84%E4%BC%B0%E4%B8%8E%E6%95%85%E9%9A%9C%E5%A4%84%E7%90%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/%E6%80%A7%E8%83%BD%E8%AF%84%E4%BC%B0%E4%B8%8E%E6%95%85%E9%9A%9C%E5%A4%84%E7%90%86/</guid><description/></item><item><title>Docs: 依赖库</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/%E4%BE%9D%E8%B5%96%E5%BA%93/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/%E4%BE%9D%E8%B5%96%E5%BA%93/</guid><description/></item><item><title>Docs: 注册表</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/%E6%B3%A8%E5%86%8C%E8%A1%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/%E6%B3%A8%E5%86%8C%E8%A1%A8/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://mp.weixin.qq.com/s/5ZcvRNG7GvvopcQWWdXNaw">公众号-差评，所有电脑管家都叫你清理的注册表，竟然能偷偷控制你的电脑！&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h2 id="注册表前身">注册表前身&lt;a class="td-heading-self-link" href="#%e6%b3%a8%e5%86%8c%e8%a1%a8%e5%89%8d%e8%ba%ab" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>其实，注册表也不是一开始就存在于 Windows 上。&lt;/p>
&lt;p>在 Windows 95 之前，微软通过一种叫 “ 配置文件 ” 的东西，来实现如今注册表的作用。&lt;/p>
&lt;p>这里面存储的，就是一些软件的&lt;strong>基本信息&lt;/strong>。比如说配置一些文件的打开路径在哪里，或者是软件要用哪些字体来读取。&lt;/p>
&lt;p>通常通过 ini 格式的文件，配置文件会趁着咱们安装各种软件的时候，把自己丢在系统的各种文件夹里。想修改一些配置的时候，咱们可以直接去这个软件的安装目录里找 ini 文件就行。&lt;/p>
&lt;p>看上去挺方便，不过这 ini 文件最大的问题吧，就是太容易修改了，甚至可以简单到直接用记事本给打开。&lt;/p>
&lt;p>到时候手一抖改几个字，可能一个软件就打不开了。&lt;/p>
&lt;p>比如把一个 5 行的行间距手一抖改成复数，软件当场就寻思我哪见过这个？不当场宕机就不错了。万一改的还是系统配置文件，电脑指不定也得抽两抽。&lt;/p>
&lt;p>而且，当年大家用的还都是机械硬盘。。。考虑到 ini 文件分散在系统的各种犄角旮旯，&lt;strong>读取起来太麻烦，打开也嫌慢，更不方便维护。&lt;/strong>&lt;/p>
&lt;p>微软后来就一寻思，干脆把这些乱的到处都是的 ini 文件功能给&lt;strong>整合了起来。&lt;/strong>&lt;/p>
&lt;p>通过一个统一的，系统级别的分层&lt;strong>数据库&lt;/strong>来起到过去 “ 配置文件 ” 做的事情。这个库里面装的呢，就是咱们电脑里哪些花里胡哨，乱七八糟的配置。&lt;/p>
&lt;p>举个例子，我们鼠标右键的每次点击，到底会弹出来哪些菜单选项，以及具体要弹的多长。&lt;strong>都得让注册表来告诉它才行。&lt;/strong>&lt;/p>
&lt;p>而且吧，比起过去各自为战，互相之间看不对眼的配置文件。注册表还能起到一个**系统级别的调度功能，**可以把这些软件之间的信息共享给其它软件，。&lt;/p>
&lt;p>当有新的软件安装的时候，也会优先把自己能干什么，自己需要什么的消息给写入注册表里。&lt;/p>
&lt;p>就像咱们现在能用 WPS 软件来打开 word 文档，中间还得靠注册表这个 “传话筒” 来沟通才行。想让系统能弄清楚，我们得把 &lt;strong>“ wps 可以打开 word ” 文档这件事情，写到注册表里。&lt;/strong>&lt;/p>
&lt;p>借助当时更为先进的数据库结构，注册表还能够实现**多用户配置和多线程读写等功能。**别看咱们现在嫌弃注册表长的丑，&lt;strong>要知道当年，这可是少有的图形可视化界面。&lt;/strong>&lt;/p>
&lt;h2 id="注册表小解">注册表小解&lt;a class="td-heading-self-link" href="#%e6%b3%a8%e5%86%8c%e8%a1%a8%e5%b0%8f%e8%a7%a3" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>按 win + R，在对话框里输入 &lt;code>regedit&lt;/code> 来打开注册表编辑器。&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/regedit/1660293598735-fcf30cc1-e1be-40a6-91da-e8cf808c68a0.png" alt="">&lt;/p>
&lt;ul>
&lt;li>&lt;strong>HKEY_CLASSES_ROOT&lt;/strong> # 包含有关已注册应用程序的信息 ， 包括驱动 ， 文件拓展名等等 。&lt;/li>
&lt;li>&lt;strong>HKEY_CURRENT_USER&lt;/strong> # 存储特定于当前登录用户的设置 ， 包括环境变量 ， 个人桌面的设置等等 。&lt;/li>
&lt;li>&lt;strong>HKEY_LOCAL_MACHINE&lt;/strong> # 存储特定于本地计算机的设置 ， 由系统内核维护在内存中 ， 以便映射所有其他子键 。 这些信息可以其它用户使用 。&lt;/li>
&lt;li>&lt;strong>HKEY_USERS&lt;/strong> # 和上面的第二个项目相对 ， 包含与机器上主动加载的每个用户配置文件的 HKEY_CURRENT_USER 键对应的子键&lt;/li>
&lt;li>&lt;strong>HKEY_CURRENT_CONFIG&lt;/strong> # 该主键保存了计算机当前硬件的配置信息 ， 这些配置可以根据当前所连接的网络类型或硬件驱动软件安装的改变而改变 。&lt;/li>
&lt;/ul>
&lt;h3 id="备份注册表">备份注册表&lt;a class="td-heading-self-link" href="#%e5%a4%87%e4%bb%bd%e6%b3%a8%e5%86%8c%e8%a1%a8" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>文件 - 导出&lt;/p>
&lt;h1 id="应用示例">应用示例&lt;a class="td-heading-self-link" href="#%e5%ba%94%e7%94%a8%e7%a4%ba%e4%be%8b" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h3 id="在鼠标右键菜单上添加内容">在鼠标右键菜单上添加内容&lt;a class="td-heading-self-link" href="#%e5%9c%a8%e9%bc%a0%e6%a0%87%e5%8f%b3%e9%94%ae%e8%8f%9c%e5%8d%95%e4%b8%8a%e6%b7%bb%e5%8a%a0%e5%86%85%e5%ae%b9" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>打开注册表后，在表上的地址栏里输入这个：&lt;code>HKEY_CLASSES_ROOT\Directory\Background\shell&lt;/code>&lt;/p>
&lt;p>在 shell 中“添加项”，添加的项名就是右键菜单中的功能名&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/regedit/1660293800817-e8b7c6ec-a7e6-4cdc-af1b-fba835707b2f.png" alt="image.png">&lt;/p>
&lt;p>不过这回还没给它加上功能，直接点击的话会报错。&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/regedit/1660293861254-00b77fdd-b0d2-4f40-b5a1-59f215198b70.png" alt="">&lt;/p>
&lt;p>在 “desistdaydream”项下添加 “command”项；修改 command 项中的默认值为想要运行进程的绝对路径&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/regedit/1660294056508-703dab2f-1fad-4a5e-a9ec-3ae07245dd93.png" alt="image.png">&lt;/p>
&lt;p>此时右键的 “desistdaydream”就可以运行 Python 了。&lt;/p></description></item><item><title>Docs: WSL</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/WSL/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/WSL/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/microsoft/WSL">GitHub 项目，microsoft/WSL&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.microsoft.com/zh-cn/windows/wsl/">官方文档，windows-wsl&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h1 id="安装-wsl">安装 WSL&lt;a class="td-heading-self-link" href="#%e5%ae%89%e8%a3%85-wsl" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>现在默认使用 WSL2，也推荐安装和使用 WSL2。&lt;/p>
&lt;p>打开 “启用或关闭Windows功能”，开启 “适用于 Linux 的 Windows 子系统” 和 “虚拟机平台”。&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/wsl/20230601094318.png" alt="image.png">&lt;/p>
&lt;p>之后在 Microsoft Store 中使用 &lt;code>Windows Susystem for Linux&lt;/code> 关键字搜索并安装 WSL 的最新版。&lt;/p>
&lt;p>若不开启“虚拟机平台” 或 安装最新版 WSL，在安装后启动时，将可能会出现下图错误&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/wsl/wsl-error.png" alt="wsl-error.png">&lt;/p>
&lt;h2 id="安装-linux-发行版">安装 Linux 发行版&lt;a class="td-heading-self-link" href="#%e5%ae%89%e8%a3%85-linux-%e5%8f%91%e8%a1%8c%e7%89%88" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>在 PowerShell 执行指令&lt;/p>
&lt;p>安装 Ubuntu 发行版的 WSL&lt;/p>
&lt;pre tabindex="0">&lt;code>wsl --install -d Ubuntu
&lt;/code>&lt;/pre>&lt;h2 id="常见问题">常见问题&lt;a class="td-heading-self-link" href="#%e5%b8%b8%e8%a7%81%e9%97%ae%e9%a2%98" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>若安装后 linux 无法启动，报错：&lt;code>WslRegisterDistribution failed with error: 0x800701bc&lt;/code>&lt;/p>
&lt;p>（可选）设置 wsl 版本&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>wsl --set-default-version &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>忘记密码时，可以在 PowerShell 中使用 wsl 命令直接以 root 用户登录 wsl&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>wsl.exe --user root
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>更多常见问题，可以参考&lt;a href="https://learn.microsoft.com/zh-cn/windows/wsl/troubleshooting">官方文档，疑难解答&lt;/a>&lt;/p>
&lt;h1 id="访问-wsl-文件系统">访问 WSL 文件系统&lt;a class="td-heading-self-link" href="#%e8%ae%bf%e9%97%ae-wsl-%e6%96%87%e4%bb%b6%e7%b3%bb%e7%bb%9f" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>在 Windows 资源管理器中，访问 &lt;code>\\wsl$&lt;/code> 即可访问 WSL 文件系统&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/tqwpkc/1654930585949-71f955ca-97c4-45d8-be77-a637670803eb.png" alt="image.png">&lt;/p>
&lt;h1 id="wsl-关联文件与配置">WSL 关联文件与配置&lt;a class="td-heading-self-link" href="#wsl-%e5%85%b3%e8%81%94%e6%96%87%e4%bb%b6%e4%b8%8e%e9%85%8d%e7%bd%ae" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h2 id="windows-下的关联文件">Windows 下的关联文件&lt;a class="td-heading-self-link" href="#windows-%e4%b8%8b%e7%9a%84%e5%85%b3%e8%81%94%e6%96%87%e4%bb%b6" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;strong>%LOCALAPPDATA%/Packages/CanonicalGroupLimited.XXXXX&lt;/strong> # 通过应用商店安装后的程序数据保存路径。比如 CanonicalGroupLimited.Ubuntu_79rhkp1fndgsc&lt;/p>
&lt;ul>
&lt;li>&lt;strong>./LocalState/ext4.vhdx&lt;/strong> # WSL 虚拟机文件，WSL 启动的虚拟机后数据都在该文件中，类似于 kvm/qemu 的 .qcow2 文件&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>%UserProfile%/.wslconfig&lt;/strong> # 用于在作为 WSL2 版本运行的所有已安装 Linux 发行版中全局配置设置。&lt;/p>
&lt;h2 id="linux-发行版下的关联文件">LInux 发行版下的关联文件&lt;a class="td-heading-self-link" href="#linux-%e5%8f%91%e8%a1%8c%e7%89%88%e4%b8%8b%e7%9a%84%e5%85%b3%e8%81%94%e6%96%87%e4%bb%b6" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;strong>/etc/wsl.conf&lt;/strong> # 作为 Unix 文件存储，用于为每个发行版配置各自独立的设置。&lt;/p>
&lt;h1 id="wsl-命令行工具">wsl 命令行工具&lt;a class="td-heading-self-link" href="#wsl-%e5%91%bd%e4%bb%a4%e8%a1%8c%e5%b7%a5%e5%85%b7" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://learn.microsoft.com/zh-cn/windows/wsl/basic-commands">官方文档-WSL，概述-基本 WSL 命令&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h2 id="syntax语法">Syntax(语法)&lt;a class="td-heading-self-link" href="#syntax%e8%af%ad%e6%b3%95" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;strong>wsl [OPTOINS]&lt;/strong>&lt;/p>
&lt;p>&lt;strong>OPTONS&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>-d, &amp;ndash;distribution STRING&lt;/strong> # 指定要运行的发行版&lt;/li>
&lt;li>&lt;strong>-u, &amp;ndash;user STRING&lt;/strong> # 使用指定的用户运行发行版。可以直接以 root 用户运行。常用来在忘记密码时候使用。&lt;/li>
&lt;/ul>
&lt;p>WSL 子系统管理选项&lt;/p>
&lt;ul>
&lt;li>&lt;strong>&amp;ndash;install [DISTRIBUTION] [OPTIONS]&lt;/strong> #&lt;/li>
&lt;li>&lt;strong>&amp;ndash;shutdown&lt;/strong> # 立即终止所有正在运行在 wsl 子系统上的 Linux 发行版&lt;/li>
&lt;li>&lt;strong>&amp;ndash;status&lt;/strong> # 显示 wsl 子系统的状态。&lt;/li>
&lt;li>&lt;strong>&amp;ndash;update&lt;/strong> # 更新 wsl 子系统程序包。&lt;/li>
&lt;/ul>
&lt;p>发行版管理选项&lt;/p>
&lt;ul>
&lt;li>&lt;strong>-l, &amp;ndash;list [OPTIONS]&lt;/strong> # 列出发行版，可以根据子参数指定需要列出哪些发行版。
&lt;ul>
&lt;li>&lt;strong>&amp;ndash;all&lt;/strong> # 列出所有&lt;/li>
&lt;li>&lt;strong>-o, &amp;ndash;online&lt;/strong> # 列出所有可以安装的发行版。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>&amp;ndash;set-default-version&lt;/strong> #&lt;/li>
&lt;li>&lt;strong>-s, &amp;ndash;set-default DISTRO&lt;/strong> # 将指定的发行版设为默认&lt;/li>
&lt;li>&lt;strong>&amp;ndash;unregister DISTRO&lt;/strong> # 将指定的发行版取消注册。
&lt;ul>
&lt;li>&lt;font color="#ff0000">注意&lt;/font>：若从应用商店删除特定发行版后再安装失败的话，需要通过 wsl 命令手动 unregister 一下，即可成功。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item></channel></rss>