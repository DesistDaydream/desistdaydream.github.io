<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Windows 管理 on 断念梦的站点</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/</link><description>Recent content in Windows 管理 on 断念梦的站点</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/index.xml" rel="self" type="application/rss+xml"/><item><title>Windows Management Instrumentation</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/Windows-Management-Instrumentation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/Windows-Management-Instrumentation/</guid><description>概述 参考：
官方文档 Wiki, Windows_Management_Instrumentation Windows Management Instrumentation(简称 WMI) 使用 CIM(通用信息模型) 行业标准来表示系统、应用程序、网络、设备和其他受管理的组件。
https://www.syscom.com.tw/ePaper_Content_EPArticledetail.aspx?id=76&amp;EPID=159&amp;j=4&amp;HeaderName=%E7%A0%94%E7%99%BC%E6%96%B0%E8%A6%96%E7%95%8C
在 PowerShell 中使用 WMI https://learn.microsoft.com/zh-cn/powershell/scripting/learn/ps101/07-working-with-wmi
Windows PowerShell 早期 WMI cmdlet 已弃用，在 PowerShell 6+ 中不可用，请改用 CIM cmdlet。
PowerShell 中存在多个本机 WMI cmdlet，且无需安装任何其他软件或模块。 Get-Command 可用于确定 Windows PowerShell 中存在哪些 WMI cmdlet。 以下结果来自运行 5.1 版 PowerShell 的 Windows 10 实验环境计算机。 结果因运行的 PowerShell 版本而异。
Get-Command -Noun WMI* CommandType Name Version Source ----------- ---- ------- ------ Cmdlet Get-WmiObject 3.1.0.0 Microsof... Cmdlet Invoke-WmiMethod 3.1.0.0 Microsof... Cmdlet Register-WmiEvent 3.</description></item><item><title>Windows MGMT</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/Windows-MGMT/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/Windows-MGMT/</guid><description>概述 参考：
休眠
这么多年了，为啥Windows笔记本们连个休眠都做不好？【差评君】</description></item><item><title>Windows 共享</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/Windows-%E5%85%B1%E4%BA%AB/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/Windows-%E5%85%B1%E4%BA%AB/</guid><description>概述 参考：
保证机器在“专用网络”，打开共享</description></item><item><title>启动项</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/%E5%90%AF%E5%8A%A8%E9%A1%B9/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/%E5%90%AF%E5%8A%A8%E9%A1%B9/</guid><description>概述 我们可以通过多种方式，让 Windows 启动后自动执行一些命令
Windows 服务 任务计划程序 使用自启动目录 TODO: 待总结 任务管理器中的启动应用 参考：
任务管理器启动项中出现 Program 解决办法 任务管理器中的启动应用信息保存在 注册表 的如下几个位置
HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Run HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run Autoruns 程序 参考：
官网 Autoruns 是微软官方推出的自启动程序管理器。
只需运行 Autoruns，它就会向您显示当前配置的自动启动应用程序以及可用于自动启动配置的注册表和文件系统位置的完整列表。 Autoruns 显示的自动启动位置包括登录条目、Explorer 加载项、Internet Explorer 加载项（包括浏览器帮助程序对象 (BHO)、Appinit DLL、映像劫持、启动执行映像、Winlogon 通知 DLL、Windows 服务和 Winsock 分层服务提供程序、媒体）编解码器等等。切换选项卡以查看不同类别的自动启动。
可以保存为 .am 文件
最佳实践 开机后运行 Powershell 脚本 编写 Powershell 脚本，X.ps1，并将 X.ps1 的快捷方式放到 `%appdata%\Microsoft\Windows\Start Menu\Programs\Startup\ 目录下
设置 .ps1 后缀的默认应用为 Powershell(比如 pwsh、powershell 等)</description></item><item><title>注册表</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/%E6%B3%A8%E5%86%8C%E8%A1%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/%E6%B3%A8%E5%86%8C%E8%A1%A8/</guid><description>概述 参考：
公众号-差评，所有电脑管家都叫你清理的注册表，竟然能偷偷控制你的电脑！ 注册表前身 其实，注册表也不是一开始就存在于 Windows 上。
在 Windows 95 之前，微软通过一种叫 “ 配置文件 ” 的东西，来实现如今注册表的作用。
这里面存储的，就是一些软件的基本信息。比如说配置一些文件的打开路径在哪里，或者是软件要用哪些字体来读取。
通常通过 ini 格式的文件，配置文件会趁着咱们安装各种软件的时候，把自己丢在系统的各种文件夹里。想修改一些配置的时候，咱们可以直接去这个软件的安装目录里找 ini 文件就行。
看上去挺方便，不过这 ini 文件最大的问题吧，就是太容易修改了，甚至可以简单到直接用记事本给打开。
到时候手一抖改几个字，可能一个软件就打不开了。
比如把一个 5 行的行间距手一抖改成复数，软件当场就寻思我哪见过这个？不当场宕机就不错了。万一改的还是系统配置文件，电脑指不定也得抽两抽。
而且，当年大家用的还都是机械硬盘。。。考虑到 ini 文件分散在系统的各种犄角旮旯，读取起来太麻烦，打开也嫌慢，更不方便维护。
微软后来就一寻思，干脆把这些乱的到处都是的 ini 文件功能给整合了起来。
通过一个统一的，系统级别的分层数据库来起到过去 “ 配置文件 ” 做的事情。这个库里面装的呢，就是咱们电脑里哪些花里胡哨，乱七八糟的配置。
举个例子，我们鼠标右键的每次点击，到底会弹出来哪些菜单选项，以及具体要弹的多长。都得让注册表来告诉它才行。
而且吧，比起过去各自为战，互相之间看不对眼的配置文件。注册表还能起到一个**系统级别的调度功能，**可以把这些软件之间的信息共享给其它软件，。
当有新的软件安装的时候，也会优先把自己能干什么，自己需要什么的消息给写入注册表里。
就像咱们现在能用 WPS 软件来打开 word 文档，中间还得靠注册表这个 “传话筒” 来沟通才行。想让系统能弄清楚，我们得把 “ wps 可以打开 word ” 文档这件事情，写到注册表里。
借助当时更为先进的数据库结构，注册表还能够实现**多用户配置和多线程读写等功能。**别看咱们现在嫌弃注册表长的丑，要知道当年，这可是少有的图形可视化界面。
注册表小解 按 win + R，在对话框里输入 regedit 来打开注册表编辑器。
HKEY_CLASSES_ROOT # 包含有关已注册应用程序的信息 ， 包括驱动 ， 文件拓展名等等 。 HKEY_CURRENT_USER # 存储特定于当前登录用户的设置 ， 包括环境变量 ， 个人桌面的设置等等 。 HKEY_LOCAL_MACHINE # 存储特定于本地计算机的设置 ， 由系统内核维护在内存中 ， 以便映射所有其他子键 。 这些信息可以其它用户使用 。 HKEY_USERS # 和上面的第二个项目相对 ， 包含与机器上主动加载的每个用户配置文件的 HKEY_CURRENT_USER 键对应的子键 HKEY_CURRENT_CONFIG # 该主键保存了计算机当前硬件的配置信息 ， 这些配置可以根据当前所连接的网络类型或硬件驱动软件安装的改变而改变 。 备份注册表 文件 - 导出</description></item><item><title>WSL</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/WSL/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/WSL/</guid><description>概述 参考：
GitHub 项目，microsoft/WSL 官方文档，windows-wsl 安装 WSL 现在默认使用 WSL2，也推荐安装和使用 WSL2。
打开 “启用或关闭Windows功能”，开启 “适用于 Linux 的 Windows 子系统” 和 “虚拟机平台”。
之后在 Microsoft Store 中使用 Windows Susystem for Linux 关键字搜索并安装 WSL 的最新版。
若不开启“虚拟机平台” 或 安装最新版 WSL，在安装后启动时，将可能会出现下图错误
安装 Linux 发行版 在 PowerShell 执行指令
安装 Ubuntu 发行版的 WSL
wsl --install -d Ubuntu 常见问题 若安装后 linux 无法启动，报错：WslRegisterDistribution failed with error: 0x800701bc
（可选）设置 wsl 版本
wsl --set-default-version 2 忘记密码时，可以在 PowerShell 中使用 wsl 命令直接以 root 用户登录 wsl</description></item><item><title>WSL 配置详解</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/WSL-%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/WSL-%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/</guid><description>概述 参考：
官方文档，WSL 配置 wsl.conf 和 .wslconfig 是 INI 格式的配置文件，两者互相配合以定义 WSL 虚拟机的运行方式
wsl.conf 是在每个 WSL 中的 Linux 发行版内部的配置。通常是指 本地配置（tips: 本地配置就是指在 WSL 系统中，也就是 Linux 系统中的配置） .wslconfig 是在 Windows 中为所有 WSL发行版配置。通常是指 全局配置 wsl.conf boot systemd(BOOLEAN) # 是否启用 systemd
.wslconfig .wslconfig 包含两个部分: wsl2 和 experimental
[wsl2] https://learn.microsoft.com/en-us/windows/wsl/wsl-config#main-wsl-settings
networkingMode(STRING) # 如果该值是 mirrored，则这将打开镜像网络模式。默认值: NAT
mirrored 会让虚拟机镜像本地网络。WSL2 和 Windows 主机的网络互通而且 IP 地址相同了，还支持 IPv6 了，并且从外部（比如局域网）可以同时访问 WSL2 和 Windows 的网络。这波升级彻底带回以前 WSL1 那时候的无缝网络体验了，并且 Windows 防火墙也能过滤 WSL 里的包了，再也不需要什么桥接网卡、端口转发之类的操作了。 dnsTunneling(BOOLEAN) # 更改 DNS 请求从 WSL 代理到 Windows 的方式。默认值: false</description></item><item><title>WSA</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/WSA/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Windows-%E7%AE%A1%E7%90%86/WSA/</guid><description>概述 参考：
GitHub 项目，microsoft/WSA 官方文档，windows-android-wsa [!Warning] 微软将在 2025 年 3 月 5 日停止支持 WSA。Learn more.
Windows Subsystem for Android with Amazon Appsotre
WSA 管理器若没有打开任何应用、文件管理等功能，过一会会自动关闭 WSA，此时 adb 工具也连接不上，要想保持连接，至少要开着一个 WSA 系统中的功能。
关联文件与配置 %LOCALAPPDATA%/Packages/MicrosoftCorporationII.WindowsSubsystemForAndroid_8wekyb3d8bbwe/ # 安装目录？数据保存目录？
在浏览器或资源管理器的导航栏中输入 wsa://com.android.settings 即可打开像手机设置一样的 WSA 安卓设置。
安装 WSA 参考：
秋风于渭水，win11 安卓子系统（WSA）ROOT安装面具（Magisk）与谷歌框架（Google Apps） bitxeno&amp;rsquo;s notes，通过 WSA 抓取 android 的 https 网络请求包 吾爱破解，[Android Tools] WSA with Magisk Root安装配置教程(2023.5) Notes: 截至 2024.1.13，微软官方还未向中国地区推送 WSA，在商店搜索不到，就算通过网页上的商店连接打开电脑上的 Microsoft Store，一会提示所在地去不可用，所以需要先修改系统中的 国际或地区
“系统设置”→“时间和语言”→“语言和区域”→“区域”→“国家或地区”，选择「美国」
Notes: 如果系统中的 Microsoft Store 搜不到 WSA，可以通过下面的网页链接打开 Microsoft Store 对应的页面进行安装</description></item></channel></rss>