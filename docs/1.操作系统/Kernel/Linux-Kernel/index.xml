<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux Kernel on 断念梦的站点</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Kernel/Linux-Kernel/</link><description>Recent content in Linux Kernel on 断念梦的站点</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Kernel/Linux-Kernel/index.xml" rel="self" type="application/rss+xml"/><item><title>Linux Kernel</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Kernel/Linux-Kernel/Linux-Kernel/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Kernel/Linux-Kernel/Linux-Kernel/</guid><description>概述 参考：
Linus Torvalds GitHub 项目，torvalds/linux 官网 官方文档 https://www.infradead.org/~mchehab/kernel_docs/index.html 这是哪里的官方文档？ 官方 Manual(手册) LWN.net 是一个由读者支持的新闻网站，致力于在 Linux 和 自由软件开发社区 中提供最佳报道。 Wiki, Kernel Wiki, /boot Wiki, vmlinux Wiki, Initial ramdisk Wiki, System.map 树莓派 Linux RedHat 官方文档，8 - 管理、监控和更新内核 http://www.linfo.org/vmlinuz.html 知乎，initrd 和 initramfs 的区别 Kernel(内核) 是一个作为操作系统核心的计算机程序，对系统中的一切具有完全控制权。它负责管理系统的进程、内存、设备驱动程序、文件和网络系统，决定着系统的性能和稳定性。
Kernel 是计算器启动时首先加载程序之一，在 Bootloader并处理硬件和软件之间的交互。并且处理启动过程的其余部分、以及内存、外设、和来自软件的输入/输出请求，将他们转换为 CPU 的数据处理指令。
Kernel 组成及系统调用 Linux 内核由如下几部分组成：内存管理、进程管理、设备驱动程序管理、文件系统管理、网络管理等。如图：
System Call Interface(系统调用接口，简称 SCI) 层提供了某些机制执行从用户空间到内核的函数调用。这个接口依赖于体系结构，甚至在相同的处理器家族内也是如此。SCI 实际上是一个非常有用的函数调用多路复用和多路分解服务。
系统调用介绍详见 System Call(系统调用) 章节
Linux Manual 使用说明 Linux 的 Manual(man 手册) 来自于 Linux man-pages project 项目，该项目的 HTML 渲染结果可以在 man7.</description></item><item><title>Boot Configuration</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Kernel/Linux-Kernel/Boot-Configuration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Kernel/Linux-Kernel/Boot-Configuration/</guid><description>概述 参考：
Linux Kernel 官网文档，Linux 内核用户和管理员指南 - 内核引导配置 Boot Configuration(引导配置) 扩展了当前内核命令行，在引导内核时，可以提供额外的运行时配置。该文件默认在 /boot/config-$(uname -r)，每个内核版本都有一个对应的文件。
该文件有几千行，每一行都是一个以 = 分割的键值对，用来在系统启动内核前的引导阶段，为内核配置运行时行为
Linux Namespace 配置 CONFIG_CHECKPOINT_RESTORE=y CONFIG_NAMESPACES=y # 是否启用 Linux Namespace CONFIG_UTS_NS=y # 是否启用 UTS NS CONFIG_IPC_NS=y # 是否启用 IPC NS CONFIG_USER_NS=y CONFIG_PID_NS=y CONFIG_NET_NS=y # # 是否启用 NET NS CONFIG_UIDGID_STRICT_TYPE_CHECKS=y CONFIG_SCHED_AUTOGROUP=y CONFIG_MM_OWNER=y</description></item><item><title>Kernel 的安装与卸载</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Kernel/Linux-Kernel/Kernel-%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E5%8D%B8%E8%BD%BD/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Kernel/Linux-Kernel/Kernel-%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E5%8D%B8%E8%BD%BD/</guid><description>概述 参考：
https://mp.weixin.qq.com/s/1xRc4DzyG4c8e2XYGk28Vg Ubuntu 参考：
https://kernel.ubuntu.com/~kernel-ppa/mainline/ 更换内核 awk -F' '$1==&amp;quot;\tmenuentry &amp;quot; {print i++ &amp;quot; : &amp;quot; $2}' /boot/grub/grub.cfg
CentOS 参考：
ELRepo 安装文档 elrepo 的内核 rpm 包不全，暂时也不知道去哪找，先把能找到的网址都记下来 https://buildlogs.centos.org/c7-kernels.x86_64/kernel/ https://buildlogs.centos.org/c7-kernels.x86_64/kernel/20200330213326/4.19.113-300.el8.x86_64/?C=N;O=A 安装 linux 内核的存储库 rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org yum install -y https://www.elrepo.org/elrepo-release-7.el7.elrepo.noarch.rpm 安装 linux 内核 查看可用的 linux 内核版本
版本性质：主分支 ml(mainline)，稳定版(stable)，长期维护版 lt(longterm)
yum --disablerepo=&amp;#34;*&amp;#34; --enablerepo=&amp;#34;elrepo-kernel&amp;#34; list available 安装指定版本的 Linux 内核
yum --enablerepo=elrepo-kernel install kernel-lt-devel kernel-lt kernel-lt-headers -y (可选)安装新内核工具
yum remove kernel-tools-libs.x86_64 kernel-tools.x86_64 yum --disablerepo=* --enablerepo=elrepo-kernel install kernel-lt-tools kernel-tools-libs kernel-lt-headers -y 更换默认内核 CentOS7 # 查找需要设为默认启动的内核名称 grep &amp;#34;^menuentry&amp;#34; /boot/grub2/grub.</description></item><item><title>Kernel Module</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Kernel/Linux-Kernel/Kernel-Module/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Kernel/Linux-Kernel/Kernel-Module/</guid><description>概述 参考：
Loadable Kernel Module(动态可加载内核模块，简称 LKM) 常用“内核模块”代指。内核模块是具有独立功能的程序，它可以被单独编译，但不能独立运行。它在运行时被链接到内核作为内核的一部分在内核空间运行，这与运行在用户空间的进程是不同的。模块通常由一组函数和数据结构组成，用来实现一种文件系统、一个驱动程序或其他内核上层的功能。
总之，模块是一个伪内核（从某种意义上来说，内核也是一个模块）或其他内核模块提供使用功能的代码块。
模块的管理方式：使用 systemd 控制的 unit：systemd-modules-load.service
该 unit 启动后读取其中指定目录下的配置以加载模块
模块关联文件与配置 系统启动后，依次从上到下从以下目录读取模块名称以加载它们
/etc/modules-load.d/*.conf /run/modules-load.d/*.conf /usr/lib/modules-load.d/*.conf 系统启动后，依次从上到下从以下目录读取模块的额外参数并应用它们
/etc/modprobe.d/*.conf /run/modprobe.d/*.conf /usr/lib/modprobe.d/*.conf ~]# cat /etc/modules-load.d/br_netfilter.conf br_netfilter 该目录格式为每个模块一行 注意不要给模块名加任何后缀 /etc/sysconfig/modules/*.modules # 系统读取该目录下的脚本加载用户自定义的模块，该目录下的文件必须要以 .modules 为文件名结尾。该文件会被系统视为 shell 脚本，因此该文件应以解释器指令作为开头第一行。
/usr/lib/modules/$(uname -r)/kernel/ # 模块所在目录，不同类型的模块有不同目录
Note：不同版本内核的模块目录不同，所有安装的模块都在该目录下，如果需要把模块加载到内核中，则可以通过命令来加载该目录下的对应模块即可
arch # 与硬件平台有关的项目，例如 CPU 的等级等等 crypto # 核心所支持的加密的技术，例如 md5 或者 des 等等 drivers # 一些硬件的驱动程序，例如显卡、网卡、PCI 相关硬件等等 fs # 核心所支持的 filesystems，例如 vfat、reiserfs、nfs 等等 lib # 一些函数库 net # 与网络有关的各项协定数据，还有防火墙模块 sound # 与音效有关的各项模块 模块之间的依赖性</description></item></channel></rss>