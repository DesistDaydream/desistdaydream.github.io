<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Nftables on 断念梦的站点</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Kernel/Network/Linux-%E7%BD%91%E7%BB%9C%E6%B5%81%E9%87%8F%E6%8E%A7%E5%88%B6/Netfilter/nftables/</link><description>Recent content in Nftables on 断念梦的站点</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Fri, 22 Aug 2025 17:32:26 +0800</lastBuildDate><atom:link href="https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Kernel/Network/Linux-%E7%BD%91%E7%BB%9C%E6%B5%81%E9%87%8F%E6%8E%A7%E5%88%B6/Netfilter/nftables/index.xml" rel="self" type="application/rss+xml"/><item><title>Nftables</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Kernel/Network/Linux-%E7%BD%91%E7%BB%9C%E6%B5%81%E9%87%8F%E6%8E%A7%E5%88%B6/Netfilter/nftables/nftables/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Kernel/Network/Linux-%E7%BD%91%E7%BB%9C%E6%B5%81%E9%87%8F%E6%8E%A7%E5%88%B6/Netfilter/nftables/nftables/</guid><description>概述 参考：
官方介绍 官方 wiki https://mp.weixin.qq.com/s/VPBgIqlTiFe7KwqF1Q4pCA nftables 是一个 Netfilter 项目，旨在替换现有的 {ip,ip6,arp,eb}tables 框架，为 {ip,ip6}tables 提供一个新的包过滤框架、一个新的用户空间实用程序（nft）和一个兼容层。它使用现有的钩子、链接跟踪系统、用户空间排队组件和 netfilter 日志子系统。
nftables 主要由三个组件组成：内核实现、libnl netlink 通信、 nftables 用户空间。 其中内核提供了一个 Netlink 配置接口以及运行时规则集评估，libnl 包含了与内核通信的基本函数，用户空间可以通过 nft 和用户进行交互。
nftables 与 iptables 的区别
nftables 和 iptables 一样，由 table(表)、chain(链)、rule(规则) 组成。nftables 中，表包含链，链包含规则，规则是真正的 action。与 iptables 相比，nftables 主要有以下几个变化：
iptables 规则的布局是基于连续的大块内存的，即数组式布局；而 nftables 的规则采用链式布局。其实就是数组和链表的区别 iptables 大部分工作在内核态完成，如果要添加新功能，只能重新编译内核；而 nftables 的大部分工作是在用户态完成的，添加新功能很 easy，不需要改内核。 iptables 有内置的链，即使你只需要一条链，其他的链也会跟着注册；而 nftables 不存在内置的链，你可以按需注册。由于 iptables 内置了一个数据包计数器，所以即使这些内置的链是空的，也会带来性能损耗。 简化了 IPv4/IPv6 双栈管理 原生支持集合、字典和映射 [!tip] nftables 没有任何默认规则（也没有任何内置表）。如果关闭了 firewalld 服务，则命令 nft list ruleset 输出结果为空。</description></item><item><title>nft CLI</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Kernel/Network/Linux-%E7%BD%91%E7%BB%9C%E6%B5%81%E9%87%8F%E6%8E%A7%E5%88%B6/Netfilter/nftables/nft-CLI/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Kernel/Network/Linux-%E7%BD%91%E7%BB%9C%E6%B5%81%E9%87%8F%E6%8E%A7%E5%88%B6/Netfilter/nftables/nft-CLI/</guid><description>概述 参考：
Manual, nftables https://www.mankier.com/8/nft nft 是一个命令行工具，用于在 Linux 内核中设置、维护和检查 nftables 框架中的数据包过滤和分类规则。Linux 内核子系统被称为 nf_tables，其中 &amp;ldquo;nf&amp;rdquo; 代表 Netfilter。
nft [OPTIONS] [VERB] [COMMANDS]
VERB 是动词，用来表示要执行的操作。不同 COMMAND 可用的动词不太一样，常见的包括：
add # 添加对象。可以添加到指定的对象之后 create # 与 add 命令类似，但是如果对象已经存在，则返回错误信息。 insert # 插入对象。可以添加到指定的对象之前 replace # 替换对象 delete # 删除对象。不管表中是否有内容都一并删除 flush # 清空对象 list # 列出对象 etc. COMMANDS 包括：
ruleset # 规则集管理命令 table # 表管理命令 chain # 链管理命令 rule # 规则管理命令 set # 集合管理命令 map # 字典管理命令 [!Notes]
该 COMMANDS 与后面子命令中的 COMMAND 不同，前者是 nft 命令下的子命令，后者是 nft 命令下子命令的子命令 nft 子命令默认对 ip 族进行操作，当指定具体的 FAMILY 时，则对指定的族进行操作 OPTIONS 如何加载规则集的输入选项</description></item></channel></rss>