<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦的站点 – 磁盘与文件系统管理工具</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/X.Linux-%E7%AE%A1%E7%90%86/Linux-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E7%A3%81%E7%9B%98%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</link><description>Recent content in 磁盘与文件系统管理工具 on 断念梦的站点</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/X.Linux-%E7%AE%A1%E7%90%86/Linux-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E7%A3%81%E7%9B%98%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: 文件系统管理工具</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/X.Linux-%E7%AE%A1%E7%90%86/Linux-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E7%A3%81%E7%9B%98%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/X.Linux-%E7%AE%A1%E7%90%86/Linux-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E7%A3%81%E7%9B%98%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考&lt;/p>
&lt;/blockquote>
&lt;p>mkfs 与 mke2fs 用于在磁盘设备上创建 LInux 文件系统，也就是将分区格式化。&lt;/p>
&lt;p>dumpe2fs 与 xfs_info 是相似的工具，分别对应 ext 和 xfs 文件系统的信息查看&lt;/p>
&lt;h1 id="mkfs">mkfs&lt;a class="td-heading-self-link" href="#mkfs" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man8/mkfs.8.html">Manual(手册)，mkfs(8)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>纯 mkfs 已弃用，使用 mkfs.TYPE 来创建指定类型的文件系统而不用 -t 选项了。事实上，mkfs 只是 Linux 下各种 Filesystem Builder(文件系统构建器) 的前端，仅通过 mkfs.TYPE 来调用各种特定于各种文件系统的构建器程序&lt;/p>
&lt;p>比如 mkfs.ext4 就相当于调用了 EXT4 文件系统的构建器，即 mke2fs 命令。mkfs 默认调用的是 ext2 的构建器。&lt;/p>
&lt;h1 id="mke2fs">mke2fs&lt;a class="td-heading-self-link" href="#mke2fs" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man8/mke2fs.8.html">Manual(手册)，mke2fs(8)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man5/mke2fs.conf.5.html">Manual(手册)，mke2fs.conf(5)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>mke2fs 由 mkfs.ext2、mkfs.ext3、mkfs.ext4 调用。&lt;/p>
&lt;h2 id="关联文件与配置">关联文件与配置&lt;a class="td-heading-self-link" href="#%e5%85%b3%e8%81%94%e6%96%87%e4%bb%b6%e4%b8%8e%e9%85%8d%e7%bd%ae" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;strong>/etc/mke2fs.conf&lt;/strong> # 控制 mke2fs 命令创建 EXT 文件系统时使用的默认参数。这些默认参数值会被命令行参数指定的值覆盖。&lt;/p>
&lt;p>简单示例：&lt;/p>
&lt;p>有全局默认值，以及为不同文件系统类型设定的默认值。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">[defaults]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c4a000">base_features&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">sparse_super,filetype,resize_inode,dir_index
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> blocksize = 4096
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> inode_size = 256
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> inode_ratio = 16384&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">[fs_types]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c4a000">ext3&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">{
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> features = has_journal
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> ext4 = {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> features = extents,flex_bg
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> inode_size = 256
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> small = {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> blocksize = 1024
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> inode_ratio = 4096
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> floppy = {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> features = ^resize_inode
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> blocksize = 1024
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> inode_size = 128
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> }&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="syntax语法">Syntax(语法)&lt;a class="td-heading-self-link" href="#syntax%e8%af%ad%e6%b3%95" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;strong>mke2fs [OPTIONS]&lt;/strong>&lt;/p>
&lt;p>OPTIONS&lt;/p>
&lt;ul>
&lt;li>&lt;strong>-t &amp;lt;FS_TYPE&amp;gt;&lt;/strong> # 指定文件系统格式&lt;/li>
&lt;li>&lt;strong>-b BYTES&lt;/strong> # 指定 BlockSize，单位 Bytes。该值的有效大小是从 1024 到 65536 之间的 2 的 次幂，且不可以超过系统中 PageSize 的值。绝大多数情况下，&lt;code>默认值：4096&lt;/code>&lt;/li>
&lt;li>&lt;strong>-g NUM&lt;/strong> # 指定 BlocksPerGroup，每个块组中块的数量。建议不要改变，&lt;code>默认值：32768&lt;/code>&lt;/li>
&lt;li>&lt;strong>-i BYTES&lt;/strong> # 指定 BytesPerInode(比率)，即 mke2fs 在创建文件系统时，为每块 BytesPerInode 大小的空间创建一个 Inode。比率越大，创建的 inode 越少。通常情况下，&lt;code>默认值：16384&lt;/code>
&lt;ul>
&lt;li>该值通常不能小于文件系统的 BlockSize。通常为每个 16KiB 的空间创建一个 Inode。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>-I BYTES&lt;/strong> # 指定 InodeSize，单位 Bytes。 InodeSize 的值比如符合如下条件：128 &amp;lt; InodeSize &amp;lt; 128 * 2&lt;sup>X&lt;/sup>
&lt;ul>
&lt;li>大多数文件系统的默认 InodeSize 大小为 256 Bytes，但小型文件系统的 InodeSize 大小为 128 Bytes&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>-N NumberOfInodes&lt;/strong> # 指定最低的 Inode 数量。这将覆盖通过 BytesPerInode 计算出来的 Inode 数量。mke2fs 可以根据最低值推导出其他参数，&lt;/li>
&lt;/ul>
&lt;h1 id="mkfsxfs">mkfs.xfs&lt;a class="td-heading-self-link" href="#mkfsxfs" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man8/mkfs.xfs.8.html">Manual(手册)，mkfs.xfs(8)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>mkfs.xfs 可以构建一个 XFS 类型的文件系统&lt;/p>
&lt;h2 id="关联文件与配置-1">关联文件与配置&lt;a class="td-heading-self-link" href="#%e5%85%b3%e8%81%94%e6%96%87%e4%bb%b6%e4%b8%8e%e9%85%8d%e7%bd%ae-1" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>由 -c 命令行选项指定，没有默认的配置文件。mkfs.xfs 可以接收 INI 格式的配置文件&lt;/p>
&lt;h2 id="syntax语法-1">Syntax(语法)&lt;a class="td-heading-self-link" href="#syntax%e8%af%ad%e6%b3%95-1" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;strong>OPTIONS&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>-c STRING&lt;/strong> # 指定要使用的配置文件&lt;/li>
&lt;/ul>
&lt;h1 id="dumpe2fs">dumpe2fs&lt;a class="td-heading-self-link" href="#dumpe2fs" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man8/dumpe2fs.8.html">Manual(手册)，dumpe2fs(8)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>转存 ext2/ext3/ext4 文件系统的信息。说白话就是显示指定设备上存在的各种 ext 格式的文件系统的信息（包括 超级块、块组、等 信息）。&lt;/p>
&lt;h2 id="syntax语法-2">Syntax(语法)&lt;a class="td-heading-self-link" href="#syntax%e8%af%ad%e6%b3%95-2" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;strong>dumpe2fs [-bfghimxV] [-o superblock=&amp;lt;num&amp;gt;] [-o blocksize=&amp;lt;num&amp;gt;] DEVICE&lt;/strong>&lt;/p>
&lt;p>&lt;strong>OPTIONS&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>-h&lt;/strong> # 仅显示超级块信息，不显示任何块组描述符详细信息。&lt;/li>
&lt;/ul>
&lt;h1 id="xfs_info">xfs_info&lt;a class="td-heading-self-link" href="#xfs_info" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>显示 XFS 文件系统的几何信息&lt;/p>
&lt;p>xfs_info 显示有关现有 XFS 文件系统的几何信息。挂载点参数是挂载文件系统的目录的路径名。块设备或文件映像包含原始 XFS 文件系统。文件系统的现有内容不受干扰。&lt;/p>
&lt;h2 id="syntax语法-3">Syntax(语法)&lt;a class="td-heading-self-link" href="#syntax%e8%af%ad%e6%b3%95-3" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># xfs_info /dev/mapper/vg1-root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>meta-data&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>/dev/mapper/vg1-root &lt;span style="color:#000">isize&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">512&lt;/span> &lt;span style="color:#000">agcount&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>4, &lt;span style="color:#000">agsize&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">32735744&lt;/span> &lt;span style="color:#000">blks&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">sectsz&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">512&lt;/span> &lt;span style="color:#000">attr&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>2, &lt;span style="color:#000">projid32bit&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">crc&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#000">finobt&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>1, &lt;span style="color:#000">sparse&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>1, &lt;span style="color:#000">rmapbt&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">reflink&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">data&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">bsize&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">4096&lt;/span> &lt;span style="color:#000">blocks&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>130942976, &lt;span style="color:#000">imaxpct&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">25&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">sunit&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#000">swidth&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> blks
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">naming&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>version &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> &lt;span style="color:#000">bsize&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">4096&lt;/span> ascii-ci&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>0, &lt;span style="color:#000">ftype&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">log&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>internal log &lt;span style="color:#000">bsize&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">4096&lt;/span> &lt;span style="color:#000">blocks&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>63937, &lt;span style="color:#000">version&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">sectsz&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">512&lt;/span> &lt;span style="color:#000">sunit&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> blks, lazy-count&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">realtime&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>none &lt;span style="color:#000">extsz&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">4096&lt;/span> &lt;span style="color:#000">blocks&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>0, &lt;span style="color:#000">rtextents&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="xfs_repair-命令行工具">xfs_repair 命令行工具&lt;a class="td-heading-self-link" href="#xfs_repair-%e5%91%bd%e4%bb%a4%e8%a1%8c%e5%b7%a5%e5%85%b7" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man8/xfs_repair.8.html">Manual(手册)，xfs_repair(8)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;code>xfs_repair&lt;/code> 用于修复 XFS 文件系统。&lt;/p>
&lt;h1 id="df">df&lt;a class="td-heading-self-link" href="#df" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man1/df.1.html">Manual(手册)，df(1)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>查看文件系统的容量使用情况&lt;/p>
&lt;p>默认显示的单位是 KiB。&lt;/p>
&lt;h2 id="syntax语法-4">Syntax(语法)&lt;a class="td-heading-self-link" href="#syntax%e8%af%ad%e6%b3%95-4" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;strong>df [OPTIONS]&amp;hellip; [FILE]&amp;hellip;&lt;/strong>&lt;/p>
&lt;p>OPTIONS&lt;/p>
&lt;ul>
&lt;li>&lt;strong>-h, &amp;ndash;human-readable&lt;/strong> # 以人类可读的方式输出信息。磁盘容量以 1024 为除数。效果如下：
&lt;ul>
&lt;li>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/zqtob4/1625708279949-ac083715-d7e8-4271-800e-6c5791aa3573.png" alt="image.png">&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>-i, &amp;ndash;inodes&lt;/strong> # 列出 inode 信息&lt;/li>
&lt;li>&lt;strong>-T, &amp;ndash;print-type&lt;/strong> # 输出文件系统类型&lt;/li>
&lt;li>&lt;strong>-t, &amp;ndash;type &amp;lt;TYPE&amp;gt;&lt;/strong> # 仅列出指定类型的文件系统。(文件系统类型可以通过 -T 选项看到)&lt;/li>
&lt;/ul>
&lt;h2 id="example">EXAMPLE&lt;a class="td-heading-self-link" href="#example" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>df -h /&lt;/strong> # 以人类易读的方式显示挂载在/下的信息，可以显示容量是 M 还是 G 还是 K&lt;/li>
&lt;/ul>
&lt;h1 id="du">du&lt;a class="td-heading-self-link" href="#du" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man1/du.1.html">Manual(手册)，du(1)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>查看文件系统下当前目录以及子目录的容量&lt;/p>
&lt;h2 id="syntax语法-5">Syntax(语法)&lt;a class="td-heading-self-link" href="#syntax%e8%af%ad%e6%b3%95-5" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>OPTIONS&lt;/p>
&lt;ul>
&lt;li>&lt;strong>-a&lt;/strong> # 包括目录下的文件大小也一起显示&lt;/li>
&lt;li>&lt;strong>-s&lt;/strong> # 仅列出当前目录的容量总计，不显示子目录&lt;/li>
&lt;li>&lt;strong>-h&lt;/strong> # 把容量大小转换为人类易读的格式&lt;/li>
&lt;li>&lt;strong>-d, &amp;ndash;maxdepth &amp;lt;NUM&amp;gt;&lt;/strong> # 仅列出目录深度 1 层的信息，即当前目录下的目录的大小，不往下列出子目录&lt;/li>
&lt;/ul>
&lt;h2 id="example-1">EXAMPLE&lt;a class="td-heading-self-link" href="#example-1" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>du -d 1 | sort -rn | head -n 2 # 列出不含子目录的当前目录下的目录大小，并以数字进行降序排列，且只显示前两行&lt;/li>
&lt;/ul>
&lt;h1 id="比-du-更快的工具">比 du 更快的工具&lt;a class="td-heading-self-link" href="#%e6%af%94-du-%e6%9b%b4%e5%bf%ab%e7%9a%84%e5%b7%a5%e5%85%b7" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h2 id="ncdu">ncdu&lt;a class="td-heading-self-link" href="#ncdu" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://code.blicky.net/yorhel/ncdu/src/branch/zig/src">https://code.blicky.net/yorhel/ncdu/src/branch/zig/src&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://dev.yorhel.nl/ncdu">官网&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h2 id="sn">sn&lt;a class="td-heading-self-link" href="#sn" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/vmchale/tin-summer">GitHub 项目，vmchale/tin-summer&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h3 id="syntax语法-6">Syntax(语法)&lt;a class="td-heading-self-link" href="#syntax%e8%af%ad%e6%b3%95-6" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>&lt;strong>sn &amp;lt;SUBCOMMAND&amp;gt;&lt;/strong>&lt;/p>
&lt;p>sn 工具完全通过子命令来执行具体操作&lt;/p>
&lt;p>SUBCOMMAND&lt;/p>
&lt;ul>
&lt;li>sort #&lt;/li>
&lt;/ul>
&lt;p>OPTIONS：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>-d, &amp;ndash;depth &amp;lt;NUMBER&amp;gt;&lt;/strong> # 目录深度&lt;/li>
&lt;/ul>
&lt;h3 id="example-2">EXAMPLE&lt;a class="td-heading-self-link" href="#example-2" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>显示根目录下一层深度的容量大小，并排序
&lt;ul>
&lt;li>sn sort -d 1 /&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="erdtree">erdtree&lt;a class="td-heading-self-link" href="#erdtree" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/solidiquis/erdtree">GitHub 项目，solidiquis/erdtree&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote></description></item><item><title>Docs: 最佳实践</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/X.Linux-%E7%AE%A1%E7%90%86/Linux-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E7%A3%81%E7%9B%98%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/X.Linux-%E7%AE%A1%E7%90%86/Linux-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E7%A3%81%E7%9B%98%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h1 id="基本新硬盘操作">基本新硬盘操作&lt;a class="td-heading-self-link" href="#%e5%9f%ba%e6%9c%ac%e6%96%b0%e7%a1%ac%e7%9b%98%e6%93%8d%e4%bd%9c" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;ul>
&lt;li>创建 GPT 格式的分区表
&lt;ul>
&lt;li>parted /dev/vdb mktable gpt&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>为 /dev/vdb 创建一个主分区，大小是该磁盘的 0% 到 100%，设置名称为 data1
&lt;ul>
&lt;li>parted /dev/vdb mkpart data1 0% 100%&lt;/li>
&lt;li>注意：尽量使用 &lt;code>%&lt;/code> 来标识磁盘分区大小，否则会提示磁盘分区未对齐。若是显示命令无法显示百分比，则通过 &lt;code>unit&lt;/code> 子命令将单位转换为 &lt;code>%&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>为 /dev/vdb1 创建 xfs 文件系统
&lt;ul>
&lt;li>mkfs.xfs /dev/vdb1&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>挂载文件系统
&lt;ul>
&lt;li>mount /dev/vdb1 /mnt/test&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="为新磁盘创建-lvm">为新磁盘创建 LVM&lt;a class="td-heading-self-link" href="#%e4%b8%ba%e6%96%b0%e7%a3%81%e7%9b%98%e5%88%9b%e5%bb%ba-lvm" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># 创建 GPT 格式的分区表&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>parted /dev/vdb mktable gpt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># 为/dev/vdb分一个主分区，大小是该磁盘的0%到100%&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>parted /dev/vdb mkpart lvm 0% 100%
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># 创建 PV&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pvcreate /dev/vdb1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># 创建 VG&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vgcreate vg-data /dev/vdb1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># 创建 LV&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lvcreate -l 100%FREE -n lv0 vg-data
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># 为 /dev/mapper/vg--data-lv0 创建 xfs 文件系统&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkfs.xfs /dev/mapper/vg--data-lv0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># 挂载文件系统&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mount /dev/mapper/vg--data-lv0 /mnt/test
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="为虚拟机磁盘扩容">为虚拟机磁盘扩容&lt;a class="td-heading-self-link" href="#%e4%b8%ba%e8%99%9a%e6%8b%9f%e6%9c%ba%e7%a3%81%e7%9b%98%e6%89%a9%e5%ae%b9" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://support.huaweicloud.com/usermanual-evs/evs_01_0109.html">华为云文档,云硬盘 EVS-用户指南-扩容云硬盘-扩展磁盘分区和文件系统(Iinux)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h2 id="前提条件">前提条件&lt;a class="td-heading-self-link" href="#%e5%89%8d%e6%8f%90%e6%9d%a1%e4%bb%b6" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>确保分区表正常&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>root@hw-cloud-xngy-jump-server-linux-2 ~&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># lsblk&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vda 252:0 &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 100G &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> disk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└─vda1 252:1 &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 100G &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> part /
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vdb 252:16 &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 30G &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> disk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└─vdb1 252:17 &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 20G &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> part
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └─vg--data-lv0 253:0 &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 20G &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> lvm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>root@hw-cloud-xngy-jump-server-linux-2 ~&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># parted /dev/vdb print&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Warning: Not all of the space available to /dev/vdb appears to be used, you can fix the GPT to use all of the space &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>an extra &lt;span style="color:#0000cf;font-weight:bold">20971520&lt;/span> blocks&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> or &lt;span style="color:#204a87;font-weight:bold">continue&lt;/span> with the current setting?
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>警告：似乎并未使用 /dev/vdb 的所有可用空间，您可以修复 GPT 以使用所有空间（额外的 &lt;span style="color:#0000cf;font-weight:bold">20971520&lt;/span> 个块）还是继续当前设置？
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Fix/Ignore?
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>注意：&lt;/p>
&lt;ul>
&lt;li>虚拟机中的一个磁盘被扩容后，如果是 GPT 分区表的磁盘，当我们使用 &lt;code>parted DEVICE print&lt;/code> 指令查看信息时，将会弹出警告&lt;/li>
&lt;li>这是因为 GPT 分区表信息存储在磁盘开头，为了减少分区表损坏的风险，同时在磁盘末尾会备份一份。当磁盘容量扩大后，末尾位置也会随之变化，因此需要根据系统提示输入“Fix”，将分区表信息的备份文件挪到新的磁盘末尾位置。&lt;/li>
&lt;li>此时直接输入 Fix 即可自动修复&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h2 id="虚拟机磁盘使用-lvm-的扩容方案">虚拟机磁盘使用 LVM 的扩容方案&lt;a class="td-heading-self-link" href="#%e8%99%9a%e6%8b%9f%e6%9c%ba%e7%a3%81%e7%9b%98%e4%bd%bf%e7%94%a8-lvm-%e7%9a%84%e6%89%a9%e5%ae%b9%e6%96%b9%e6%a1%88" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># 扩容分区&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ growpart /dev/vdb &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CHANGED: &lt;span style="color:#000">partition&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#000">start&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">2048&lt;/span> old: &lt;span style="color:#000">size&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">62912479&lt;/span> &lt;span style="color:#000">end&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">62914527&lt;/span> new: &lt;span style="color:#000">size&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">73398239&lt;/span> &lt;span style="color:#000">end&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">73400287&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># 扩容分区对应的 PV&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ pvresize /dev/vdb1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Physical volume &lt;span style="color:#4e9a06">&amp;#34;/dev/vdb1&amp;#34;&lt;/span> changed
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> physical volume&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>s&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> resized or updated / &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> physical volume&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>s&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> not resized
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># 扩容 LV&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ lvextend -l +100%FREE /dev/mapper/vg--data-lv0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Size of logical volume vg-data/lv0 changed from &amp;lt;30.00 GiB &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">7679&lt;/span> extents&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> to &amp;lt;35.00 GiB &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">8959&lt;/span> extents&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Logical volume vg-data/lv0 successfully resized.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># 扩容文件系统&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ xfs_growfs /dev/mapper/vg--data-lv0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>meta-data&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>/dev/mapper/vg--data-lv0 &lt;span style="color:#000">isize&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">512&lt;/span> &lt;span style="color:#000">agcount&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>4, &lt;span style="color:#000">agsize&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1310464&lt;/span> &lt;span style="color:#000">blks&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">sectsz&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">512&lt;/span> &lt;span style="color:#000">attr&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>2, &lt;span style="color:#000">projid32bit&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">crc&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#000">finobt&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>1, &lt;span style="color:#000">sparse&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>1, &lt;span style="color:#000">rmapbt&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">reflink&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">data&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">bsize&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">4096&lt;/span> &lt;span style="color:#000">blocks&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>5241856, &lt;span style="color:#000">imaxpct&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">25&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">sunit&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#000">swidth&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> blks
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">naming&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>version &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> &lt;span style="color:#000">bsize&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">4096&lt;/span> ascii-ci&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>0, &lt;span style="color:#000">ftype&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">log&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>internal log &lt;span style="color:#000">bsize&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">4096&lt;/span> &lt;span style="color:#000">blocks&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>2560, &lt;span style="color:#000">version&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">sectsz&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">512&lt;/span> &lt;span style="color:#000">sunit&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> blks, lazy-count&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">realtime&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>none &lt;span style="color:#000">extsz&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">4096&lt;/span> &lt;span style="color:#000">blocks&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>0, &lt;span style="color:#000">rtextents&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>data blocks changed from &lt;span style="color:#0000cf;font-weight:bold">5241856&lt;/span> to &lt;span style="color:#0000cf;font-weight:bold">9174016&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="虚拟机磁盘不使用-lvm-的扩容方案">虚拟机磁盘不使用 LVM 的扩容方案&lt;a class="td-heading-self-link" href="#%e8%99%9a%e6%8b%9f%e6%9c%ba%e7%a3%81%e7%9b%98%e4%b8%8d%e4%bd%bf%e7%94%a8-lvm-%e7%9a%84%e6%89%a9%e5%ae%b9%e6%96%b9%e6%a1%88" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>比较简单，两步解决&lt;/p>
&lt;ul>
&lt;li>扩容分区
&lt;ul>
&lt;li>&lt;strong>growpart /dev/vdb 1&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>扩容文件系统
&lt;ul>
&lt;li>ext* 类型
&lt;ul>
&lt;li>&lt;strong>resize2fs /dev/vdb1&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>xfs 类型
&lt;ul>
&lt;li>&lt;strong>xfs_growfs /dev/vdb1&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>这种方式通常都是在公有云上这么搞~&lt;/p></description></item><item><title>Docs: dd 生成指定大小的文件</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/X.Linux-%E7%AE%A1%E7%90%86/Linux-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E7%A3%81%E7%9B%98%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/dd-%E7%94%9F%E6%88%90%E6%8C%87%E5%AE%9A%E5%A4%A7%E5%B0%8F%E7%9A%84%E6%96%87%E4%BB%B6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/X.Linux-%E7%AE%A1%E7%90%86/Linux-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E7%A3%81%E7%9B%98%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/dd-%E7%94%9F%E6%88%90%E6%8C%87%E5%AE%9A%E5%A4%A7%E5%B0%8F%E7%9A%84%E6%96%87%E4%BB%B6/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h1 id="dd-命令使用说明">dd 命令使用说明&lt;a class="td-heading-self-link" href="#dd-%e5%91%bd%e4%bb%a4%e4%bd%bf%e7%94%a8%e8%af%b4%e6%98%8e" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;a href="https://blog.csdn.net/menogen/article/details/38059671">https://blog.csdn.net/menogen/article/details/38059671&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>dd [OPTIONS[=FLAGS]]&lt;/strong>&lt;/p>
&lt;p>OPTIONS&lt;/p>
&lt;ul>
&lt;li>bs=BYTES # 每次读取和写入的字节数&lt;/li>
&lt;li>cbs=BYTES # convert BYTES bytes at a time&lt;/li>
&lt;li>conv=CONVS # convert the file as per the comma separated symbol list&lt;/li>
&lt;li>count=N # 读取的 block 数，block 的大小由 ibs 指定（只针对输入参数）&lt;/li>
&lt;li>ibs=BYTES # read up to BYTES bytes at a time (default: 512)&lt;/li>
&lt;li>if=FILE # 指定输入文件。默认从标准输入读取。
&lt;ul>
&lt;li>/dev/zero 是 Linux 的一个伪文件，它可以产生连续不断的 null 流（二进制的 0）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>iflag=FLAGS # 使用 FLAGS 来控制输入(读取数据)时的行为特征。多个 FLAG 以 , 分隔&lt;/li>
&lt;li>obs=BYTES # write BYTES bytes at a time (default: 512)&lt;/li>
&lt;li>of=FILE # 指定输出文件。默认输出到标准输出。&lt;/li>
&lt;li>oflag=FLAGS # 使用 iflag 来控制输出(写入数据)时的行为特征。多个 FLAG 以 , 分隔&lt;/li>
&lt;li>seek=N # skip N obs-sized blocks at start of output&lt;/li>
&lt;li>skip=N # skip N ibs-sized blocks at start of input&lt;/li>
&lt;li>status=LEVEL # The LEVEL of information to print to stderr; &amp;rsquo;none&amp;rsquo; suppresses everything but error messages, &amp;rsquo;noxfer&amp;rsquo; suppresses the final transfer statistics, &amp;lsquo;progress&amp;rsquo; shows periodic transfer statistics&lt;/li>
&lt;/ul>
&lt;p>FLAGS&lt;/p>
&lt;ul>
&lt;li>append # 追加模式(仅对输出有意义；隐含了 conv=notrunc)&lt;/li>
&lt;li>direct # 使用直接 I/O 存取模式，即跳过缓存，不操作内存，而是直接操作磁盘&lt;/li>
&lt;li>directory # 除非是目录，否则 directory 失败&lt;/li>
&lt;li>dsync # 使用同步 I/O 存取模式&lt;/li>
&lt;li>sync # 与上者类似，但同时也对元数据生效&lt;/li>
&lt;li>fullblock # 为输入积累完整块(仅 iflag)&lt;/li>
&lt;li>nonblock # 使用无阻塞 I/O 存取模式&lt;/li>
&lt;li>noatime # 不更新存取时间&lt;/li>
&lt;li>nocache # 丢弃缓存数据&lt;/li>
&lt;li>noctty # 不根据文件指派控制终端&lt;/li>
&lt;li>nofollow # 不跟随链接文件&lt;/li>
&lt;/ul>
&lt;h1 id="example">EXAMPLE&lt;a class="td-heading-self-link" href="#example" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;ul>
&lt;li>测试当前磁盘 写入文件 的速度
&lt;ul>
&lt;li>&lt;strong>dd if=/dev/zero of=testdd bs=1M count=1000&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>测试当前磁盘 纯写入文件 的速度，即不使用缓存
&lt;ul>
&lt;li>&lt;strong>dd if=/dev/zero of=testdd bs=1M count=1024 oflag=sync,direct,nonblock&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>测试当前磁盘 纯读取文件 的速度，即不使用缓存
&lt;ul>
&lt;li>&lt;strong>dd if=testdd of=/dev/null bs=1M count=1024 iflag=sync,direct,nonblock&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>测试 sdb 磁盘 的 写入速度。注意：要使用一块空盘，否则数据没了
&lt;ul>
&lt;li>&lt;strong>dd if=/dev/urandom of=/dev/sdb1 bs=1M count=1024&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>测试 sdb 磁盘 的读取速度
&lt;ul>
&lt;li>&lt;strong>dd if=/dev/sdb1 of=/dev/null bs=1M count=1024&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>Docs: pt-ioprofile</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/X.Linux-%E7%AE%A1%E7%90%86/Linux-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E7%A3%81%E7%9B%98%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/pt-ioprofile/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/X.Linux-%E7%AE%A1%E7%90%86/Linux-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E7%A3%81%E7%9B%98%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/pt-ioprofile/</guid><description>
&lt;h2 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.percona.com/doc/percona-toolkit/LATEST/pt-ioprofile.html#environment">官方文档&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>pt-ioprofile 是 &lt;a href="https://www.percona.com/">Percona &lt;/a>出的 IO 查看工具。Percona 用来监视进程 IO 并打印文件和 I/O 活动表。&lt;/p>
&lt;p>&lt;strong>pt-ioprofile&lt;/strong> 本质上就是一个 shell 脚本，只做两件事：&lt;/p>
&lt;ol>
&lt;li>通过 lsof 和 strace 两个工具获取指定进程的一段时间的数据，并保存到文件中&lt;/li>
&lt;li>使用 awk 等工具聚合两个文件的内容。&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>pt-ioprofile&lt;/strong> 使用 strace 和 lsof 工具监视进程的 IO 并打印出一个文件和 I/O 活动表。默认情况下，它监视 mysqld 进程 30 秒。输出如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>Tue Dec &lt;span style="color:#0000cf;font-weight:bold">27&lt;/span> 15:33:57 PST &lt;span style="color:#0000cf;font-weight:bold">2011&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Tracing process ID &lt;span style="color:#0000cf;font-weight:bold">1833&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> total &lt;span style="color:#204a87">read&lt;/span> write lseek ftruncate filename
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 0.000150 0.000029 0.000068 0.000038 0.000015 /tmp/ibBE5opS
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>read：从文件中读出数据。要读取的文件用文件描述符标识，数据读入一个事先定义好的缓冲区。&lt;/li>
&lt;li>write：把缓冲区的数据写入文件中。&lt;/li>
&lt;li>pread：由于 lseek 和 read 调用之间，内核可能会临时挂起进程，所以对同步问题造成了问题，调用 pread 相当于顺序调用了 lseek 和 read，这两个操作相当于一个捆绑的原子操作。&lt;/li>
&lt;li>pwrite：由于 lseek 和 write 调用之间，内核可能会临时挂起进程，所以对同步问题造成了问题，调用 pwrite 相当于顺序调用了 lseek 和 write，这两个操作相当于一个捆绑的原子操作。&lt;/li>
&lt;li>fsync：确保文件所有已修改的内容已经正确同步到硬盘上，该调用会阻塞等待直到设备报告 IO 完成。&lt;/li>
&lt;li>open：打开一个文件，并返回这个文件的描述符。&lt;/li>
&lt;li>close：close 系统调用用于“关闭”一个文件，close 调用终止一个文件描述符以其文件之间的关联。文件描述符被释放，并能够重新使用。&lt;/li>
&lt;li>lseek：对文件描述符指定文件的读写指针进行设置，也就是说，它可以设置文件的下一个读写位置。&lt;/li>
&lt;li>fcntl：针对(文件)描述符提供控制。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>pt-ioprofile&lt;/strong> 通过使用 附加&lt;code>strace&lt;/code>到进程来工作&lt;code>ptrace()&lt;/code>，这将使其运行非常缓慢，直到&lt;code>strace&lt;/code>分离。除了冻结服务器之外，还有一些风险，即进程在与服务器&lt;code>strace&lt;/code>分离后崩溃或性能不佳，或者&lt;code>strace&lt;/code>没有完全分离并使进程处于睡眠状态。因此，这应该被视为一种侵入性工具，除非您对此感到满意，否则不应在生产服务器上使用。&lt;/p>
&lt;p>&lt;strong>WARNING&lt;/strong>: &lt;strong>pt-ioprofile&lt;/strong> freezes the server and may crash the process, or make it perform badly after detaching, or leave it in a sleeping state! Before using this tool, please:&lt;/p>
&lt;ul>
&lt;li>Read the tool’s documentation&lt;/li>
&lt;li>Review the tool’s known “BUGS”&lt;/li>
&lt;li>Test the tool on a non-production server&lt;/li>
&lt;li>Backup your production server and verify the backups&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;strong>pt-ioprofile&lt;/strong> should be considered an intrusive tool, and should not be used on production servers unless you understand and accept the risks.&lt;/p>
&lt;/blockquote>
&lt;h2 id="安装">安装&lt;a class="td-heading-self-link" href="#%e5%ae%89%e8%a3%85" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>从 &lt;a href="https://www.percona.com/downloads/percona-toolkit/LATEST/">https://www.percona.com/downloads/percona-toolkit/LATEST/&lt;/a> 选择指定环境下的指定版本下载安装包&lt;/p>
&lt;h2 id="syntax语法">Syntax(语法)&lt;a class="td-heading-self-link" href="#syntax%e8%af%ad%e6%b3%95" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;strong>pt-ioprofile [OPTIONS] [FILE]&lt;/strong>&lt;/p>
&lt;p>&lt;strong>OPTIONS&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>&amp;ndash;aggregate, -a&lt;/strong> # 聚合结果的方式，可用的值有 sum 与 avg。&lt;code>默认值：sum&lt;/code>&lt;/li>
&lt;li>如果求和，则每个单元格将包含其中的值的总和。如果 avg，则每个单元格将包含其中值的平均值。&lt;/li>
&lt;li>&lt;strong>&amp;ndash;cell, -c &amp;lt;STRING&amp;gt;&lt;/strong> # 统计的数据。&lt;code>默认值：times&lt;/code>
&lt;ul>
&lt;li>count  # I/O 次数&lt;/li>
&lt;li>sizes  # I/O 大小&lt;/li>
&lt;li>times  # I/O 时间&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>&amp;ndash;group-by, -g &amp;lt;STRING&amp;gt;&lt;/strong> # 对输出结果进行分组 &lt;code>默认值：filename&lt;/code>
&lt;ul>
&lt;li>all # 所有输出都在一行&lt;/li>
&lt;li>filename # 每个文件名输出一行&lt;/li>
&lt;li>pid # 每个进程 ID 输出一行&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>&amp;ndash;profile-pid &amp;lt;INT&amp;gt;&lt;/strong> # 指定要分析的进程的 PID，该值会覆盖 &amp;ndash;profile-process 选项。&lt;/li>
&lt;li>&lt;strong>&amp;ndash;profile-process &amp;lt;STRING&amp;gt;&lt;/strong> # 指定要分析的进程名称。&lt;code>默认值：mysqld&lt;/code>&lt;/li>
&lt;li>&lt;strong>&amp;ndash;run-time &amp;lt;INT&amp;gt;&lt;/strong> # 程序运行时长，单位秒。&lt;code>默认值：30&lt;/code>&lt;/li>
&lt;li>&lt;strong>&amp;ndash;save-samples &amp;lt;FILE&amp;gt;&lt;/strong> # 将 strace 与 lsof 的输出结果保存到指定的 FILE 中。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>EXAMPLE&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>pt-ioprofile -p=9267 &amp;ndash;cell=sizes&lt;/li>
&lt;/ul>
&lt;h2 id="问题">问题&lt;a class="td-heading-self-link" href="#%e9%97%ae%e9%a2%98" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>原文: &lt;a href="https://tusundong.top/post/centos7-pt-ioprofile.html">https://tusundong.top/post/centos7-pt-ioprofile.html&lt;/a>&lt;/p>
&lt;p>最近在排查 io wait 需要使用到 pt-ioprofile，结果发现在 CentOS7.8 下执行没有结果。&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/zgyenr/1622780378714-e4fa5820-6042-4558-9cbd-51fc885b6dc0.png" alt="">&lt;/p>
&lt;p>最后在大神&lt;code>@轻松的鱼&lt;/code>指导下，修改源码，编辑 /usr/bin/pt-ioprofile 文件，添加此行&lt;/p>
&lt;pre>&lt;code>• /^strace: Process/ { mode = &amp;quot;strace&amp;quot;; }
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/zgyenr/1622780378720-19f72459-84e1-448e-81d2-7fe581bdb917.png" alt="">&lt;/p></description></item><item><title>Docs: 磁盘与文件系统管理工具</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/X.Linux-%E7%AE%A1%E7%90%86/Linux-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E7%A3%81%E7%9B%98%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E7%A3%81%E7%9B%98%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/X.Linux-%E7%AE%A1%E7%90%86/Linux-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E7%A3%81%E7%9B%98%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E7%A3%81%E7%9B%98%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;/blockquote>
&lt;h1 id="磁盘分区管理工具">磁盘分区管理工具&lt;a class="td-heading-self-link" href="#%e7%a3%81%e7%9b%98%e5%88%86%e5%8c%ba%e7%ae%a1%e7%90%86%e5%b7%a5%e5%85%b7" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h2 id="parted">Parted&lt;a class="td-heading-self-link" href="#parted" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://www.gnu.org/software/parted">GNU 官网-软件-parted&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man8/parted.8.html">Manual(手册)，parted(8)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>Parted 是一个 &lt;strong>partition(分区)&lt;/strong> 操作程序，支持对 2T 以上硬盘的分区，支持 GTP 分区表，如果直接输入 parted 命令则进入 parted 工具，以交互式方式对 DEVICE 进行操作。&lt;/p>
&lt;p>Parted 程序在 CentOS 和 Ubuntu 中都属于 parted 包，这个包中有两个程序，&lt;code>parted&lt;/code> 与 &lt;code>partprobe&lt;/code>&lt;/p>
&lt;p>parted 程序可以在交互模式中运行，当 parted 运行在交互模式中时，对磁盘进行的操作，只有在执行 &lt;code>quit&lt;/code> 命令后，才会将更新通知给 Linux 内核&lt;/p>
&lt;h3 id="syntax语法">Syntax(语法)&lt;a class="td-heading-self-link" href="#syntax%e8%af%ad%e6%b3%95" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>&lt;strong>parted [OPTIONS] [DEVICE [COMMAND [ARGUMENT&amp;hellip;]&amp;hellip;]]&lt;/strong>&lt;/p>
&lt;p>&lt;strong>OPTIONS&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>-a, &amp;ndash;align=[none|cyl|min|opt]&lt;/strong> # alignment for new partitions&lt;/li>
&lt;li>&lt;strong>-l, &amp;ndash;list&lt;/strong> # 列出所有块设备上的分区布局，i.e.列出所有磁盘的分区&lt;/li>
&lt;li>&lt;strong>-m, &amp;ndash;machine&lt;/strong> # 与 -l 选项配合， 显示出机器可以解析的输出内容&lt;/li>
&lt;li>&lt;strong>-s, &amp;ndash;script&lt;/strong> # never prompts for user intervention&lt;/li>
&lt;/ul>
&lt;h4 id="command">COMMAND&lt;a class="td-heading-self-link" href="#command" aria-label="Heading self-link">&lt;/a>&lt;/h4>
&lt;p>&lt;strong>align-check &amp;lt;ALIGN-TYPE&amp;gt; &amp;lt;DEVICE&amp;gt;&lt;/strong> # 检查指定分区是否对齐&lt;/p>
&lt;ul>
&lt;li>ALIGN-TYPE
&lt;ul>
&lt;li>minimal #&lt;/li>
&lt;li>optimal #&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>select &amp;lt;DEVICE&amp;gt;&lt;/strong> # 选择对 DEVICE 磁盘进行操作&lt;/p>
&lt;p>&lt;strong>mklable &amp;lt;LABEL-TYPE&amp;gt;&lt;/strong> # 创建一个新的 Disk Label(磁盘标签)。&lt;/p>
&lt;p>Disk Label 其实就是 Partition Table(分区表)，也有的人称为 Partition Map(分区图)&lt;/p>
&lt;p>这个行为会虽然不会导致磁盘所有数据丢失，但是却无法使用这些数据，如果想要恢复，可以通过恢复模式，参考&lt;a href="https://www.gnu.org/software/parted/manual/parted.html#Related-information">这里&lt;/a>进行恢复。当为一个已经有磁盘标签的磁盘创建标签时，将会出现如下提示：&lt;/p>
&lt;p>&lt;code>Warning: The existing disk label on /dev/vdb will be destroyed and all data on this disk will be lost. Do you want to continue?&lt;/code>&lt;/p>
&lt;ul>
&lt;li>LABEL-TYPE
&lt;ul>
&lt;li>bsd&lt;/li>
&lt;li>loop # 这个标签通常用于 LVM 类型的磁盘上，带有这种标签的磁盘，其实是没有分区表的。&lt;/li>
&lt;li>gpt # 这个类型的标签就是 GPT 分区表&lt;/li>
&lt;li>msdos # 这个类型的标签就是 MBR 分区表&lt;/li>
&lt;li>pc98&lt;/li>
&lt;li>sun&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>Model: Virtio Block Device &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>virtblk&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Disk /dev/vdb: 21.5GB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Sector size &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>logical/physical&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>: 512B/512B
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Partition Table: gpt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Disk Flags:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Number Start End Size File system Name Flags
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Model: Virtio Block Device &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>virtblk&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Disk /dev/vda: 107GB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Sector size &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>logical/physical&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>: 512B/512B
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Partition Table: msdos
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Disk Flags:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Number Start End Size Type File system Flags
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> 1049kB 107GB 107GB primary ext4 boot
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>不同类型的分区表，其显示的内容也不同，比如 GPT 分区别没有 Type 列，有 Name 列；而 msdos 有 Type 列却没有 Name 列。所以不同的分区表类型，会影响 mkpart 等命令的参数。&lt;/p>
&lt;p>&lt;strong>mkpart [PART-TYPE NAME FS-TYPE] &amp;lt;START&amp;gt; &amp;lt;END&amp;gt;&lt;/strong> # 创建一个新的分区。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>PART-TYPE&lt;/strong> # 分区类型
&lt;ul>
&lt;li>注意：该参数仅适用于分区表类型为 msdos 和 dvh 的磁盘&lt;/li>
&lt;li>extended # 扩展分区&lt;/li>
&lt;li>logical # 逻辑分区&lt;/li>
&lt;li>primary # 主分区&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>NAME&lt;/strong> # 分区表的名字
&lt;ul>
&lt;li>注意：分区表类型为 GPT 的磁盘必须指定 NAME 参数。如果是在交互模式中，可以设定一个空名字~~~o(╯□╰)o&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>FS-TYPE&lt;/strong> # 为分区添加文件系统类型的签名，通常都是在该分区的 offset 0 处添加签名。注意：仅仅是添加签名，并不是真的创建一个文件系统，想要创建文件系统，使用单独的 &lt;code>mkfs&lt;/code> 等命令
&lt;ul>
&lt;li>btrfs&lt;/li>
&lt;li>ext2、ext3、ext4&lt;/li>
&lt;li>fat16、fat32&lt;/li>
&lt;li>hfs、hfs+&lt;/li>
&lt;li>linux-swap&lt;/li>
&lt;li>ntfs&lt;/li>
&lt;li>reiserfs&lt;/li>
&lt;li>udf&lt;/li>
&lt;li>xfs&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>name &amp;lt;NUMBER&amp;gt; &amp;lt;NAME&amp;gt;&lt;/strong> # 设置 NUMBER 号分区的名称为 NAME。仅对 GPT、Mac、MIPS、PC98 磁盘类型下的分区有效。&lt;/p>
&lt;p>&lt;strong>print [NUMBER]&lt;/strong> # 显示磁盘的分区信息，或者显示指定分区的信息&lt;/p>
&lt;p>&lt;strong>rescure START END&lt;/strong> # 救援一个丢失的分区。好像没什么用~~o(╯□╰)o?????????????????&lt;/p>
&lt;p>&lt;strong>resizepart &amp;lt;NUMBER&amp;gt; &amp;lt;END&amp;gt;&lt;/strong> # 移动指定分区的结束位置，即.调整分区的容量大小。注意：这不会修改分区中的任何文件系统，如果需要调整文件系统，则需要使用 resize2fs 之类的程序。&lt;/p>
&lt;p>&lt;strong>rm &amp;lt;NUMBER&amp;gt;&lt;/strong> # 删除指定的分区&lt;/p>
&lt;p>&lt;strong>select * &amp;lt;DEVICE&amp;gt;&lt;/strong> # 在交互模式中选择要编辑的磁盘设备。DEVICE 可以是 Linux 硬盘设备、分区、软 RAID 设备、LVM&lt;/p>
&lt;p>&lt;strong>set &amp;lt;NUMBER&amp;gt; &amp;lt;FLAG&amp;gt; &amp;lt;STATE&amp;gt;&lt;/strong> # 设置分区的 Flag。这命令有啥用？~~囧???????????&lt;/p>
&lt;p>&lt;strong>unit &amp;lt;UNIT&amp;gt;&lt;/strong> # 设定 parted 程序在显示磁盘信息时所使用的默认单位。&lt;/p>
&lt;p>当我们使用 &lt;code>%&lt;/code> 给磁盘分区后，过了一段时间我们往往忘记了每个分区具体都占了磁盘的百分比，这时候，使用 &lt;code>unit %&lt;/code> 指令就可以看到这些信息了。o(∩_∩)o&lt;/p>
&lt;h3 id="example">EXAMPLE&lt;a class="td-heading-self-link" href="#example" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>检查 /dev/vda 磁盘的 1 号分区是否对齐&lt;/p>
&lt;ul>
&lt;li>parted /dev/vda align-check optimal 1&lt;/li>
&lt;/ul>
&lt;p>设置 /dev/vdb 磁盘的分区表为 msdos 格式&lt;/p>
&lt;ul>
&lt;li>parted /dev/vdb mktable msdos&lt;/li>
&lt;/ul>
&lt;p>设置/dev/vdb 磁盘的第一个分区的 FLAG 为 lvm&lt;/p>
&lt;ul>
&lt;li>parted /dev/vdb set 1 lvm on&lt;/li>
&lt;/ul>
&lt;h2 id="partprobe--探测分区">partprobe # 探测分区&lt;a class="td-heading-self-link" href="#partprobe--%e6%8e%a2%e6%b5%8b%e5%88%86%e5%8c%ba" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>当创建完分区而无法用 mkfs 创建文件系统的时候，用该命令，让内核重新读取分区情况以便让新增加的分区可以在不重启的情况下使用&lt;/p>
&lt;h2 id="fdisk">fdisk&lt;a class="td-heading-self-link" href="#fdisk" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>与 parted 工具类似，分为交互式命令与非交互式命令&lt;/p>
&lt;h3 id="syntax语法-1">Syntax(语法)&lt;a class="td-heading-self-link" href="#syntax%e8%af%ad%e6%b3%95-1" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>&lt;strong>fdisk [/Path/DEV]&lt;/strong>&lt;/p>
&lt;p>EXAMPLE&lt;/p>
&lt;ul>
&lt;li>fdisk -l # 查看当前磁盘分区详情&lt;/li>
&lt;/ul>
&lt;h1 id="磁盘设备管理工具">磁盘设备管理工具&lt;a class="td-heading-self-link" href="#%e7%a3%81%e7%9b%98%e8%ae%be%e5%a4%87%e7%ae%a1%e7%90%86%e5%b7%a5%e5%85%b7" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h2 id="lsblk">lsblk&lt;a class="td-heading-self-link" href="#lsblk" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man8/lsblk.8.html">Manual(手册)，lsblk(8)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>lsblk 是 list block devices 的简称。该工具可以列出有关所有可用或指定的块设备的信息。 lsblk 命令读取 &lt;code>sysfs文件系统&lt;/code> 和 &lt;code>udev db&lt;/code> 来收集信息。&lt;/p>
&lt;p>默认情况下，该命令以树形格式打印所有块设备(除了 RAM 磁盘)。效果如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># lsblk&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sr0 11:0 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> 1024M &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> rom
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vda 252:0 &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 500G &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> disk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├─vda1 252:1 &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 2M &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> part
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├─vda2 252:2 &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 500M &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> part /boot
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└─vda3 252:3 &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 499.5G &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> part
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └─vg1-root 253:0 &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 499.5G &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> lvm /
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>除了上面例子中的 6 列信息，lsblk 还会提供很多其他信息，使用 lsblk &amp;ndash;help 命令获取所有可用列的列表。&lt;/p>
&lt;ul>
&lt;li>NAME # 块设备名称&lt;/li>
&lt;li>KNAME # 该块设备在内核内的名称。&lt;/li>
&lt;li>MAJ:MIN # major(主要):minor(次要) 的块设备编号
&lt;ul>
&lt;li>MIN 就是 /dev/dm-X 设备后面那个 X 的编号&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>ROTA # 该设备是否为旋转设备(不是旋转设备就表示设备是固态硬盘或做过 raid 的逻辑盘)。1 是，0 不是&lt;/li>
&lt;li>RM # 该设备是否是可移动设备&lt;/li>
&lt;li>SIZE # 块设备大小&lt;/li>
&lt;li>RO #&lt;/li>
&lt;li>TYPE # 块设备类型&lt;/li>
&lt;li>MOUNTPOINT # 该块设备的挂载路径&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>lsblk [OPTIONS] [DEVICE&amp;hellip;]&lt;/strong>&lt;/p>
&lt;p>OPTIONS&lt;/p>
&lt;ul>
&lt;li>&lt;strong>-J, &amp;ndash;json&lt;/strong> # 使用 JSON 格式输出内容。&lt;/li>
&lt;li>&lt;strong>-o, &amp;ndash;output &amp;lt;LIST&amp;gt;&lt;/strong> # 指定要打印的输出列。 使用&amp;ndash;help 获取所有受支持列的列表。如果以+LIST 格式（例如 lsblk -o + UUID）指定 LIST，则可以扩展默认的列表。&lt;/li>
&lt;li>&lt;strong>-p, &amp;ndash;paths&lt;/strong> # 在 NAME 列显示块设备所在位置的绝对路径&lt;/li>
&lt;li>&lt;strong>-t, &amp;ndash;topology&lt;/strong> # 输出块设备的拓扑信息。相当于 &lt;code>-o NAME,ALIGNMENT,MIN-IO,OPT-IO,PHY-SEC,LOG-SEC,ROTA,SCHED,RQ-SIZE,RA,WSAME&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>EXAMPLE&lt;/p>
&lt;ul>
&lt;li>&lt;strong>lsblk &amp;ndash;output NAME,KNAME,TYPE,SIZE,MOUNTPOINT&lt;/strong> #&lt;/li>
&lt;/ul>
&lt;h2 id="blkid--查看块设备-uuid">blkid # 查看块设备 UUID&lt;a class="td-heading-self-link" href="#blkid--%e6%9f%a5%e7%9c%8b%e5%9d%97%e8%ae%be%e5%a4%87-uuid" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>效果如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># blkid&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/dev/vda1: &lt;span style="color:#000">PARTUUID&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;155ebb92-01&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/dev/vda2: &lt;span style="color:#000">UUID&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;6c780e7d-7d0d-4e87-a3a3-77bd9a6ff9d5&amp;#34;&lt;/span> &lt;span style="color:#000">TYPE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;ext4&amp;#34;&lt;/span> &lt;span style="color:#000">PARTUUID&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;155ebb92-02&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/dev/vda3: &lt;span style="color:#000">UUID&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;SADfxz-bqhC-QdUe-ogW1-diaM-1Fr8-TppSou&amp;#34;&lt;/span> &lt;span style="color:#000">TYPE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;LVM2_member&amp;#34;&lt;/span> &lt;span style="color:#000">PARTUUID&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;155ebb92-03&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/dev/mapper/vg1-root: &lt;span style="color:#000">UUID&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;47af4ed5-64c5-405f-bef1-c65dc2984e21&amp;#34;&lt;/span> &lt;span style="color:#000">TYPE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;xfs&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="dmsetup">dmsetup&lt;a class="td-heading-self-link" href="#dmsetup" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man8/dmsetup.8.html">Manual(手册)，dmsetup(8)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>低级的逻辑卷管理&lt;/p>
&lt;p>dmsetup ls&lt;/p>
&lt;p>dmsetup remove ceph&amp;ndash;a56518ac&amp;ndash;089c&amp;ndash;4567&amp;ndash;8000&amp;ndash;7084c8fe9624-osd&amp;ndash;block&amp;ndash;ca074b77&amp;ndash;a560&amp;ndash;434d&amp;ndash;86da&amp;ndash;f329f21d018e&lt;/p>
&lt;h1 id="lvm">LVM&lt;a class="td-heading-self-link" href="#lvm" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/lvmteam/lvm2">GitHub 项目,lvmteam/lvm2&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man8/lvm.8.html">Manual(手册),lvm(8)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;strong>Logical Volume Manager(逻辑卷管理器，简称 LVM)&lt;/strong> 提供了从物理设备创建 &lt;strong>Virtual Block Devices(虚拟块设备)&lt;/strong> 的&lt;strong>工具&lt;/strong>。虚拟设备比物理设备更易于管理，并且可以具有超出物理设备自身提供的功能的能力。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Volume Group(卷组，简称 VG)&lt;/strong> 是一个或多个物理设备的集合，每个设备称为 &lt;strong>Physical Volume(物理卷，简称 PV)&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Logical Volume(逻辑卷，简称 LV)&lt;/strong> 从 VG 中创建，是可由系统或应用直接使用的虚拟块设备。
&lt;ul>
&lt;li>根据内核中 &lt;strong>Device Mapper(设备映射，简称 DM)&lt;/strong> 实现的算法，LV 中的每个数据块都存储在 VG 中的一个或多个 PV 上。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>LVM 创建的 LV 本质上是相当于创建了一个新的物理磁盘，这不说是逻辑上的磁盘。所以称为逻辑卷。在 Linux 中，LVM 表现为一种 device-mapper 类型的磁盘。&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/zqtob4/1640420060047-c8503823-746d-41d5-8db8-3c4c5bd218da.png" alt="image.png">&lt;/p>
&lt;p>上图中，虽然 testvg1-testlv 磁盘是一个 LVM，并且是通过 /dev/sdb 磁盘的分区创建的，但是从整个磁盘管理的角度来看，一个 LV 就是一个物理磁盘，只不过类型不同罢了。&lt;/p>
&lt;h2 id="syntax语法-2">Syntax(语法)&lt;a class="td-heading-self-link" href="#syntax%e8%af%ad%e6%b3%95-2" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;strong>lvm [ COMMAND | FILE ]&lt;/strong>&lt;/p>
&lt;h2 id="example-1">Example&lt;a class="td-heading-self-link" href="#example-1" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>创建 LVM 顺序：&lt;/p>
&lt;ol>
&lt;li>Physical Volume：PV 物理卷(相当于一块一块真实的物理磁盘)&lt;/li>
&lt;li>Volume Group：VG 卷组(把多块物理磁盘组合在一起形成一个组，并在创建 VG 时把整个组的空间划分为一个个默认大小为 4M 的 PE，VG 就相当于一个存储池子，里面有好多好多 PE 块组成了一个大的磁盘空间供 LV 使用)&lt;/li>
&lt;li>Pysical Extent：PE 物理区域(把真实的物理磁盘的空间切分为一个个固定大小的块，每个块就是 PE)&lt;/li>
&lt;li>Logical Volume：LV 逻辑卷(从 VG 中拿出多个 PE 组成逻辑上的磁盘空间，可以把 LV 当成一个分区)&lt;/li>
&lt;/ol>
&lt;p>创建逻辑卷的步骤：&lt;/p>
&lt;ol>
&lt;li>创建分区，并使之可用
&lt;ol>
&lt;li>pvcreate /dev/sda{1,2}&lt;/li>
&lt;li>vgcreate testvg1 /dev/sda{1,2}&lt;/li>
&lt;li>lvcreate -L 10G -n testlv testvg1&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;p>扩展逻辑卷的步骤：&lt;/p>
&lt;ol>
&lt;li>确定扩展的大小，并确保 lv 所属的 vg 有足够的剩余空间
&lt;ol>
&lt;li>pvcreate /DEV/PATH&lt;/li>
&lt;li>vgextend VG /DEV/PATH&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>扩展 lv 大小，执行 lvextend 命令，第二条为扩展所有剩余空间到逻辑卷
&lt;ol>
&lt;li>lvextend -L [+]SIZE LvPath&lt;/li>
&lt;li>lvextend -l+100%FREE /dev/mapper/vg0-root&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>扩展系统文件大小，执行 resize2fs 命令
&lt;ol>
&lt;li>xfs_growfs LvPath&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;p>缩减逻辑卷的步骤&lt;/p>
&lt;ol>
&lt;li>卸载卷 umount，并执行强制检测
&lt;ol>
&lt;li>e2fsck -f LvPath&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>缩减文件系统大小
&lt;ol>
&lt;li>resize2fs LvPath SIZE&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>缩减 lv 大小
&lt;ol>
&lt;li>lvreduce -L [-]Siza LvPath&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;h2 id="pv--物理卷管理命令">pv # 物理卷管理命令&lt;a class="td-heading-self-link" href="#pv--%e7%89%a9%e7%90%86%e5%8d%b7%e7%ae%a1%e7%90%86%e5%91%bd%e4%bb%a4" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>Manual(),pvcreate()&lt;/li>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man8/pvresize.8.html">Manual(手册),pvresize(8)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h3 id="syntax语法-3">Syntax(语法)&lt;a class="td-heading-self-link" href="#syntax%e8%af%ad%e6%b3%95-3" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>&lt;strong>pvcreate POSITION [OPTIONS] # 初始化物理卷以供 PVM 使用&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>POSITION #&lt;/li>
&lt;/ul>
&lt;p>pvcreat 创建 PV&lt;/p>
&lt;p>OPTIONS&lt;/p>
&lt;p>EXAMPLE&lt;/p>
&lt;ul>
&lt;li>pvcreate /dev/sdb1&lt;/li>
&lt;li>pvcreate /dev/sdb{1,2}&lt;/li>
&lt;/ul>
&lt;p>pvremove 删除 PV&lt;/p>
&lt;p>pvscan 扫描 PV&lt;/p>
&lt;p>pvs 简要显示 PV&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/zqtob4/1616167609644-770f62f5-144e-44cb-8b06-feceb8309f0f.jpeg" alt="">&lt;/p>
&lt;ul>
&lt;li>PV：物理卷名称 VG：PV 所属的卷组 Fmt：物理卷格式 Attr： PSize：物理卷大小 PFree：物理卷空余大小&lt;/li>
&lt;/ul>
&lt;p>pvdisplay # 详细显示 PV
&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/zqtob4/1616167609649-9587c471-5e11-4e45-a7b6-0046a8d2030b.jpeg" alt="">&lt;/p>
&lt;ul>
&lt;li>PV Name：物理卷名称&lt;/li>
&lt;li>VG Name：PV 所属的卷组名称&lt;/li>
&lt;li>PV Size：物理卷占用多少空间&lt;/li>
&lt;li>Allocatable：是否可分配&lt;/li>
&lt;li>PE Size：每个 PE 占用的空间容量&lt;/li>
&lt;li>Total PE：合计有多少个 PE&lt;/li>
&lt;li>Free PE：有多少空余的 PE&lt;/li>
&lt;li>Allocated PE：分配了多少 PE&lt;/li>
&lt;li>PV UUID：PV 的 UUID 号&lt;/li>
&lt;/ul>
&lt;p>pvmove 把一个 pv 上的数据挪动到另一个 pv 上&lt;/p>
&lt;h2 id="vg--卷组管理命令">vg # 卷组管理命令&lt;a class="td-heading-self-link" href="#vg--%e5%8d%b7%e7%bb%84%e7%ae%a1%e7%90%86%e5%91%bd%e4%bb%a4" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;h3 id="syntax语法-4">Syntax(语法)&lt;a class="td-heading-self-link" href="#syntax%e8%af%ad%e6%b3%95-4" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>vgcreat,vgs,vgdisplay,vgextend,vgreduce,vgremove,vgrename&lt;/p>
&lt;p>vgcreat&lt;/p>
&lt;p>&lt;strong>vgcreat VgName PvPath&lt;/strong>&lt;/p>
&lt;p>创建 vg 自定义 vg 名 需要加入 VG 的 PV 路径&lt;/p>
&lt;p>选项&lt;/p>
&lt;ul>
&lt;li>&lt;strong>-s&lt;/strong> # 指定 PE 大小，默认 4M&lt;/li>
&lt;/ul>
&lt;p>应用范例&lt;/p>
&lt;ul>
&lt;li>vgcreate myvg /dev/sda{1,2} # 以 sdb1 和 sdb2 组合起来创建一个名叫 myvg 的 VG&lt;/li>
&lt;/ul>
&lt;p>vgs&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/zqtob4/1616167609659-c21d1b79-70bd-4975-a150-6348c5f0bd1e.jpeg" alt="">&lt;/p>
&lt;ul>
&lt;li>&lt;strong>#PV&lt;/strong> # 该卷组中物理卷的个数 # LV：逻辑卷的个数&lt;/li>
&lt;/ul>
&lt;p>vgdisplay&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/zqtob4/1616167609663-ebeba7a4-5acb-4d14-ba10-6eddf182d96e.jpeg" alt="">&lt;/p>
&lt;p>vgextend 扩大卷组&lt;/p>
&lt;ol>
&lt;li>语法格式：vgextend VgName PvPath&lt;/li>
&lt;li>选项&lt;/li>
&lt;li>应用实例
&lt;ol>
&lt;li>vgextend myvg /dev/sdc1 # 为卷组 myvg 添加一个/dev/sdc1 的物理卷&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;p>vgreduce 缩小卷组(注：缩减卷组前，要把要缩减掉的 pv 上的数据用 pvmove 挪走)&lt;/p>
&lt;h2 id="lv--逻辑卷管理命令">lv # 逻辑卷管理命令&lt;a class="td-heading-self-link" href="#lv--%e9%80%bb%e8%be%91%e5%8d%b7%e7%ae%a1%e7%90%86%e5%91%bd%e4%bb%a4" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man8/lvcreate.8.html">Manual(手册),lvcreate(8)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>lvcreat,lvdisplay,lvs,lvextend,lvreduce,lvremove&lt;/p>
&lt;p>lvcreat&lt;/p>
&lt;h3 id="syntax语法-5">Syntax(语法)&lt;a class="td-heading-self-link" href="#syntax%e8%af%ad%e6%b3%95-5" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>&lt;strong>lvcreat [OPTIONS] VgName [PvPath]&lt;/strong>&lt;/p>
&lt;p>创建 lv 从哪个 vg 中创建&lt;/p>
&lt;p>OPTIONS&lt;/p>
&lt;ul>
&lt;li>&lt;strong>-n&lt;/strong> # 指定 lv 名字&lt;/li>
&lt;li>&lt;strong>-L&lt;/strong> # 指定 lv 的空间大小&lt;/li>
&lt;li>&lt;strong>-p&lt;/strong> # 指定访问权限&lt;/li>
&lt;li>&lt;strong>-s&lt;/strong> # 创建 lv 的快照 snapshot&lt;/li>
&lt;/ul>
&lt;p>EXAMPLE&lt;/p>
&lt;ul>
&lt;li>&lt;strong>lvcreate -L 3G -n lv1 myvg&lt;/strong> # congmyvg 卷组中创建名为 Imyvg 大小为 3G 的 LV&lt;/li>
&lt;li>&lt;strong>lvcreate -s -L3G -n lv1snapshot -p r /dev/myvg/lv1&lt;/strong> # 创建名为 lv1snapshot，只有读权限，3G 大小的 lv1 的快照&lt;/li>
&lt;/ul>
&lt;p>lvdisplay&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/zqtob4/1616167609656-34a3e1a7-1885-42e0-99db-234afc6e1061.jpeg" alt="">&lt;/p>
&lt;p>lvextend&lt;/p>
&lt;p>lvextend [OPTIONS] LvPath [PvPath]&lt;/p>
&lt;p>增加 lv 增加哪个 LV [可以指定从哪个 PV 里给该 LV 增加]&lt;/p>
&lt;p>OPTIONS&lt;/p>
&lt;ul>
&lt;li>-L # 指定要增加的空间，增加到 5G 则是-L 5G，增加了 5G 则是-L +5G&lt;/li>
&lt;/ul>
&lt;p>EXAMPLE&lt;/p>
&lt;ul>
&lt;li>lvextend -L 5G /dev/myvg/lv1 扩展 lv1 这个逻辑卷到 5G 的容量&lt;/li>
&lt;li>lvextend -L +5G /dev/myvg/lv1 sdc1 # 扩展 lv1 逻辑卷多出 5G 的空间，从 sdc1 中给 lv 提供空间&lt;/li>
&lt;li>lvextend -l+100%FREE /dev/mapper/vg0-root # 扩展卷组中所有空间给 vg0-root 这个逻辑卷&lt;/li>
&lt;/ul>
&lt;h2 id="resize2fs">resize2fs&lt;a class="td-heading-self-link" href="#resize2fs" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>如果是 xfs 文件系统，则使用 xfs_growfs 命令来增大或者收缩未加载的 ext 文件系统的大小。如果文件系统是处于 mount 状态下，那么它只能做到扩容&lt;/p>
&lt;p>注意：在 lv 扩容完成后，还需要对文件系统进行扩容，否则无法使用&lt;/p>
&lt;p>OPTIONS&lt;/p>
&lt;p>EXAMPLE&lt;/p>
&lt;ul>
&lt;li>resize2fs /dev/myvg/lv1&lt;/li>
&lt;/ul>
&lt;h2 id="snapshot-快照卷">snapshot 快照卷&lt;a class="td-heading-self-link" href="#snapshot-%e5%bf%ab%e7%85%a7%e5%8d%b7" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>注意：lvm 创建的快照是基于原始卷来运行的，原始卷修改了多少内容，其修改之前的内容就会被自动复制到快照卷里，快照是按照 PE 复制的，每个 PE 的改变，原始 PE 都会自动备份到快照当中，当快照卷的容量满了，就失去了快照卷了，注意 lvm 创建的快照与 openstack 的实例创建的快照还有 VMware 创建的快照的区别&lt;/p></description></item></channel></rss>