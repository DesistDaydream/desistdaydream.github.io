<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦的站点 – Linux 内核管理工具</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/X.Linux-%E7%AE%A1%E7%90%86/Linux-%E5%86%85%E6%A0%B8%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</link><description>Recent content in Linux 内核管理工具 on 断念梦的站点</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/X.Linux-%E7%AE%A1%E7%90%86/Linux-%E5%86%85%E6%A0%B8%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: dmesg</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/X.Linux-%E7%AE%A1%E7%90%86/Linux-%E5%86%85%E6%A0%B8%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/dmesg/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/X.Linux-%E7%AE%A1%E7%90%86/Linux-%E5%86%85%E6%A0%B8%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/dmesg/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man1/dmesg.1.html">Manual(手册)，dmesg(1)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>dmesg 命令是用来在 Unix-like 系统中显示内核的相关信息的。&lt;strong>dmesg&lt;/strong> 全称是 &lt;strong>display message (or display driver)&lt;/strong>，即显示信息。默认操作是显示来自内核环形缓冲区的所有消息。&lt;/p>
&lt;p>实际上，dmesg 命令是从内核环形缓冲区中获取数据的。当我们在 Linux 上排除故障时，dmesg 命令会十分方便，它能很好地帮我们鉴别硬件相关的 error 和 warning。除此之外，dmesg 命令还能打印出守护进程相关的信息，已帮助我们 debug。&lt;/p>
&lt;h2 id="dmesg-options">dmesg [OPTIONS]&lt;a class="td-heading-self-link" href="#dmesg-options" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;strong>OPTIONS&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>-L, &amp;ndash;color&lt;/strong> # 输入内容带上颜色。&lt;/li>
&lt;li>&lt;strong>-l, &amp;ndash;level LIST&lt;/strong> # 指定输出的级别，多个级别以逗号分隔。可用的级别有以下几种
&lt;ul>
&lt;li>emerg - system is unusable&lt;/li>
&lt;li>alert - action must be taken immediately&lt;/li>
&lt;li>crit - critical conditions&lt;/li>
&lt;li>err - error conditions&lt;/li>
&lt;li>warn - warning conditions&lt;/li>
&lt;li>notice - normal but significant condition&lt;/li>
&lt;li>info - informational&lt;/li>
&lt;li>debug - debug-level messages&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>-f, &amp;ndash;facility LIST&lt;/strong> # 指定要输出的 &lt;a href="https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F/%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F.md#Facility(%E8%AE%BE%E6%96%BD)">Facility(设施)&lt;/a>，多个设施以逗号分隔。可用的 Facility 有&lt;a href="https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F/%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F.md">Facility(设施)&lt;/a>
&lt;ul>
&lt;li>ser - random user-level messages&lt;/li>
&lt;li>mail - mail system&lt;/li>
&lt;li>daemon - system daemons&lt;/li>
&lt;li>auth - security/authorization messages&lt;/li>
&lt;li>syslog - messages generated internally by syslogd&lt;/li>
&lt;li>lpr - line printer subsystem&lt;/li>
&lt;li>news - network news subsystem&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>-H, &amp;ndash;human&lt;/strong> # 启用人类可读的输出。是 &lt;code>--color、--reltime、--nopager&lt;/code> 这三个选项的结合&lt;/li>
&lt;li>&lt;strong>-T, &amp;ndash;ctime&lt;/strong> # 打印人类可读的时间戳。
&lt;ul>
&lt;li>请注意，时间戳记可能不正确！挂起/恢复系统后，用于日志的时间源不会更新。根据引导时间和单调时钟之间的当前增量调整时间戳，这仅适用于上次恢复后打印的消息。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>EXAMPLE&lt;/strong>&lt;/p></description></item><item><title>Docs: sysctl</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/X.Linux-%E7%AE%A1%E7%90%86/Linux-%E5%86%85%E6%A0%B8%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/sysctl/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/X.Linux-%E7%AE%A1%E7%90%86/Linux-%E5%86%85%E6%A0%B8%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/sysctl/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>sysctl 是 &lt;a href="https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/X.Linux%20%E7%AE%A1%E7%90%86/Linux%20%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/procps%20%E5%B7%A5%E5%85%B7%E9%9B%86.md">procps 工具集&lt;/a> 中的一个用于控制内核参数的工具&lt;/p>
&lt;h1 id="syntax语法">Syntax(语法)&lt;a class="td-heading-self-link" href="#syntax%e8%af%ad%e6%b3%95" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;strong>sysctl [OPTIONS] [VARIABLE[=VALUE]] [&amp;hellip;]&lt;/strong>&lt;/p>
&lt;p>在运行环境中配置内核参数。VARIABLE 为内核的一个变量&lt;/p>
&lt;p>&lt;strong>OPTIONS&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>-a&lt;/strong> # 显示所有变量&lt;/li>
&lt;li>&lt;strong>-p [/PATH/TO/FILE]&lt;/strong> # 从文件中读取值,默认文件为/etc/sysctl.conf。可以指定从哪个文件来读取参数，可使用通配符。&lt;/li>
&lt;li>&lt;strong>-w&lt;/strong> # 允许写一个值到变量中&lt;/li>
&lt;/ul>
&lt;h1 id="example">EXAMPLE&lt;a class="td-heading-self-link" href="#example" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;ul>
&lt;li>sysctl -w net.ipv4.ip_forward=1 # 开启 IP 转发模式&lt;/li>
&lt;li>sysctl -p /etc/sysctl.d/* # 从 sysctl.d 目录中读取所有文件的内容加载到内核中&lt;/li>
&lt;/ul></description></item></channel></rss>