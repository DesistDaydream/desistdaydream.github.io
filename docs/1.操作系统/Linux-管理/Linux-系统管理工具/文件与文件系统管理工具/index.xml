<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦的站点 – 文件与文件系统管理工具</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E6%96%87%E4%BB%B6%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</link><description>Recent content in 文件与文件系统管理工具 on 断念梦的站点</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E6%96%87%E4%BB%B6%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: find whereis which 查询工具</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E6%96%87%E4%BB%B6%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/find-whereis-which-%E6%9F%A5%E8%AF%A2%E5%B7%A5%E5%85%B7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E6%96%87%E4%BB%B6%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/find-whereis-which-%E6%9F%A5%E8%AF%A2%E5%B7%A5%E5%85%B7/</guid><description>
&lt;h1 id="which-查看可执行文件的位置">which 查看可执行文件的位置&lt;a class="td-heading-self-link" href="#which-%e6%9f%a5%e7%9c%8b%e5%8f%af%e6%89%a7%e8%a1%8c%e6%96%87%e4%bb%b6%e7%9a%84%e4%bd%8d%e7%bd%ae" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>root@lichenhao:~# which ls
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/usr/bin/ls
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="whereis-查看文件的位置-如-whereis-ls">whereis 查看文件的位置， 如 whereis ls&lt;a class="td-heading-self-link" href="#whereis-%e6%9f%a5%e7%9c%8b%e6%96%87%e4%bb%b6%e7%9a%84%e4%bd%8d%e7%bd%ae-%e5%a6%82-whereis-ls" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>root@lichenhao:~# whereis ls
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ls: /usr/bin/ls /usr/share/man/man1/ls.1.gz
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="find--在目录中搜索文件">find # 在目录中搜索文件&lt;a class="td-heading-self-link" href="#find--%e5%9c%a8%e7%9b%ae%e5%bd%95%e4%b8%ad%e6%90%9c%e7%b4%a2%e6%96%87%e4%bb%b6" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h2 id="syntax语法">Syntax(语法)&lt;a class="td-heading-self-link" href="#syntax%e8%af%ad%e6%b3%95" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;strong>find [OPTIONS] [PATH&amp;hellip;] [EXPRESSION]&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>PATH # 路径名，不写上默认表示在当前路径下搜索&lt;/li>
&lt;li>OPTIONS 与 EXPRESSION # 详见下文，PATH 可以指定一个或多个想要搜索的路径。&lt;/li>
&lt;/ul>
&lt;p>如果没有给出 PATH，则使用当前目录；如果未给出任何表达式，则使用表达式 -print&lt;/p>
&lt;h3 id="options">OPTIONS&lt;a class="td-heading-self-link" href="#options" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>-H，-L 和-P 选项控制 find 处理符号链接的行为。这些参数之后的命令行参数将被视为要检查的文件或目录的名称，直到以 - 开头的第一个参数或参数 ( 或 ! 。符号链接的概念详见：ln 链接&lt;/p>
&lt;ul>
&lt;li>&lt;strong>-P&lt;/strong> # 不跟踪符号链接。该选项为 find 的默认行为。当 find 检查或打印文件信息时，该文件是符号链接，则所使用的信息应取自符号链接本身的属性。&lt;/li>
&lt;li>&lt;strong>-L&lt;/strong> # 跟踪符号链接。与 -type l 同时使用时仅搜索失效的符号链接。当 find 检查或打印有关文件的信息时，所使用的信息应从链接指向的文件的属性中获取，而不是从链接本身获取（除非它是断开的符号链接，或者 find 无法检查与之相关的文件）链接点）。使用此选项意味着-noleaf。如果以后使用-P 选项，则-noleaf 仍然有效。如果-L 有效，并且 find 在搜索过程中发现到子目录的符号链接，则将搜索该符号链接所指向的子目录。
&lt;ul>
&lt;li>当-L 选项生效时，-type 谓词将始终与符号链接指向的文件类型匹配，而不是与链接本身匹配（除非符号链接断开）。使用-L 会使-lname 和-ilname 谓词始终返回 false。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>-H&lt;/strong> # 除了处理命令行参数时，不要跟随符号链接。当 find 检查或打印有关文件的信息时，所使用的信息应取自符号链接本身的属性。唯一的例外情况是在命令行上指定的文件是符号链接并且可以解析该链接时，这种情况下，使用的信息取自链接指向的任何位置（即跟随该链接） ）。如果无法检查符号链接指向的文件，则有关链接本身的信息将用作备用。如果-H 有效，并且在命令行上指定的路径之一是指向目录的符号链接，则将检查该目录的内容（尽管-maxdepth 0 当然可以防止此情况）。&lt;/li>
&lt;li>&lt;strong>-D debugoptions&lt;/strong> # Print diagnostic information; this can be helpful to diagnose problems with why find is not doing what you want. The list of debug options should be comma separated. Compatibility of the debug options is not guaranteed between releases of findutils. For a complete list of valid debug options, see the output of find -D help. Valid debug options include&lt;/li>
&lt;li>&lt;strong>-Olevel&lt;/strong> # Enables query optimisation. The find program reorders tests to speed up execution while preserving the overall effect; that is, predicates with side effects are not reordered relative to each other. The optimisations performed at each optimisation level are as follows.&lt;/li>
&lt;/ul>
&lt;p>注意：&lt;/p>
&lt;ol>
&lt;li>上述五个 OPTIONS 必须出现在第一个 PATH 之前。&lt;/li>
&lt;li>下面 EXPRESSIONS(表达式)中的 OPTIONS，用来控制 find 的行为，与上述这些 OPTIONS 不同。并且表达式中的 OPTIONS 需要在第一个 PATH 之后指定。&lt;/li>
&lt;li>find 默认将在当前目录下查找子目录与文件。并且将查找到的子目录和文件全部进行显示&lt;/li>
&lt;/ol>
&lt;h3 id="expressions表达式">EXPRESSIONS(表达式)&lt;a class="td-heading-self-link" href="#expressions%e8%a1%a8%e8%be%be%e5%bc%8f" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>EXPRESSIONS 由以下几部分组成&lt;/p>
&lt;ul>
&lt;li>OPTIONS 选项 # （这会影响整体操作，而不是特定文件的处理，并且始终返回 true）&lt;/li>
&lt;li>TESTS 测试 # （返回正确或错误的值）&lt;/li>
&lt;li>ACTIONS 动作 # （具有副作用并返回 true 或 false 值）&lt;/li>
&lt;/ul>
&lt;p>上述三部分表达式由运算符分隔。如果表达式除-prune 之外不包含其他任何动作，则对表达式为 true 的所有文件执行-print。&lt;/p>
&lt;p>OPTIONS：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>-type&lt;/strong> # 根据文件类型查找 （find PATH -type 类型参数）
&lt;ul>
&lt;li>参数类型包括：f 普通文件，l 软连接文件，d 目录文件等&lt;/li>
&lt;li>例: find -type l # 查找当前目录下的软连接文件&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>-name&lt;/strong> # 根据文件名查找 （* 任意多个字符）（? 1 个字符）（[] 指范围值，外侧加引号）
&lt;ul>
&lt;li>例：find /var –name &amp;ldquo;*.log&amp;rdquo; # 查找/var 目录下，所有文件名最后字符是.log 的文件&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>-iname&lt;/strong> # 不区分大小写根据文件名查找&lt;/li>
&lt;li>&lt;strong>-inum&lt;/strong> # 根据 inode 号查找&lt;/li>
&lt;li>&lt;strong>-size&lt;/strong> # 根据大小查找
&lt;ul>
&lt;li>例:find /etc -size -10k -size +20k # 查找/etc 目录下小于 10k 大于 20k 的文件&lt;/li>
&lt;li>注意+-号，如果没有，是精确这么大，通常都会带上+或-号，表示一个范围&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>-user&lt;/strong> # 根据所有者查找 （user 可改成 group 则查找属组为 lisi 的文件）
&lt;ul>
&lt;li>例:find /home -user lisi # 查找/home 目录下，属主为 lisi 的文件&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>-perm&lt;/strong> # 根据文件权限查找
&lt;ul>
&lt;li>例:find /boot -perm 644 # 查找/boot 文件加下，权限为 644 的文件&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>-TIME {+|-}NUM&lt;/strong> # 根据时间查找
&lt;ul>
&lt;li>
&lt;ul>
&lt;li>表示该时间之前，-表示该时间之内&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>TIME 分为两部分
&lt;ul>
&lt;li>第一部分，# 表示 ctime，atime，mtime；time 天，min 分钟
&lt;ul>
&lt;li>&lt;strong>c&lt;/strong> # change # 表示属性被修改过：所有者、所属组、权限&lt;/li>
&lt;li>&lt;strong>a&lt;/strong> # access # 被访问过(被查看过)&lt;/li>
&lt;li>&lt;strong>m&lt;/strong> # modify # 表示内容被修改过&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>第二部分
&lt;ul>
&lt;li>&lt;strong>time&lt;/strong> # 天&lt;/li>
&lt;li>&lt;strong>min&lt;/strong> # 分钟&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>逻辑连接符 # -a （and 逻辑与），-o （or 逻辑或)例：&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>-maxdepth &amp;lt;INT&amp;gt;&lt;/strong> # 设置最大目录层级
&lt;ul>
&lt;li>例：find /home -maxdepth 1 -name *.log # 查找/home 目录下 1 层的以.log 结尾的文件（即只查找当前目录，不查找当前目录下的子目录中的内容）&lt;/li>
&lt;li>-ls 假设 find 指令的回传值为 Ture，就将文件或目录名称列出到标准输出&lt;/li>
&lt;li>例：find /home -type d -ls # 查找/home 目录下的文件夹，并列出这些文件夹的详细信息&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>ACTIONS 动作&lt;/p>
&lt;p>&lt;strong>[ -exec 或者-ok command ] {} [];&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>-delete&lt;/strong> # 删除找到的文件。使用-delete 会自动打开“ -depth”选项。&lt;/li>
&lt;li>&lt;strong>-exec &amp;lt;COMMAND&amp;gt;&lt;/strong> # 假设 find 指令的回传值为 True，就执行该指令；-ok 与-exec 类似，只不过是交互型。
&lt;ul>
&lt;li>格式:find PATH 选项 选项内容 -exec COMMAND {} ;&lt;/li>
&lt;li>该格式的意思是使用 find 查找出来的内容放到{}中，再对{}中的内容逐条执行 COMMAND 命令&lt;/li>
&lt;li>它的终止是以;为结束标志的，所以这句命令后面的分号是不可缺少的，考虑到各个系统中分号会有不同的意义，所以前面加反斜杠。（反斜杠的意思参考正则表达式）&lt;/li>
&lt;li>
&lt;/li>
&lt;li>注意：固定格式，只能这样写。注意中间的空格。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>-ok&lt;/strong> #&lt;/li>
&lt;/ul>
&lt;p>注意该语法格式中不要少了最后的分好和最后大括号周围的空格，-ok 为会询问，交互式&lt;/p>
&lt;h2 id="example">EXAMPLE&lt;a class="td-heading-self-link" href="#example" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>删除 /var/log/pods 目录下失效的符号链接
&lt;ul>
&lt;li>find -L /var/log/pods -type l -delete&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>找到/home 目录下的 samlee 用户的所有文件并删除
&lt;ul>
&lt;li>find /home -user samlee -exec rm –r {} ;&lt;/li>
&lt;li>注：rm -r 连带目录一起删除。报错原因：-exec 不适合大量传输，速率慢导致。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>查看当前目录下两天之前修改过得并且 10 分钟之内查看过得文件
&lt;ul>
&lt;li>find -mtime +2 -amin -10&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>查看当前目录下 7 天之内并且 2 天之前的文件
&lt;ul>
&lt;li>find -mtime -7 -a -mtime +2&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>在 etc 目录下查找大于 1k 并且小于 10k 的文件
&lt;ul>
&lt;li>find /etc -size +1k -a -size -10k&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>-inum 根据文件 i 节点查询
&lt;ul>
&lt;li>find ./ -inum 2310630 -exec rm {} ; # 有一些文件的硬链接数量很多，有相同的 i 节点，查找其中一个文件的 i 节点号，一次性删除。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>find -maxdepth 1 -mtime +1 -exec ls -l {} ; # 查找出来的如果是文件夹，那么就对这个文件夹执行该命命令，如下图所示，查找出来./test 等 3 个文件夹，那么就这三个文件夹执行 ls -l 的命令，即
&lt;ul>
&lt;li>ls -l ./test&lt;/li>
&lt;li>ls -l ./lichenhao&lt;/li>
&lt;li>ls -l ./lost+found&lt;/li>
&lt;li>注：查找出来的文字，一字不差的全部放在后面的{}中，等待 COMMAND 执行，所以没法列出目录的详细信息&lt;/li>
&lt;li>注意与-ls 参数的区别&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/idlpqz/1616166302372-29738c6b-f92a-43b5-9243-9aa5483629ca.jpeg" alt="">&lt;/p>
&lt;h3 id="查找重复文件">查找重复文件&lt;a class="td-heading-self-link" href="#%e6%9f%a5%e6%89%be%e9%87%8d%e5%a4%8d%e6%96%87%e4%bb%b6" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>在工作生活当中，我们很可能会遇到查找重复文件的问题。比如从某游戏提取的游戏文本有重复的，我们希望找出所有重复的文本，让翻译只翻译其中一份，而其他的直接替换。那么这个问题该怎么做呢？当然方法多种多样，而且无论那种方法应该都不会太难，但笔者第一次遇到这个问题的时候第一反应是是用 Linux 的 Shell 脚本，所以文本介绍这种方式。
先上代码：
&lt;code>find -not -empty -type f -printf &amp;quot;%sn&amp;quot; | sort -rn |uniq -d | xargs -I{} -n1 find -type f -size {}c -print0 | xargs -0 md5sum | sort | uniq -w32 --all-repeated=separate | cut -b 36-&lt;/code>
大家先 cd 到自己想要查找重复文件的文件夹，然后 copy 上面代码就可以了，系统会对当前文件夹及子文件夹内的所有文件进行查重。
下面分析一下上面的命令。
首先看第一句：
&lt;code>find -not -empty -type f -printf &amp;quot;%sn&amp;quot;&lt;/code>
find 是查找命令；-not -empty 是要寻找非空文件；-type f 是指寻找常规文件；-printf “%sn”比较具有迷惑性，这里的%s 并非 C 语言中的输出字符串，它实际表示的是文件的大小，单位为 bytes（不懂就 man，man 一下 find，就可以看到了），n 是换行符。所以这句话的意思是输出所有非空文件的大小。
通过管道，上面的结果被传到第二句：
&lt;code>sort -rn&lt;/code>
sort 是排序，-n 是指按大小排序，-r 是指从大到小排序（逆序 reverse）。
第三句：
&lt;code>uniq -d&lt;/code>
uniq 是把重复的只输出一次，而-d 指只输出重复的部分（如 9 出现了 5 次，那么就输出 1 个 9，而 2 只出现了 1 次，并非重复出现的数字，故不输出）。
第四句：
&lt;code>xargs -I{} -n1 find -type f -size {}c -print0&lt;/code>
这一部分分两部分看，第一部分是 xargs -I{} -n1，xargs 命令将之前的结果转化为参数，供后面的 find 调用，其中-I{}是指把参数写成{}，而-n1 是指将之前的结果一个一个输入给下一个命令（-n8 就是 8 个 8 个输入给下一句，不写-n 就是把之前的结果一股脑的给下一句）。后半部分是 find -type f -size {}c -print0，find 指令我们前面见过，-size{}是指找出大小为{}bytes 的文件，而-print0 则是为了防止文件名里带空格而写的参数。
第五句：
&lt;code>xargs -0 md5sum&lt;/code>
xargs 我们之前说过，是将前面的结果转化为输入，那么这个-0 又是什么意思？man 一下 xargs，我们看到-0 表示读取参数的时候以 null 为分隔符读取，这也不难理解，毕竟 null 的二进制表示就是 00。后面的 md5sum 是指计算输入的 md5 值。
第六句：sort 是排序，这个我们前面也见过。
第七句：
&lt;code>uniq -w32 --all-repeated=separate&lt;/code>
uniq -w32 是指寻找前 32 个字符相同的行，原因在于 md5 值一定是 32 位的，而后面的&amp;ndash;all-repeated=separate 是指将重复的部分放在一类，分类输出。
第八句：
&lt;code>cut -b 36-&lt;/code>
由于我们的结果带着 md5 值，不是很好看，所以我们截取 md5 值后面的部分，cut 是文本处理函数，这里-b 36-是指只要每行 36 个字符之后的部分。
我们将上述每个命令用管道链接起来，存入 result.txt：
&lt;code>find -not -empty -type f -printf &amp;quot;%sn&amp;quot; | sort -rn |uniq -d | xargs -I{} -n1 find -type f -size {}c -print0 | xargs -0 md5sum | sort | uniq -w32 --all-repeated=separate | cut -b 36- &amp;gt;result.txt&lt;/code>
虽然结果很好看，但是有一个问题，这是在 Linux 下很好看，实际上如果有朋友把输出文件放到 Windows 上，就会发现换行全没了，这是由于 Linux 下的换行是 n，而 windows 要求 nr，为了解决这个问题，我们最后执行一条指令，将 n 转换为 nr：
&lt;code>cat result.txt | cut -c 36- | tr -s 'n'&lt;/code>&lt;/p></description></item><item><title>Docs: lsof 列出打开的文件</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E6%96%87%E4%BB%B6%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/lsof-%E5%88%97%E5%87%BA%E6%89%93%E5%BC%80%E7%9A%84%E6%96%87%E4%BB%B6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E6%96%87%E4%BB%B6%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/lsof-%E5%88%97%E5%87%BA%E6%89%93%E5%BC%80%E7%9A%84%E6%96%87%E4%BB%B6/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man8/lsof.8.html">Manual(手册)，lsof(8)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>该工具以文件为主体，用于列出打开文件的进程，进程打开的端口(TCP、UDP)等、找回/恢复删除的文件。是十分方便的系统监视工具，因为 lsof 需要访问核心内存和各种文件，所以需要 root 用户执行。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>root@master0 ~&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># lsof | more&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>COMMAND PID TID USER FD TYPE DEVICE SIZE/OFF NODE NAME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>systemd &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> root cwd DIR 253,0 &lt;span style="color:#0000cf;font-weight:bold">238&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">64&lt;/span> /
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>systemd &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> root rtd DIR 253,0 &lt;span style="color:#0000cf;font-weight:bold">238&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">64&lt;/span> /
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>systemd &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> root txt REG 253,0 &lt;span style="color:#0000cf;font-weight:bold">1612152&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">17149941&lt;/span> /usr/lib/systemd/systemd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kthreadd &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> root cwd DIR 253,0 &lt;span style="color:#0000cf;font-weight:bold">238&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">64&lt;/span> /
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kthreadd &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> root rtd DIR 253,0 &lt;span style="color:#0000cf;font-weight:bold">238&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">64&lt;/span> /
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kthreadd &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> root txt unknown /proc/2/exe
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lsof &lt;span style="color:#0000cf;font-weight:bold">1893&lt;/span> root mem REG 253,0 &lt;span style="color:#0000cf;font-weight:bold">155784&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">72860&lt;/span> /usr/lib64/libselinux.so.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lsof &lt;span style="color:#0000cf;font-weight:bold">1893&lt;/span> root mem REG 253,0 &lt;span style="color:#0000cf;font-weight:bold">164240&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">41015&lt;/span> /usr/lib64/ld-2.17.so
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lsof &lt;span style="color:#0000cf;font-weight:bold">1893&lt;/span> root 4r FIFO 0,9 0t0 &lt;span style="color:#0000cf;font-weight:bold">37707&lt;/span> pipe
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lsof &lt;span style="color:#0000cf;font-weight:bold">1893&lt;/span> root 7w FIFO 0,9 0t0 &lt;span style="color:#0000cf;font-weight:bold">37708&lt;/span> pipe
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>每行显示一个打开的文件，若不指定条件默认将显示所有进程打开的所有文件。lsof 输出各列信息的意义如下：&lt;/p>
&lt;p>COMMAND 进程的名称 | PID 进程标识符 | USER 进程所有者 | FD 文件描述符 | TYPE 文件类型 | DEVICE 磁盘的名称 | SIZE 文件的大小 | NODE 索引节点 | NAME 文件的绝对路径&lt;/p>
&lt;h2 id="fd--表示该文件被打开的-fd-号或其他信息">FD # 表示该文件被打开的 FD 号或其他信息&lt;a class="td-heading-self-link" href="#fd--%e8%a1%a8%e7%a4%ba%e8%af%a5%e6%96%87%e4%bb%b6%e8%a2%ab%e6%89%93%e5%bc%80%e7%9a%84-fd-%e5%8f%b7%e6%88%96%e5%85%b6%e4%bb%96%e4%bf%a1%e6%81%af" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>cwd：表示 current work dirctory，即：应用程序的当前工作目录，这是该应用程序启动的目录，除非它本身对这个目录进行更改&lt;/li>
&lt;li>txt # 该类型的文件是程序代码，如应用程序二进制文件本身或共享库，如上列表中显示的 /sbin/init 程序&lt;/li>
&lt;li>er # FD 信息错误(参考 NAME 列);&lt;/li>
&lt;li>ltx：shared library text (code and data);&lt;/li>
&lt;li>mxx ：hex memory-mapped type number xx.&lt;/li>
&lt;li>mem # 内存映射文件&lt;/li>
&lt;li>mmap # memory-mapped device;&lt;/li>
&lt;li>pd # 父目录&lt;/li>
&lt;li>rtd # root 目录&lt;/li>
&lt;li>v86 VP/ix mapped file;&lt;/li>
&lt;li>0：表示标准输出&lt;/li>
&lt;li>1：表示标准输入&lt;/li>
&lt;li>2：表示标准错误&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>一般在标准输出、标准错误、标准输入后还跟着文件状态模式：r、w、u 等&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>u：表示该文件被打开并处于读取/写入模式&lt;/li>
&lt;li>r：表示该文件被打开并处于只读模式&lt;/li>
&lt;li>w：表示该文件被打开并处于&lt;/li>
&lt;li>空格 # 表示该文件的状态模式为 unknow，且没有锁定&lt;/li>
&lt;li>&lt;code>-&lt;/code> # 表示该文件的状态模式为 unknow，且被锁定&lt;/li>
&lt;/ul>
&lt;p>同时在文件状态模式后面，还跟着相关的锁&lt;/p>
&lt;ul>
&lt;li>N：for a Solaris NFS lock of unknown type;&lt;/li>
&lt;li>r：for read lock on part of the file;&lt;/li>
&lt;li>R：for a read lock on the entire file;&lt;/li>
&lt;li>w：for a write lock on part of the file;（文件的部分写锁）&lt;/li>
&lt;li>W：for a write lock on the entire file;（整个文件的写锁）&lt;/li>
&lt;li>u：for a read and write lock of any length;&lt;/li>
&lt;li>U：for a lock of unknown type;&lt;/li>
&lt;li>x：for an SCO OpenServer Xenix lock on part of the file;&lt;/li>
&lt;li>X：for an SCO OpenServer Xenix lock on the entire file;&lt;/li>
&lt;li>space：if there is no lock.&lt;/li>
&lt;/ul>
&lt;h2 id="type--文件类型">TYPE # 文件类型&lt;a class="td-heading-self-link" href="#type--%e6%96%87%e4%bb%b6%e7%b1%bb%e5%9e%8b" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>DIR：表示目录&lt;/li>
&lt;li>CHR：表示字符类型&lt;/li>
&lt;li>BLK：块设备类型&lt;/li>
&lt;li>UNIX： UNIX 域套接字&lt;/li>
&lt;li>FIFO：先进先出 (FIFO) 队列&lt;/li>
&lt;li>IPv4：网际协议 (IP) 套接字&lt;/li>
&lt;li>&amp;hellip;&amp;hellip;.&lt;/li>
&lt;/ul>
&lt;h1 id="syntax语法">Syntax(语法)&lt;a class="td-heading-self-link" href="#syntax%e8%af%ad%e6%b3%95" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;strong>lsof [ -?abChKlnNOPRtUvVX ] [ -A A ] [ -c c ] [ +c c ] [ +|-d d ] [ +|-D D ] [ +|-e s ] [ +|-f [cfgGn] ] [ -F [f] ] [ -g [s] ] [ -i [i] ] [ -k k] [ +|-L [l] ] [ +|-m m ] [ +|-M ] [ -o [o] ] [ -p s ] [ +|-r [t[m&amp;lt;fmt&amp;gt;]] ] [ -s [p:s] ] [ -S [t] ] [ -T [t] ] [ -u s ] [ +|-w ] [ -x [fl] ] [ -z [z] ] [ -Z [Z] ] [ &amp;ndash; ] [names]&lt;/strong>&lt;/p>
&lt;h2 id="options">OPTIONS&lt;a class="td-heading-self-link" href="#options" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>-a&lt;/strong> # 过滤选项之间进行 AND 运算。比如我使用 -d 和 -p，则结果要两个筛选都满足才可以。默认情况是 或 运算。列出满足任意过滤选项的所有结果。
&lt;ul>
&lt;li>说白了，这 -a 选项就是个逻辑运算符。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>-c &amp;lt;STRING&amp;gt;&lt;/strong> # 列出以 STRING 字符开头的命令的进程的文件列表。其实就是通过进程名筛选&lt;/li>
&lt;li>&lt;strong>+d &amp;lt;DIR&amp;gt;&lt;/strong> # 列出目录下被打开的文件&lt;/li>
&lt;li>&lt;strong>-d &amp;lt;FD&amp;gt;&lt;/strong> # 列出占用指定文件描述符的进程。可以使用 2-10 这种方式来列出 2 到 10 号描述符的文件。&lt;/li>
&lt;li>&lt;strong>+D &amp;lt;DIR&amp;gt;&lt;/strong> # 递归列出目录下被打开的文件&lt;/li>
&lt;li>&lt;strong>-g &amp;lt;GroupID&amp;gt;&lt;/strong> # 列出 GID 号进程详情&lt;/li>
&lt;li>&lt;strong>-i &amp;lt;STRING&amp;gt;&lt;/strong> # 列出符合条件的网络连接相关。（4、6、协议、:PORT、 @IP ）&lt;/li>
&lt;li>&lt;strong>-N &amp;lt;DIR&amp;gt;&lt;/strong> # 列出使用 NFS 的文件&lt;/li>
&lt;li>&lt;strong>-p &amp;lt;PID[,PID,PID&amp;hellip;.]&amp;gt;&lt;/strong> # 列出指定进程号所打开的文件。多个 PID 以逗号分隔&lt;/li>
&lt;li>&lt;strong>-u &amp;lt;USERNAME&amp;gt;&lt;/strong> # 列出指定用户所打开的文件&lt;/li>
&lt;li>&lt;strong>-w&lt;/strong> # 关闭程序运行中产生的警告信息。&lt;/li>
&lt;/ul>
&lt;p>输出格式化&lt;/p>
&lt;ul>
&lt;li>&lt;strong>-n&lt;/strong> # 直接显示 IP 而不是主机名&lt;/li>
&lt;li>&lt;strong>-P&lt;/strong> # 直接显示端口号，而不是端口号的名称&lt;/li>
&lt;li>&lt;strong>-t&lt;/strong> # 仅输出进程的 PID&lt;/li>
&lt;/ul>
&lt;h1 id="example">EXAMPLE&lt;a class="td-heading-self-link" href="#example" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;ul>
&lt;li>查看谁正在使用某个文件，也就是说查找某个文件相关的进程
&lt;ul>
&lt;li>&lt;strong>lsof /bin/bash&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>显示除了 root 用户下的 sshd 进程所用的文件
&lt;ul>
&lt;li>&lt;strong>lsof -u ^root -c sshd&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>列出目前连接主机 peida.linux 上端口为：20，21，22，25，53，80 相关的所有文件信息，且每隔 3 秒不断的执行 lsof 指令
&lt;ul>
&lt;li>&lt;strong>lsof -i @peida.linux:20,21,22,25,53,80 -r 3&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>列出所有的网络连接
&lt;ul>
&lt;li>&lt;strong>lsof -i&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>列出所有 tcp 网络连接信息
&lt;ul>
&lt;li>&lt;strong>lsof -i tcp&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>列出正在使用 3306 端口的进程信息
&lt;ul>
&lt;li>lsof -i :3306&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>列出 9267 号进程打开的文件描述符为 132 的文件
&lt;ul>
&lt;li>lsof -p 9267 -d 132 -a&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>列出 9267 号进程打开的所有文件，以及文件描述符为 132 的所有文件
&lt;ul>
&lt;li>lsof -p 9267 -d 13&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>列出谁在使用某个特定的 udp 端口
&lt;ul>
&lt;li>lsof -i udp:55&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>列出某个用户的所有活跃的网络端口
&lt;ul>
&lt;li>lsof -a -u test -i&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>Docs: tar与gzip</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E6%96%87%E4%BB%B6%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/tar%E4%B8%8Egzip/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E6%96%87%E4%BB%B6%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/tar%E4%B8%8Egzip/</guid><description>
&lt;h1 id="tar">tar&lt;a class="td-heading-self-link" href="#tar" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man1/tar.1.html">Manual(手册)，tar(1)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>tar 是一个归档工具，用以实现 &lt;a href="https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Kernel/Filesystem/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/Archive%20File(%E5%BD%92%E6%A1%A3%E6%96%87%E4%BB%B6).md">Archive File(归档文件)&lt;/a>&lt;/p>
&lt;h2 id="syntax语法">Syntax(语法)&lt;a class="td-heading-self-link" href="#syntax%e8%af%ad%e6%b3%95" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;strong>tar [OPTIONS] /PATH/FILE&lt;/strong>
OPTIONS:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>-f&lt;/strong> # 指定被处理的文件（在所有选项里一定要放最后一个，否则会报错）&lt;/li>
&lt;li>&lt;strong>-x&lt;/strong> # 解包文件&lt;/li>
&lt;li>&lt;strong>-c&lt;/strong> # 打包文件&lt;/li>
&lt;li>&lt;strong>-C, &amp;ndash;directory=&amp;lt;DIR&amp;gt;&lt;/strong># 解包到指定目录&lt;/li>
&lt;li>&lt;strong>-v&lt;/strong> # 显示执行命令时的详细过程&lt;/li>
&lt;li>&lt;strong>-t&lt;/strong> # 查看已经打包的文件中的内容&lt;/li>
&lt;li>&lt;strong>-z&lt;/strong> # 通过 gzip 指令处理打包的文件；&lt;/li>
&lt;li>&lt;strong>&amp;ndash;strip-components NUM&lt;/strong> # 去除前缀目录，i.e.默认会自动创建与压缩包同名的目录来存放压缩包内的文件，当 NUM 为 1 时，则不再创建该目录，直接将压缩包内的文件全部解压到当前目录&lt;/li>
&lt;/ul>
&lt;p>EXAMPLE:&lt;/p>
&lt;ul>
&lt;li>tar -zcvf xxx.tar.gz /tmp/test/* # 把/tmp/test/下所有的文件和目录都打包并压缩成 xxx.tar.gz&lt;/li>
&lt;li>tar -zxvf xxx.tar.gz [-C /XXX] # 解压 xxx.tar.gz 文件（加-C /tmp/test2/ 指定解压缩的路径，解压缩到/tmp/test2/目录下）&lt;/li>
&lt;li>tar -tvf xxx.tar.gz # 不解包查看压缩文件里有哪些文件和目录&lt;/li>
&lt;li>zcat xxx.tar.gz # 读取打包文件的内容等详细信息&lt;/li>
&lt;/ul>
&lt;h1 id="gzip">gzip&lt;a class="td-heading-self-link" href="#gzip" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>命令用来压缩文件。gzip 是个使用广泛的压缩程序，文件经它压缩过后，其名称后面会多处“.gz”扩展名。&lt;/p>
&lt;p>gzip 是在 Linux 系统中经常使用的一个对文件进行压缩和解压缩的命令，既方便又好用。gzip 不仅可以用来压缩大的、较少使用的文件以节省磁盘空间，还可以和 tar 命令一起构成 Linux 操作系统中比较流行的压缩文件格式。据统计，gzip 命令对文本文件有 60%～ 70%的压缩率。减少文件大小有两个明显的好处，一是可以减少存储空间，二是通过网络传输文件时，可以减少传输的时间。&lt;/p>
&lt;h2 id="syntax语法-1">Syntax(语法)&lt;a class="td-heading-self-link" href="#syntax%e8%af%ad%e6%b3%95-1" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;strong>gzip [OPTIONS] /PATH/FILE&lt;/strong>&lt;/p>
&lt;p>&lt;strong>OPTINOS&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>-l&lt;/strong> # 列出压缩文件的详细信息&lt;/li>
&lt;li>&lt;strong>-d&lt;/strong> # 解开压缩文件&lt;/li>
&lt;li>&lt;strong>-n&lt;/strong> # 压缩文件时，不保存原来的文件名称及时间戳记；&lt;/li>
&lt;li>&lt;strong>-N&lt;/strong> # 压缩文件时，保存原来的文件名称及时间戳记&lt;/li>
&lt;li>&lt;strong>-r&lt;/strong># 递归处理，将指定目录下的所有文件及子目录一并处理，该处理方式是把文件夹下的每一个文件都压缩成一个新的文件，不是对目录整体进行，注意与 tar 的区别&lt;/li>
&lt;li>&lt;strong>-v&lt;/strong> # 显示指令执行过程&lt;/li>
&lt;li>-&amp;lt;压缩效率&amp;gt;：压缩效率是一个介于 1~9 的数值，默认值为 6，指定越大的数值，压缩效率就会越高&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>EXAMPLE&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/xft64c/1616166289989-3b7ed972-966f-410f-a3e8-78d2e6836881.jpeg" alt="">&lt;/p>
&lt;ul>
&lt;li>gzip -r .backup # 递归压缩.backup 目录下的所有文件以及子目录的文件，效果如右图所示，压缩只能对单个文件压缩，注意与 tar 打包命令的区别&lt;/li>
&lt;/ul>
&lt;h1 id="常见问题">常见问题&lt;a class="td-heading-self-link" href="#%e5%b8%b8%e8%a7%81%e9%97%ae%e9%a2%98" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>当我们在 Linux 中使用绝对路径归档文件时，会出现如下提示：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ tar -zcvf test.tar.gz /mnt/d/Projects/DesistDaydream/go-learning/test_files
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tar: Removing leading &lt;span style="color:#4e9a06">`&lt;/span>/&lt;span style="color:#a40000">&amp;#39;&lt;/span> from member names
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>tar 工具会提示我们将开头的 &lt;code>/&lt;/code> 移除，这是出于安全考虑，如果我们使用绝对路径归档文件，当我们提取这些文件时，就会覆盖原本的文件，这有可能会产生很严重的影响&lt;/p>
&lt;h1 id="通过其他工具查看-targz-中的内容">通过其他工具查看 tar.gz 中的内容&lt;a class="td-heading-self-link" href="#%e9%80%9a%e8%bf%87%e5%85%b6%e4%bb%96%e5%b7%a5%e5%85%b7%e6%9f%a5%e7%9c%8b-targz-%e4%b8%ad%e7%9a%84%e5%86%85%e5%ae%b9" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>得益于 Linux 社区，有很多命令行工具可以来达成上面的目标。下面就让我们来看看使用它们的一些示例。&lt;/p>
&lt;h2 id="使用-vim-工具">使用 vim 工具&lt;a class="td-heading-self-link" href="#%e4%bd%bf%e7%94%a8-vim-%e5%b7%a5%e5%85%b7" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>vim 不只是一个编辑器，使用它我们可以干很多事情。下面的命令展示的是在没有解压的情况下使用 vim 查看一个压缩的归档文件的内容：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&amp;#34; tar.vim version v29
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span> Browsing tarfile /root/projects/keepalived-ehualu-2.0.20.tar.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&amp;#34; Select a file with cursor and press ENTER
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">keepalived/
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">keepalived/config/
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">keepalived/config/check_ports.sh
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">keepalived/config/keepalived.conf
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">keepalived/docker-compose-backup.yaml
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">keepalived/docker-compose-master.yaml
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">keepalived/README.md
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>无需解压如何查看一个归档或压缩文件的内容无需解压如何查看一个归档或压缩文件的内容&lt;/p>
&lt;p>你甚至还可以浏览归档文件的内容，打开其中的文本文件（假如有的话）。要打开一个文本文件，只需要用方向键将鼠标的游标放置到文件的前面，然后敲 ENTER 键来打开它。&lt;/p>
&lt;h2 id="使用-tar-命令">使用 tar 命令&lt;a class="td-heading-self-link" href="#%e4%bd%bf%e7%94%a8-tar-%e5%91%bd%e4%bb%a4" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>为了列出一个 tar 归档文件的内容，可以运行：&lt;/p>
&lt;p>$ tar -tf ostechnix.tar
ostechnix/
ostechnix/image.jpg
ostechnix/file.pdf
ostechnix/song.mp3&lt;/p>
&lt;p>或者使用-v 选项来查看归档文件的具体属性，例如它的文件所有者、属组、创建日期等等。
$ tar -tvf ostechnix.tar
drwxr-xr-x sk/users 0 2018-07-02 19:30 ostechnix/
-rw-r&amp;ndash;r&amp;ndash; sk/users 53632 2018-06-29 15:57 ostechnix/image.jpg
-rw-r&amp;ndash;r&amp;ndash; sk/users 156831 2018-06-04 12:37 ostechnix/file.pdf
-rw-r&amp;ndash;r&amp;ndash; sk/users 9702219 2018-04-25 20:35 ostechnix/song.mp3&lt;/p>
&lt;h2 id="使用-rar-命令">使用 rar 命令&lt;a class="td-heading-self-link" href="#%e4%bd%bf%e7%94%a8-rar-%e5%91%bd%e4%bb%a4" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>要查看一个 rar 文件的内容，只需要执行：&lt;/p>
&lt;p>$ rar v ostechnix.rar
RAR 5.60 Copyright (c) 1993-2018 Alexander Roshal 24 Jun 2018
Trial version Type &amp;lsquo;rar -?&amp;rsquo; for help
Archive: ostechnix.rar
Details: RAR 5
Attributes Size Packed Ratio Date Time Checksum Name&lt;/p>
&lt;hr>
&lt;p>rw-r&amp;ndash;r&amp;ndash; 53632 52166 97% 2018-06-29 15:57 70260AC4 ostechnix/image.jpg
-rw-r&amp;ndash;r&amp;ndash; 156831 139094 88% 2018-06-04 12:37 C66C545E ostechnix/file.pdf
-rw-r&amp;ndash;r&amp;ndash; 9702219 9658527 99% 2018-04-25 20:35 DD875AC4 ostechnix/song.mp3&lt;/p>
&lt;hr>
&lt;p>9912682 9849787 99% 3&lt;/p>
&lt;h2 id="使用-unrar-命令">使用 unrar 命令&lt;a class="td-heading-self-link" href="#%e4%bd%bf%e7%94%a8-unrar-%e5%91%bd%e4%bb%a4" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>你也可以使用带有 l 选项的 unrar 来做到与上面相同的事情，展示如下：&lt;/p>
&lt;p>$ unrar l ostechnix.rar
UNRAR 5.60 freeware Copyright (c) 1993-2018 Alexander Roshal
Archive: ostechnix.rar
Details: RAR 5
Attributes Size Date Time Name&lt;/p>
&lt;hr>
&lt;p>rw-r&amp;ndash;r&amp;ndash; 53632 2018-06-29 15:57 ostechnix/image.jpg
-rw-r&amp;ndash;r&amp;ndash; 156831 2018-06-04 12:37 ostechnix/file.pdf
-rw-r&amp;ndash;r&amp;ndash; 9702219 2018-04-25 20:35 ostechnix/song.mp3&lt;/p>
&lt;hr>
&lt;p>9912682 3&lt;/p>
&lt;h2 id="使用-zip-命令">使用 zip 命令&lt;a class="td-heading-self-link" href="#%e4%bd%bf%e7%94%a8-zip-%e5%91%bd%e4%bb%a4" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>为了查看一个 zip 文件的内容而无需解压它，可以使用下面的 zip 命令：
$ zip -sf ostechnix.zip
Archive contains:
Life advices.jpg
Total 1 entries (597219 bytes)&lt;/p>
&lt;h2 id="使用-unzip-命令">使用 unzip 命令&lt;a class="td-heading-self-link" href="#%e4%bd%bf%e7%94%a8-unzip-%e5%91%bd%e4%bb%a4" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>你也可以像下面这样使用 -l 选项的 unzip 命令来呈现一个 zip 文件的内容：
$ unzip -l ostechnix.zip
Archive: ostechnix.zip
Length Date Time Name&lt;/p>
&lt;hr>
&lt;p>597219 2018-04-09 12:48 Life advices.jpg&lt;/p>
&lt;hr>
&lt;p>597219 1 file&lt;/p>
&lt;h2 id="使用-zipinfo-命令">使用 zipinfo 命令&lt;a class="td-heading-self-link" href="#%e4%bd%bf%e7%94%a8-zipinfo-%e5%91%bd%e4%bb%a4" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>$ zipinfo ostechnix.zip
Archive: ostechnix.zip
Zip file size: 584859 bytes, number of entries: 1
-rw-r&amp;ndash;r&amp;ndash; 6.3 unx 597219 bx defN 18-Apr-09 12:48 Life advices.jpg
1 file, 597219 bytes uncompressed, 584693 bytes compressed: 2.1%&lt;/p>
&lt;p>如你所见，上面的命令展示了一个 zip 文件的内容、它的权限、创建日期和压缩百分比等等信息。&lt;/p>
&lt;h2 id="使用-zcat-命令">使用 zcat 命令&lt;a class="td-heading-self-link" href="#%e4%bd%bf%e7%94%a8-zcat-%e5%91%bd%e4%bb%a4" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>要一个压缩的归档文件的内容而不解压它，使用 zcat 命令，我们可以得到：
$ zcat ostechnix.tar.gz
zcat 和 gunzip -c 命令相同。所以你可以使用下面的命令来查看归档或者压缩文件的内容：
$ gunzip -c ostechnix.tar.gz&lt;/p>
&lt;h2 id="使用-zless-命令">使用 zless 命令&lt;a class="td-heading-self-link" href="#%e4%bd%bf%e7%94%a8-zless-%e5%91%bd%e4%bb%a4" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>要使用 zless 命令来查看一个归档或者压缩文件的内容，只需：
$ zless ostechnix.tar.gz&lt;/p>
&lt;p>这个命令类似于 less 命令，它将一页一页地展示其输出。&lt;/p>
&lt;h2 id="使用-less-命令">使用 less 命令&lt;a class="td-heading-self-link" href="#%e4%bd%bf%e7%94%a8-less-%e5%91%bd%e4%bb%a4" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>可能你已经知道 less 命令可以打开文件来交互式地阅读它，并且它支持滚动和搜索。&lt;/p>
&lt;p>运行下面的命令来使用 less 命令查看一个归档或者压缩文件的内容：&lt;/p>
&lt;p>$ less ostechnix.tar.gz&lt;/p></description></item><item><title>Docs: 文件与文件系统管理工具</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E6%96%87%E4%BB%B6%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E6%96%87%E4%BB%B6%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E6%96%87%E4%BB%B6%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E6%96%87%E4%BB%B6%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</guid><description>
&lt;h1 id="ls---列出有关文件的信息默认情况下为当前目录所有文件">ls - 列出有关文件的信息(默认情况下为当前目录所有文件)&lt;a class="td-heading-self-link" href="#ls---%e5%88%97%e5%87%ba%e6%9c%89%e5%85%b3%e6%96%87%e4%bb%b6%e7%9a%84%e4%bf%a1%e6%81%af%e9%bb%98%e8%ae%a4%e6%83%85%e5%86%b5%e4%b8%8b%e4%b8%ba%e5%bd%93%e5%89%8d%e7%9b%ae%e5%bd%95%e6%89%80%e6%9c%89%e6%96%87%e4%bb%b6" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man1/ls.1.html">Manual(手册)，ls(1)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man1/ls.1p.html">Manual(手册)，ls(1p)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.gnu.org/software/coreutils/manual/html_node/ls-invocation.html">GNU 官方文档，软件-coreutils-手册-10 目录列表-ls&lt;/a>&lt;/li>
&lt;li>包含在 &lt;a href="https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux%20%E7%AE%A1%E7%90%86/Linux%20%E7%AE%A1%E7%90%86.md#Coreutils">Coreutils&lt;/a>工具集&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h2 id="syntax语法">Syntax(语法)&lt;a class="td-heading-self-link" href="#syntax%e8%af%ad%e6%b3%95" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;strong>ls [OPTIONS]&amp;hellip; [FILE]&amp;hellip;&lt;/strong>&lt;/p>
&lt;h3 id="options">OPTIONS&lt;a class="td-heading-self-link" href="#options" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>影响列出哪些文件的选项&lt;/p>
&lt;blockquote>
&lt;p>参考：&lt;a href="https://www.gnu.org/software/coreutils/manual/html_node/Which-files-are-listed.html">https://www.gnu.org/software/coreutils/manual/html_node/Which-files-are-listed.html&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>&lt;strong>-a, &amp;ndash;all&lt;/strong> # 不要忽略以 &lt;code>.&lt;/code> 符号开头的条目&lt;/li>
&lt;/ul>
&lt;p>影响列出的文件包含哪些信息的选项&lt;/p>
&lt;blockquote>
&lt;p>参考：&lt;a href="https://www.gnu.org/software/coreutils/manual/html_node/What-information-is-listed.html">https://www.gnu.org/software/coreutils/manual/html_node/What-information-is-listed.html&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>&lt;strong>&amp;ndash;full-time&lt;/strong> # 显示时间的完整格式&lt;/li>
&lt;li>&lt;strong>-h, &amp;ndash;human-readable&lt;/strong> # 将 size 列信息变为人类可读的格式。&lt;/li>
&lt;li>&lt;strong>-i, &amp;ndash;inode&lt;/strong> # 显示文件的 inode 号。显示在最左侧。&lt;/li>
&lt;li>&lt;strong>-l&lt;/strong> # 输出更多的信息。每列信息所代表的含义详见 《&lt;a href="https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Kernel/Filesystem/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86.md">文件管理&lt;/a>》章节&lt;/li>
&lt;li>&lt;strong>-Z, &amp;ndash;context&lt;/strong> # 显示 SELinux 安全上下文，若该文件不受 SELinux 影响，则显示 &lt;code>?&lt;/code>。&lt;/li>
&lt;/ul>
&lt;p>对输出的信息进行排序的选项&lt;/p>
&lt;blockquote>
&lt;p>参考：&lt;a href="https://www.gnu.org/software/coreutils/manual/html_node/Sorting-the-output.html">https://www.gnu.org/software/coreutils/manual/html_node/Sorting-the-output.html&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>&lt;strong>-r&lt;/strong> # 对列出的内容反向排序&lt;/li>
&lt;li>&lt;strong>&amp;ndash;sort=WORD&lt;/strong> # 按照 WORD 排序，而不是以文件的名称排序。
&lt;ul>
&lt;li>size # 以文件大小排序。等同于 -S 选项&lt;/li>
&lt;li>time # 以时间排序。等同于 -t 选项&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>-c&lt;/strong> # 显示文件的 ctime，并按照 ctime 排序&lt;/li>
&lt;li>&lt;strong>-u&lt;/strong> # 显示文件的 atime，并按照 atime 排序&lt;/li>
&lt;/ul>
&lt;p>影响输出信息的格式&lt;/p>
&lt;blockquote>
&lt;p>参考：&lt;a href="https://www.gnu.org/software/coreutils/manual/html_node/General-output-formatting.html">https://www.gnu.org/software/coreutils/manual/html_node/General-output-formatting.html&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>&lt;strong>&amp;ndash;color[=WHEN]&lt;/strong> # 用色彩辨别文件类型。WHEN 可以是&amp;rsquo;never&amp;rsquo;、&amp;lsquo;always&amp;rsquo;或&amp;rsquo;auto&amp;rsquo;其中之一
&lt;ul>
&lt;li>白色：表示普通文件&lt;/li>
&lt;li>蓝色：表示目录&lt;/li>
&lt;li>绿色：表示可执行文件&lt;/li>
&lt;li>红色：表示压缩文件&lt;/li>
&lt;li>浅蓝色：链接文件&lt;/li>
&lt;li>红色闪烁：表示链接的文件有问题&lt;/li>
&lt;li>黄色：表示设备文件&lt;/li>
&lt;li>灰色：表示其它文件&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="example">EXAMPLE&lt;a class="td-heading-self-link" href="#example" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>查看文件夹下的文件个数(当前目录的文件数)
&lt;ul>
&lt;li>ls -l | grep &amp;ldquo;^-&amp;rdquo; | wc -l&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="stat---显示文件或文件系统的状态">stat - 显示文件或文件系统的状态&lt;a class="td-heading-self-link" href="#stat---%e6%98%be%e7%a4%ba%e6%96%87%e4%bb%b6%e6%88%96%e6%96%87%e4%bb%b6%e7%b3%bb%e7%bb%9f%e7%9a%84%e7%8a%b6%e6%80%81" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># stat anaconda-ks.cfg&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> File: ‘anaconda-ks.cfg’
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Size: &lt;span style="color:#0000cf;font-weight:bold">1594&lt;/span> Blocks: &lt;span style="color:#0000cf;font-weight:bold">8&lt;/span> IO Block: &lt;span style="color:#0000cf;font-weight:bold">4096&lt;/span> regular file
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Device: fd00h/64768d Inode: &lt;span style="color:#0000cf;font-weight:bold">67155554&lt;/span> Links: &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Access: &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>0600/-rw-------&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> Uid: &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span> 0/ root&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> Gid: &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span> 0/ root&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Access: 2019-05-24 09:01:18.293000000 +0800
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Modify: 2019-05-24 09:01:18.296000000 +0800
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Change: 2019-05-24 09:01:18.296000000 +0800 Birth: -
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="ln---在文件之间建立软硬链接">ln - 在文件之间建立(软/硬)链接&lt;a class="td-heading-self-link" href="#ln---%e5%9c%a8%e6%96%87%e4%bb%b6%e4%b9%8b%e9%97%b4%e5%bb%ba%e7%ab%8b%e8%bd%af%e7%a1%ac%e9%93%be%e6%8e%a5" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man1/ln.1.html">Manual(手册)，ln(1)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>ln 工具用来在文件之间建立 links(链接)&lt;/p>
&lt;h2 id="syntax语法-1">Syntax(语法)&lt;a class="td-heading-self-link" href="#syntax%e8%af%ad%e6%b3%95-1" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;strong>ln [OPTIONS] SourceFILE DestinationFILE&lt;/strong>&lt;/p>
&lt;p>OPTIONS&lt;/p>
&lt;ul>
&lt;li>&lt;strong>-s, &amp;ndash;symbolic&lt;/strong> # 使用软连接。默认为硬连接&lt;/li>
&lt;/ul>
&lt;h2 id="example-1">EXAMPLE&lt;a class="td-heading-self-link" href="#example-1" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>ln -s /bin /usr/bin&lt;/li>
&lt;/ul>
&lt;h1 id="file---检查并显示文件的类型">file - 检查并显示文件的类型&lt;a class="td-heading-self-link" href="#file---%e6%a3%80%e6%9f%a5%e5%b9%b6%e6%98%be%e7%a4%ba%e6%96%87%e4%bb%b6%e7%9a%84%e7%b1%bb%e5%9e%8b" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man1/file.1.html">Manual(手册)，file(1)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h2 id="syntax语法-2">Syntax(语法)&lt;a class="td-heading-self-link" href="#syntax%e8%af%ad%e6%b3%95-2" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;strong>file [-bchiklLNnprsvz0] [&amp;ndash;apple] [&amp;ndash;mime-encoding] [&amp;ndash;mime-type] [-e testname] [-F separator] [-f namefile] [-m magicfiles] file &amp;hellip;&lt;/strong>
&lt;strong>file -C [-m magicfiles]&lt;/strong>
&lt;strong>file [&amp;ndash;help]&lt;/strong>&lt;/p>
&lt;p>&lt;strong>OPTIONS&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>-&lt;strong>s, &amp;ndash;special-files&lt;/strong> # 通常，file 仅尝试读取和确定 stat(2) 报告为普通文件的参数文件的类型。这可以防止出现问题，因为读取特殊文件可能会产生特殊的后果。指定 -s 选项会导致 file 还读取作为块或字符特殊文件的参数文件。
&lt;ul>
&lt;li>&lt;strong>这对于确定原始磁盘分区中数据的文件系统类型非常有用(blkid 命令也可以获取文件系统类型)&lt;/strong>，这些数据是块特殊文件。此选项还会导致 file 忽略 stat(2) 报告的文件大小，因为在某些系统上它报告原始磁盘分区的大小为零。效果如下：&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>root@kzt241 mnt&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># file /dev/dm-2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/dev/dm-2: block special &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>253/2&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>root@kzt241 mnt&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># file -s /dev/dm-2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/dev/dm-2: SGI XFS filesystem data &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>blksz 4096, inosz 512, v2 &lt;span style="color:#204a87">dirs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="example-2">EXAMPLE&lt;a class="td-heading-self-link" href="#example-2" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>检查并显示当前目录下所有文件
&lt;ul>
&lt;li>&lt;strong>file *&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="cp---复制文件和目录">cp - 复制文件和目录&lt;a class="td-heading-self-link" href="#cp---%e5%a4%8d%e5%88%b6%e6%96%87%e4%bb%b6%e5%92%8c%e7%9b%ae%e5%bd%95" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man1/cp.1.html">Manual(手册)，cp(1)&lt;/a>&lt;/li>
&lt;li>包含在 &lt;a href="https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux%20%E7%AE%A1%E7%90%86/Linux%20%E7%AE%A1%E7%90%86.md#Coreutils">Coreutils&lt;/a> 工具集&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;strong>cp [OPTIONS] SOURCE DEST&lt;/strong>&lt;/p>
&lt;p>将 SOURCE 复制到 DEST&lt;/p>
&lt;p>OPTIONS&lt;/p>
&lt;ul>
&lt;li>&lt;strong>-a, &amp;ndash;archive&lt;/strong> # 等同于 &lt;code>-dR --presserver=all&lt;/code> 这几个选项的集合体&lt;/li>
&lt;li>&lt;strong>-d&lt;/strong> # 与 &amp;ndash;no-dereference &amp;ndash;preserve=links 相同&lt;/li>
&lt;li>&lt;strong>-P, &amp;ndash;no-dereference&lt;/strong> # 不追踪符号链接。也就是复制符号链接时，复制其本身，而不复制链接目标。&lt;/li>
&lt;li>&lt;strong>&amp;ndash;preserve &amp;lt;ATTR&amp;gt;&lt;/strong> # 保留 SOURCE 的指定属性，多个属性以逗号分隔。&lt;code>默认值：mode,ownership,timestamps&lt;/code>。
&lt;ul>
&lt;li>ATTR 还可以有 context、links、xattr、all。all 表示表示保留所有属性&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>-r, -R, &amp;ndash;recursive&lt;/strong> # 递归得复制目录&lt;/li>
&lt;li>&lt;strong>-v, &amp;ndash;verbose&lt;/strong> # 显示复制进度&lt;/li>
&lt;li>&lt;strong>-x, &amp;ndash;one-file-system&lt;/strong> # 留在这个文件系统上&lt;/li>
&lt;/ul>
&lt;p>EXAMPLE&lt;/p>
&lt;ul>
&lt;li>完全全复制，包括源文件的属性、权限等等
&lt;ul>
&lt;li>&lt;strong>cp -ax&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="mv---移动文件和目录">mv - 移动文件和目录&lt;a class="td-heading-self-link" href="#mv---%e7%a7%bb%e5%8a%a8%e6%96%87%e4%bb%b6%e5%92%8c%e7%9b%ae%e5%bd%95" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man1/mv.1.html">Manual(手册)，mv(1)&lt;/a>&lt;/li>
&lt;li>包含在 &lt;a href="https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux%20%E7%AE%A1%E7%90%86/Linux%20%E7%AE%A1%E7%90%86.md#Coreutils">Coreutils&lt;/a> 工具集&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h2 id="syntax语法-3">Syntax(语法)&lt;a class="td-heading-self-link" href="#syntax%e8%af%ad%e6%b3%95-3" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;strong>mv [OPTION] SOURCE DIRECTORY&lt;/strong>&lt;/p>
&lt;p>&lt;strong>OPTIONS&lt;/strong>&lt;/p>
&lt;h1 id="tree---以树状格式列出目录的内容">tree - 以树状格式列出目录的内容&lt;a class="td-heading-self-link" href="#tree---%e4%bb%a5%e6%a0%91%e7%8a%b6%e6%a0%bc%e5%bc%8f%e5%88%97%e5%87%ba%e7%9b%ae%e5%bd%95%e7%9a%84%e5%86%85%e5%ae%b9" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/Old-Man-Programmer/tree">GitHab 项目，Old-Man-Programmer/tree&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://mama.indstate.edu/users/ice/tree/tree.1.html">官方 Manual，tree(1)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>安装方式：&lt;strong>yum install -y tree&lt;/strong>&lt;/p>
&lt;h2 id="syntax语法-4">Syntax(语法)&lt;a class="td-heading-self-link" href="#syntax%e8%af%ad%e6%b3%95-4" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;strong>tree [-acdfghilnpqrstuvxACDFQNSUX] [-L level [-R]] [-H baseHREF] [-T title] [-o filename] [&amp;ndash;nolinks] [-P pattern] [-I pattern] [&amp;ndash;inodes] [&amp;ndash;device] [&amp;ndash;noreport] [&amp;ndash;dirsfirst] [&amp;ndash;version] [&amp;ndash;help] [&amp;ndash;filelimit #] [&amp;ndash;si] [&amp;ndash;prune] [&amp;ndash;du] [&amp;ndash;timefmt format] [directory &amp;hellip;]&lt;/strong>&lt;/p>
&lt;p>&lt;strong>OPTIONS&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>-d&lt;/strong> # 仅列出目录&lt;/li>
&lt;li>&lt;strong>-F&lt;/strong> #&lt;/li>
&lt;li>-&lt;strong>L INT&lt;/strong> # 目录树的最大显示深度是 NUM 层。NUM 为 1 则只显示指定目录下的文件信息，为 2 则包括第一层子目录下的信息的也显示，以此类推&lt;/li>
&lt;/ul>
&lt;h2 id="example-3">EXAMPLE&lt;a class="td-heading-self-link" href="#example-3" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;h1 id="realpath---获取文件的绝对路径">realpath - 获取文件的绝对路径&lt;a class="td-heading-self-link" href="#realpath---%e8%8e%b7%e5%8f%96%e6%96%87%e4%bb%b6%e7%9a%84%e7%bb%9d%e5%af%b9%e8%b7%af%e5%be%84" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man1/realpath.1.html">Manual(手册)，realpath(1)&lt;/a>&lt;/li>
&lt;li>包含在 &lt;a href="https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux%20%E7%AE%A1%E7%90%86/Linux%20%E7%AE%A1%E7%90%86.md#Coreutils">Coreutils&lt;/a> 工具集&lt;/li>
&lt;/ul>
&lt;/blockquote></description></item></channel></rss>