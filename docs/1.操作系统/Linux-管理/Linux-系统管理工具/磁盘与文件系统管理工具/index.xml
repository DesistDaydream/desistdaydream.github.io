<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>磁盘与文件系统管理工具 on 断念梦的站点</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E7%A3%81%E7%9B%98%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</link><description>Recent content in 磁盘与文件系统管理工具 on 断念梦的站点</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E7%A3%81%E7%9B%98%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/index.xml" rel="self" type="application/rss+xml"/><item><title>文件系统管理工具</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E7%A3%81%E7%9B%98%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E7%A3%81%E7%9B%98%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</guid><description>概述 参考
mkfs 与 mke2fs 用于在磁盘设备上创建 LInux 文件系统，也就是将分区格式化。
dumpe2fs 与 xfs_info 是相似的工具，分别对应 ext 和 xfs 文件系统的信息查看
mkfs 参考：
Manual(手册)，mkfs(8) 纯 mkfs 已弃用，使用 mkfs.TYPE 来创建指定类型的文件系统而不用 -t 选项了。事实上，mkfs 只是 Linux 下各种 Filesystem Builder(文件系统构建器) 的前端，仅通过 mkfs.TYPE 来调用各种特定于各种文件系统的构建器程序
比如 mkfs.ext4 就相当于调用了 EXT4 文件系统的构建器，即 mke2fs 命令。mkfs 默认调用的是 ext2 的构建器。
mke2fs 参考：
Manual(手册)，mke2fs(8) Manual(手册)，mke2fs.conf(5) mke2fs 由 mkfs.ext2、mkfs.ext3、mkfs.ext4 调用。
关联文件与配置 /etc/mke2fs.conf # 控制 mke2fs 命令创建 EXT 文件系统时使用的默认参数。这些默认参数值会被命令行参数指定的值覆盖。
简单示例：
有全局默认值，以及为不同文件系统类型设定的默认值。
[defaults] base_features = sparse_super,filetype,resize_inode,dir_index blocksize = 4096 inode_size = 256 inode_ratio = 16384 [fs_types] ext3 = { features = has_journal } ext4 = { features = extents,flex_bg inode_size = 256 } small = { blocksize = 1024 inode_ratio = 4096 } floppy = { features = ^resize_inode blocksize = 1024 inode_size = 128 } Syntax(语法) mke2fs [OPTIONS]</description></item><item><title>最佳实践</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E7%A3%81%E7%9B%98%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E7%A3%81%E7%9B%98%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</guid><description>概述 基本新硬盘操作 创建 GPT 格式的分区表 parted /dev/vdb mktable gpt 为 /dev/vdb 创建一个主分区，大小是该磁盘的 0% 到 100%，设置名称为 data1 parted /dev/vdb mkpart data1 0% 100% 注意：尽量使用 % 来标识磁盘分区大小，否则会提示磁盘分区未对齐。若是显示命令无法显示百分比，则通过 unit 子命令将单位转换为 % 为 /dev/vdb1 创建 xfs 文件系统 mkfs.xfs /dev/vdb1 挂载文件系统 mount /dev/vdb1 /mnt/test 为新磁盘创建 LVM # 创建 GPT 格式的分区表 parted /dev/vdb mktable gpt # 为/dev/vdb分一个主分区，大小是该磁盘的0%到100% parted /dev/vdb mkpart lvm 0% 100% # 创建 PV pvcreate /dev/vdb1 # 创建 VG vgcreate vg-data /dev/vdb1 # 创建 LV lvcreate -l 100%FREE -n lv0 vg-data # 为 /dev/mapper/vg--data-lv0 创建 xfs 文件系统 mkfs.</description></item><item><title>dd 生成指定大小的文件</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E7%A3%81%E7%9B%98%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/dd-%E7%94%9F%E6%88%90%E6%8C%87%E5%AE%9A%E5%A4%A7%E5%B0%8F%E7%9A%84%E6%96%87%E4%BB%B6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E7%A3%81%E7%9B%98%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/dd-%E7%94%9F%E6%88%90%E6%8C%87%E5%AE%9A%E5%A4%A7%E5%B0%8F%E7%9A%84%E6%96%87%E4%BB%B6/</guid><description>概述 Syntax(语法) 参考:
https://blog.csdn.net/menogen/article/details/38059671 dd [OPTIONS[=FLAGS]]
OPTIONS
bs=BYTES # 每次读取和写入的字节数 cbs=BYTES # convert BYTES bytes at a time conv=CONVS # convert the file as per the comma separated symbol list count=N # 读取的 block 数，block 的大小由 ibs 指定（只针对输入参数） ibs=BYTES # read up to BYTES bytes at a time (default: 512) if=FILE # 指定输入文件。默认从标准输入读取。 /dev/zero 是 Linux 的一个伪文件，它可以产生连续不断的 null 流（二进制的 0） iflag(FLAGS) # 使用 FLAGS 来控制输入(读取数据)时的行为特征。多个 FLAG 以 , 分隔 obs=BYTES # write BYTES bytes at a time (default: 512) of=FILE # 指定输出文件。默认输出到标准输出。 oflag=FLAGS # 使用 iflag 来控制输出(写入数据)时的行为特征。多个 FLAG 以 , 分隔 seek=N # skip N obs-sized blocks at start of output skip=N # skip N ibs-sized blocks at start of input status=LEVEL # The LEVEL of information to print to stderr; &amp;rsquo;none&amp;rsquo; suppresses everything but error messages, &amp;rsquo;noxfer&amp;rsquo; suppresses the final transfer statistics, &amp;lsquo;progress&amp;rsquo; shows periodic transfer statistics FLAGS append # 追加模式(仅对输出有意义；隐含了 conv=notrunc) direct # 使用直接 I/O 存取模式，即跳过缓存，不操作内存，而是直接操作磁盘 directory # 除非是目录，否则 directory 失败 dsync # 使用同步 I/O 存取模式 sync # 与上者类似，但同时也对元数据生效 fullblock # 为输入积累完整块(仅 iflag) nonblock # 使用无阻塞 I/O 存取模式 noatime # 不更新存取时间 nocache # 丢弃缓存数据 noctty # 不根据文件指派控制终端 nofollow # 不跟随链接文件 EXAMPLE 测试当前磁盘 写入文件 的速度 dd if=/dev/zero of=testdd bs=1M count=1000 测试当前磁盘 纯写入文件 的速度，即不使用缓存 dd if=/dev/zero of=testdd bs=1M count=1024 oflag=sync,direct,nonblock 测试当前磁盘 纯读取文件 的速度，即不使用缓存 dd if=testdd of=/dev/null bs=1M count=1024 iflag=sync,direct,nonblock 测试 sdb 磁盘 的 写入速度。注意：要使用一块空盘，否则数据没了 dd if=/dev/urandom of=/dev/sdb1 bs=1M count=1024 测试 sdb 磁盘 的读取速度 dd if=/dev/sdb1 of=/dev/null bs=1M count=1024</description></item><item><title>pt-ioprofile</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E7%A3%81%E7%9B%98%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/pt-ioprofile/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E7%A3%81%E7%9B%98%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/pt-ioprofile/</guid><description>概述 参考：
官方文档 pt-ioprofile 是 Percona 出的 IO 查看工具。Percona 用来监视进程 IO 并打印文件和 I/O 活动表。
pt-ioprofile 本质上就是一个 shell 脚本，只做两件事：
通过 lsof 和 strace 两个工具获取指定进程的一段时间的数据，并保存到文件中 使用 awk 等工具聚合两个文件的内容。 pt-ioprofile 使用 strace 和 lsof 工具监视进程的 IO 并打印出一个文件和 I/O 活动表。默认情况下，它监视 mysqld 进程 30 秒。输出如下：
Tue Dec 27 15:33:57 PST 2011 Tracing process ID 1833 total read write lseek ftruncate filename 0.000150 0.000029 0.000068 0.000038 0.000015 /tmp/ibBE5opS read：从文件中读出数据。要读取的文件用文件描述符标识，数据读入一个事先定义好的缓冲区。 write：把缓冲区的数据写入文件中。 pread：由于 lseek 和 read 调用之间，内核可能会临时挂起进程，所以对同步问题造成了问题，调用 pread 相当于顺序调用了 lseek 和 read，这两个操作相当于一个捆绑的原子操作。 pwrite：由于 lseek 和 write 调用之间，内核可能会临时挂起进程，所以对同步问题造成了问题，调用 pwrite 相当于顺序调用了 lseek 和 write，这两个操作相当于一个捆绑的原子操作。 fsync：确保文件所有已修改的内容已经正确同步到硬盘上，该调用会阻塞等待直到设备报告 IO 完成。 open：打开一个文件，并返回这个文件的描述符。 close：close 系统调用用于“关闭”一个文件，close 调用终止一个文件描述符以其文件之间的关联。文件描述符被释放，并能够重新使用。 lseek：对文件描述符指定文件的读写指针进行设置，也就是说，它可以设置文件的下一个读写位置。 fcntl：针对(文件)描述符提供控制。 pt-ioprofile 通过使用 附加strace到进程来工作ptrace()，这将使其运行非常缓慢，直到strace分离。除了冻结服务器之外，还有一些风险，即进程在与服务器strace分离后崩溃或性能不佳，或者strace没有完全分离并使进程处于睡眠状态。因此，这应该被视为一种侵入性工具，除非您对此感到满意，否则不应在生产服务器上使用。</description></item><item><title>磁盘与文件系统管理工具</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E7%A3%81%E7%9B%98%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E7%A3%81%E7%9B%98%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E7%A3%81%E7%9B%98%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/%E7%A3%81%E7%9B%98%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</guid><description>概述 参考：
磁盘分区管理工具 Parted 参考：
GNU 官网-软件-parted Manual(手册)，parted(8) Parted 是一个 partition(分区) 操作程序，支持对 2T 以上硬盘的分区，支持 GTP 分区表，如果直接输入 parted 命令则进入 parted 工具，以交互式方式对 DEVICE 进行操作。
Parted 程序在 CentOS 和 Ubuntu 中都属于 parted 包，这个包中有两个程序，parted 与 partprobe
parted 程序可以在交互模式中运行，当 parted 运行在交互模式中时，对磁盘进行的操作，只有在执行 quit 命令后，才会将更新通知给 Linux 内核
Syntax(语法) parted [OPTIONS] [DEVICE [COMMAND [ARGUMENT&amp;hellip;]&amp;hellip;]]
OPTIONS
-a, &amp;ndash;align=[none|cyl|min|opt] # alignment for new partitions -l, &amp;ndash;list # 列出所有块设备上的分区布局，i.e.列出所有磁盘的分区 -m, &amp;ndash;machine # 与 -l 选项配合， 显示出机器可以解析的输出内容 -s, &amp;ndash;script # never prompts for user intervention COMMAND align-check &amp;lt;ALIGN-TYPE&amp;gt; &amp;lt;DEVICE&amp;gt; # 检查指定分区是否对齐</description></item></channel></rss>