<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux 硬件管理工具 on 断念梦的站点</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E7%A1%AC%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</link><description>Recent content in Linux 硬件管理工具 on 断念梦的站点</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E7%A1%AC%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/index.xml" rel="self" type="application/rss+xml"/><item><title>Linux 硬件管理工具</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E7%A1%AC%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/Linux-%E7%A1%AC%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E7%A1%AC%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/Linux-%E7%A1%AC%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</guid><description>概述 参考：
dmidecode
lshw 详见 lshw
lspci 详见: lspci
smartctl smartctl -a /dev/sda
网卡 mii-tool USB 管理工具 usbutils 参考：
GitHub 项目，gregkh/usbutils 官网 Manual(手册)，lsusb(8) 适用于 Linux 的 USB 实用程序，包括 lsusb。这是在 Linux 和 BSD 系统上使用的 USB 工具的集合，用于查询连接到系统的 USB 设备类型。这将在 USB 主机 (即您插入USB设备的机器) 上运行，而不是在 USB 设备 (即您插入USB主机的设备) 上运行。
包括如下几个工具
lsusb usb-devices usbhid-dump usbreset lsusb Syntax(语法) 列出系统上的USB总线和USB设备的详细信息。在输出中，您将看到USB控制器的制造商、型号和当前的状态。
sudo lshw -class bus -class usb 只查看有关USB设备的更详细信息
lshw -class usb 从文件中获取 Linux 硬件信息获取 参考：
jouyouyun 博客， Linux 硬件信息获取 在 linux 上可以通过 dmidecode 或是 lshw 来获取硬件信息，能够方便的查看系统配置。但它们的输出信息过多，解析起来有些麻烦，另外 lshw 对 usb 接口的网卡支持不好，显示的信息不够，所以在此整理下通过读文件或是一些简单命令来获取硬件信息的方法。</description></item><item><title>dmidecode</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E7%A1%AC%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/dmidecode/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E7%A1%AC%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/dmidecode/</guid><description>概述 参考：
官网 Wiki, dmidecode Manual(手册)，dmidecode dmidecode 命令可以让我们在 Linux 系统下获取有关硬件方面的信息。dmidecode 的作用是将 DMI 数据库中的信息解码，以可读的文本方式显示。由于 DMI 信息可以人为修改，因此里面的信息不一定是系统准确的信息。dmidecode 遵循 SMBIOS/DMI 标准，其输出的信息包括BIOS、系统、主板、处理器、内存、缓存等等。
dmidecode 附带三个额外的工具：
biosdecode 打印它能找到的所有 BIOS 相关信息（参见示例输出）； ownership 检索可以在 Compaq 计算机上设置的“所有权标签”； vpddecode 打印可以在几乎所有 IBM 计算机中找到的“重要产品数据”信息（参见 示例输出）。 DMI 类型 SMBIOS规范定义了以下DMI类型:
Type Information ──────────────────────────────────────────── 0 BIOS 1 System 2 Baseboard 3 Chassis 4 Processor 5 Memory Controller 6 Memory Module 7 Cache 8 Port Connector 9 System Slots 10 On Board Devices 11 OEM Strings 12 System Configuration Options 13 BIOS Language 14 Group Associations 15 System Event Log 16 Physical Memory Array 17 Memory Device 18 32-bit Memory Error 19 Memory Array Mapped Address 20 Memory Device Mapped Address 21 Built-in Pointing Device 22 Portable Battery 23 System Reset 24 Hardware Security 25 System Power Controls 26 Voltage Probe 27 Cooling Device 28 Temperature Probe 29 Electrical Current Probe 30 Out-of-band Remote Access 31 Boot Integrity Services 32 System Boot 33 64-bit Memory Error 34 Management Device 35 Management Device Component 36 Management Device Threshold Data 37 Memory Channel 38 IPMI Device 39 Power Supply 40 Additional Information 41 Onboard Devices Extended Information 42 Management Controller Host Interface Additionally, type 126 is used for disabled entries and type 127 is an end-of-table marker.</description></item><item><title>lshw</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E7%A1%AC%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/lshw/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E7%A1%AC%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/lshw/</guid><description>概述 参考：
参考：
GitHub 项目，lyonel/lshw 官网 lshw 是一个提供机器硬件配置详细信息的小工具。
lshw 输出的内容详解见：https://ezix.org/project/wiki/HardwareLiSter#Howtointerpretlshwsoutput
Syntax(语法) https://ezix.org/project/wiki/HardwareLiSter#Usage
lshw [FORMAT] [OPTIONS]
FORMAT
-X # 启用 GUI（如果可用的话） -html # 以 HTML 格式输出 -xml # 以 XML 格式输出 -json # 以 JSON 格式输出 -short # 打印硬件路径。 H/W path Device Class Description ====================================================== system Standard PC (i440FX + PIIX, 1996) /0 bus Motherboard /0/0 memory 96KiB BIOS /0/400 processor AMD EPYC 7542 32-Core Processor /0/401 processor AMD EPYC 7542 32-Core Processor /0/1000 memory 8GiB System Memory /0/1000/0 memory 8GiB DIMM RAM /0/100 bridge 440FX - 82441FX PMC [Natoma] /0/100/1 bridge 82371SB PIIX3 ISA [Natoma/Triton II] /0/100/1.</description></item><item><title>lspci</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E7%A1%AC%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/lspci/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E7%A1%AC%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/lspci/</guid><description>概述 参考：
Manual(手册)，lspci(8) GitHub 项目，pciutils/pciutils 官网 列出所有 PCI 设备。在列出的设备信息中，包含了一些供应商的名称、分类名称、etc. 信息。这些信息统一从 pci.ids 文件 文件中获取。
CentOS 包：pciutils
Ubuntu 包：pciutils
其中还有 setpci 工具用来配置 PCI 设备。
TODO: lspci 是如何从 Linux 中拿到 PCI 设备列表的？
Syntax(语法) lspci [OPTIONS]
OPTIONS 基本显示模式
-mm # 以机器可读的形式转储 PCI 设备数据，以便于脚本解析。 显示内容详见 详细格式，通常与 -v 一起使用 -m # 与 -mm 一样，但是向后兼容。不要在新代码中使用 展示内容相关选项
-v # 显示 PCI 设备的详细信息。多次使用 -v 可以显示更多信息，最多支持 3 个 v。 -k # 显示用于处理 PCI 设备的内核驱动以及能够处理ta的内核模块。在正常输出模式下若使用 -v 选项时默认打开 -k。 -D # 始终显示 PCI 的 Domain 部分。 选择指定设备选项</description></item></channel></rss>