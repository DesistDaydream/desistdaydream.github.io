<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦的站点 – Linux 管理案例</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E7%AE%A1%E7%90%86%E6%A1%88%E4%BE%8B/</link><description>Recent content in Linux 管理案例 on 断念梦的站点</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E7%AE%A1%E7%90%86%E6%A1%88%E4%BE%8B/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Linux 管理案例</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E7%AE%A1%E7%90%86%E6%A1%88%E4%BE%8B/Linux-%E7%AE%A1%E7%90%86%E6%A1%88%E4%BE%8B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E7%AE%A1%E7%90%86%E6%A1%88%E4%BE%8B/Linux-%E7%AE%A1%E7%90%86%E6%A1%88%E4%BE%8B/</guid><description>
&lt;h1 id="重置-linux-的-root-密码">重置 Linux 的 root 密码&lt;a class="td-heading-self-link" href="#%e9%87%8d%e7%bd%ae-linux-%e7%9a%84-root-%e5%af%86%e7%a0%81" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h2 id="进入紧急模式">进入紧急模式&lt;a class="td-heading-self-link" href="#%e8%bf%9b%e5%85%a5%e7%b4%a7%e6%80%a5%e6%a8%a1%e5%bc%8f" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>详见 &lt;a href="https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux%20%E7%AE%A1%E7%90%86/%E6%80%A7%E8%83%BD%E8%AF%84%E4%BC%B0%E4%B8%8E%E6%95%85%E9%9A%9C%E5%A4%84%E7%90%86/%E6%95%85%E9%9A%9C%E5%A4%84%E7%90%86/%E7%B4%A7%E6%80%A5%E6%A8%A1%E5%BC%8F%E6%88%96%E6%95%91%E6%8F%B4%E6%A8%A1%E5%BC%8F.md">紧急模式或救援模式&lt;/a>&lt;/p>
&lt;h2 id="修改密码">修改密码&lt;a class="td-heading-self-link" href="#%e4%bf%ae%e6%94%b9%e5%af%86%e7%a0%81" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>切换到原系统执行：&lt;code>chroot /sysroot/&lt;/code>&lt;/li>
&lt;li>更改 root 密码：&lt;code>passwd root&lt;/code>&lt;/li>
&lt;li>在/目录下创建一个.autorelabel 文件，而有这个文件存在，系统在重启时就会对整个文件系统进行 relabeling
&lt;ul>
&lt;li>&lt;code>touch /.autorelabel&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>exit&lt;/code>&lt;/li>
&lt;li>&lt;code>reboot&lt;/code>&lt;/li>
&lt;/ul>
&lt;h1 id="修改网卡名">修改网卡名&lt;a class="td-heading-self-link" href="#%e4%bf%ae%e6%94%b9%e7%bd%91%e5%8d%a1%e5%90%8d" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>centos 系统&lt;/p>
&lt;ul>
&lt;li>vi /etc/default/grub
&lt;ul>
&lt;li>GRUB_CMDLINE_LINUX=&amp;ldquo;net.ifnames=0 biosdevname=0 crashkernel=auto rd.lvm.lv=myvg/root rd.lvm.lv=myvg/swap rhgb quiet&amp;rdquo;&lt;/li>
&lt;li>注意，标红位置改为自己的 lvm 中 volume group 的名字&lt;/li>
&lt;li>主要就是添加紫色内容的字符串&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>grub2-mkconfig -o /boot/grub2/grub.cfg&lt;/li>
&lt;li>mv /etc/sysconfig/network-scripts/ifcfg-ens33 /etc/sysconfig/network-scripts/ifcfg-eth0&lt;/li>
&lt;li>sed -i &amp;ldquo;s/ens33/eth0/g&amp;rdquo; /etc/sysconfig/network-scripts/ifcfg-eth0&lt;/li>
&lt;/ul>
&lt;p>ubuntu 系统&lt;/p>
&lt;ul>
&lt;li>修改 grub 文件
&lt;ul>
&lt;li>vim /etc/default/grub&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>查找
&lt;ul>
&lt;li>GRUB_CMDLINE_LINUX=&amp;quot;&amp;quot;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>修改为
&lt;ul>
&lt;li>GRUB_CMDLINE_LINUX=&amp;ldquo;net.ifnames=0 biosdevname=0&amp;rdquo;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>重新生成 grub 引导配置文件
&lt;ul>
&lt;li>grub-mkconfig -o /boot/grub/grub.cfg&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>修改网络配置 ens32 为 eth0
&lt;ul>
&lt;li>vim /etc/netplan/01-netcfg.yaml&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>Docs: 进程与CPU核心的绑定</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E7%AE%A1%E7%90%86%E6%A1%88%E4%BE%8B/%E8%BF%9B%E7%A8%8B%E4%B8%8ECPU%E6%A0%B8%E5%BF%83%E7%9A%84%E7%BB%91%E5%AE%9A/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E7%AE%A1%E7%90%86%E6%A1%88%E4%BE%8B/%E8%BF%9B%E7%A8%8B%E4%B8%8ECPU%E6%A0%B8%E5%BF%83%E7%9A%84%E7%BB%91%E5%AE%9A/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://linux.cn/article-6307-1.html?pr">Linux 有问必答：如何知道进程运行在哪个 CPU 内核上？&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://www.xmodulo.com/cpu-core-process-is-running.html">https://www.xmodulo.com/cpu-core-process-is-running.html&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>问题：我有个 Linux 进程运行在多核处理器系统上。怎样才能找出哪个 CPU 内核正在运行该进程？&lt;/p>
&lt;p>当你在 多核 NUMA 处理器上运行需要较高性能的 HPC（高性能计算）程序或非常消耗网络资源的程序时，CPU/memory 的亲和力是限度其发挥最大性能的重要因素之一。在同一 NUMA 节点上调度最相关的进程可以减少缓慢的远程内存访问。像英特尔 Sandy Bridge 处理器，该处理器有一个集成的 PCIe 控制器，你可以在同一 NUMA 节点上调度网络 I/O 负载（如网卡）来突破 PCI 到 CPU 亲和力限制。&lt;/p>
&lt;p>作为性能优化和故障排除的一部分，你可能想知道特定的进程被调度到哪个 CPU 内核（或 NUMA 节点）上运行。&lt;/p>
&lt;p>这里有几种方法可以&lt;strong>找出哪个 CPU 内核被调度来运行给定的 Linux 进程或线程&lt;/strong>。&lt;/p>
&lt;h2 id="方法一">方法一&lt;a class="td-heading-self-link" href="#%e6%96%b9%e6%b3%95%e4%b8%80" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>如果一个进程使用 taskset 命令明确的被固定（pinned）到 CPU 的特定内核上，你可以使用 taskset 命令找出被固定的 CPU 内核：&lt;/p>
&lt;p>$ taskset -c -p&lt;/p>
&lt;p>例如, 如果你对 PID 5357 这个进程有兴趣:&lt;/p>
&lt;p>$ taskset -c -p 5357&lt;/p>
&lt;p>pid 5357&amp;rsquo;s current affinity list: 5&lt;/p>
&lt;p>输出显示这个过程被固定在 CPU 内核 5 上。&lt;/p>
&lt;p>但是，如果你没有明确固定进程到任何 CPU 内核，你会得到类似下面的亲和力列表。&lt;/p>
&lt;p>pid 5357&amp;rsquo;s current affinity list: 0-11&lt;/p>
&lt;p>输出表明该进程可能会被安排在从 0 到 11 中的任何一个 CPU 内核。在这种情况下，taskset 不能识别该进程当前被分配给哪个 CPU 内核，你应该使用如下所述的方法。&lt;/p>
&lt;h2 id="方法二">方法二&lt;a class="td-heading-self-link" href="#%e6%96%b9%e6%b3%95%e4%ba%8c" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>ps 命令可以告诉你每个进程/线程目前分配到的 （在“PSR”列）CPU ID。&lt;/p>
&lt;p>$ ps -o pid,psr,comm -p&lt;/p>
&lt;p>PID PSR COMMAND&lt;/p>
&lt;p>5357 10 prog&lt;/p>
&lt;p>输出表示进程的 PID 为 5357（名为”prog”）目前在 CPU 内核 10 上运行着。如果该过程没有被固定，PSR 列会根据内核可能调度该进程到不同内核而改变显示。&lt;/p>
&lt;h2 id="方法三">方法三&lt;a class="td-heading-self-link" href="#%e6%96%b9%e6%b3%95%e4%b8%89" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>top 命令也可以显示 CPU 被分配给哪个进程。首先，在 top 命令中使用 P 选项。然后按“f”键，显示中会出现 “Last used CPU” 列。目前使用的 CPU 内核将出现在 “P”（或“PSR”）列下。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>top -p &lt;span style="color:#0000cf;font-weight:bold">5357&lt;/span> -H
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/hsfm16/1616167411830-a73b375d-c071-4953-a44d-eb0390f44258.jpeg" alt="">
相比于 ps 命令，使用 top 命令的好处是，你可以连续监视随着时间的改变， CPU 是如何分配的。&lt;/p>
&lt;h2 id="方法四">方法四&lt;a class="td-heading-self-link" href="#%e6%96%b9%e6%b3%95%e5%9b%9b" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>另一种来检查一个进程/线程当前使用的是哪个 CPU 内核的方法是使用 htop 命令。&lt;/p>
&lt;p>从命令行启动 htop。按 键，进入”Columns”，在”Available Columns”下会添加 PROCESSOR。&lt;/p>
&lt;p>每个进程当前使用的 CPU ID 将出现在“CPU”列中。&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/hsfm16/1616167411836-ec26f183-e19b-4050-a5bb-5c4b033215cd.jpeg" alt="">&lt;/p>
&lt;p>请注意，所有以前使用的命令 taskset，ps 和 top 分配 CPU 内核的 IDs 为 0，1，2，…，N-1。然而，htop 分配 CPU 内核 IDs 从 1 开始（直到 N）。&lt;/p></description></item><item><title>Docs: Linux 代理配置</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E7%AE%A1%E7%90%86%E6%A1%88%E4%BE%8B/Linux-%E4%BB%A3%E7%90%86%E9%85%8D%E7%BD%AE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E7%AE%A1%E7%90%86%E6%A1%88%E4%BE%8B/Linux-%E4%BB%A3%E7%90%86%E9%85%8D%E7%BD%AE/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>在 &lt;a href="https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Operating%20system/Unix-like%20OS/Unix-like%20OS.md">Unix-like OS&lt;/a> 中，很多程序都会读取 &lt;a href="https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Terminal%20%E4%B8%8E%20Shell/Terminal%20%E4%B8%8E%20Shell.md">Terminal 与 Shell&lt;/a> 中的某些变量来读取代理信息&lt;/p>
&lt;blockquote>
&lt;p>TODO: 这些变量到底应该大写还是小写？wget 命令无法识别到大写的变量。&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>http_proxy | https_proxy | ftp_proxy | all_proxy # 此变量值用于所有 http、https、ftp 或者所有流量&lt;/li>
&lt;li>socks_proxy # 在大多数情况下，它用于 TCP 和 UDP 流量。其值通常采用 socks：// address：port 格式。&lt;/li>
&lt;li>rsync_proxy # 这用于 rsync 流量，尤其是在 Gentoo 和 Arch 等发行版中。&lt;/li>
&lt;li>no_proxy # 以逗号分隔的域名或 IP 列表，应绕过代理。该本地主机就是一个很好的例子。一个例子是 localhost，127.0.0.1。&lt;/li>
&lt;/ul>
&lt;p>TODO: 但是这些变量却不是 Bash 的自带变量，但是这些程序却无一例外得统一使用这些变量，具体为什么暂时不知道&lt;/p>
&lt;p>语法格式&lt;/p>
&lt;p>XXXX_proxy=&amp;ldquo;http://[USER:PASSWORD@]ServerIP:PORT/&amp;rdquo; # 需要设置用户名，密码，代理服务器的 IP 和端口，用户名和密码可省&lt;/p>
&lt;p>EXAMPLE&lt;/p>
&lt;ul>
&lt;li>
&lt;p>http_proxy=&amp;ldquo;http://tom:secret@10.23.42.11:8080/&amp;rdquo; # 设置本机的 http 代理服务器为 10.23.42.11:8080，用户名是 tom，密码是 secret&lt;/p>
&lt;/li>
&lt;li>
&lt;p>同时设置 3 种类型代理，没有用户名和密码，代理服务器是 192.168.19.79:1080&lt;/p>
&lt;ul>
&lt;li>&lt;code>export {https,ftp,http}_proxy=&amp;quot;127.0.0.1:8889&amp;quot;&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>all_proxy=&amp;quot;socks5://localhost:10808&amp;quot;&lt;/code> # 使用本地 10808 端口的 socks 协议代理所有流量(e.g.安装完 v2ray 客户端并配置好启动后，即可使用该变量来让设备使用代理进行翻墙)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>no_proxy=&amp;quot;10._._._,192.168._._,_.local,localhost,127.0.0.1&lt;/code>&amp;quot; # 忽略指定 ip 的代理&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>注意：通过 Systemd 启动的进程，无法识别这些环境变量，只能通过 Unit File 中的 [Service] 部分的 Environment 指令指定代理信息。&lt;/strong>&lt;/p>
&lt;h1 id="每种变量详解">每种变量详解&lt;a class="td-heading-self-link" href="#%e6%af%8f%e7%a7%8d%e5%8f%98%e9%87%8f%e8%af%a6%e8%a7%a3" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h2 id="http_proxy">http_proxy&lt;a class="td-heading-self-link" href="#http_proxy" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>为 http 网站设置代理&lt;/p>
&lt;p>示例值：&lt;/p>
&lt;ul>
&lt;li>10.0.0.51:8080&lt;/li>
&lt;li>user:pass@10.0.0.10:8080&lt;/li>
&lt;li>socks4://10.0.0.51:1080&lt;/li>
&lt;li>socks5://192.168.1.1:1080&lt;/li>
&lt;/ul>
&lt;h2 id="https_proxy">https_proxy&lt;a class="td-heading-self-link" href="#https_proxy" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>为 https 网站设置代理&lt;/p>
&lt;p>示例值：&lt;/p>
&lt;ul>
&lt;li>与 http_proxy 相同&lt;/li>
&lt;/ul>
&lt;h2 id="ftp_proxy">ftp_proxy&lt;a class="td-heading-self-link" href="#ftp_proxy" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>为 ftp 协议设置代理&lt;/p>
&lt;p>示例值：&lt;/p>
&lt;ul>
&lt;li>socks5://192.168.1.1:1080&lt;/li>
&lt;/ul>
&lt;h2 id="no_proxy">no_proxy&lt;a class="td-heading-self-link" href="#no_proxy" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>无需代理的主机或域名，可以使用通配符；多个时使用 &lt;code>,&lt;/code> 号分隔&lt;/p>
&lt;p>示例值：&lt;/p>
&lt;ul>
&lt;li>&lt;code>*.aiezu.com,10.*.*.*,192.168.*.*&lt;/code>&lt;/li>
&lt;li>&lt;code>*.local,localhost,127.0.0.1&lt;/code>&lt;/li>
&lt;/ul>
&lt;h1 id="最佳实践">最佳实践&lt;a class="td-heading-self-link" href="#%e6%9c%80%e4%bd%b3%e5%ae%9e%e8%b7%b5" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h2 id="为-wsl2-设置代理">为 WSL2 设置代理&lt;a class="td-heading-self-link" href="#%e4%b8%ba-wsl2-%e8%ae%be%e7%bd%ae%e4%bb%a3%e7%90%86" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>设置为本地计算机的 Clash&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#8f5902;font-style:italic">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">hostip&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">$(&lt;/span>cat /etc/resolv.conf &lt;span style="color:#000;font-weight:bold">|&lt;/span>grep -oP &lt;span style="color:#4e9a06">&amp;#39;(?&amp;lt;=nameserver\ ).*&amp;#39;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">http_proxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;http://&lt;/span>&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">hostip&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>&lt;span style="color:#4e9a06">:7890&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">https_proxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;http://&lt;/span>&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">hostip&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>&lt;span style="color:#4e9a06">:7890&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">all_proxy&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;sock5://&lt;/span>&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">hostip&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>&lt;span style="color:#4e9a06">:7890&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">ALL_PROXY&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;sock5://&lt;/span>&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">hostip&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>&lt;span style="color:#4e9a06">:7890&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="可用的代理程序">可用的代理程序&lt;a class="td-heading-self-link" href="#%e5%8f%af%e7%94%a8%e7%9a%84%e4%bb%a3%e7%90%86%e7%a8%8b%e5%ba%8f" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>参考 &lt;a href="https://desistdaydream.github.io/docs/Web/%E4%BB%A3%E7%90%86.md">代理&lt;/a>&lt;/p></description></item><item><title>Docs: 通过 Socket 文件找到 TCP 连接信息</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E7%AE%A1%E7%90%86%E6%A1%88%E4%BE%8B/%E9%80%9A%E8%BF%87-Socket-%E6%96%87%E4%BB%B6%E6%89%BE%E5%88%B0-TCP-%E8%BF%9E%E6%8E%A5%E4%BF%A1%E6%81%AF/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E7%AE%A1%E7%90%86%E6%A1%88%E4%BE%8B/%E9%80%9A%E8%BF%87-Socket-%E6%96%87%E4%BB%B6%E6%89%BE%E5%88%B0-TCP-%E8%BF%9E%E6%8E%A5%E4%BF%A1%E6%81%AF/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;a href="https://www.cnblogs.com/web21/p/6520164.html">原文链接&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h1 id="进程的打开文件描述符表">进程的打开文件描述符表&lt;a class="td-heading-self-link" href="#%e8%bf%9b%e7%a8%8b%e7%9a%84%e6%89%93%e5%bc%80%e6%96%87%e4%bb%b6%e6%8f%8f%e8%bf%b0%e7%ac%a6%e8%a1%a8" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;a href="https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Kernel/Linux%20Kernel/Linux%20Kernel.md">Linux Kernel&lt;/a> 的三个系统调用：open，socket，pipe 返回的都是一个描述符。不同的进程中，他们返回的描述符可以相同。那么，在同一个进程中，他们可以相同吗？或者说，普通文件、套接字和管道，这三者的描述符属于同一个集合吗？&lt;/p>
&lt;p>在内核源码中，三个系统调用声明如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">SYSCALL_DEFINE3&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">open&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">const&lt;/span> &lt;span style="color:#204a87;font-weight:bold">char&lt;/span> &lt;span style="color:#000">__user&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">filename&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">int&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">flags&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">umode_t&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mode&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">SYSCALL_DEFINE3&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">socket&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">int&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">family&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">int&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">type&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">int&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">protocol&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">SYSCALL_DEFINE1&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">pipe&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">__user&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">fildes&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>他们都会先后调用函数&lt;/p>
&lt;ul>
&lt;li>get_unused_fd_flags：获取当前进程打开文件描述符表中的空闲描述符；&lt;/li>
&lt;li>fd_install：安装新描述符到当前进程打开文件描述符表。&lt;/li>
&lt;/ul>
&lt;p>内核为每个进程维护了一个结构体 struct task_struct，可称为进程表项、进程控制块（PCB: Process Control Block）或者进程描述符，定义如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000">task_struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">volatile&lt;/span> &lt;span style="color:#204a87;font-weight:bold">long&lt;/span> &lt;span style="color:#000">state&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span> &lt;span style="color:#8f5902;font-style:italic">/* -1 unrunnable, 0 runnable,&amp;gt;0 stopped */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a40000">…&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">pid_t&lt;/span> &lt;span style="color:#000">pid&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a40000">…&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000">files_struct&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">files&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a40000">…&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中 files 成员成为打开文件描述符表，定义如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000">files_struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a40000">…&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000">fdtable&lt;/span> &lt;span style="color:#000">fdtab&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a40000">…&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000">file&lt;/span> &lt;span style="color:#000">__rcu&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span> &lt;span style="color:#000">fd_array&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#000">NR_OPEN_DEFAULT&lt;/span>&lt;span style="color:#000;font-weight:bold">];&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其成员 fdtab 为关键数据成员，定义如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000">fdtable&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">unsigned&lt;/span> &lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">max_fds&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000">file&lt;/span> &lt;span style="color:#000">__rcu&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">**&lt;/span>&lt;span style="color:#000">fd&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span> &lt;span style="color:#8f5902;font-style:italic">/* current fd array */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">unsigned&lt;/span> &lt;span style="color:#204a87;font-weight:bold">long&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">close_on_exec&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">unsigned&lt;/span> &lt;span style="color:#204a87;font-weight:bold">long&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">open_fds&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000">rcu_head&lt;/span> &lt;span style="color:#000">rcu&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这说明普通的文件、套接字、管道等，都被抽象为文件，共同占用进程的打开文件描述符。&lt;/p>
&lt;p>&lt;a href="http://blog.csdn.net/aprilweet/article/details/53482930">http://blog.csdn.net/aprilweet/article/details/53482930&lt;/a>&lt;/p>
&lt;p>/Proc 目录下面有许多数字命名的子目录，这些数字表示系统当前运行的进程号；&lt;/p>
&lt;p>其中/proc/N/fd 目录下面保存了打开的文件描述符，指向实际文件的一个链接。如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>root@yang-ubuntu:/proc/4810/fd# ll
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>总用量 &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dr-x------ &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> root root &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 3月 &lt;span style="color:#0000cf;font-weight:bold">8&lt;/span> 16:07 ./
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dr-xr-xr-x &lt;span style="color:#0000cf;font-weight:bold">8&lt;/span> root root &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 3月 &lt;span style="color:#0000cf;font-weight:bold">8&lt;/span> 16:07 ../
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lrwx------ &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> root root &lt;span style="color:#0000cf;font-weight:bold">64&lt;/span> 3月 &lt;span style="color:#0000cf;font-weight:bold">8&lt;/span> 16:08 &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> -&amp;gt; /dev/pts/1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lrwx------ &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> root root &lt;span style="color:#0000cf;font-weight:bold">64&lt;/span> 3月 &lt;span style="color:#0000cf;font-weight:bold">8&lt;/span> 16:08 &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> -&amp;gt; /dev/pts/1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lrwx------ &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> root root &lt;span style="color:#0000cf;font-weight:bold">64&lt;/span> 3月 &lt;span style="color:#0000cf;font-weight:bold">8&lt;/span> 16:09 &lt;span style="color:#0000cf;font-weight:bold">10&lt;/span> -&amp;gt; socket:&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>21190&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lrwx------ &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> root root &lt;span style="color:#0000cf;font-weight:bold">64&lt;/span> 3月 &lt;span style="color:#0000cf;font-weight:bold">8&lt;/span> 16:07 &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> -&amp;gt; /dev/pts/1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lrwx------ &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> root root &lt;span style="color:#0000cf;font-weight:bold">64&lt;/span> 3月 &lt;span style="color:#0000cf;font-weight:bold">8&lt;/span> 16:08 &lt;span style="color:#0000cf;font-weight:bold">3&lt;/span> -&amp;gt; /tmp/ZCUDY7QsPB &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>deleted&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lrwx------ &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> root root &lt;span style="color:#0000cf;font-weight:bold">64&lt;/span> 3月 &lt;span style="color:#0000cf;font-weight:bold">8&lt;/span> 16:08 &lt;span style="color:#0000cf;font-weight:bold">4&lt;/span> -&amp;gt; /tmp/sess_0fpvhvcpftcme834e1l4beo2i6
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lrwx------ &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> root root &lt;span style="color:#0000cf;font-weight:bold">64&lt;/span> 3月 &lt;span style="color:#0000cf;font-weight:bold">8&lt;/span> 16:08 &lt;span style="color:#0000cf;font-weight:bold">5&lt;/span> -&amp;gt; socket:&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>20625&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lrwx------ &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> root root &lt;span style="color:#0000cf;font-weight:bold">64&lt;/span> 3月 &lt;span style="color:#0000cf;font-weight:bold">8&lt;/span> 16:08 &lt;span style="color:#0000cf;font-weight:bold">6&lt;/span> -&amp;gt; anon_inode:&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>eventpoll&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lrwx------ &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> root root &lt;span style="color:#0000cf;font-weight:bold">64&lt;/span> 3月 &lt;span style="color:#0000cf;font-weight:bold">8&lt;/span> 16:08 &lt;span style="color:#0000cf;font-weight:bold">7&lt;/span> -&amp;gt; socket:&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>20626&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lrwx------ &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> root root &lt;span style="color:#0000cf;font-weight:bold">64&lt;/span> 3月 &lt;span style="color:#0000cf;font-weight:bold">8&lt;/span> 16:08 &lt;span style="color:#0000cf;font-weight:bold">8&lt;/span> -&amp;gt; socket:&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>20627&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lrwx------ &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> root root &lt;span style="color:#0000cf;font-weight:bold">64&lt;/span> 3月 &lt;span style="color:#0000cf;font-weight:bold">8&lt;/span> 16:09 &lt;span style="color:#0000cf;font-weight:bold">9&lt;/span> -&amp;gt; socket:&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>21189&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>我们想查看 9 -&amp;gt; Socket 文件描述符的链接状态该怎么看呢？聪明的注意到后面有个数字[21189]，这个数字又是哪儿来的呢？&lt;/p>
&lt;p>在 &lt;code>/proc/net/tcp&lt;/code> 目录下面保存了所有 TCP 链接的状态信息。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>root@yang-ubuntu:/proc/net# vim /proc/net/tcp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sl local_address rem_address st tx_queue rx_queue tr tm-&amp;gt;when retrnsmt uid timeout inode
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0: 00000000:0CEA 00000000:0000 0A 00000000:00000000 00:00000000 &lt;span style="color:#0000cf;font-weight:bold">00000000&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1001&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">9482&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> ffff88001a501a00 &lt;span style="color:#0000cf;font-weight:bold">100&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">10&lt;/span> -1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1: 00000000:008B 00000000:0000 0A 00000000:00000000 00:00000000 &lt;span style="color:#0000cf;font-weight:bold">00000000&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">8916&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> ffff88001a501380 &lt;span style="color:#0000cf;font-weight:bold">100&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">10&lt;/span> -1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2: 00000000:0050 00000000:0000 0A 00000000:00000000 00:00000000 &lt;span style="color:#0000cf;font-weight:bold">00000000&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">11440&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> ffff88001a502080 &lt;span style="color:#0000cf;font-weight:bold">100&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">10&lt;/span> -1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3: 0100007F:0035 00000000:0000 0A 00000000:00000000 00:00000000 &lt;span style="color:#0000cf;font-weight:bold">00000000&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">12333&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> ffff88001a502700 &lt;span style="color:#0000cf;font-weight:bold">100&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">10&lt;/span> -1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>4: 00000000:0016 00000000:0000 0A 00000000:00000000 00:00000000 &lt;span style="color:#0000cf;font-weight:bold">00000000&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">7922&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> ffff88001a500000 &lt;span style="color:#0000cf;font-weight:bold">100&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">10&lt;/span> -1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>5: 0100007F:0277 00000000:0000 0A 00000000:00000000 00:00000000 &lt;span style="color:#0000cf;font-weight:bold">00000000&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">13302&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> ffff88001a500680 &lt;span style="color:#0000cf;font-weight:bold">100&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">10&lt;/span> -1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>6: 00000000:01BD 00000000:0000 0A 00000000:00000000 00:00000000 &lt;span style="color:#0000cf;font-weight:bold">00000000&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">8914&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> ffff88001a500d00 &lt;span style="color:#0000cf;font-weight:bold">100&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">10&lt;/span> -1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>7: 00000000:0929 00000000:0000 0A 00000000:00000000 00:00000000 &lt;span style="color:#0000cf;font-weight:bold">00000000&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">20625&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> ffff88001a504100 &lt;span style="color:#0000cf;font-weight:bold">100&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">10&lt;/span> -1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>8: 8064A8C0:01BD 0164A8C0:C26A &lt;span style="color:#0000cf;font-weight:bold">01&lt;/span> 00000000:00000000 02:00030E57 &lt;span style="color:#0000cf;font-weight:bold">00000000&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">13216&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> ffff88001a503a80 &lt;span style="color:#0000cf;font-weight:bold">22&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">4&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">10&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">18&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>9: 8064A8C0:0929 0164A8C0:F4B5 &lt;span style="color:#0000cf;font-weight:bold">01&lt;/span> 00000000:00000000 02:00097B3E &lt;span style="color:#0000cf;font-weight:bold">00000000&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">21189&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> ffff88001a505b00 &lt;span style="color:#0000cf;font-weight:bold">24&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">4&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">28&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">10&lt;/span> -1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10: 8064A8C0:0016 0164A8C0:CD9C &lt;span style="color:#0000cf;font-weight:bold">01&lt;/span> 00000000:00000000 02:0000B4B4 &lt;span style="color:#0000cf;font-weight:bold">00000000&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">17721&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> ffff88001a503400 &lt;span style="color:#0000cf;font-weight:bold">22&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">4&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">20&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">10&lt;/span> -1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>11: 8064A8C0:0016 0164A8C0:CDAE &lt;span style="color:#0000cf;font-weight:bold">01&lt;/span> 00000000:00000000 02:0000DB1B &lt;span style="color:#0000cf;font-weight:bold">00000000&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">18130&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> ffff88001a504e00 &lt;span style="color:#0000cf;font-weight:bold">24&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">4&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">31&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">10&lt;/span> -1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>12: 8064A8C0:0929 0164A8C0:F4B6 &lt;span style="color:#0000cf;font-weight:bold">01&lt;/span> 00000000:00000000 02:00097B3E &lt;span style="color:#0000cf;font-weight:bold">00000000&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">21190&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> ffff88001a506800 &lt;span style="color:#0000cf;font-weight:bold">24&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">4&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">24&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">10&lt;/span> -1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>13: 8064A8C0:0016 0164A8C0:CDAC &lt;span style="color:#0000cf;font-weight:bold">01&lt;/span> 00000000:00000000 02:0000DB1B &lt;span style="color:#0000cf;font-weight:bold">00000000&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">18074&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> ffff88001a502d80 &lt;span style="color:#0000cf;font-weight:bold">21&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">4&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">24&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">10&lt;/span> -1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>14: 8064A8C0:0016 0164A8C0:F3FC &lt;span style="color:#0000cf;font-weight:bold">01&lt;/span> 00000000:00000000 02:00089B3B &lt;span style="color:#0000cf;font-weight:bold">00000000&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">20675&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> ffff88001a506180 &lt;span style="color:#0000cf;font-weight:bold">24&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">4&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">25&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">10&lt;/span> -1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>15: 8064A8C0:0016 0164A8C0:CDAD &lt;span style="color:#0000cf;font-weight:bold">01&lt;/span> 00000080:00000000 01:00000018 &lt;span style="color:#0000cf;font-weight:bold">00000000&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">18102&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">4&lt;/span> ffff88001a504780 &lt;span style="color:#0000cf;font-weight:bold">24&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">4&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">21&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">10&lt;/span> -1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>看上数字【21189 】没有，就是这儿来的，到此我们可以找出链接的 IP、PORT 链接四元组【8064A8C0:0929 0164A8C0:F4B5】这个地方是用十六进制保存的，换算成十进制方式【192.168.100.128:2345            192.168.100.1:62645】；&lt;/p>
&lt;p>去网络连接状态里面看一下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>root@yang-ubuntu:/proc/4275/fd# netstat -antp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>激活 Internet 连接 &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>服务器和已建立连接的&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Proto Recv-Q Send-Q Local Address Foreign Address State PID/Program name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tcp &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 0.0.0.0:3306 0.0.0.0:_ LISTEN 1710/mysqld
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tcp &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 0.0.0.0:139 0.0.0.0:_ LISTEN 1062/smbd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tcp &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 0.0.0.0:80 0.0.0.0:_ LISTEN 1736/nginx.conf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tcp &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 127.0.0.1:53 0.0.0.0:_ LISTEN 1925/dnsmasq
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tcp &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 0.0.0.0:22 0.0.0.0:_ LISTEN 628/sshd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tcp &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 127.0.0.1:631 0.0.0.0:_ LISTEN 709/cupsd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tcp &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 0.0.0.0:445 0.0.0.0:_ LISTEN 1062/smbd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tcp &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 0.0.0.0:2345 0.0.0.0:_ LISTEN 4809/start.php
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tcp &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 192.168.100.128:445 192.168.100.1:49770 ESTABLISHED 2514/smbd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tcp &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 192.168.100.128:2345 192.168.100.1:62645 ESTABLISHED 4810/0.0.0.0:2345
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tcp &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 192.168.100.128:22 192.168.100.1:52636 ESTABLISHED 3565/sshd: root@not
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tcp &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 192.168.100.128:22 192.168.100.1:52654 ESTABLISHED 3718/3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tcp &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 192.168.100.128:22 192.168.100.1:52652 ESTABLISHED 3714/1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tcp &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 192.168.100.128:22 192.168.100.1:62460 ESTABLISHED 4817/4
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tcp &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 192.168.100.128:22 192.168.100.1:52653 ESTABLISHED 3716/2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tcp6 &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> :::139 :::_ LISTEN 1062/smbd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tcp6 &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> :::22 :::_ LISTEN 628/sshd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tcp6 &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> ::1:631 :::_ LISTEN 709/cupsd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tcp6 &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> :::445 :::_ LISTEN 1062/smbd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>回到开始的问题：9 Socket 文件描述符代表的是本地【192.168.100.128:2345】到【192.168.100.1:62645】的一条 TCP 连接！&lt;/p>
&lt;p>为什么往 socket 中写数据，就会发送到对端(只针对 tcp 协议的研究)?  举例：浏览器请求服务器？&lt;/p>
&lt;p>客户端首先发起建立与服务器 TCP 连接。一旦建立连接，浏览器进程和服务器进程就可以通过各自的套接字来访问 TCP。&lt;/p>
&lt;p>客户端套接字是客户进程和 TCP 连接之间的“门”，服务器端套接字是服务器进程和同一 TCP 连接之间的“门”。&lt;/p>
&lt;p>客户往自己的套接字发送 HTTP 请求消息，也从自己的套接字接收 HTTP 响应消息。&lt;/p>
&lt;p>类似地，服务器从自己的套接字接收 HTTP 请求消息，也往自己的套接字发送 HTTP 响应消息。&lt;/p>
&lt;p>客户端或服务器一旦把某个消息送入各自的套接字，这个消息就完全落入 TCP 的控制之中。&lt;/p>
&lt;p>所以说底层是基于 tcp 提供的可靠的消息传输机制&lt;/p>
&lt;p>TCP 给 HTTP 提供一个可靠的数据传输服务;这意味着由客户发出的每个 HTTP 请求消息最终将无损地到达服务器，由服务器发出的每个 HTTP 响应消息最终也将无损地到达客户。&lt;/p></description></item></channel></rss>