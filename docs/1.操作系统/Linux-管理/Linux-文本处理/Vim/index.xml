<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦的站点 – Vim</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/Vim/</link><description>Recent content in Vim on 断念梦的站点</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/Vim/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Vim</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/Vim/Vim/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/Vim/Vim/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/vim/vim">GitHub 项目，vim/vim&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.vim.org/">官网&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://vimdoc.sourceforge.net/htmldoc/usr_toc.html">用户手册&lt;/a> 可跳转到 &lt;a href="https://vimdoc.sourceforge.net/htmldoc/help.html">帮助文件&lt;/a>&lt;/li>
&lt;li>Carlo Teubner 维护的 &lt;a href="https://vimhelp.org/">文档&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h2 id="syntax语法">Syntax(语法)&lt;a class="td-heading-self-link" href="#syntax%e8%af%ad%e6%b3%95" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;strong>vim [OPTIONS]&lt;/strong>&lt;/p>
&lt;p>OPTIONS：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>-o FILENAME1 FILENAME2 &amp;hellip;&amp;hellip;&lt;/strong> # 水平分割使用 vi 打开多个文件&lt;/li>
&lt;li>&lt;strong>-O FILENAME1 FILENAME2&amp;hellip;&amp;hellip;&lt;/strong> # 垂直分割使用 vi 打开多个文件
&lt;ul>
&lt;li>使用 ctrl+w 后，按上下左右箭头，切换编辑哪方向的文件&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>+#&lt;/strong> # 打开文件后直接让光标处于第#行的行首，不输入#默认为最后一行&lt;/li>
&lt;li>&lt;strong>-b&lt;/strong> # 使用二进制模式打开 vim&lt;/li>
&lt;/ul>
&lt;h2 id="三种主要模式">三种主要模式&lt;a class="td-heading-self-link" href="#%e4%b8%89%e7%a7%8d%e4%b8%bb%e8%a6%81%e6%a8%a1%e5%bc%8f" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>默认命令（Normal）模式，可以移动光标，剪切和粘贴。&lt;/li>
&lt;li>插入（Insert）模式，用户可以编辑文本。&lt;/li>
&lt;li>扩展（Extended）命令模式（或末行模式）e.g.在编辑器下直接输入:wq 可保存退出，或者:q!强制退出。&lt;/li>
&lt;/ul>
&lt;p>Exc 按键可退出当前模式。&lt;/p>
&lt;h1 id="默认模式">默认模式&lt;a class="td-heading-self-link" href="#%e9%bb%98%e8%ae%a4%e6%a8%a1%e5%bc%8f" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h3 id="移动定位光标位置">移动定位光标位置&lt;a class="td-heading-self-link" href="#%e7%a7%bb%e5%8a%a8%e5%ae%9a%e4%bd%8d%e5%85%89%e6%a0%87%e4%bd%8d%e7%bd%ae" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>所有其余命令都可以跟该命令联合使用，表示命令执行到哪个位置&lt;/p>
&lt;p>注：在任意移动前加数字则代表该移动模式移动几次（例：#→，向右移动#个字符，#为任意数或者字符）&lt;/p>
&lt;p>行跳转&lt;/p>
&lt;ul>
&lt;li>&lt;code>#G&lt;/code> 移动光标到指定的 &lt;code>#&lt;/code> 行&lt;/li>
&lt;li>G 到文件尾&lt;/li>
&lt;li>gg 到文件首&lt;/li>
&lt;/ul>
&lt;p>w 移至下一个单词的词首 e 移动至当前或下一个单词的词尾(这两项前面跟数字可以移动数字个单词)&lt;/p>
&lt;p>b 移动至当前或之前一个单词的词首&lt;/p>
&lt;p>0 绝对行首 $绝对行尾 ^ 跳转至行首的第一个非空白字符&lt;/p>
&lt;p>)下一句 (上一句 }下一段 {上一段&lt;/p>
&lt;p>H 移动光标到屏幕上面 M 移动光标到屏幕中间 L 移动光标到屏幕下面&lt;/p>
&lt;p>Scroll(滚动 i.e. 翻页)&lt;/p>
&lt;p>&lt;a href="https://vimdoc.sourceforge.net/htmldoc/scroll.html">https://vimdoc.sourceforge.net/htmldoc/scroll.html&lt;/a>&lt;/p>
&lt;ul>
&lt;li>ctrl + d # 向下翻半页 Downwards&lt;/li>
&lt;li>ctrl + u # 向上翻半页 Upwards&lt;/li>
&lt;li>ctrl + f # 向下翻一页 Forwards&lt;/li>
&lt;li>ctrl + b # 向上翻一页 Backwards&lt;/li>
&lt;/ul>
&lt;h3 id="搜索">搜索&lt;a class="td-heading-self-link" href="#%e6%90%9c%e7%b4%a2" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>进入搜索模式后，所有特殊字符都按正则表达式处理。直接在搜索指令后面加\c，即可可不区分大小写搜索&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>用法&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>/word&lt;/code>&lt;/td>
&lt;td>从当前光标处开始搜索字符串 word，按 n 移动到下个单词处，N 移动到上一个。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>?word&lt;/code>&lt;/td>
&lt;td>和上面类似，但是是反方向。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>fX&lt;/code>&lt;/td>
&lt;td>查找 X 这个字符并向前移动光标到 X 这个字符上&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>FX&lt;/code>&lt;/td>
&lt;td>查找 X 这个字符并向后移动光标到 X 这个字符上&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="替换">替换&lt;a class="td-heading-self-link" href="#%e6%9b%bf%e6%8d%a2" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>&lt;code>rX&lt;/code> # 替换当前光标所在字符为 X，X 可以是任意字符&lt;/p>
&lt;p>&lt;code>*rX&lt;/code> # 替换光标所在字符后的 &lt;code>*&lt;/code> 个字符为 X&lt;/p>
&lt;h3 id="撤销改变">撤销改变&lt;a class="td-heading-self-link" href="#%e6%92%a4%e9%94%80%e6%94%b9%e5%8f%98" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>&lt;code>u&lt;/code> # 撤消前一次的编辑操作，连续 u 命令可撤消此前的 n 次编辑操作&lt;/p>
&lt;p>&lt;code>#u&lt;/code> # 直接撤消最近#次编辑操作&lt;/p>
&lt;p>&lt;code>Ctrl + r&lt;/code> # 撤消最近一次撤消操作&lt;/p>
&lt;p>字符选择（进入字符选择模式，然后可以使用移动光标命令）&lt;/p>
&lt;ul>
&lt;li>v # 字符选择，将光标经过的字符选择&lt;/li>
&lt;li>V # 行选择，将光标经过的行选择&lt;/li>
&lt;li>&lt;code>Ctrl + v&lt;/code> # 矩形选择，可以用矩形的方式选择数据&lt;/li>
&lt;/ul>
&lt;h3 id="删除剪切和拷贝">删除，剪切和拷贝&lt;a class="td-heading-self-link" href="#%e5%88%a0%e9%99%a4%e5%89%aa%e5%88%87%e5%92%8c%e6%8b%b7%e8%b4%9d" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>&lt;code>x&lt;/code> 删除光标所在处的单个字符&lt;/p>
&lt;p>&lt;code>#x&lt;/code> # 删除光标所在处及向后的共#个字符&lt;/p>
&lt;p>d 命令可跟光标移动命令结合使用，d 还可以在扩展模式中使用，详情下扩展模式介绍&lt;/p>
&lt;p>例：&lt;/p>
&lt;p>&lt;code>d$&lt;/code> # 剪切到行尾&lt;/p>
&lt;p>&lt;code>d^&lt;/code> # 剪切到非空行首&lt;/p>
&lt;p>&lt;code>d0&lt;/code> # 剪切到行首&lt;/p>
&lt;p>&lt;code>dG&lt;/code> # 从当前光标行剪切到最后一行&lt;/p>
&lt;p>&lt;code>dd&lt;/code> # 剪切当前光标所在行&lt;/p>
&lt;p>&lt;code>dXd&lt;/code> # 剪切光标所在行下共 x 行&lt;/p>
&lt;p>&lt;code>#dd&lt;/code> # 删除包括当前光标所在行在内的 # 行&lt;/p>
&lt;p>x：剪切当前字符到剪贴板。&lt;/p>
&lt;p>c：剪贴选择的内容到剪贴板并且进入插入模式。&lt;/p>
&lt;p>cc：剪切当前行并且进入插入模式。&lt;/p>
&lt;p>D：剪切从光标位置到行尾到剪贴板。&lt;/p>
&lt;p>Y：拷贝当前行 # Y：拷贝当前行下的#行，#为数字&lt;/p>
&lt;p>y：拷贝选择的内容到剪贴板。&lt;/p>
&lt;p>yy：拷贝当前行。&lt;/p>
&lt;p>粘贴：p&lt;/p>
&lt;h1 id="插入模式">插入模式&lt;a class="td-heading-self-link" href="#%e6%8f%92%e5%85%a5%e6%a8%a1%e5%bc%8f" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>i：在当前字符的左边插入 I：在当前行首插入&lt;/p>
&lt;p>a：在当前字符的右边插入 A：在当前行尾插入&lt;/p>
&lt;p>o：在当前行下面插入一个新行 O：在当前行上面插入一个新行&lt;/p>
&lt;p>Vim 多缓冲区编辑&lt;/p>
&lt;p>剪贴板在 VIM 里面被称为寄存器（Registers）。你可以列出当前定义的所有寄存器名和它们的内容&lt;/p>
&lt;p>比如：我们要拷贝当前行到寄存器 a 或者其他字母。你应该按 “ayy。现在当前行已存在寄存器 a 里面直到你又拷贝了一些东西进入寄存器 a。你可以使用命令 “ap 来粘贴寄存器 a 里面的内容到你想要的位置。&lt;/p>
&lt;h1 id="扩展模式命令模式与-sed-通用">扩展模式（命令模式）（与 sed 通用）&lt;a class="td-heading-self-link" href="#%e6%89%a9%e5%b1%95%e6%a8%a1%e5%bc%8f%e5%91%bd%e4%bb%a4%e6%a8%a1%e5%bc%8f%e4%b8%8e-sed-%e9%80%9a%e7%94%a8" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>替换&lt;/p>
&lt;h3 id="syntax语法-1">Syntax(语法)&lt;a class="td-heading-self-link" href="#syntax%e8%af%ad%e6%b3%95-1" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>&lt;code>:[查找范围]s/查找模式/替换为的内容[/g 或者 i]&lt;/code>&lt;/p>
&lt;p>注：/可以用@代替，如果使用@则查找模式和替换的内容中的特殊字符不用转义,类似 grep 与 egrep 的区别，g 为全局，i 为忽略大小写&lt;/p>
&lt;ul>
&lt;li>&lt;code>s/XXX/YYY(/g)&lt;/code> 把当前光标所在行的第一个 XXX 替换成 YYY（把当前光标所在行的所有 XXX 替换成 YYY）&lt;/li>
&lt;li>&lt;code>:A,Bs/XXX/YYY(/g)&lt;/code> 把 A 行到 B 行的每行第一个 XXX 替换成 YYY（把 A 行到 B 行所有的 XXX 替换成 YYY）&lt;/li>
&lt;li>&lt;code>:%s/XXX/YYY(/g)&lt;/code> 把所有行的第一个 XXX 替换成 YYY（把所有行的所有 XXX 替换成 YYY，即全文替换）&lt;/li>
&lt;li>符号&lt;code>&amp;amp;&lt;/code>：替换的内容中可加符号&amp;amp;，用户在替换内容中引用前面查找模式中匹配到的所有内容&lt;/li>
&lt;li>范围定界 start,end 别忘了中间的逗号，&lt;/li>
&lt;li>. 表示当前行 $表示最后一行&lt;/li>
&lt;li>&lt;code>.,$-(+)2&lt;/code> 从当前行到最后一行的前(后)两行&lt;/li>
&lt;li>5,10 从 5 到 10 行&lt;/li>
&lt;/ul>
&lt;h3 id="example">EXAMPLE&lt;a class="td-heading-self-link" href="#example" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>&lt;code>1,3s@^@#@&lt;/code> # 给前三行开头加#号&lt;/li>
&lt;li>&lt;code>:62,131s@^#@@&lt;/code> # 删除62到131行开头的#&lt;/li>
&lt;li>&lt;code>:5,15s@^[^#].*@#&amp;amp;@g&lt;/code> # 查找开头不带#的5至15行,在搜索到的内容前(&amp;amp;)添加#号&lt;/li>
&lt;li>&lt;code>:%s@ \+@:@g&lt;/code> # 替换每行的所有空格为冒号：（注意@和\中间有个空格）&lt;/li>
&lt;li>&lt;code>:%s@^[[:space:]]\+@@g&lt;/code> # 删除行首的所有空白字符&lt;/li>
&lt;li>&lt;code>:%s@\(enabl.*\)[0-9]@\12@g&lt;/code> # 查找enabl后面的跟任意字符然后跟0-9的数字，然后替换0-9的数字为2，\1为引用()中匹配的内容&lt;/li>
&lt;li>&lt;code>:%s/\[\ \(.*\)\ \]/\1/g&lt;/code> # 删除每行的中括号空格&lt;/li>
&lt;li>&lt;code>:%s@^.\{3\}@@g&lt;/code> # 删除每一行的前3个字符&lt;/li>
&lt;/ul>
&lt;p>搜索：&lt;/p>
&lt;ul>
&lt;li>&lt;code>:g&lt;/code> 即为 :global，该搜索命令极其强大，可以对 global 命令在[range]指定的文本范围内（缺省为整个文件）查找 PATTERN，然后对匹配到的行执行命令 COMMAND，如果希望对没匹配上的行执行命令，则使用 global!或 vglobal 命令（注：模式 PATTERN 可以是字符串，也可是是正则表达式的筛选内容）
&lt;ul>
&lt;li>命令模式
&lt;ul>
&lt;li>:[range]global/PATTERN/COMMAND&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>应用例子：
&lt;ul>
&lt;li>:g/^$/d # 搜索所有空白行并剪切&lt;/li>
&lt;li>:g/^#/d # 搜索所有所有开头带#号的行并剪切&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>:v&lt;/li>
&lt;/ul>
&lt;h1 id="设置">设置&lt;a class="td-heading-self-link" href="#%e8%ae%be%e7%bd%ae" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>:set ignorecase(或简写成:set ic) # 设置搜索的时候不区分大小写&lt;/p>
&lt;/li>
&lt;li>
&lt;p>:set noignorecase(或简写成:set noic) # 设置成搜索的时候区分大小写&lt;/p>
&lt;/li>
&lt;li>
&lt;p>:set number(简写:set nu) # 显示行号&lt;/p>
&lt;/li>
&lt;li>
&lt;p>:set nonumber(简 set nonu) # 取消行号&lt;/p>
&lt;/li>
&lt;li>
&lt;p>:nohlsearch # 取消左侧第一排黄色阴影&lt;/p>
&lt;/li>
&lt;li>
&lt;p>:set fo-=cro # 取消每次按回车都会自动添加#、//等注释符号的功能&lt;/p>
&lt;/li>
&lt;li>
&lt;p>-r: 按回车不会添加注释&lt;/p>
&lt;/li>
&lt;li>
&lt;p>-o 按 o 不会添加注释&lt;/p>
&lt;/li>
&lt;li>
&lt;p>-c:重新格式化长注释行不会添加注释&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>显示查找内容高亮 &lt;code>:set hlsearch&lt;/code> 取消显示查找内容的高亮 &lt;code>:set nohlsearch&lt;/code>&lt;/p></description></item><item><title>Docs: Vim 黄色阴影处理</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/Vim/Vim-%E9%BB%84%E8%89%B2%E9%98%B4%E5%BD%B1%E5%A4%84%E7%90%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/Vim/Vim-%E9%BB%84%E8%89%B2%E9%98%B4%E5%BD%B1%E5%A4%84%E7%90%86/</guid><description>
&lt;h1 id="heading">&lt;a class="td-heading-self-link" href="#heading" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>作为一个编码界的小白，经常手残，不知道按了什么，经常会出现字符上会出现黄色的阴影部分，虽然不会影响到自己的编辑，但是看着就是不习惯，解决这个问题的方式：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>在 vim 编辑器中执行 :nohlsearch 即可&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果希望以后都不在出现这个情况，可以在/etc/vimrc 文件中添加 set nohlsearch，使之永久生效&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>Docs: Vim中复制粘贴缩进错乱问题的解决方案</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/Vim/Vim%E4%B8%AD%E5%A4%8D%E5%88%B6%E7%B2%98%E8%B4%B4%E7%BC%A9%E8%BF%9B%E9%94%99%E4%B9%B1%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/Vim/Vim%E4%B8%AD%E5%A4%8D%E5%88%B6%E7%B2%98%E8%B4%B4%E7%BC%A9%E8%BF%9B%E9%94%99%E4%B9%B1%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</guid><description>
&lt;h1 id="heading">&lt;a class="td-heading-self-link" href="#heading" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h1 id="前言">&lt;strong>前言&lt;/strong>&lt;a class="td-heading-self-link" href="#%e5%89%8d%e8%a8%80" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>这是一则记录贴，防止小技巧遗忘。&lt;/p>
&lt;p>不知道大家是否会有这种困扰，例如在 Android Studio 有一段缩进优美的代码实现，例如：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>public void sayHello&lt;span style="color:#ce5c00;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String &lt;span style="color:#000">msg&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Hello Vim Paste Mode&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.out.println&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>msg&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>当你把这段缩进优美的代码直接 ctrl+c，ctrl+v 到 Vim 的时候，就会出现如下恶心的情况：&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/dssefy/1616166238841-3e8c3b7d-589a-4ded-9c81-77f47e2ada04.png" alt="">&lt;/p>
&lt;p>可以看到，这种直接粘贴的方式会导致代码丢失和缩进错乱等情况。&lt;/p>
&lt;hr>
&lt;h1 id="解决方案">&lt;strong>解决方案&lt;/strong>&lt;a class="td-heading-self-link" href="#%e8%a7%a3%e5%86%b3%e6%96%b9%e6%a1%88" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>vim 进入 paste 模式，命令如下：&lt;/p>
&lt;pre>&lt;code>:set paste
&lt;/code>&lt;/pre>
&lt;p>进入 paste 模式之后，再按 i 进入插入模式，进行复制、粘贴就很正常了。&lt;/p>
&lt;p>命令模式下，输入下面的命令以解除 paste 模式。&lt;/p>
&lt;pre>&lt;code>:set nopaste
&lt;/code>&lt;/pre>
&lt;p>paste 模式主要帮我们做了如下事情：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>textwidth 设置为 0&lt;/p>
&lt;/li>
&lt;li>
&lt;p>wrapmargin 设置为 0&lt;/p>
&lt;/li>
&lt;li>
&lt;p>set noai&lt;/p>
&lt;/li>
&lt;li>
&lt;p>set nosi&lt;/p>
&lt;/li>
&lt;li>
&lt;p>softtabstop 设置为 0&lt;/p>
&lt;/li>
&lt;li>
&lt;p>revins 重置&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ruler 重置&lt;/p>
&lt;/li>
&lt;li>
&lt;p>showmatch 重置&lt;/p>
&lt;/li>
&lt;li>
&lt;p>formatoptions 使用空值&lt;/p>
&lt;/li>
&lt;/ul></description></item></channel></rss>