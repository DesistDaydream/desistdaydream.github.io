<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Vim on 断念梦的站点</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/Vim/</link><description>Recent content in Vim on 断念梦的站点</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/Vim/index.xml" rel="self" type="application/rss+xml"/><item><title>Vim</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/Vim/Vim/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/Vim/Vim/</guid><description>概述 参考：
GitHub 项目，vim/vim 官网 用户手册 可跳转到 帮助文件 Carlo Teubner 维护的 文档 Syntax(语法) 参考：
vim [OPTIONS]
OPTIONS：
-o FILENAME1 FILENAME2 &amp;hellip;&amp;hellip; # 水平分割使用 vi 打开多个文件 -O FILENAME1 FILENAME2&amp;hellip;&amp;hellip; # 垂直分割使用 vi 打开多个文件 使用 ctrl+w 后，按上下左右箭头，切换编辑哪方向的文件 +# # 打开文件后直接让光标处于第#行的行首，不输入#默认为最后一行 -b # 使用二进制模式打开 vim 三种主要模式 默认命令（Normal）模式，可以移动光标，剪切和粘贴。 插入（Insert）模式，用户可以编辑文本。 扩展（Extended）命令模式（或末行模式）e.g.在编辑器下直接输入:wq 可保存退出，或者:q!强制退出。 Exc 按键可退出当前模式。
默认模式 移动定位光标位置 所有其余命令都可以跟该命令联合使用，表示命令执行到哪个位置
注：在任意移动前加数字则代表该移动模式移动几次（例：#→，向右移动#个字符，#为任意数或者字符）
行跳转
#G 移动光标到指定的 # 行 G 到文件尾 gg 到文件首 w 移至下一个单词的词首 e 移动至当前或下一个单词的词尾(这两项前面跟数字可以移动数字个单词)
b 移动至当前或之前一个单词的词首
0 绝对行首 $绝对行尾 ^ 跳转至行首的第一个非空白字符</description></item><item><title>Vim 问题处理</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/Vim/Vim-%E9%97%AE%E9%A2%98%E5%A4%84%E7%90%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux-%E7%AE%A1%E7%90%86/Linux-%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/Vim/Vim-%E9%97%AE%E9%A2%98%E5%A4%84%E7%90%86/</guid><description>概述 参考：
Vim 黄色阴影处理 经常会出现字符上会出现黄色的阴影部分，虽然不会影响到自己的编辑，但是看着就是不习惯，解决这个问题的方式：
在 vim 编辑器中执行 :nohlsearch 即可 如果希望以后都不在出现这个情况，可以在 /etc/vim/vimrc 文件中添加 set nohlsearch，使之永久生效 Vim中复制粘贴缩进错乱问题的解决方案 不知道大家是否会有这种困扰，例如在 Android Studio 有一段缩进优美的代码实现，例如：
public void sayHello() { String msg = &amp;#34;Hello Vim Paste Mode&amp;#34;; System.out.println(msg); } 当你把这段缩进优美的代码直接 ctrl+c，ctrl+v 到 Vim 的时候，就会出现如下恶心的情况：
可以看到，这种直接粘贴的方式会导致代码丢失和缩进错乱等情况。
解决方案 vim 进入 paste 模式，命令如下：
:set paste 进入 paste 模式之后，再按 i 进入插入模式，进行复制、粘贴就很正常了。
命令模式下，输入下面的命令以解除 paste 模式。
:set nopaste paste 模式主要帮我们做了如下事情：
textwidth 设置为 0 wrapmargin 设置为 0 set noai set nosi softtabstop 设置为 0 revins 重置 ruler 重置 showmatch 重置 formatoptions 使用空值</description></item></channel></rss>