<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦的站点 – 登录 Linux 与 访问控制</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/</link><description>Recent content in 登录 Linux 与 访问控制 on 断念梦的站点</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: 登录 Linux 与 访问控制</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;/blockquote>
&lt;p>想要登录 Linux，必须通过 &lt;a href="https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Terminal%20%E4%B8%8E%20Shell/Terminal%20%E4%B8%8E%20Shell.md">&lt;strong>Terminal(终端)&lt;/strong>&lt;/a>，我们才可以与操作系统进行交互。&lt;/p>
&lt;p>本质上，想要登录 Linux，必然需要调用某些程序(比如 Shell)，以便分配一个终端。通常，我们有多种方式可供选择：&lt;/p>
&lt;ul>
&lt;li>本地命令行登录&lt;/li>
&lt;li>远程命令行登录&lt;/li>
&lt;li>图形界面登录&lt;/li>
&lt;/ul>
&lt;p>Linux 操作系统是一个多用户操作系统，所以除了 &lt;strong>Terminal(终端)&lt;/strong> 以外，还需 &lt;strong>Account(账户)&lt;/strong> 才可以登录上去，Linux 操作系统允许多个用户访问安装在一台机器上的单个系统。每个 &lt;strong>User(用户)&lt;/strong> 都在自己的 &lt;strong>Account(账户)&lt;/strong> 下操作。因此，Account Manager 代表了 Linux 系统管理的核心要素。&lt;/p>
&lt;h1 id="登录-linux">登录 Linux&lt;a class="td-heading-self-link" href="#%e7%99%bb%e5%bd%95-linux" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>我们可以通过多种方式登录 Linux&lt;/p>
&lt;ul>
&lt;li>本地登录&lt;/li>
&lt;li>远程登录&lt;/li>
&lt;/ul>
&lt;h2 id="通过本地-tty-登陆-linux-系统">通过本地 TTY 登陆 Linux 系统&lt;a class="td-heading-self-link" href="#%e9%80%9a%e8%bf%87%e6%9c%ac%e5%9c%b0-tty-%e7%99%bb%e9%99%86-linux-%e7%b3%bb%e7%bb%9f" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>登录 Linux 最基本的方式，就是使用 &lt;code>login&lt;/code> 程序。&lt;/p>
&lt;h3 id="login-程序">login 程序&lt;a class="td-heading-self-link" href="#login-%e7%a8%8b%e5%ba%8f" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>由于历史原因，&lt;code>login&lt;/code> 可能被包含在两个包中：&lt;/p>
&lt;ul>
&lt;li>util-linux&lt;/li>
&lt;li>shadow-utils&lt;/li>
&lt;/ul>
&lt;h4 id="login-的登录行为">login 的登录行为&lt;a class="td-heading-self-link" href="#login-%e7%9a%84%e7%99%bb%e5%bd%95%e8%a1%8c%e4%b8%ba" aria-label="Heading self-link">&lt;/a>&lt;/h4>
&lt;p>当我们刚刚安装完操作系统，systemd-logind.service 服务会让我们看到这样的画面&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/gwpmr6/1634785246289-3a353c73-2899-4b6c-8341-ffc4a02008ef.png" alt="image.png">&lt;/p>
&lt;p>想要在服务器本地登录系统，则需要进行认证，在输入用户名之后，实际上是调用了 &lt;code>login&lt;/code> 这个二进制程序，看到：&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/gwpmr6/1634785206973-885fa7fb-3dfb-4fb1-80c8-1c56cb903974.png" alt="image.png">&lt;/p>
&lt;p>此时我们通过远程方式(如果可以的话)登录服务器，查看进程，将会看到名为 login 的进程&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>$ pgrep login -alf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0000cf;font-weight:bold">600&lt;/span> /lib/systemd/systemd-logind
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0000cf;font-weight:bold">1476&lt;/span> /bin/login -p --
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>当我们输入完密码，经过 &lt;a href="https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95%20Linux%20%E4%B8%8E%20%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/Access%20Control(%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6)/Access%20Control(%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6).md">Access Control(访问控制)&lt;/a> 相关程序的认证之后，login 工具会为我们分配一个 ttyX 的终端设备，然后我们就可以通过 tty 所关联的 Shell(通常是 bash)，与系统进行交互&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/gwpmr6/1634785329507-0cb1fcec-8c6e-4fd0-a99f-005a2b19807e.png" alt="image.png">&lt;/p>
&lt;h4 id="login-关联文件与配置">login 关联文件与配置&lt;a class="td-heading-self-link" href="#login-%e5%85%b3%e8%81%94%e6%96%87%e4%bb%b6%e4%b8%8e%e9%85%8d%e7%bd%ae" aria-label="Heading self-link">&lt;/a>&lt;/h4>
&lt;p>&lt;strong>/etc/login.defs&lt;/strong> # shadow 与 password 套件的配置文件。&lt;/p>
&lt;p>&lt;strong>/etc/pam.d/login&lt;/strong> #&lt;/p>
&lt;h2 id="通过远程的方式来登陆-linux-系统">通过远程的方式来登陆 Linux 系统&lt;a class="td-heading-self-link" href="#%e9%80%9a%e8%bf%87%e8%bf%9c%e7%a8%8b%e7%9a%84%e6%96%b9%e5%bc%8f%e6%9d%a5%e7%99%bb%e9%99%86-linux-%e7%b3%bb%e7%bb%9f" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;h3 id="ssh-程序">ssh 程序&lt;a class="td-heading-self-link" href="#ssh-%e7%a8%8b%e5%ba%8f" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>详见：&lt;a href="https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95%20Linux%20%E4%B8%8E%20%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/Secure%20Shell(SSH)%20%E5%AE%89%E5%85%A8%E5%A4%96%E5%A3%B3%E5%8D%8F%E8%AE%AE/Secure%20Shell(SSH)%20%E5%AE%89%E5%85%A8%E5%A4%96%E5%A3%B3%E5%8D%8F%E8%AE%AE.md">Secure Shell(SSH) 安全外壳协议&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>root &lt;span style="color:#0000cf;font-weight:bold">981&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> Jul08 ? Ss 0:00 /usr/sbin/sshd -D
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>root &lt;span style="color:#0000cf;font-weight:bold">1947&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">981&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 09:05 ? Ss 0:00 &lt;span style="color:#4e9a06">\_&lt;/span> sshd: root@pts/0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>root &lt;span style="color:#0000cf;font-weight:bold">1949&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1947&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> 09:05 pts/0 Ss 0:00 &lt;span style="color:#4e9a06">\_&lt;/span> -bash
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>root &lt;span style="color:#0000cf;font-weight:bold">1970&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1949&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> 09:05 pts/0 R+ 0:00 &lt;span style="color:#4e9a06">\_&lt;/span> ps -ef f
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>OpenSSH 会为用户分配一个 Pseudoterminal(伪终端，即 pts) 以便用户可以与操作系统进行交互。&lt;/p>
&lt;h1 id="登录提示信息">登录提示信息&lt;a class="td-heading-self-link" href="#%e7%99%bb%e5%bd%95%e6%8f%90%e7%a4%ba%e4%bf%a1%e6%81%af" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>通过 &lt;code>touch ~/.hushlogin&lt;/code> 命令可以为当前用户禁用欢迎信息。&lt;/p>
&lt;h2 id="motd">MOTD&lt;a class="td-heading-self-link" href="#motd" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Motd_(Unix)">Wiki:MOTD&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man5/motd.5.html">Manual(手册)，MOTD&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;strong>Message of the day(每日消息，简称 MOTD)&lt;/strong> 是一种比向所有用户发送一个邮件更有效的发送共同的信息的方式&lt;/p>
&lt;h4 id="motd-关联文件">MOTD 关联文件&lt;a class="td-heading-self-link" href="#motd-%e5%85%b3%e8%81%94%e6%96%87%e4%bb%b6" aria-label="Heading self-link">&lt;/a>&lt;/h4>
&lt;ul>
&lt;li>&lt;strong>/etc/default/motd-news&lt;/strong> # 动态 MOTD 新闻信息配置，新闻信息主要是互联网相关的&lt;/li>
&lt;li>&lt;strong>/etc/update-motd.d/&lt;/strong> # MOTD 执行脚本保存路径&lt;/li>
&lt;li>&lt;strong>~/.hushlogin&lt;/strong> # 该文件存在时，将为当前用户禁用 MOTD 消息&lt;/li>
&lt;li>&lt;strong>/etc/pam.d/sshd&lt;/strong> # PAM 模块中可以为 sshd 配置 MOTD。&lt;/li>
&lt;/ul>
&lt;h1 id="访问控制">访问控制&lt;a class="td-heading-self-link" href="#%e8%ae%bf%e9%97%ae%e6%8e%a7%e5%88%b6" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>Linux 的登录与访问控制是相辅相成的，一个用户想要登录 Linux，通常来说都需要经过访问控制系统对其所使用的账户进行认证，只有认证通过后，才可以正常登录。&lt;/p>
&lt;p>一个正常的 Linux 发行版操作系统，通常都提供了多种方式&lt;/p>
&lt;ul>
&lt;li>密码&lt;/li>
&lt;li>会话&lt;/li>
&lt;li>账户锁定&lt;/li>
&lt;li>等等&amp;hellip;&amp;hellip;&lt;/li>
&lt;/ul>
&lt;h2 id="account-manager账户管理">Account Manager(账户管理)&lt;a class="td-heading-self-link" href="#account-manager%e8%b4%a6%e6%88%b7%e7%ae%a1%e7%90%86" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>详见 &lt;a href="https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95%20Linux%20%E4%B8%8E%20%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/Account%20Manager(%E8%B4%A6%E6%88%B7%E7%AE%A1%E7%90%86)/Account%20Manager(%E8%B4%A6%E6%88%B7%E7%AE%A1%E7%90%86).md">Account Manager(账户管理)&lt;/a>&lt;/p>
&lt;h1 id="多窗口操作">多窗口操作&lt;a class="td-heading-self-link" href="#%e5%a4%9a%e7%aa%97%e5%8f%a3%e6%93%8d%e4%bd%9c" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>登录服务器后，我们可以重复登录，以便在多个窗口执行不同的操作以观察服务器状态或排查问题。&lt;/p>
&lt;p>但是当我们在机房通过显示器连接到服务器时，是不像使用 ssh 命令一样方便的，但是依然可以实现多窗口操作。&lt;/p>
&lt;p>使用 &lt;code>Ctrl + Alt + F&amp;lt;X&amp;gt;&lt;/code> 快捷键，即可打开其他窗口，&lt;code>Ctrl + Alt + F2&lt;/code> 切换到第二个窗口，F1 可以切回第一个默认窗口。&lt;/p></description></item><item><title>Docs: PAM(可插入式认证模块)</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/PAM%E5%8F%AF%E6%8F%92%E5%85%A5%E5%BC%8F%E8%AE%A4%E8%AF%81%E6%A8%A1%E5%9D%97/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/PAM%E5%8F%AF%E6%8F%92%E5%85%A5%E5%BC%8F%E8%AE%A4%E8%AF%81%E6%A8%A1%E5%9D%97/</guid><description/></item><item><title>Docs: Secure Shell(SSH) 安全外壳协议</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/Secure-ShellSSH-%E5%AE%89%E5%85%A8%E5%A4%96%E5%A3%B3%E5%8D%8F%E8%AE%AE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/Secure-ShellSSH-%E5%AE%89%E5%85%A8%E5%A4%96%E5%A3%B3%E5%8D%8F%E8%AE%AE/</guid><description/></item><item><title>Docs: Access Control(访问控制)</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/Access-Control%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/Access-Control%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/</guid><description/></item><item><title>Docs: Account Manager(账户管理)</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/Account-Manager%E8%B4%A6%E6%88%B7%E7%AE%A1%E7%90%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/Account-Manager%E8%B4%A6%E6%88%B7%E7%AE%A1%E7%90%86/</guid><description/></item><item><title>Docs: SELinux</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/SELinux/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/SELinux/</guid><description/></item><item><title>Docs: su 与 sudo</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/su-%E4%B8%8E-sudo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/su-%E4%B8%8E-sudo/</guid><description/></item><item><title>Docs: TCP Wrappers</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/TCP-Wrappers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/TCP-Wrappers/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>注意：CentOS8 及 RHEL8 不再支持 TCP_Wrappers！！！！使用 firewalld 代替！！&lt;/p>
&lt;p>&lt;strong>Transmission Control ProtocolWrappers(简称 TCP_Wrappers)&lt;/strong> 是一个基于主机的网络访问控制表系统，用于过滤对类 Unix 系统（如 Linux 或 BSD）的网络访问。&lt;/p>
&lt;p>其能将主机或子网 IP 地址、名称及 ident 查询回复作为筛选标记，实现访问控制。&lt;/p>
&lt;h2 id="tcp_wrappers-特点">Tcp_Wrappers 特点&lt;a class="td-heading-self-link" href="#tcp_wrappers-%e7%89%b9%e7%82%b9" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>工作在第四层（传输层）的 TCP 协议&lt;/li>
&lt;li>对有状态连接的特定服务进行安全检测并实现访问控制&lt;/li>
&lt;li>以库文件形式实现&lt;/li>
&lt;li>某进程是否接受 libwrap 的控制取决于发起此进程的程序在编译时是否针对 libwrap 进行编译的&lt;/li>
&lt;/ul>
&lt;h2 id="判断程序是否支持-tcp_wrappers">判断程序是否支持 Tcp_Wrappers&lt;a class="td-heading-self-link" href="#%e5%88%a4%e6%96%ad%e7%a8%8b%e5%ba%8f%e6%98%af%e5%90%a6%e6%94%af%e6%8c%81-tcp_wrappers" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>程序如果调用了 libwrap.so 库，表示支持。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ldd 程序路径&lt;span style="color:#000;font-weight:bold">|&lt;/span>grep libwrap.so
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>strings 程序路径&lt;span style="color:#000;font-weight:bold">|&lt;/span>grep libwrap.so
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">#ldd /usr/sbin/sshd|grep libwrap.so&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> libwrap.so.0 &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; /lib64/libwrap.so.0 &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>0x00007f9851678000&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">#ldd /usr/sbin/vsftpd |grep libwrap.so&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> libwrap.so.0 &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; /lib64/libwrap.so.0 &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>0x00007f802ef50000&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">#strings `which sshd`|grep libwrap.so&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>libwrap.so.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="tcp_wrappers-的执行处理机制了">TCP_Wrappers 的执行处理机制了&lt;a class="td-heading-self-link" href="#tcp_wrappers-%e7%9a%84%e6%89%a7%e8%a1%8c%e5%a4%84%e7%90%86%e6%9c%ba%e5%88%b6%e4%ba%86" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>TCP_Wrappers 只需要通过两个文件来处理，/etc/hosts.allow 和/etc/hosts.deny。匹配流程如下图&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/cmiwuq/1624581688343-e7b5ceb8-1d56-4b6b-9872-f71462556d23.png" alt="image.png">&lt;/p>
&lt;p>Note：所以，如果想要仅允许一个 ip 可以通过，那么需要在 deny 中拒绝所有，否则只在 allow 添加该 ip，那么其他 ip 在 allow 没匹配到后，会去 deny 查找，如果还是无法匹配，则直接就通过了。&lt;/p>
&lt;h1 id="tcp_wrappers-使用">TCP_Wrappers 使用&lt;a class="td-heading-self-link" href="#tcp_wrappers-%e4%bd%bf%e7%94%a8" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>TCP Wrappers 是通过 /etc/hosts.allow 和 /etc/hosts.deny 这两个配置文件来实现一个类似防火墙的机制。&lt;/p>
&lt;h1 id="tcp_wrappers-关联文件">TCP_Wrappers 关联文件&lt;a class="td-heading-self-link" href="#tcp_wrappers-%e5%85%b3%e8%81%94%e6%96%87%e4%bb%b6" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>帮助参考：man 5 hosts_access，man 5 hosts_options&lt;/p>
&lt;ul>
&lt;li>&lt;strong>/etc/hosts.allow&lt;/strong> # 允许访问规则&lt;/li>
&lt;li>&lt;strong>/etc/hosts.deny&lt;/strong> # 拒绝访问规则&lt;/li>
&lt;/ul>
&lt;p>注意：说明文档中表示此文件也可以实现拒绝的规则，本着见名知义和管理清晰化的指引，这种写法不是讨论的重点。&lt;/p>
&lt;p>&lt;strong>配置文件的写法: Daemon_List : Client_List [:Shell_Command]&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Daemon_List&lt;/strong># 单个应用程序的二进制文件名，而不是服务名，如果有多个，用逗号或空格分隔。如 sshd,vsftpd 或 sshd vsftpd&lt;/p>
&lt;ul>
&lt;li>可以绑定服务地址,如，sshd@192.168.7.202:ALL(比如一台设备有俩网卡俩地址时)&lt;/li>
&lt;li>支持通配符&lt;/li>
&lt;li>内置关键字：
&lt;ul>
&lt;li>ALL 所有进程&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Client_List&lt;/strong> # 客户端列表&lt;/p>
&lt;ul>
&lt;li>基于单个 IP 地址：192.168.10.1&lt;/li>
&lt;li>基于网段 IP 地址：192.168.1. 注意，192.168.1.0 这个写法是错误的。&lt;/li>
&lt;li>基于主机名：www.hunk.tech .hunk.tech 较少用&lt;/li>
&lt;li>基于网络/掩码：192.168.0.0/255.255.255.0&lt;/li>
&lt;li>基于 net/prefixlen: 192.168.1.0/24（仅 CentOS7）&lt;/li>
&lt;li>基于网络组（NIS 域）：@mynetwork&lt;/li>
&lt;li>内置关键字：
&lt;ul>
&lt;li>ALL 所有主机&lt;/li>
&lt;li>LOCAL 名称中不带点的主机&lt;/li>
&lt;li>KNOWN 可以解析的主机名&lt;/li>
&lt;li>UNKNOWN 无法解析的主机名&lt;/li>
&lt;li>PARANOID 正、反向查询不匹配或无法解析&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>支持通配符&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Shell_Command # 执行指令&lt;/strong>
如：sshd:all:spawn echo &amp;ldquo;&lt;code>date +%%F-%%T&lt;/code> from %a pid=%p to %s&amp;rdquo; &amp;raquo; /app/sshd.log&lt;/p>
&lt;ul>
&lt;li>EXCEPT 是排除的意思，一行规则里可以有多个，后面的是对前面的结果集进行排除。
&lt;ul>
&lt;li>vsftpd:172.16. EXCEPT 172.16.100.0/24 EXCEPT 172.16.100.1&lt;/li>
&lt;li>匹配整个 172.16 网段，但是把 172.16.100 的网段排除，在排除 172.16.100 网段中又把 172.16.100.1 的 IP 给排除。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>spawn 启动一个外部程序完成执行的操作，可以支持内置变量。内置变量请 man ,找%的选项
&lt;ul>
&lt;li>&lt;code>%a&lt;/code> (%A) 客户端 IP&lt;/li>
&lt;li>&lt;code>%c&lt;/code> 客户端信息，可以是 IP 或主机名(如果能解析)&lt;/li>
&lt;li>&lt;code>%p&lt;/code> 服务器进程信息 (PID)&lt;/li>
&lt;li>&lt;code>%s&lt;/code> 连接的服务端的信息&lt;/li>
&lt;li>&lt;code>%%&lt;/code> 当规则中包含%时，使用双%转义&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>twist 特殊扩展
&lt;ul>
&lt;li>以指定的命令执行，执行后立即结束该连接。需在 spawn 之后使用。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="应用示例">应用示例&lt;a class="td-heading-self-link" href="#%e5%ba%94%e7%94%a8%e7%a4%ba%e4%be%8b" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>对于 sshd 进程，仅允许 10.10.100.250 访问&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># cat /etc/hosts.allow&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sshd:10.10.100.250
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># cat /etc/hosts.deny&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sshd:ALL
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>或者&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># cat /etc/hosts.deny&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sshd:ALL EXCEPT 10.10.100.250
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用的 2 台测试主机网络 IP 配置如下：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>简称&lt;/th>
&lt;th>主机&lt;/th>
&lt;th>IP 1&lt;/th>
&lt;th>IP 2&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>6A&lt;/td>
&lt;td>6-web-1.hunk.tech&lt;/td>
&lt;td>192.168.7.201&lt;/td>
&lt;td>192.168.5.102&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>7B&lt;/td>
&lt;td>7-web-2.hunk.tech&lt;/td>
&lt;td>192.168.7.202&lt;/td>
&lt;td>192.168.5.103&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>默认 hosts.allow 和 hosts.deny 配置文件为空，表示全部允许。&lt;/p>
&lt;p>拒绝某个 IP 访问：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>7B:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vim /etc/hosts.deny
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sshd:192.168.7.201
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>6A:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">#ssh 192.168.7.202&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ssh_exchange_identification: Connection closed by remote host
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>配置规则保存后，立即生效
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>7B：日志会明确记录
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">#tail -n1 /var/log/secure&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Feb &lt;span style="color:#0000cf;font-weight:bold">8&lt;/span> 11:18:29 7-web-2 sshd&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>1811&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>: refused connect from 192.168.7.201 &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>192.168.7.201&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>把每个 ssh 登录日志记录到文件&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">#vim /etc/hosts.allow&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sshd:all:spawn &lt;span style="color:#204a87">echo&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;`date +%%F-%%T` from %a pid=%p to %s&amp;#34;&lt;/span> &amp;gt;&amp;gt; /app/sshd.log
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">#cat /app/sshd.log&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2018-02-08-15:59:53 from 192.168.7.202 &lt;span style="color:#000">pid&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">2565&lt;/span> to sshd@192.168.7.202
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">#ps aux |grep 2565&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>root &lt;span style="color:#0000cf;font-weight:bold">2565&lt;/span> 0.0 2.3 &lt;span style="color:#0000cf;font-weight:bold">145696&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">5328&lt;/span> ? Ss 15:59 0:00 sshd: root@pts/2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="自动锁定登录失败的-ip">自动锁定登录失败的 IP&lt;a class="td-heading-self-link" href="#%e8%87%aa%e5%8a%a8%e9%94%81%e5%ae%9a%e7%99%bb%e5%bd%95%e5%a4%b1%e8%b4%a5%e7%9a%84-ip" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>编写脚本 /root/bin/checkip.sh，每 5 分钟检查一次，如果发现通过 ssh 登录失败次数超过 10 次，自动将此远程 IP 放入 Tcp_Wrapper 的黑名单中予以禁止防问&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#8f5902;font-style:italic">#定义 休眠时间&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">sleeptime&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">300&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">#定义 通过ssh登录失败次数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">num&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">#定义 黑名单文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">file&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>/etc/hosts.deny
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">#无限循环&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">while&lt;/span> true&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">#将失败登录的记录逐行读入变量&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lastb &lt;span style="color:#000;font-weight:bold">|&lt;/span> grep ssh&lt;span style="color:#000;font-weight:bold">|&lt;/span>awk -F &lt;span style="color:#4e9a06">&amp;#34;[ ]+&amp;#34;&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;{print $3}&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">|&lt;/span>uniq -c &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#204a87;font-weight:bold">while&lt;/span> &lt;span style="color:#204a87">read&lt;/span> conn ip&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">#判断失败次数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;span style="color:#000">$conn&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span> -ge &lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;span style="color:#000">$num&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">#判断记录的IP是否存在&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> egrep -q ^sshd.*&lt;span style="color:#000">$ip&lt;/span> &lt;span style="color:#000">$file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">#如果不存在记录，将追加记录至指定黑名单文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> &lt;span style="color:#000">$?&lt;/span> -ne &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#204a87">echo&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;sshd:&lt;/span>&lt;span style="color:#000">$ip&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span> &amp;gt;&amp;gt; &lt;span style="color:#000">$file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sleep &lt;span style="color:#000">$sleeptime&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">done&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用 &lt;code>watch -n1 cat /etc/hosts.deny&lt;/code> 来观察动态文件&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/cmiwuq/1624581861186-486e5699-5dea-4062-83d7-f7bcb0d874e7.gif" alt="">&lt;/p>
&lt;p>总结：TCP_Wrappers&lt;/p>
&lt;p>适用于需求简单的应用场景，并且受到监控软件的是否支持 libwrap.so 库局限。&lt;/p></description></item><item><title>Docs: 登录与登录信息工具</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/%E7%99%BB%E5%BD%95%E4%B8%8E%E7%99%BB%E5%BD%95%E4%BF%A1%E6%81%AF%E5%B7%A5%E5%85%B7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/%E7%99%BB%E5%BD%95%E4%B8%8E%E7%99%BB%E5%BD%95%E4%BF%A1%E6%81%AF%E5%B7%A5%E5%85%B7/</guid><description/></item></channel></rss>