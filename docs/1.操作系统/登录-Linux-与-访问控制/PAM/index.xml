<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦的站点 – PAM</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/PAM/</link><description>Recent content in PAM on 断念梦的站点</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/PAM/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: PAM</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/PAM/PAM/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/PAM/PAM/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/linux-pam/linux-pam">GitHub 项目，linux-pam&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.linux-pam.org/Linux-PAM-html/">&lt;del>官方文档&lt;/del>&lt;/a>&lt;del>已停止更新不再维护&lt;/del>&lt;/li>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man8/pam.8.html">Manual(手册)，PAM(8)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Pluggable_authentication_module">Wiki, PAM&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Linux_PAM">Wiki, Linux PAM&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.cnblogs.com/kevingrace/p/8671964.html">博客园，Linux 下 PAM 模块学习总结&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.cnblogs.com/yinzhengjie/p/8395279.html">博客园，PAM(Pluggable Authentication Modules)认证机制详情&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.redhat.com/sysadmin/pluggable-authentication-modules-pam">https://www.redhat.com/sysadmin/pluggable-authentication-modules-pam&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.jinbuguo.com/linux/pam.html">金步国，Linux PAM 学习笔记&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;strong>Pluggable Authentication Modules(可插入式认证模块，简称 PAM)&lt;/strong> 是由 Sun 提出的一种认证机制。它通过提供一些动态链接库和一套统一的 API，将系统提供的服务和该服务的认证方式分开，使得系统管理员可以灵活地根据需要给不同的服务配置不同的认证方式而无需更改服务程序，同时也便于向系统中添加新的认证手段。&lt;/p>
&lt;p>在过去，我们想要对一个使用者进行 Authentication(认证)，得要要求用户输入账号密码，然后通过自行撰写的程序来判断该账号密码是否正确。也因为如此，我们常常使用不同的机制来判断账号密码，所以搞的一部主机上面拥有多个各别的认证系统，也造成账号密码可能不同步的验证问题！为了解决这个问题因此有了 PAM 的机制！&lt;/p>
&lt;p>以常见的 su 命令来说，它可以实现用户切换，从 root 切换至其他用户不需要密码、从非 root 用户切换至其他用户则需要验证目标用户的密码，一旦认证成功就以目标用户身份启动 shell 以供使用。本质上，su 只做两件事：(1)认证；(2)启动 shell 。按照传统思路，两件事都很容易实现，例如认证逻辑可以用伪代码这样简单的描述：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span> &lt;span style="color:#000">uid&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> 认证成功
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>elseif &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span> &lt;span style="color:#000">输入的密码&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> 目标用户的密码 &lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> 认证成功
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">else&lt;/span> 认证失败
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>但是，认证需求不是一成不变的。例如：&lt;/p>
&lt;ul>
&lt;li>(1)为了方便运维团队成员(也就是 wheel 组)，希望 wheel 组中的用户无需输入密码也能直接进行用户切换；&lt;/li>
&lt;li>(2)为了加强安全性，希望额外验证手机短信；&lt;/li>
&lt;li>(3)为了避免频繁输入难记的用户密码，希望可以选用指纹方式进行验证；&lt;/li>
&lt;li>(4)为了方便某个特定的用户测试，希望仅凭手机短信也能完成验证&lt;/li>
&lt;li>&amp;hellip;&amp;hellip;&lt;/li>
&lt;/ul>
&lt;p>这样一来， su 的开发者将会被迫不断更改 su 的源代码，然后再重新调试、编译、分发，非常辛苦。这种情况下，PAM 就可以对 su 开发者说：&amp;ldquo;认证的事交给我，能不能通过认证由我说了算，你只需做好其他事情(启动 shell)即可&amp;rdquo;；同时又对用户(系统管理员)说：&amp;ldquo;只要学会了 PAM 配置语法，就可以利用各种 PAM 模块，编写出千变万化的认证策略。无需打扰 su 开发者，就能立即得到想要的效果&amp;rdquo;。通过把与认证相关的脏活累活都交给 PAM 来干， su 的开发者与用户之间实现了解耦，彼此皆大欢喜。&lt;/p>
&lt;p>推而广之，如果一个应用程序想要使用 PAM 进行认证，只需在源代码中嵌入 PAM 支持即可(也就是引入相应的头文件)。然后开发者无需再为认证部分操心(是否通过认证交给 PAM 决定)，只需专注程序的其他部分即可。也就是说，无需修改应用程序就可以切换、修改、升级应用程序使用的认证机制。当然，如果只有一个不支持 PAM 的二进制文件，那就没有办法改造了。&lt;/p>
&lt;h1 id="linux-pam">Linux-PAM&lt;a class="td-heading-self-link" href="#linux-pam" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>Linux-PAM 就是一种 Linux 平台上的 PAM 实现&lt;/p>
&lt;p>我们可以通过 &lt;code>ldd&lt;/code> 命令查出来进程是否支持 PAM&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># ldd $(which login) | grep pam&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> libpam.so.0 &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; /lib/x86_64-linux-gnu/libpam.so.0 &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>0x00007f53a3720000&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> libpam_misc.so.0 &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; /lib/x86_64-linux-gnu/libpam_misc.so.0 &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>0x00007f53a371b000&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Linux-PAM 可以说是一套 API 与 Library，为应用程序提供完整的 &lt;strong>Autherntication(认证)&lt;/strong> 机制，只要使用者将认证阶段的需求告知 PAM 后，PAM 就能够回报使用者认证的结果(成功或失败)。由于 PAM 仅是一套认证的机制，又可以提供给其他程序所呼叫引用，因此不论你使用什么程序，都可以使用 PAM 来进行认证，如此一来，就能够让账号密码或者是其他方式的认证具有一致的结果！也让程序设计师方不在着重处理认证的问题。&lt;/p>
&lt;h2 id="linux-pam-管理组认证功能的分组">Linux-PAM 管理组(认证功能的分组)&lt;a class="td-heading-self-link" href="#linux-pam-%e7%ae%a1%e7%90%86%e7%bb%84%e8%ae%a4%e8%af%81%e5%8a%9f%e8%83%bd%e7%9a%84%e5%88%86%e7%bb%84" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>Linux-PAM 将认证功能分为 4 个管理组(也可以称为：管理类型)，注意：相同的 PAM 模块关联到不同的管理类型时，产生的效果是不同的。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Authentication Management(身份认证管理)&lt;/strong> # 认证用户并设置用户凭据。通常，这是通过用户必须满足的一些质询响应请求: 如果你是你声称的那个人，请输入你的密码。
&lt;ul>
&lt;li>对应配置文件中的 &lt;strong>auth&lt;/strong> 关键字&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Account Management(账户管理)&lt;/strong> # 提供账户认证服务类型。比如用户的密码是否已过期;该用户是否允许访问所请求的服务
&lt;ul>
&lt;li>对应配置文件中的 &lt;strong>account&lt;/strong> 关键字&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Password Management(密码管理)&lt;/strong> # 更新身份认证机制。通常，此类服务与 Authentication Management 紧密耦合。一些身份认证机制很适合使用这种功能进行更新。类 Unix 系统基于密码的访问是一个明显的例子
&lt;ul>
&lt;li>对应配置文件中的 &lt;strong>password&lt;/strong> 关键字&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Session Management(会话管理)&lt;/strong> # 会话管理任务涵盖应在提供服务前以及撤回后的服务。这些任务包括维护审计跟踪和用户主目录的安装。会话管理组很重要，因为它提供了用于模块的开放和关闭钩子，以影响用户可用的服务。
&lt;ul>
&lt;li>对应配置文件中的 &lt;strong>session&lt;/strong> 关键字&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>注意：上面说的&amp;quot;凭据&amp;quot;不仅仅指密码，而是泛指一切认证方式，例如：一次性密码、指纹、短信、IP 地址、二维码。除验证凭据之外，还可以进一步执行更多的关联操作，例如：修改账户所属的组、显示特定的提示信息、赋予账户某些权限。&lt;/p>
&lt;p>也可以这么说，PAM 将模块分为 4 大类，每个模块都可以属于一个或多个类型，当指定一个模块的类别的时，当通过 API 调用该模块时，其行为也会变为对应模块类型的行为。&lt;/p>
&lt;p>另外，从某种角度看，这 4 个管理类型，也可以称为 4 个 stack(栈)，每个&lt;strong>栈&lt;/strong>都是由一组规则组成。&lt;strong>规则栈&lt;/strong>的概念在下文有详细描述。&lt;/p>
&lt;p>上述 4 种功能，都可以通过位于 /lib/security/ 或 /lib64/security/ 中的各种 PAM 模块实现，模块名称一般都符合 &lt;code>pam_*.so&lt;/code> 格式&lt;/p>
&lt;h2 id="linux-pam-的运行方式">Linux-PAM 的运行方式&lt;a class="td-heading-self-link" href="#linux-pam-%e7%9a%84%e8%bf%90%e8%a1%8c%e6%96%b9%e5%bc%8f" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span> +----------------+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> application: X &lt;span style="color:#000;font-weight:bold">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> +----------------+ / +----------+ +&lt;span style="color:#ce5c00;font-weight:bold">================&lt;/span>+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> authentication-&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>----&amp;gt;----&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> Linux- &lt;span style="color:#000;font-weight:bold">|&lt;/span>--&amp;lt;--&lt;span style="color:#000;font-weight:bold">|&lt;/span> PAM config file&lt;span style="color:#000;font-weight:bold">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> + &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>----&amp;lt;--/--&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> PAM &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">================&lt;/span>&lt;span style="color:#000;font-weight:bold">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">|&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>conversation&lt;span style="color:#ce5c00;font-weight:bold">()][&lt;/span>--+ &lt;span style="color:#4e9a06">\ &lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> X auth .. a.so &lt;span style="color:#000;font-weight:bold">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> +----------------+ &lt;span style="color:#000;font-weight:bold">|&lt;/span> / +-n--n-----+ &lt;span style="color:#000;font-weight:bold">|&lt;/span> X auth .. b.so &lt;span style="color:#000;font-weight:bold">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> __&lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> _____/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> service user &lt;span style="color:#000;font-weight:bold">|&lt;/span> A &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span>____,-----&lt;span style="color:#a40000">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> V A
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> +----------------+ +------&lt;span style="color:#000;font-weight:bold">|&lt;/span>-----&lt;span style="color:#000;font-weight:bold">|&lt;/span>---------+ -----+------+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> +---u-----u----+ &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> auth.... &lt;span style="color:#000;font-weight:bold">|&lt;/span>--&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> a &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>--&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> b &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>--&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> c &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> +--------------+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> acct.... &lt;span style="color:#000;font-weight:bold">|&lt;/span>--&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> b &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>--&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> d &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> +--------------+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> password &lt;span style="color:#000;font-weight:bold">|&lt;/span>--&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> b &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>--&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> c &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> +--------------+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> session &lt;span style="color:#000;font-weight:bold">|&lt;/span>--&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> e &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>--&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> c &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>PAM 大体分为三个部分&lt;/p>
&lt;ul>
&lt;li>应用层 # 包括 ftpd、login、passwd 等应用程序&lt;/li>
&lt;li>接口层 # 连接 应用层 与 身份认证协议层 的接口，包括一些配置文件，通过配置文件可以选择应用程序所采用的认证方案(即所使用的模块及其参数)&lt;/li>
&lt;li>身份认证协议层 # 由各种模块实现的 Unix、Kerberos、S/Key 等身份认证方案&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/ey0dgw/1635432839615-8af1927e-94eb-4119-8444-7dd023925c06.png" alt="image.png">&lt;/p>
&lt;ul>
&lt;li>应用程序的开发者，通过在代码中导入 PAM API 库，从而实现对认证方法的调用；&lt;/li>
&lt;li>PAM 模块的开发者，则利用 PAM SPI(Service Module API) 来编写模块，以便将不同的认证机制加入到系统中；&lt;/li>
&lt;li>PAM 核心库(libpam) 则会读取配置文件，以此为根据，将应用程序和对应的认证方法联系起来&lt;/li>
&lt;/ul>
&lt;p>PAM 通过一个与程序相同文件名的配置文件来进行一连串的认证分析需求(也可以通过程序的配置指定具体的 PAM 配置文件路径)。如上图所示，应用程序 X 调用 Linux-PAM 库，这是一个核心模块，它并不负责认证动作，仅用来暴露 PAM API 以及调用 PAM 模块，真正的认证动作是 PAM 库根据&lt;strong>自定义的 PAM 配置文件&lt;/strong> 逐一调用模块进行认证的。PAM 读取配置文件之后会根据读取到的内容进行相应的认证操作，最后会将认证的结果返回给应用程序。&lt;/p>
&lt;p>这个 PAM 配置文件，分为 4 个部分，分别是 4 个管理类型，这四个部分都有一个或多个规则来执行认证操作，多个规则组合成一个规则栈。就像上图描述的&lt;/p>
&lt;ul>
&lt;li>a、b、c 模块进行 auth 认证&lt;/li>
&lt;li>b、d 模块进行 account 认证&lt;/li>
&lt;li>b、c 模块进行 password 认证&lt;/li>
&lt;li>e、c 模块进行 session 认证&lt;/li>
&lt;/ul>
&lt;p>一个或多个模块对同一类管理类型进行认证操作，并统一处理结果，以一个整体响应给调用 PAM 的应用程序。所以，总结一下，调用 Linux-PAM 时，其实最多只会返回 4 个结果，因为同一个服务的相同管理类型下的规则，是作为一个整体的。&lt;/p>
&lt;p>让我们看看当本地的用户登录到基于文本的控制台时所采取的步骤：&lt;/p>
&lt;ul>
&lt;li>auth 认证 # 登录应用程序提示输入用户名和密码，然后进行 libpam 身份认证调用以询问：“这个用户是他们所说的吗？” 该 pam_unix 模块负责检查本地账户认证。也可能会检查其他模块，最终将结果传递回登录过程。&lt;/li>
&lt;li>account 认证 # 登录过程接下来会询问“此用户是否允许连接？”，然后对 进行帐户调用 libpam。该 pam_unix 模块会检查诸如密码是否已过期之类的内容。其他模块可能会检查主机或基于时间的访问控制列表。总体响应将返回给流程。
&lt;ul>
&lt;li>如果密码已过期，应用程序会做出响应。某些应用程序根本无法登录用户。登录过程会提示用户输入新密码。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>password 认证 # 为了验证密码并将其写入正确的位置，登录过程会对 进行密码调用 libpam。该 pam_unix 模块写入到本地 &lt;strong>shadow&lt;/strong> 文件。也可以调用其他模块来验证密码强度。
&lt;ul>
&lt;li>如果此时登录过程仍在继续，则已准备好创建会话。会话调用 libpam 导致 pam_unix 模块将登录时间戳写入&lt;strong>wtmp&lt;/strong>文件。其他模块启用 X11 身份认证或 SELinux 用户上下文。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>session 认证 # 在注销时，当会话关闭时，可以对 进行另一个会话调用 libpam。这是 pam_unix 模块将注销时间戳写入&lt;strong>wtmp&lt;/strong>文件的时间。&lt;/li>
&lt;/ul>
&lt;h2 id="rules-stack规则栈">Rules stack(规则栈)&lt;a class="td-heading-self-link" href="#rules-stack%e8%a7%84%e5%88%99%e6%a0%88" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>Linux-PAM 可以通过一组规则栈，对一个程序进行多重验证，假如现在有下面一个服务所使用的 PAM 配置：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>auth requisite pam_authtok_get.so.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>auth required pam_dhkeys.so.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>auth required pam_unix_cred.so.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>auth required pam_unix_auth.so.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>auth required pam_dial_auth.so.1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这就是一组规则栈，用来执行 auth 认证行为，每条规则的执行结果进行集合处理，按照从上到下的顺序逐一执行，每条规则的返回码都会根据 Control 的配置集成到整体结果中。所以，有可能这一组规则只执行了 1 条就停止了，也有可能所有都执行了。&lt;/p>
&lt;h1 id="linux-pam-关联文件与配置">Linux-PAM 关联文件与配置&lt;a class="td-heading-self-link" href="#linux-pam-%e5%85%b3%e8%81%94%e6%96%87%e4%bb%b6%e4%b8%8e%e9%85%8d%e7%bd%ae" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;strong>/etc/pam.conf&lt;/strong> # PAM 的默认配置文件，当存在 pam.d 文件夹时，自动接管配置，不再读取 pam.conf 下的配置&lt;/p>
&lt;p>&lt;strong>/etc/pam.d/&lt;/strong> # PAM 的配置文件，当存在该目录时，不再读取 pam.conf 文件中的配置。该目录下的文件，通常都是由其他应用程序在安装时自动创建的。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>/etc/pam.d/sshd&lt;/strong> # 使用 ssh 方式登录时候的配置文件&lt;/li>
&lt;li>&lt;strong>/etc/pam.d/login&lt;/strong> # 使用 tty 方式登录时候的配置文件。i.e.通过设备直接登录或者 su 方式切换用户&lt;/li>
&lt;li>&lt;strong>/etc/pam.d/remote&lt;/strong> # 使用 telnet 方式登录时候的配置文件&lt;/li>
&lt;li>&lt;strong>/etc/pam.d/kde&lt;/strong> # 使用&amp;quot;图形界面&amp;quot;方式登录时候的配置文件&lt;/li>
&lt;li>&lt;strong>/etc/pam.d/system-auth&lt;/strong> # 配置凡是调用 system-auth 文件的服务，都会生效&lt;/li>
&lt;li>&lt;strong>/etc/pam.d/common-auth&lt;/strong> # 此文件中的安全策略可以限制用户不能更改为之前使用的历史密码&lt;/li>
&lt;li>&amp;hellip;&amp;hellip; 等等&lt;/li>
&lt;/ul>
&lt;p>&lt;code>/usr/lib64/security/&lt;/code> # CentOS 发行版的 PAM 模块存放目录&lt;/p>
&lt;p>&lt;code>/usr/lib/x86_64-linux-gnu/&lt;/code> # Ubuntu 发行版的 PAM 模块存放目录&lt;/p>
&lt;h1 id="linux-pam-认证机制示例">Linux-PAM 认证机制示例&lt;a class="td-heading-self-link" href="#linux-pam-%e8%ae%a4%e8%af%81%e6%9c%ba%e5%88%b6%e7%a4%ba%e4%be%8b" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h2 id="system-auth">system-auth&lt;a class="td-heading-self-link" href="#system-auth" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># grep -v ^# /etc/pam.d/system-auth&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>auth required pam_env.so
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>auth sufficient pam_unix.so nullok try_first_pass
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>auth requisite pam_succeed_if.so uid &amp;gt;&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">500&lt;/span> quiet
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>auth required pam_deny.so
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>account required pam_unix.so
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>account sufficient pam_localuser.so
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>account sufficient pam_succeed_if.so uid &amp;lt; &lt;span style="color:#0000cf;font-weight:bold">500&lt;/span> quiet
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>account required pam_permit.so
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>password requisite pam_cracklib.so try_first_pass &lt;span style="color:#000">retry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">3&lt;/span> &lt;span style="color:#000">type&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>password sufficient pam_unix.so sha512 shadow nullok try_first_pass use_authtok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>password required pam_deny.so
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>session optional pam_keyinit.so revoke
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>session required pam_limits.so
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>session &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>&lt;span style="color:#000">success&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#000">default&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>ignore&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> pam_succeed_if.so service in crond quiet use_uid
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>session required pam_unix.so
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>第一部分表示，当用户登录的时候，首先会通过 auth 类接口对用户身份进行识别和密码认证。所以在该过程中验证会经过几个带 auth 的配置项。&lt;/p>
&lt;p>其中的第一步是通过 pam_env.so 模块来定义用户登录之后的环境变量， pam_env.so 允许设置和更改用户登录时候的环境变量，默认情况下，若没有特别指定配置文件，将依据/etc/security/pam_env.conf 进行用户登录之后环境变量的设置。&lt;/p>
&lt;p>然后通过 pam_unix.so 模块来提示用户输入密码，并将用户密码与/etc/shadow 中记录的密码信息进行对比，如果密码比对结果正确则允许用户登录，而且该配置项的使用的是“sufficient”控制位，即表示只要该配置项的验证通过，用户即可完全通过认证而不用再去走下面的认证项。不过在特殊情况下，用户允许使用空密码登录系统，例如当将某个用户在/etc/shadow 中的密码字段删除之后，该用户可以只输入用户名直接登录系统。&lt;/p>
&lt;p>下面的配置项中，通过 pam_succeed_if.so 对用户的登录条件做一些限制，表示允许 uid 大于 500 的用户在通过密码验证的情况下登录，在 Linux 系统中，一般系统用户的 uid 都在 500 之内，所以该项即表示允许使用 useradd 命令以及默认选项建立的普通用户直接由本地控制台登录系统。&lt;/p>
&lt;p>最后通过 pam_deny.so 模块对所有不满足上述任意条件的登录请求直接拒绝，pam_deny.so 是一个特殊的模块，该模块返回值永远为否，类似于大多数安全机制的配置准则，在所有认证规则走完之后，对不匹配任何规则的请求直接拒绝。&lt;/p>
&lt;p>第二部分的三个配置项主要表示通过 account 账户类接口来识别账户的合法性以及登录权限。&lt;/p>
&lt;p>第一行仍然使用 pam_unix.so 模块来声明用户需要通过密码认证。第二行承认了系统中 uid 小于 500 的系统用户的合法性。之后对所有类型的用户登录请求都开放控制台。&lt;/p>
&lt;p>第三部分会通过 password 类接口来确认用户使用的密码或者口令的合法性。第一行配置项表示需要的情况下将调用 pam_cracklib 来验证用户密码复杂度。如果用户输入密码不满足复杂度要求或者密码错，最多将在三次这种错误之后直接返回密码错误的提示，否则期间任何一次正确的密码验证都允许登录。需要指出的是，pam_cracklib.so 是一个常用的控制密码复杂度的 pam 模块，关于其用法举例我们会在之后详细介绍。之后带 pam_unix.so 和 pam_deny.so 的两行配置项的意思与之前类似。都表示需要通过密码认证并对不符合上述任何配置项要求的登录请求直接予以拒绝。不过用户如果执行的操作是单纯的登录，则这部分配置是不起作用的。&lt;/p>
&lt;p>第四部分主要将通过 session 会话类接口为用户初始化会话连接。其中几个比较重要的地方包括，使用 pam_keyinit.so 表示当用户登录的时候为其建立相应的密钥环，并在用户登出的时候予以撤销。不过该行配置的控制位使用的是 optional，表示这并非必要条件。之后通过 pam_limits.so 限制用户登录时的会话连接资源，相关 pam_limit.so 配置文件是 /etc/security/limits.conf，默认情况下对每个登录用户都没有限制。关于该模块的配置方法在后面也会详细介绍。&lt;/p></description></item><item><title>Docs: PAM 配置文件</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/PAM/PAM-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/PAM/PAM-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man5/pam.conf.5.html">Manual(手册)，pam.conf(5)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>这是一个最基本的配置文件示例：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">#%PAM-1.0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>auth required pam_deny.so
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>account required pam_deny.so
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>password required pam_deny.so
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>session required pam_deny.so
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="syntax语法">Syntax(语法)&lt;a class="td-heading-self-link" href="#syntax%e8%af%ad%e6%b3%95" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>PAM 配置文件由 &lt;strong>Rules(规则)&lt;/strong> 列表组成，每条规则一行。规则是由空格分割的多个 &lt;strong>Tokens&lt;/strong> 组成&lt;/p>
&lt;blockquote>
&lt;p>不知道官方为什么把每个字段要称为 Token 。。。o(╯□╰)o&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Service Type Control Module-Path Module-Arguments&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Service&lt;/strong> # 需要调用 PAM 的应用程序的名称。比如 su、login、sshd 等等
&lt;ul>
&lt;li>注意：/etc/pam.conf 和 /etc/pam.d/* 配置文件有一点差别，在于 Service 字段。/etc/pam.d/ 目录下的所有配置文件，没有 Service 字段，取而代之的是文件名称，也就是说，Service 字段的值，就是 /etc/pam.d/ 目录下的文件名。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Type&lt;/strong> # 管理类型，这个类型就是 《&lt;a href="https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95%20Linux%20%E4%B8%8E%20%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/PAM/PAM.md#Linux-PAM%20%E7%AE%A1%E7%90%86%E7%BB%84(%E8%AE%A4%E8%AF%81%E5%8A%9F%E8%83%BD%E7%9A%84%E5%88%86%E7%BB%84)">Linux-PAM 管理组(认证功能的分组)&lt;/a>》 的简写。即.本条规则中使用的模块要与哪个管理组关联。
&lt;ul>
&lt;li>可用的类型有 auth、account、password、session&lt;/li>
&lt;li>若在类型前面加上 &lt;code>-&lt;/code>，则表示即使模块不存在，也不会影响认证结果，也不会将事件记录到日志中。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Control&lt;/strong> # 规则执行完成后的行为。即调用 PAM API 完成后，会有返回值，根据返回值，决定如何进行后续认证。&lt;/li>
&lt;li>&lt;strong>Module-Path&lt;/strong> # 规则调用的 PAM 模块名称，模块默认在 &lt;strong>/usr/lib64/security/&lt;/strong> 目录(CentOS 系统)下。
&lt;ul>
&lt;li>不同系统中，模块所在的默认路径可能不一样。&lt;/li>
&lt;li>若调用的 PAM 模块不在默认目录下，则该字段需要使用&lt;strong>模块的绝对路径&lt;/strong>。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Module-Arguments&lt;/strong> # 规则调用的 PAM 模块的参数。每个参数以空格分隔。&lt;/li>
&lt;/ul>
&lt;h2 id="service">Service&lt;a class="td-heading-self-link" href="#service" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>Service 除了以应用程序命名，还可以使用自定义的名称，这些名称通常通过 include 这种 Control 行为引用该 Service。&lt;/p>
&lt;h2 id="type">Type&lt;a class="td-heading-self-link" href="#type" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>指定规则所属的管理组。用于定义规则调用的模块需要与哪个管理类型关联。&lt;/p>
&lt;blockquote>
&lt;p>也就是指定这条规则指定的模块应该使用的模块类型。&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>&lt;strong>account&lt;/strong> # 对应账户管理。验证用户是否有权限访问。
&lt;ul>
&lt;li>比如验证用户的密码是否过期、验证用户是否有权访问所请求的服务&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>auth&lt;/strong> # 对应身份验证管理。验证用户身份，就是证明 root 是 root
&lt;ul>
&lt;li>比如让应用程序提示用户输入密码来确定该用户就是其所声称的身份。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>password&lt;/strong> # 对应密码管理，用于更改用户密码以及强制使用强密码配置
&lt;ul>
&lt;li>比如修改密码时，必须满足强度要求。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>session&lt;/strong> # 对应会话管理，用户管理和配置用户会话。会话在用户成功认证后启动生效&lt;/li>
&lt;/ul>
&lt;p>account 与 auth 的配合可以实现这么一个场景：&lt;/p>
&lt;ul>
&lt;li>比如现在有这么一个场景，张三要去商场买酱油。当张三到达商场后，保安人员首先要对张三进行认证，确认张三这个人可以进入商场；然后张三到达货柜拿走酱油去结账，收银人员进行授权检查，核验张三是否有权力购买酱油。&lt;/li>
&lt;/ul>
&lt;h2 id="control">Control&lt;a class="td-heading-self-link" href="#control" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>Control 会根据当前规则的执行结果，执行后续操作，也就是控制。比如当一条规则失败时，是否继续执行后面的规则；当一条规则成功时，是否执行后面的规则；等等。&lt;/p>
&lt;p>Control 有两种语法，简单与复杂。简单语法通过单一的指令，来定义规则执行后的行为；复杂指令通过 1 个或多个键值对来定义规则执行后的行为。&lt;/p>
&lt;h4 id="简单语法">简单语法&lt;a class="td-heading-self-link" href="#%e7%ae%80%e5%8d%95%e8%af%ad%e6%b3%95" aria-label="Heading self-link">&lt;/a>&lt;/h4>
&lt;ul>
&lt;li>&lt;strong>requisite&lt;/strong> # 验证失败时，立即结束整个验证过程，返回 failure。
&lt;ul>
&lt;li>就好比让你答题 100 道，如果在答题的过程中有一道做错了直接让你出去，不会进行下面的答题过程。拥有一票否决，此关不过，立即返回 failure。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>required&lt;/strong> # 验证失败时，最后会返回 failure，但仍需执行同一个规则栈中的其他规则。拥有参考其他模块意见基础之上的一票否决权。可以通过其它模块来检查为什么验证没有通过。&lt;/li>
&lt;li>&lt;strong>sufficient&lt;/strong> # 验证成功且之前的 required 模块没有失败时，立即结束整个验证过程，返回 true。验证失败时，忽略失败结果并继续执行栈中的后续规则。
&lt;ul>
&lt;li>换句话说，sufficient 的验证失败对整个验证没有任何影响。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>optional&lt;/strong> # 可选条件，无论验证结果如何，均不会影响。通常用于 session 类型。
&lt;ul>
&lt;li>该模块返回的通过/失败结果被忽略。当没有其他模块被引用时，标记为 optional 模块并且成功验证时该模块才是必须的。该模块被调用来执行一些操作，并不影响模块堆栈的结果。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>include&lt;/strong> # 包含另外一个配置文件中&lt;strong>相同类型&lt;/strong>的行。比如 &lt;code>password include system-auth-ac&lt;/code> 则会从 system-auth-ac 文件中，将 Type 字段为 password 的行填充到本文件中。
&lt;ul>
&lt;li>为当前规则中指定的 Type 引用 Module-Path 中定义的规则&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>substack&lt;/strong> # 子栈。这与 include 的不同之处在于，对子规则栈中的 done 和 die 操作的评估不会导致跳过完整模块堆栈的其余部分&lt;/li>
&lt;/ul>
&lt;h4 id="复杂语法">复杂语法&lt;a class="td-heading-self-link" href="#%e5%a4%8d%e6%9d%82%e8%af%ad%e6%b3%95" aria-label="Heading self-link">&lt;/a>&lt;/h4>
&lt;p>&lt;strong>[Value1=Acton1 Value2=Action2 &amp;hellip; ValueN=ActionN]&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Value # 该规则调用的模块执行完成后的返回码。
&lt;ul>
&lt;li>可用的返回码有：&lt;strong>success&lt;/strong>; &lt;strong>open_err&lt;/strong>; &lt;strong>symbol_err&lt;/strong>; &lt;strong>service_err&lt;/strong>; &lt;strong>system_err&lt;/strong>; &lt;strong>buf_err&lt;/strong>; &lt;strong>perm_denied&lt;/strong>; &lt;strong>auth_err&lt;/strong>; &lt;strong>cred_insufficient&lt;/strong>; &lt;strong>authinfo_unavail&lt;/strong>; &lt;strong>user_unknown&lt;/strong>; &lt;strong>maxtries&lt;/strong>; &lt;strong>new_authtok_reqd&lt;/strong>; &lt;strong>acct_expired&lt;/strong>; &lt;strong>session_err&lt;/strong>; &lt;strong>cred_unavail&lt;/strong>; &lt;strong>cred_expired&lt;/strong>; &lt;strong>cred_err&lt;/strong>; &lt;strong>no_module_data&lt;/strong>; &lt;strong>conv_err&lt;/strong>; &lt;strong>authtok_err&lt;/strong>; &lt;strong>authtok_recover_err&lt;/strong>; &lt;strong>authtok_lock_busy&lt;/strong>; &lt;strong>authtok_disable_aging&lt;/strong>; &lt;strong>try_again&lt;/strong>; &lt;strong>ignore&lt;/strong>; &lt;strong>abort&lt;/strong>; &lt;strong>authtok_expired&lt;/strong>; &lt;strong>module_unknown&lt;/strong>; &lt;strong>bad_item&lt;/strong>; and &lt;strong>default&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Action # 表示当发现该返回码时，要执行的行为。
&lt;ul>
&lt;li>可用的行为有：&lt;strong>ignore、bad、die、ok、done、reset、N&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="简单语法与复杂语法的对应关系">简单语法与复杂语法的对应关系&lt;a class="td-heading-self-link" href="#%e7%ae%80%e5%8d%95%e8%af%ad%e6%b3%95%e4%b8%8e%e5%a4%8d%e6%9d%82%e8%af%ad%e6%b3%95%e7%9a%84%e5%af%b9%e5%ba%94%e5%85%b3%e7%b3%bb" aria-label="Heading self-link">&lt;/a>&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>简单语法&lt;/th>
&lt;th>复杂语法&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>required&lt;/td>
&lt;td>[success=ok new_authtok_reqd=ok ignore=ignore default=bad]&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>requisite&lt;/td>
&lt;td>[success=ok new_authtok_reqd=ok ignore=ignore default=die]&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>sufficient&lt;/td>
&lt;td>[success=done new_authtok_reqd=done default=ignore]&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>optional&lt;/td>
&lt;td>[success=ok new_authtok_reqd=ok default=ignore]&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="module-path">Module-Path&lt;a class="td-heading-self-link" href="#module-path" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>在 CentOS 中，模块文件默认在 /usr/lib64/security/ 目录中，以 .so 结尾&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># ls /usr/lib64/security/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pam_access.so pam_cracklib.so pam_env.so pam_filter pam_issue.so pam_listfile.so pam_mkhomedir.so pam_permit.so pam_rhosts.so pam_selinux.so pam_succeed_if.so pam_timestamp.so pam_unix_auth.so pam_userdb.so
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pam_cap.so pam_debug.so pam_exec.so pam_filter.so pam_keyinit.so pam_localuser.so pam_motd.so pam_postgresok.so pam_rootok.so pam_sepermit.so pam_systemd.so pam_tty_audit.so pam_unix_passwd.so pam_warn.so
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pam_chroot.so pam_deny.so pam_faildelay.so pam_ftp.so pam_lastlog.so pam_loginuid.so pam_namespace.so pam_pwhistory.so pam_securetty.so pam_shells.so pam_tally2.so pam_umask.so pam_unix_session.so pam_wheel.so
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pam_console.so pam_echo.so pam_faillock.so pam_group.so pam_limits.so pam_mail.so pam_nologin.so pam_pwquality.so pam_selinux_permit.so pam_stress.so pam_time.so pam_unix_acct.so pam_unix.so pam_xauth.so
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在 Ubuntu 中，模块文件默认在 /usr/lib/x86_64-linux-gnu/security/ 目录中，以 .so 结尾&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># ls /usr/lib/x86_64-linux-gnu/security/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pam_access.so pam_echo.so pam_faildelay.so pam_ftp.so pam_issue.so pam_listfile.so pam_mkhomedir.so pam_permit.so pam_securetty.so pam_stress.so pam_tally.so pam_umask.so pam_wheel.so
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pam_cap.so pam_env.so pam_faillock.so pam_gdm.so pam_keyinit.so pam_localuser.so pam_motd.so pam_pwhistory.so pam_selinux.so pam_succeed_if.so pam_time.so pam_unix.so pam_xauth.so
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pam_debug.so pam_exec.so pam_filter.so pam_gnome_keyring.so pam_lastlog.so pam_loginuid.so pam_namespace.so pam_rhosts.so pam_sepermit.so pam_systemd.so pam_timestamp.so pam_userdb.so
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pam_deny.so pam_extrausers.so pam_fprintd.so pam_group.so pam_limits.so pam_mail.so pam_nologin.so pam_rootok.so pam_shells.so pam_tally2.so pam_tty_audit.so pam_warn.so
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="module-arguments">Module-Arguments&lt;a class="td-heading-self-link" href="#module-arguments" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>详见 &lt;a href="https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95%20Linux%20%E4%B8%8E%20%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/PAM/PAM%20%E6%A8%A1%E5%9D%97%E8%AF%A6%E8%A7%A3/PAM%20%E6%A8%A1%E5%9D%97%E8%AF%A6%E8%A7%A3.md">PAM 模块详解&lt;/a>&lt;/p>
&lt;h1 id="etcpamdpassword-auth-与-etcpamdsystem-auth">/etc/pam.d/password-auth 与 /etc/pam.d/system-auth&lt;a class="td-heading-self-link" href="#etcpamdpassword-auth-%e4%b8%8e-etcpamdsystem-auth" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;ul>
&lt;li>CentOS 发行版中，这个两个文件分别是 password-auth-ac 和 system-auth-ac 的软链接。两个 *-ac 文件，则是由 &lt;code>authconfig&lt;/code> 程序生成的&lt;/li>
&lt;li>Ubuntu 发行版中，这个两个文件分别是 common-password 和 common-auth。这两个文件，则是由 &lt;code>pam-auth-update&lt;/code> 程序生成的。&lt;/li>
&lt;/ul>
&lt;p>通常情况下，如果想要添加更多的认证配置，推荐使用一个新的文件，并使用 include 指令包含这俩文件即可。&lt;/p>
&lt;h2 id="centos-配置">CentOS 配置&lt;a class="td-heading-self-link" href="#centos-%e9%85%8d%e7%bd%ae" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>auth required pam_env.so
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>auth required pam_faildelay.so &lt;span style="color:#000">delay&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">2000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>auth sufficient pam_unix.so nullok try_first_pass
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>auth requisite pam_succeed_if.so uid &amp;gt;&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1000&lt;/span> quiet_success
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>auth required pam_deny.so
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>account required pam_unix.so
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>account sufficient pam_localuser.so
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># 如果用户 ID 小于 1000，直接退出，不再进行验证&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>account sufficient pam_succeed_if.so uid &amp;lt; &lt;span style="color:#0000cf;font-weight:bold">1000&lt;/span> quiet
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>account required pam_permit.so
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>password requisite pam_pwquality.so try_first_pass local_users_only &lt;span style="color:#000">retry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">3&lt;/span> &lt;span style="color:#000">authtok_type&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>password sufficient pam_unix.so sha512 shadow nullok try_first_pass use_authtok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>password required pam_deny.so
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>session optional pam_keyinit.so revoke
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>session required pam_limits.so
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-session optional pam_systemd.so
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>session &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>&lt;span style="color:#000">success&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#000">default&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>ignore&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> pam_succeed_if.so service in crond quiet use_uid
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>session required pam_unix.so
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="etcpamdsshd">/etc/pam.d/sshd&lt;a class="td-heading-self-link" href="#etcpamdsshd" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>这是用于安全的 Shell 服务的 PAM 配置，比如 OpenSSH&lt;/p>
&lt;h2 id="ubuntu-配置">Ubuntu 配置&lt;a class="td-heading-self-link" href="#ubuntu-%e9%85%8d%e7%bd%ae" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># PAM configuration for the Secure Shell service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># Standard Un*x authentication&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>@include common-auth
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># Disallow non-root logins when /etc/nologin exists&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>account required pam_nologin.so
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># Uncomment and edit /etc/security/access.conf if you need to set complex&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># access limits that are hard to express in sshd_config.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># account required pam_access.so&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># Standard Un*x authorization&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>@include common-account
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># SELinux needs to be the first session rule. This ensures that any&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># lingering context has been cleared. Without this it is possible that a&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># module could execute code in the wrong domain.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>session &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>&lt;span style="color:#000">success&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>ok &lt;span style="color:#000">ignore&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>ignore &lt;span style="color:#000">module_unknown&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>ignore &lt;span style="color:#000">default&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>bad&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> pam_selinux.so close
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># Set the loginuid process attribute&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>session required pam_loginuid.so
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># Create a new session keyring&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>session optional pam_keyinit.so force revoke
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># Standard Un*x session setup and teardown&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>@include common-session
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># 登录成功后打印当天消息。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># 这包括来自 /run/motd.dynamic 的动态生成部分和来自 /etc/motd 的静态部分。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># 注释这两行，将会禁用登录后的消息提示功能&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>session optional pam_motd.so &lt;span style="color:#000">motd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>/run/motd.dynamic
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>session optional pam_motd.so noupdate
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># Print the status of the user&amp;#39;s mailbox upon successful login&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>session optional pam_mail.so standard noenv &lt;span style="color:#8f5902;font-style:italic"># [1]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># Set up user limits from /etc/security/limits.conf&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>session required pam_limits.so
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># Read environment variables from /etc/environment and&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># /etc/security/pam_env.conf.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>session required pam_env.so &lt;span style="color:#8f5902;font-style:italic"># [1]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># In Debian 4.0 (etch), locale-related environment variables were moved to&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># /etc/default/locale, so read that as well.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>session required pam_env.so &lt;span style="color:#000">user_readenv&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#000">envfile&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>/etc/default/locale
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># SELinux needs to intervene at login time to ensure that the process starts&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># in the proper default security context. Only sessions which are intended&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># to run in the user&amp;#39;s context should be run after this.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>session &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>&lt;span style="color:#000">success&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>ok &lt;span style="color:#000">ignore&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>ignore &lt;span style="color:#000">module_unknown&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>ignore &lt;span style="color:#000">default&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>bad&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> pam_selinux.so open
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># Standard Un*x password updating&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>@include common-password
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="etcpamdsu">/etc/pam.d/su&lt;a class="td-heading-self-link" href="#etcpamdsu" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;strong>auth sufficient pam_rootok.so&lt;/strong>&lt;/p>
&lt;p>当开始使用 pam_wheel.so 模块时，只有属于 wheel 组的用户，才可以使用 su 命令切换到 root 用户&lt;/p>
&lt;p>&lt;strong>auth sufficient pam_wheel.so trust use_uid&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>当用户在 wheel 组时，使用 su - root 命令不需要密码即可切换到 root 用户&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>auth required pam_wheel.so use_uid&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>当用户在 wheel 组时，使用 su - root 命令需要密码即可切换到 root 用户&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>auth substack system-auth&lt;/strong>&lt;/p>
&lt;p>&lt;strong>auth include postlogin&lt;/strong>&lt;/p>
&lt;p>&lt;strong>account sufficient pam_succeed_if.so uid = 0 use_uid quiet&lt;/strong>&lt;/p>
&lt;p>&lt;strong>account include system-auth&lt;/strong>&lt;/p>
&lt;p>&lt;strong>password include system-auth&lt;/strong>&lt;/p>
&lt;p>&lt;strong>session include system-auth&lt;/strong>&lt;/p>
&lt;p>&lt;strong>session include postlogin&lt;/strong>&lt;/p>
&lt;p>&lt;strong>session optional pam_xauth.so&lt;/strong>&lt;/p>
&lt;h1 id="配置示例">配置示例&lt;a class="td-heading-self-link" href="#%e9%85%8d%e7%bd%ae%e7%a4%ba%e4%be%8b" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;strong>/etc/pam.d/sshd 配置文件示例&lt;/strong>&lt;/p>
&lt;p>注意 sshd、login、remote、kde 这几个文件中的配置大部分都相同，&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># %PAM-1.0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># 最多连续三认认证登录都出错时，60秒后解锁，root用户也可以被锁定，root用户15秒后解锁。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>auth required pam_tally2.so &lt;span style="color:#000">deny&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">3&lt;/span> &lt;span style="color:#000">unlock_time&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">60&lt;/span> even_deny_root &lt;span style="color:#000">root_unlock_time&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">15&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>/etc/pam.d/common-password 文件配置示例&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># 限制用户不能更改为之前使用的历史密码&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>password required pam_pwhistory.so use_authtok &lt;span style="color:#000">remember&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">6&lt;/span> &lt;span style="color:#000">retry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">3&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>问题实例：限制用户不能更改为之前使用的历史密码&lt;/p>
&lt;ul>
&lt;li>Linux 历史密码在 /etc/security/opasswd 中存放&lt;/li>
&lt;li>解决方法
&lt;ul>
&lt;li>临时更改 commen-password 文件修改密码修改策略，去除历史密码的限制，更改完密码后在恢复原来的策略&lt;/li>
&lt;li>删掉 /etc/security/opasswd 中关于被修改文件的内容，这样就检测不到之前的历史密码了&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>Docs: PAM 模块详解</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/PAM/PAM-%E6%A8%A1%E5%9D%97%E8%AF%A6%E8%A7%A3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/PAM/PAM-%E6%A8%A1%E5%9D%97%E8%AF%A6%E8%A7%A3/</guid><description/></item><item><title>Docs: 已弃用模块</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/PAM/%E5%B7%B2%E5%BC%83%E7%94%A8%E6%A8%A1%E5%9D%97/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/PAM/%E5%B7%B2%E5%BC%83%E7%94%A8%E6%A8%A1%E5%9D%97/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h1 id="pam_tally2so-模块">pam_tally2.so 模块&lt;a class="td-heading-self-link" href="#pam_tally2so-%e6%a8%a1%e5%9d%97" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man8/pam_tally2.8.html">Manual(手册)，pam_tally2(8)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>弃用说明：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/linux-pam/linux-pam/releases/tag/v1.4.0">GitHub,linux-pam 项目 1.4.0 版本中对 pam_tall2 模块的弃用说明&lt;/a> 最后一行&lt;/li>
&lt;li>&lt;a href="https://access.redhat.com/solutions/62949">https://access.redhat.com/solutions/62949&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/dev-sec/ansible-collection-hardening/issues/377">https://github.com/dev-sec/ansible-collection-hardening/issues/377&lt;/a>&lt;/li>
&lt;li>由 pam_faillock 模块代替&lt;/li>
&lt;/ul>
&lt;p>登录 Tallying(计数器) 模块&lt;/p>
&lt;p>应用场景：设置 Linux 用户连续 N 次输入错误密码进行登陆时，自动锁定 X 分钟或永久锁定（这里的永久锁定指除非进行手工解锁，否则会一直锁定）。&lt;/p>
&lt;h2 id="配置">配置&lt;a class="td-heading-self-link" href="#%e9%85%8d%e7%bd%ae" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;strong>/var/log/faillog&lt;/strong> #&lt;/p>
&lt;h2 id="模块参数">模块参数&lt;a class="td-heading-self-link" href="#%e6%a8%a1%e5%9d%97%e5%8f%82%e6%95%b0" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>deny=INT&lt;/strong> # 指定认证失败 deny 次后，将执行后面参数的策略。如锁定 N 秒，如果后面没有其他策略指定时，默认永远锁定，除非手动解锁。&lt;/li>
&lt;li>&lt;strong>lock_time=INT&lt;/strong> # 认证失败时锁定 lock_time 秒&lt;/li>
&lt;li>&lt;strong>unlock_time=INT&lt;/strong> # 锁定 unlock_time 秒后，自动解锁用户；&lt;/li>
&lt;li>&lt;strong>even_deny_root&lt;/strong> # root 用户在认证出错时，一样被锁定(该功能慎用)&lt;/li>
&lt;li>&lt;strong>root_unlock_time&lt;/strong> # root 用户锁定后，多久会解锁。该选项一般是配合 even_deny_root 一起使用的。&lt;/li>
&lt;li>&lt;strong>magic_root&lt;/strong> # 如果用户 uid ＝ 0（即 root 账户或相当于 root 的帐户）在帐户认证时调用该模块发现失败时，不计入统计；&lt;/li>
&lt;li>&lt;strong>no_lock_time&lt;/strong> # 不使用.fail_locktime 项在/var/log/faillog 中记录用户 －－－按英文直译不太明白，个人理解即不进行用户锁定；&lt;/li>
&lt;/ul>
&lt;h2 id="模块的命令行工具">模块的命令行工具&lt;a class="td-heading-self-link" href="#%e6%a8%a1%e5%9d%97%e7%9a%84%e5%91%bd%e4%bb%a4%e8%a1%8c%e5%b7%a5%e5%85%b7" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;h3 id="pam_tally2">pam_tally2&lt;a class="td-heading-self-link" href="#pam_tally2" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>pam_tally2 模块的控制工具，用于查询和操作计数器文件(/var/log/faillog)。e.g.查看用户登录失败的次数、清除用户登录失败的次数等等操作&lt;/p>
&lt;p>EXAMPLE&lt;/p>
&lt;ul>
&lt;li>pam_tally2 &amp;ndash;user ftp # 查询 ftp 用户被锁定情况&lt;/li>
&lt;li>pam_tally2 &amp;ndash;user ftp &amp;ndash;reset=0 # 解锁 ftp 用户&lt;/li>
&lt;/ul></description></item></channel></rss>