<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PAM 模块详解 on 断念梦的站点</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/PAM/PAM-%E6%A8%A1%E5%9D%97%E8%AF%A6%E8%A7%A3/</link><description>Recent content in PAM 模块详解 on 断念梦的站点</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/PAM/PAM-%E6%A8%A1%E5%9D%97%E8%AF%A6%E8%A7%A3/index.xml" rel="self" type="application/rss+xml"/><item><title>PAM 模块详解</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/PAM/PAM-%E6%A8%A1%E5%9D%97%E8%AF%A6%E8%A7%A3/PAM-%E6%A8%A1%E5%9D%97%E8%AF%A6%E8%A7%A3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/PAM/PAM-%E6%A8%A1%E5%9D%97%E8%AF%A6%E8%A7%A3/PAM-%E6%A8%A1%E5%9D%97%E8%AF%A6%E8%A7%A3/</guid><description>概述 参考：
pam_faillock # 在指定的时间间隔内维护每个账户在尝试进行身份验证时的失败事件，并且在连续失败时锁定账户。
pam_limits
PAM 的各模块说明 全局参数
file=/PATH/TO/FILE # 用于指定统计次数存放的位置，默认保存在/var/log/tallylog 文件中； onerr # 当意外发生时，返加 PAM_SUCCESS 或 pam 错误代码，一般该项不进行配置； audit # 如果登录的用户不存在，则将访问信息写入系统日志； silent # 静默模式，不输出任何日志信息； no_log_info # 不打印日志信息通过 syslog 上面的五项全局参数，一般在使用中都不需要单独配置。 pam_nologin 这个模块可以限制一般用户是否能够登入主机之用。当 /etc/nologin 这个文件存在时，则所有一般使用者均无法再登入系统了！若 /etc/nologin 存在，则一般使用者在登入时， 在他们的终端机上会将该文件的内容显示出来！所以，正常的情况下，这个文件应该是不能存在系统中的。 但这个模块对 root 以及已经登入系统中的一般账号并没有影响。
pam_pwhistory - 记住最后的密码 参考：
Manual(手册)，pam_pwhistory(8) 该模块用于记住用户设置过的密码，以防止用户在修改密码时频繁交替得使用相同的密码
关联文件 /etc/security/opasswd # 用户设置过的历史密码将会以加密方式保存在该文件中。
模块参数 remember=INT # 用户设置过的 remember 个密码将会保存在 /etc/security/opasswd 文件中。默认值：10。值为 0 时，模块将会保持 opasswd 文件的现有内容不变 pam_pwquality - 密码质量检查 参考：
GitHub 项目，libpwquality/libpwquality Manual(手册)，pam_pwquality(8) pam_pwquality 模块属于 libpwquality 库，最初基于 pam_cracklib 模块，用以执行密码质量检查。仅提供 password 模块类型。</description></item><item><title>pam_faillock</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/PAM/PAM-%E6%A8%A1%E5%9D%97%E8%AF%A6%E8%A7%A3/pam_faillock/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/PAM/PAM-%E6%A8%A1%E5%9D%97%E8%AF%A6%E8%A7%A3/pam_faillock/</guid><description>概述 参考：
Manual(手册)，pam_faillock(8) Ubuntu 22.04 TLS Manual Manual(手册)，faillock.conf(5) https://github.com/dev-sec/ansible-collection-hardening/issues/377 红帽官方文档,安全指南-账户锁 https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/security_guide/chap-hardening_your_system_with_tools_and_services#sect-Security_Guide-Workstation_Security-Account_Locking 提供 auth、account 管理类型的模块
pam_faillock 模块在指定的时间间隔内维护每个账户在尝试进行身份验证时的失败事件，并且在连续失败时锁定账户。
pam_faillock 与大部分模块有一点不同，不建议在 PAM 规则中配置参数，而是推荐使用默认的 /etc/security/faillock.conf 配置文件中配置参数
关联文件 /etc/security/faillock.conf # 运行时配置文件。除了在 /etc/pam.d/ 目录下的文件中配置模块的参数，还可以通过这个文件配置模块的参数。
/var/run/faillock/ # 记录用户身份验证失败的事件。目录中的文件名以用户名命名
模块参数 preauth | authfail | authsucc # 这 3 个参数必须根据该模块实例在 PAM 堆栈中的位置进行设置。
conf=&amp;lt;/PATH/TO/FILE&amp;gt; # 指定要使用的配置文件路径。
除了上面的参数外，模块的其他参数都可以在 /etc/security/faillock.conf 文件中进行配置
命令行工具 faillock faillock [OPTIONS]
管理登录失败锁定记录的工具
~]# faillock developer: When Type Source Valid 2021-10-21 21:42:50 RHOST 172.16.10.11 V root: When Type Source Valid 2021-10-21 21:42:41 RHOST 172.</description></item><item><title>pam_limits</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/PAM/PAM-%E6%A8%A1%E5%9D%97%E8%AF%A6%E8%A7%A3/pam_limits/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/PAM/PAM-%E6%A8%A1%E5%9D%97%E8%AF%A6%E8%A7%A3/pam_limits/</guid><description>概述 参考：
Manual(手册)，pam_limits(8) Manula(手册)，limits.conf(5) 应用场景：我的 Linux 主机里面同时登入了十个人，这十个人不知怎么搞的， 同时开启了 100 个文件，每个文件的大小约 10M ，请问一下， 我的 Linux 主机的内存要有多大才够？ 10*100*10 = 10000M = 10G &amp;hellip; 老天爷，这样，系统不挂点才有鬼哩！为了要预防这个情况 的发生，所以我们是可以『限制用户的某些系统资源』的，包括可以开启的文件数量， 可以使用的 CPU 时间，可以使用的内存总量等等。除了这个模块有这个限制功能外，bash 还自带 ulimit 命令可以实现这个功能。
限制用户会话过程中对各种系统资源的使用情况，默认情况下该模块的配置文件是 /etc/security/limits.conf 该配置文件中的参数，可以通过 ulimit -a 命令查看 关联文件与配置 /etc/security/ #
/etc/security/limits.conf # 限制用户会话过程中对各种系统资源的使用情况的配置文件 配置文件语法 /etc/security/limit.conf 文件语法格式：
&amp;lt;DOMAIN&amp;gt; &amp;lt;TYPE&amp;gt; &amp;lt;ITEM&amp;gt; &amp;lt;VALUE&amp;gt; XXX XXXX XXXX XXXX 用户名/组名 限制类型 要限制的项目 具体值 DOMAIN # 设置需要被限制的用户名或组名，组名前面加@和用户名区别。也可使用通配符 * 来表示所有用户 Notes: Ubuntu 的 Manual-limits.conf(5) 中提到组和通配符限制不适用于 root 用户。要设置 root 用户的限制，此字段必须包含文字用户名 root。在 stackexchange 中的套路提到这是为了解决 bug 63230 TYPE # 在设定上，通常 soft 会比 hard 小，举例来说，soft 可设定为 80 而 hard 设定为 100，那么你可以使用到 90 (因为没有超过 100)，但介于 80~100 之间时，系统会有警告讯息通知你！ hard # 严格的设定，指设定的 value 必定不能超过设定的数值 soft # 警告的设定，指设定的 value 可以超过设定值，但是若超过则有警告讯息。 ITEM # 指定要限制的项目 core # 限制内核文件的大小 何谓 core 文件,当一个程序崩溃时，在进程当前工作目录的 core 文件中复制了该进程的存储图像。core 文件仅仅是一个内存映象（同时加上调试信息），主要是用来调试的。core 文件是个二进制文件，需要用相应的工具来分析程序崩溃时的内存映像，系统默认 core 文件的大小为 0，所以没有被创建。可以用 ulimit 命令查看和修改 core 文件的大小，例如：ulimit -c 1000 # 指定修改 core 文件的大小，1000 指定了 core 文件大小。也可以对 core 文件的大小不做限制，如： ulimit -c unlimited date # 最大数据大小 fsize # 最大文件大小 memlock # 最大锁定内存地址空间 nofile # 打开文件的最大数目，默认为 1024 对于需要做许多套接字连接并使它们处于打开状态的应用程序而言，最好通过使用 ulimit -n，或者通过设置 nofile 参数，为用户把文件描述符的数量设置得比默认值高一些 rss # 最大持久设置大小 stack # 最大栈大小 cpu # 以分钟为单位的最多 CPU 时间 nproc # 打开进程的最大数 as # 地址空间限制 maxlogins # 此用户允许登录的最大数目 VALUE # 指定 ITEM 中具体项目的值 NUM # 可以是具体的数值 unlimited # 表示无限制的 security 目录下文件的配置示例 /etc/security/limits.</description></item></channel></rss>