<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Account Manager(账户管理) on 断念梦的站点</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/Account-Manager%E8%B4%A6%E6%88%B7%E7%AE%A1%E7%90%86/</link><description>Recent content in Account Manager(账户管理) on 断念梦的站点</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/Account-Manager%E8%B4%A6%E6%88%B7%E7%AE%A1%E7%90%86/index.xml" rel="self" type="application/rss+xml"/><item><title>Account Manager(账户管理)</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/Account-Manager%E8%B4%A6%E6%88%B7%E7%AE%A1%E7%90%86/Account-Manager%E8%B4%A6%E6%88%B7%E7%AE%A1%E7%90%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/Account-Manager%E8%B4%A6%E6%88%B7%E7%AE%A1%E7%90%86/Account-Manager%E8%B4%A6%E6%88%B7%E7%AE%A1%E7%90%86/</guid><description>概述 参考：
红帽官方文档，RedHat7 - 管理用户账户的基础知识 红帽官方文档，RedHat7 - 系统管理员指南-第四章-管理用户和组 红帽官方文档，RedHat7 - 安全指南 Linux 操作系统是一个多用户操作系统，所以除了 Terminal(终端) 以外，还需 Account(账户) 才可以登录上去，Linux 操作系统允许多个用户访问安装在一台机器上的单个系统。每个 User(用户) 都在自己的 Account(账户) 下操作。因此，Account Manager 代表了 Linux 系统管理的核心要素。
User 与 Account 傻傻分不清楚，在 Linux 操作系统中，通常都会将 Account 称为 User，但是，这个称呼实际上并不准确。因为一个 User，比如 root，可以被多个现实世界中多个人使用，那么 root 这个 User 就会对应多个真实的 User。这种描述是非常矛盾的。。。
只不过，随着时间的推移，人们慢慢叫习惯了，各种文档和源码也都一直使用 UID 这种名称，也就不再特别区分 Account 和 User 了。只需要知道，UID 更准确的描述应该是 AID。
同时，一个 Linux Account 也可以不代表一个真实的 User，这样的 Account 只被应用程序使用，一个应用程序使用某个 Account 运行，以便让系统更方便得对程序进行精细化控制。这种控制方式称为 Access Control(访问控制)，所以，从这种角度看，Account 也可以称为 Role(角色)，详见 Access Control(访问控制) 章节。
为了方便得对多个 Account 管理，可以将多个 Account 组合起来，称为 Group(组)，一个 Group 就是一个或多个 Account 的集合。</description></item><item><title>账户配置文件</title><link>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/Account-Manager%E8%B4%A6%E6%88%B7%E7%AE%A1%E7%90%86/%E8%B4%A6%E6%88%B7%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%99%BB%E5%BD%95-Linux-%E4%B8%8E-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/Account-Manager%E8%B4%A6%E6%88%B7%E7%AE%A1%E7%90%86/%E8%B4%A6%E6%88%B7%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</guid><description>概述 参考：
passwd 参考：
Manual(手册)，passwd(5) root:x:0:0:root:/root:/bin/bash bin:x:1:1:bin:/bin:/sbin/nologin daemon:x:2:2:daemon:/sbin:/sbin/nologin adm:x:3:4:adm:/var/adm:/sbin/nologin lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin sync:x:5:0:sync:/sbin:/bin/sync shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown halt:x:7:0:halt:/sbin:/sbin/halt mail:x:8:12:mail:/var/spool/mail:/sbin/nologin operator:x:11:0:operator:/root:/sbin/nologin games:x:12:100:games:/usr/games:/sbin/nologin ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin nobody:x:99:99:Nobody:/:/sbin/nologin systemd-network:x:192:192:systemd Network Management:/:/sbin/nologin dbus:x:81:81:System message bus:/:/sbin/nologin polkitd:x:999:998:User for polkitd:/:/sbin/nologin sshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin postfix:x:89:89::/var/spool/postfix:/sbin/nologin tcpdump:x:72:72::/:/sbin/nologin chrony:x:998:996::/var/lib/chrony:/sbin/nologin shadow 参考：
Manual(手册)，shadow(5) 注意：该文件中通常是没有任何 读、写、执行 权限的，不推荐直接使用系统终端直接修改该文件(比如 vi、sed 等命令)，而是通过专用的 chage、useradd、userdel 等等工具修改本文件
shadow 是一个文件，其中包含系统帐户的密码信息和可选的老化信息。如果要维护密码安全，则普通用户不得读取此文件。该文件的每一行包含 9 个字段，以冒号 : 分隔，顺序如下：
login name(登录名称) # 操作系统中有效的账户名称 encrypted password(加密的密码) # 账户对应的密码，该字段的密码是加密后的字符串。 该字段可以为空，这种情况下，无需密码即可登录系统。不过一般默认情况，系统的 PAM 模块会阻止这种行为。 以 ! 开头的表示密码被锁定 date of last password change(上次更改密码的日期) # 上次更改密码的日期。该字段的值，是从 1970 年 1 月 1 日开始到上次修改密码时经过的天数。 minimum password age(最小密码期限) # 简称 MIN_DAYS。自从上次密码修改之后，至少需要 INT 天才可以再次被修改。 如果不满足天数要求，当使用 passwd 命令修改密码时，则会出现如下报错 You must wait longer to change your password，并且直接退出程序，终止用户的修改密码操作。 maximum password age(最大密码期限) # 简称 MAX_DAYS。 密码可以使用的最大天数。如果超过了使用天数，将会被强制更改密码，否则无法登录。值为 -1 则不再限制密码可以使用的最大天数 password warning period(密码警告期限) # 简称 WARN_DAYS。密码到期前发出警告的天数。值为 0 则表示仅在到期日发出警告，负值或不指定值表示不发出警告。 password inctivity period(密码不活动期限) # account expiration data(账户到期日) # reserved field(保留字段) # root:$6$lWEIpm976ef7vNzK$EI.</description></item></channel></rss>