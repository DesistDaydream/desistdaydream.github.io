<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦的站点 – RocketMQ</title><link>https://desistdaydream.github.io/docs/8.%E9%80%9A%E7%94%A8%E6%8A%80%E6%9C%AF/Message-Queue%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/RocketMQ/</link><description>Recent content in RocketMQ on 断念梦的站点</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/8.%E9%80%9A%E7%94%A8%E6%8A%80%E6%9C%AF/Message-Queue%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/RocketMQ/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: RocketMQ</title><link>https://desistdaydream.github.io/docs/8.%E9%80%9A%E7%94%A8%E6%8A%80%E6%9C%AF/Message-Queue%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/RocketMQ/RocketMQ/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/8.%E9%80%9A%E7%94%A8%E6%8A%80%E6%9C%AF/Message-Queue%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/RocketMQ/RocketMQ/</guid><description/></item><item><title>Docs: 在CentOS7上安装RocketMQ 4.7.1解决fastjson低版本漏洞问题</title><link>https://desistdaydream.github.io/docs/8.%E9%80%9A%E7%94%A8%E6%8A%80%E6%9C%AF/Message-Queue%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/RocketMQ/%E5%9C%A8CentOS7%E4%B8%8A%E5%AE%89%E8%A3%85RocketMQ-4.7.1%E8%A7%A3%E5%86%B3fastjson%E4%BD%8E%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E9%97%AE%E9%A2%98/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/8.%E9%80%9A%E7%94%A8%E6%8A%80%E6%9C%AF/Message-Queue%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/RocketMQ/%E5%9C%A8CentOS7%E4%B8%8A%E5%AE%89%E8%A3%85RocketMQ-4.7.1%E8%A7%A3%E5%86%B3fastjson%E4%BD%8E%E7%89%88%E6%9C%AC%E6%BC%8F%E6%B4%9E%E9%97%AE%E9%A2%98/</guid><description>
&lt;h3 id="文章目录--在-centos7-上安装-rocketmq-471-解决-fastjson-低版本漏洞问题">文章目录- 在 CentOS7 上安装 RocketMQ 4.7.1 解决 fastjson 低版本漏洞问题&lt;a class="td-heading-self-link" href="#%e6%96%87%e7%ab%a0%e7%9b%ae%e5%bd%95--%e5%9c%a8-centos7-%e4%b8%8a%e5%ae%89%e8%a3%85-rocketmq-471-%e8%a7%a3%e5%86%b3-fastjson-%e4%bd%8e%e7%89%88%e6%9c%ac%e6%bc%8f%e6%b4%9e%e9%97%ae%e9%a2%98" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>前言&lt;/p>
&lt;/li>
&lt;li>
&lt;p>安装过程&lt;/p>
&lt;/li>
&lt;li>
&lt;p>下载和解压 RocketMQ&lt;/p>
&lt;/li>
&lt;li>
&lt;p>调低 RocketMQ 的 JVM 大小&lt;/p>
&lt;/li>
&lt;li>
&lt;p>bin/runserver.sh&lt;/p>
&lt;/li>
&lt;li>
&lt;p>bin/runserver.sh&lt;/p>
&lt;/li>
&lt;li>
&lt;p>bin/tools.sh&lt;/p>
&lt;/li>
&lt;li>
&lt;p>启动 Name Server&lt;/p>
&lt;/li>
&lt;li>
&lt;p>启动 Broker&lt;/p>
&lt;/li>
&lt;li>
&lt;p>查看 RocketMQ 进程&lt;/p>
&lt;/li>
&lt;li>
&lt;p>测试 RocketMQ&lt;/p>
&lt;/li>
&lt;li>
&lt;p>测试发送消息和接收消息&lt;/p>
&lt;/li>
&lt;li>
&lt;p>关闭 RocketMQ&lt;/p>
&lt;/li>
&lt;li>
&lt;p>关闭 Broker&lt;/p>
&lt;/li>
&lt;li>
&lt;p>关闭 Name Server&lt;/p>
&lt;/li>
&lt;li>
&lt;p>修改 Name Server 的端口&lt;/p>
&lt;/li>
&lt;li>
&lt;p>安装 RocketMQ 控制台&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Troubleshooting&lt;/p>
&lt;/li>
&lt;li>
&lt;p>参考文档&lt;/p>
&lt;/li>
&lt;li>
&lt;p>扩展阅读&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="在-centos7-上安装-rocketmq-471-解决-fastjson-低版本漏洞问题-前言">在 CentOS7 上安装 RocketMQ 4.7.1 解决 fastjson 低版本漏洞问题## 前言&lt;a class="td-heading-self-link" href="#%e5%9c%a8-centos7-%e4%b8%8a%e5%ae%89%e8%a3%85-rocketmq-471-%e8%a7%a3%e5%86%b3-fastjson-%e4%bd%8e%e7%89%88%e6%9c%ac%e6%bc%8f%e6%b4%9e%e9%97%ae%e9%a2%98-%e5%89%8d%e8%a8%80" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>阿里的 fastjson 的低版本（&amp;lt;=1.2.68）被爆出有安全漏洞，而 RocketMQ 4.7.0 使用了 fastjson 1.2.62，因此需要将 RocketMQ 升级到 RocketMQ 4.7.1(fastjson 1.2.69)。本文描述了在 CentOS7 上安装 RocketMQ 4.7.1 的过程，仅作为开发测试环境使用：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>单机部署，Name Server 和 Broker 都装在一台服务器上；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>调低了 RocketMQ 默认的 JVM 大小；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>没有设置开机自启动和守护进程。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="安装过程">安装过程&lt;a class="td-heading-self-link" href="#%e5%ae%89%e8%a3%85%e8%bf%87%e7%a8%8b" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>服务器上已经安装了 OpenJDK 8，并设置了 JAVA_HOME。&lt;/p>
&lt;h3 id="下载和解压-rocketmq">下载和解压 RocketMQ&lt;a class="td-heading-self-link" href="#%e4%b8%8b%e8%bd%bd%e5%92%8c%e8%a7%a3%e5%8e%8b-rocketmq" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>在 RocketMQ 官网上找到下载 RocketMQ 4.7.1 的链接，下载和解压 RocketMQ： # 下载
wget &lt;a href="http://ftp.cuhk.edu.hk/pub/packages/apache.org/rocketmq/4.7.1/rocketmq-all-4.7.1-bin-release.zip">http://ftp.cuhk.edu.hk/pub/packages/apache.org/rocketmq/4.7.1/rocketmq-all-4.7.1-bin-release.zip&lt;/a> # 解压
unzip rocketmq-all-4.7.1-bin-release.zip # 安装到/usr/local/rocketmq
mv rocketmq-all-4.7.1-bin-release /usr/local
ln -s /usr/local/rocketmq-all-4.7.1-bin-release /usr/local/rocketmq
1
2
3
4
5
6
7
8
91
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
Plain Text&lt;/p>
&lt;h3 id="调低-rocketmq-的-jvm-大小">调低 RocketMQ 的 JVM 大小&lt;a class="td-heading-self-link" href="#%e8%b0%83%e4%bd%8e-rocketmq-%e7%9a%84-jvm-%e5%a4%a7%e5%b0%8f" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>RocketMQ 的默认 JVM 太大，不适合在开发测试环境中使用，需要调低 JVM 大小。在 RocketMQ 的安装目录（本例为&lt;code>/usr/local/rocketmq&lt;/code>)，查找 sh 脚本中的 JVM 参数设置：
find . -name &amp;lsquo;*.sh&amp;rsquo; | xargs egrep &amp;lsquo;Xms'1
Plain Text 需要修改以下 sh 脚本的 JVM 参数：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>bin/runserver.sh&lt;/p>
&lt;/li>
&lt;li>
&lt;p>bin/runbroker.sh&lt;/p>
&lt;/li>
&lt;li>
&lt;p>bin/tools.sh&lt;/p>
&lt;blockquote>
&lt;p>修改前记得先备份相应脚本，具体 JVM 大小根据实际情况设定。
bin/runserver.sh 修改前：
JAVA_OPT=&amp;quot;${JAVA_OPT} -server -Xms4g -Xmx4g -Xmn2g -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=320m&amp;quot;1
Plain Text 修改后：
JAVA_OPT=&amp;quot;${JAVA_OPT} -server -Xms256m -Xmx256m -Xmn128m -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=320m&amp;quot;1
Plain Textbin/runserver.sh修改前：
JAVA_OPT=&amp;quot;${JAVA_OPT} -server -Xms4g -Xmx4g -Xmn2g -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=320m&amp;quot;1
Plain Text 修改后：
JAVA_OPT=&amp;quot;${JAVA_OPT} -server -Xms256m -Xmx256m -Xmn128m -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=320m&amp;quot;1
Plain Textbin/tools.sh修改前：
JAVA_OPT=&amp;quot;${JAVA_OPT} -server -Xms1g -Xmx1g -Xmn256m -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=128m&amp;quot;1
Plain Text 修改后：
JAVA_OPT=&amp;quot;${JAVA_OPT} -server -Xms256m -Xmx256m -Xmn128m -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=128m&amp;quot;1
Plain Text&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h3 id="启动-name-server--后台启动">启动 Name Server # 后台启动&lt;a class="td-heading-self-link" href="#%e5%90%af%e5%8a%a8-name-server--%e5%90%8e%e5%8f%b0%e5%90%af%e5%8a%a8" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>nohup sh bin/mqnamesrv &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 &amp;amp;1
2
Plain Text&lt;/p>
&lt;blockquote>
&lt;p>可以将启动 Name Server 命令保存为脚本，以方便下次启动。### 启动 Broker
启动 Broker 时需要指定要连接的 Name Server：
# 后台启动
nohup sh bin/mqbroker -n localhost:9876 &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 &amp;amp;1
2
Plain Text
可以将启动 Broker 命令保存为脚本，以方便下次启动。### 查看 RocketMQ 进程 ps -ef | grep -v grep | grep rocketmq
11
2
3
Plain Text&lt;/p>
&lt;/blockquote>
&lt;h3 id="测试发送消息和接收消息">测试发送消息和接收消息&lt;a class="td-heading-self-link" href="#%e6%b5%8b%e8%af%95%e5%8f%91%e9%80%81%e6%b6%88%e6%81%af%e5%92%8c%e6%8e%a5%e6%94%b6%e6%b6%88%e6%81%af" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>使用 RocketMQ 自带的消息生产者和消费者示例来测试发送消息和接收消息：
export NAMESRV_ADDR=localhost:9876
sh bin/tools.sh org.apache.rocketmq.example.quickstart.Producer
sh bin/tools.sh org.apache.rocketmq.example.quickstart.Consumer
1
2
31
2
3
4
5
6
7
Plain Text&lt;/p>
&lt;h3 id="关闭-broker-sh-binmqshutdown-broker">关闭 Broker sh bin/mqshutdown broker&lt;a class="td-heading-self-link" href="#%e5%85%b3%e9%97%ad-broker-sh-binmqshutdown-broker" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>11
2
3
Plain Text&lt;/p>
&lt;blockquote>
&lt;p>可以将关闭 Broker 命令保存为脚本，以方便下次关闭。### 关闭 Name Server sh bin/mqshutdown namesrv
11
2
3
Plain Text
关闭 Name Server 前需要先关闭 Broker；可以将关闭 Name Server 命令保存为脚本，以方便下次关闭。## 修改 Name Server 的端口
RocketMQ Name Server 的默认端口为 9876，可以通过以下方法修改 Name Server 的端口：&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>
&lt;p>新增一个 Name Server 配置文件 namesrv.conf，保存内容为：listenPort=100761&lt;/p>
&lt;/li>
&lt;li>
&lt;p>1&lt;/p>
&lt;/li>
&lt;li>
&lt;p>启动 Name Server 时指定配置文件：nohup sh bin/mqnamesrv -c namesrv.conf &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 &amp;amp;1&lt;/p>
&lt;/li>
&lt;li>
&lt;p>1&lt;/p>
&lt;/li>
&lt;li>
&lt;p>查看 RocketMQ 进程：ps -ef | grep rocketmq1&lt;/p>
&lt;/li>
&lt;li>
&lt;p>1&lt;/p>
&lt;/li>
&lt;li>
&lt;p>查看 RocketMQ Name Server 的端口号：netstat -tnlp | grep &amp;lt;nameserver_pid&amp;gt;1&lt;/p>
&lt;/li>
&lt;li>
&lt;p>1&lt;/p>
&lt;/li>
&lt;li>
&lt;p>修改后 Broker 需要指定新的 Name Server 地址（端口）。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="安装-rocketmq-控制台-docker-run--d---name-console-">安装 RocketMQ 控制台 docker run -d &amp;ndash;name console \&lt;a class="td-heading-self-link" href="#%e5%ae%89%e8%a3%85-rocketmq-%e6%8e%a7%e5%88%b6%e5%8f%b0-docker-run--d---name-console-" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;pre>&lt;code>-e &amp;quot;JAVA_OPTS=-Drocketmq.namesrv.addr=172.38.40.247:9876 -Dcom.rocketmq.sendMessageWithVIPChannel=false&amp;quot; \
-p 8080:8080 \
-t styletang/rocketmq-console-ng1
&lt;/code>&lt;/pre>
&lt;p>2
3
4
Plain Text 克隆 rocketmq-externals 项目，并编译 rocketmq-console。命令示例：
git clone &lt;a href="https://github.com/apache/rocketmq-externals.git">https://github.com/apache/rocketmq-externals.git&lt;/a>
cd rocketmq-externals/rocketmq-console
mvn clean package -Dmaven.test.skip=true1
2
3
Plain Text 将&lt;code>target/rocketmq-console-ng*.jar&lt;/code> 放到和 RocketMQ 安装目录（本例为&lt;code>/usr/local/rocketmq&lt;/code>)下。在 RocketMQ 安装目录下新建一个启动 RocketMQ 控制台的脚本来启动 RocketMQ 控制台：
nohup java -jar rocketmq-console-ng*.jar &amp;ndash;server.port=8080 &amp;ndash;rocketmq.config.namesrvAddr=localhost:9876 &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 &amp;amp;1
Plain Text 默认 RocketMQ 控制台不需要密码登录，请参考 RocketMQ 使用文档 进行配置。参见：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://github.com/apache/rocketmq-externals">https://github.com/apache/rocketmq-externals&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/apache/rocketmq-externals/tree/master/rocketmq-console">https://github.com/apache/rocketmq-externals/tree/master/rocketmq-console&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="troubleshooting">Troubleshooting&lt;a class="td-heading-self-link" href="#troubleshooting" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>问题 1: 启动 Name Server 和 Broker，或测试时报错&lt;code>Please set the JAVA_HOME variable in your environment, We need java(x64)!&lt;/code> 但是系统已经安装了 OpenJDK8，并且已经设置了 JAVA_HOME。解决方法: 运行&lt;code>which java&lt;/code>来查看 java 的路径，比如为&lt;code>/usr/bin/java&lt;/code>。修改 bin/runserver.sh 和 bin/runbroker.sh 和 bin/tools.sh，注释掉校验 JAVA_HOME 语句，并明确指定 JAVA 路径： #[ ! -e &amp;ldquo;$JAVA_HOME/bin/java&amp;rdquo; ] &amp;amp;&amp;amp; JAVA_HOME=$HOME/jdk/java
#[ ! -e &amp;ldquo;$JAVA_HOME/bin/java&amp;rdquo; ] &amp;amp;&amp;amp; JAVA_HOME=/usr/java #[ ! -e &amp;ldquo;$JAVA_HOME/bin/java&amp;rdquo; ] &amp;amp;&amp;amp; error_exit &amp;ldquo;Please set the JAVA_HOME variable in your environment, We need java(x64)!&amp;rdquo;&lt;/p>
&lt;h1 id="export-java_home">export JAVA_HOME&lt;a class="td-heading-self-link" href="#export-java_home" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>export JAVA=&amp;quot;/usr/bin/java&amp;quot;1
2
3
4
5
6
Plain Text&lt;/p>
&lt;h2 id="参考文档--rocketmq-安装部署教程详解">参考文档- RocketMQ 安装部署教程详解&lt;a class="td-heading-self-link" href="#%e5%8f%82%e8%80%83%e6%96%87%e6%a1%a3--rocketmq-%e5%ae%89%e8%a3%85%e9%83%a8%e7%bd%b2%e6%95%99%e7%a8%8b%e8%af%a6%e8%a7%a3" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>RocketMQ 安装详细说明&lt;/li>
&lt;/ul>
&lt;h2 id="扩展阅读--十分钟入门-rocketmq">扩展阅读- 十分钟入门 RocketMQ&lt;a class="td-heading-self-link" href="#%e6%89%a9%e5%b1%95%e9%98%85%e8%af%bb--%e5%8d%81%e5%88%86%e9%92%9f%e5%85%a5%e9%97%a8-rocketmq" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>RocketMQ 核心设计理念&lt;/p>
&lt;/li>
&lt;li>
&lt;p>RocketMQ 中文文档(非官方）&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>Docs: 整合RocketMq提示RemotingTooMuchRequestException: sendDefaultImpl call timeout</title><link>https://desistdaydream.github.io/docs/8.%E9%80%9A%E7%94%A8%E6%8A%80%E6%9C%AF/Message-Queue%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/RocketMQ/%E6%95%B4%E5%90%88RocketMq%E6%8F%90%E7%A4%BARemotingTooMuchRequestException_-sendDefaultImpl-call-timeout/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/8.%E9%80%9A%E7%94%A8%E6%8A%80%E6%9C%AF/Message-Queue%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/RocketMQ/%E6%95%B4%E5%90%88RocketMq%E6%8F%90%E7%A4%BARemotingTooMuchRequestException_-sendDefaultImpl-call-timeout/</guid><description>
&lt;p>在云服务器上安装 RocketMq 后，项目整合测试&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/xuvc3b/1616130360509-382458c2-a13e-443d-b718-bdf91b083bb3.png" alt="">&lt;/p>
&lt;p>启动好 nameServer 和 Broker 之后, 启动生产者会报这样的错误&lt;/p>
&lt;pre>&lt;code>Exception in thread &amp;quot;main&amp;quot; org.apache.rocketmq.remoting.exception.RemotingTooMuchRequestException: sendDefaultImpl call timeout at org.apache.rocketmq.client.impl.producer.DefaultMQProducerImpl.sendDefaultImpl(DefaultMQProducerImpl.java:588) at org.apache.rocketmq.client.impl.producer.DefaultMQProducerImpl.send(DefaultMQProducerImpl.java:1223) at org.apache.rocketmq.client.impl.producer.DefaultMQProducerImpl.send(DefaultMQProducerImpl.java:1173) at org.apache.rocketmq.client.producer.DefaultMQProducer.send(DefaultMQProducer.java:214) at com.baojian.mob.base.producer.SyncProducer.main(SyncProducer.java:41)15:22:31.455 [NettyClientSelector_1] INFO RocketmqRemoting - closeChannel: close the connection to remote address[] result: true15:22:32.049 [NettyClientSelector_1] INFO RocketmqRemoting - closeChannel: close the connection to remote address[] result: true
&lt;/code>&lt;/pre>
&lt;p>1
Plain Text&lt;/p>
&lt;p>&lt;strong>原因： BrokerIP 展示的是云服务器的本地 IP，不是公网 IP;&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/xuvc3b/1616130360476-d1af823e-9914-4962-8925-f5cd19599ee0.png" alt="">&lt;/p>
&lt;p>&lt;strong>解决方法：&lt;/strong>&lt;/p>
&lt;p>在 conf/broker.conf 中 加入 两行配置&lt;/p>
&lt;p>namesrvAddr = 你的公网 IP:9876&lt;/p>
&lt;p>brokerIP1=你的公网 IP&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/xuvc3b/1616130360465-f2ca9153-4a43-4646-b792-9f8dc7c5d986.png" alt="">&lt;/p>
&lt;p>&lt;strong>重新启动 broker&lt;/strong>&lt;/p>
&lt;p>启动 broker 的指令要修改下, 要将这个配置文件指定加载&lt;/p>
&lt;pre>&lt;code>nohup sh mqbroker -n localhost:9876 -c ../conf/broker.conf autoCreateTopicEnable=true &amp;amp;
&lt;/code>&lt;/pre>
&lt;p>1
Plain Text&lt;/p></description></item></channel></rss>