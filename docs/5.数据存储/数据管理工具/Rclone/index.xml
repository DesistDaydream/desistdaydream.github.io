<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦 – Rclone</title><link>https://desistdaydream.github.io/docs/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/Rclone/</link><description>Recent content in Rclone on 断念梦</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/Rclone/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Rclone</title><link>https://desistdaydream.github.io/docs/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/Rclone/Rclone/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/Rclone/Rclone/</guid><description>
&lt;h1 id="概述">概述&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/rclone/rclone">GitHub 项目，rclone/rclone&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://rclone.org/">官网&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;strong>Rclone&lt;/strong> 是一个命令行工具，用来管理云存储上的文件。Rclone 也可以看作 &lt;strong>rsync for cloud storage(用于云存储的 rsync)&lt;/strong>。Rclone 支持各种存储类型，包括 商业文件存储服务、标准传输协议(比如 WebDAV、S3 等)、等等。从&lt;a href="https://rclone.org/#providers">这里&lt;/a>我们可以查看到所有受支持的存储提供者&lt;/p>
&lt;p>Rclone 将存储提供者抽象为 &lt;strong>Remote&lt;/strong>，在我们配置 Rclone 时，经常会看到 Remote 这个词，创建、删除 Remote 这种行为，就是在 &lt;a href="https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/%E6%97%A0%E6%B3%95%E5%88%86%E7%B1%BB%E7%9A%84%E8%AF%AD%E8%A8%80/INI.md">INI&lt;/a> 格式的配置文件中配置 Remote。这些 Remote 由指定类型的 &lt;strong>Backend&lt;/strong> 提供支持。&lt;/p>
&lt;blockquote>
&lt;p>比如，我们可以这样描述，我创建了一个名为 alist 的 Remote，使用的是 WebDav 类型的 Backend。&lt;/p>
&lt;/blockquote>
&lt;p>Rclone 还可以将这些 Remote 作为磁盘挂载在 Windows、macOS、Linux 上，并通过 SFTP、HTTP、WebDAV、FTP、DLNA 对外提供存储能力。&lt;/p>
&lt;h1 id="rclone-关联文件与配置">Rclone 关联文件与配置&lt;/h1>
&lt;p>&lt;strong>rclone.conf&lt;/strong> # 各种 Remotes 信息。&lt;/p>
&lt;ul>
&lt;li>如果在某些已定义的位置都没有找到 rclone.conf 文件，则会在以下位置创建一个新的配置文件：
&lt;ul>
&lt;li>Windows 上
&lt;ul>
&lt;li>在 &lt;strong>$APPDATA/rclone/rclone.conf&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>类 Unix 上
&lt;ul>
&lt;li>如果定义了 &lt;code>$XDG_CONFIG_HOME&lt;/code>，则在 &lt;strong>$XDG_CONFIG_HOME/rclone/rclone.conf&lt;/strong>&lt;/li>
&lt;li>如果未定义 &lt;code>$XDG_CONFIG_HOME&lt;/code>，则在 &lt;strong>~/.config/rclone/rclone.conf&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="syntax语法">Syntax(语法)&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://rclone.org/commands/">官方文档，命令&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h2 id="全局标志">全局标志&lt;/h2>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://rclone.org/flags/">官方文档，全局标志&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>详见 &lt;a href="https://desistdaydream.github.io/docs/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/Rclone/Rclone%20%E9%85%8D%E7%BD%AE.md">Rclone 配置&lt;/a>，命令行标志通常也是 Rclone 的配置，分为两种，与后端无关的和与后端相关的。绝大部分情况，在使用命令行时，我们一般使用与后端无关的的标志。在这个文章中，主要看 &lt;a href="https://desistdaydream.github.io/docs/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/Rclone/Rclone%20%E9%85%8D%E7%BD%AE.md#Backend%20%E6%97%A0%E5%85%B3%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3">Backend 无关配置详解&lt;/a> 部分即可&lt;/p>
&lt;h1 id="rclone-config">rclone config&lt;/h1>
&lt;p>进入交互式会话，用以修改配置文件(默认为 &lt;code>~/.config/rclone/rclone.conf&lt;/code>)。进入交互式配置会话中，我们可以设置新的 Remotes 并管理现有 Remotes。还可以设置或删除密码以保护我们的配置。&lt;/p>
&lt;p>除了基础的交互式，我们还可以使用各种子命令来直接修改配置文件&lt;/p>
&lt;h2 id="syntax语法-1">Syntax(语法)&lt;/h2>
&lt;p>&lt;strong>rclone config [FLAGS] [COMMAND]&lt;/strong>&lt;/p>
&lt;p>&lt;strong>COMMAND&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>file&lt;/strong> # 显示正在使用的配置文件的j路径&lt;/li>
&lt;li>&lt;strong>show&lt;/strong> # 打印 (解密) 配置文件，或单个 Remote 的配置。&lt;/li>
&lt;/ul>
&lt;h1 id="rclone-copy">rclone copy&lt;/h1>
&lt;p>将源 Remote 的文件复制到目标 Remote 中，跳过相同的文件。不会删除目标中的比源中多的文件。&lt;/p>
&lt;h2 id="syntax语法-2">Syntax(语法)&lt;/h2>
&lt;p>&lt;strong>rclone copy SOURCE:SourcePath DEST:DestPath&lt;/strong>&lt;/p>
&lt;h1 id="rclone-copyto">rclone copyto&lt;/h1>
&lt;p>copyto 可以在上传单个文件到目标目录下时，改变文件的原名。其他情况与 copy 的功能相同。&lt;/p>
&lt;h2 id="syntax语法-3">Syntax(语法)&lt;/h2>
&lt;h1 id="rclone-mount">rclone mount&lt;/h1>
&lt;p>详见 &lt;a href="https://desistdaydream.github.io/docs/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/Rclone/Rclone%20mount.md">Rclone mount&lt;/a>&lt;/p>
&lt;h1 id="rclone-sync">rclone sync&lt;/h1>
&lt;p>让目标 Remote 与源 Remote 保持相同，仅修改目标 Remote 中的数据。&lt;/p>
&lt;p>&lt;a href="https://rclone.org/commands/rclone_sync/">https://rclone.org/commands/rclone_sync/&lt;/a>&lt;/p>
&lt;p>注意：由于 sync 命令会导致目标数据丢失，最好使用 &amp;ndash;dry-run 或 -i, &amp;ndash;interactive 标志进行测试&lt;/p>
&lt;h2 id="syntax语法-4">Syntax(语法)&lt;/h2>
&lt;p>&lt;strong>rclone sync SOURCE:PATH DEST:PATH [FLAGS]&lt;/strong>&lt;/p>
&lt;h1 id="列出-remote-中的数据相关命令">列出 Remote 中的数据相关命令&lt;/h1>
&lt;p>ls&lt;/p>
&lt;p>lsl&lt;/p>
&lt;p>lsd&lt;/p>
&lt;p>lsf&lt;/p>
&lt;p>lsjson&lt;/p>
&lt;h1 id="应用示例">应用示例&lt;/h1>
&lt;h2 id="两个对象存储同步数据">两个对象存储同步数据&lt;/h2>
&lt;p>&lt;strong>rclone sync&lt;/strong> 命令会在源和目标之间同步文件。 它会删除目标目录中源目录没有的文件，并且会更新目标目录中的文件。 &lt;strong>rclone copy&lt;/strong> 命令只会在源和目标之间复制文件。 它不会删除目标目录中的文件，也不会更新文件。&lt;/p>
&lt;p>同步两个云盘中的数据（待验证）&lt;/p>
&lt;ul>
&lt;li>&lt;code>nohup rclone sync alist-local:/aliyun alist-local:/baiduyun -vv &amp;gt;&amp;gt; /root/rclone.log 2&amp;gt;&amp;amp;1 &amp;amp;&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="webdav-挂载为电脑本地硬盘非网络硬盘">webdav 挂载为电脑本地硬盘(非网络硬盘)&lt;/h2>
&lt;blockquote>
&lt;p>原文链接：&lt;a href="https://www.bilibili.com/read/cv13661426">B 站-捕梦小达人&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>注意：需要安装 winfsp&lt;/p>
&lt;p>使用 Alist 的 阿里云网盘时，注意添加 &lt;code>--header&lt;/code>，参考 &lt;a href="https://github.com/alist-org/alist/discussions/630">alist discussions 630&lt;/a>&lt;/p>
&lt;pre tabindex="0">&lt;code>rclone mount --config rclone.conf alist:/ Z: --cache-dir D:\appdata\rclone --vfs-cache-mode full --header &amp;#34;Referer:&amp;#34;
&lt;/code>&lt;/pre>&lt;p>可以参考 PowerShell 的 &lt;a href="https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Y.Windows%20%E7%AE%A1%E7%90%86/Windows%20%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/PowerShell%20%E5%86%85%E7%BD%AE%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/Management.md">Management&lt;/a> 模块下的 Start-Process 命令的，以便在后台运行，效果如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>Start-Process &lt;span style="color:#e6db74">&amp;#34;alist.exe&amp;#34;&lt;/span> -ArgumentList &lt;span style="color:#e6db74">&amp;#34;server --data D:\appdata\alist&amp;#34;&lt;/span> -WindowStyle Hidden -RedirectStandardOutput &lt;span style="color:#e6db74">&amp;#34;D:\Tools\Scripts\log\alist.log&amp;#34;&lt;/span> -RedirectStandardError &lt;span style="color:#e6db74">&amp;#34;D:\Tools\Scripts\log\alist-err.log&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Start-Process &lt;span style="color:#e6db74">&amp;#34;rclone.exe&amp;#34;&lt;/span> `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-ArgumentList &lt;span style="color:#e6db74">&amp;#34;mount alist-net:/ Z: --cache-dir D:\appdata\rclone-cache --vfs-cache-mode full --vfs-cache-max-age 24h --header Referer:&amp;#34;&lt;/span> `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-WindowStyle Hidden `
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-RedirectStandardOutput &lt;span style="color:#e6db74">&amp;#34;D:\Tools\Scripts\log\rclone.log&amp;#34;&lt;/span> -RedirectStandardError &lt;span style="color:#e6db74">&amp;#34;D:\Tools\Scripts\log\rclone-err.log&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后可以参考 Windows 管理中的 &lt;a href="https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Y.Windows%20%E7%AE%A1%E7%90%86/%E5%90%AF%E5%8A%A8%E9%A1%B9.md">启动项&lt;/a> 以便开机时自动挂载。&lt;/p></description></item><item><title>Docs: Rclone mount</title><link>https://desistdaydream.github.io/docs/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/Rclone/Rclone-mount/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/Rclone/Rclone-mount/</guid><description>
&lt;h1 id="概述">概述&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://rclone.org/commands/rclone_mount/">官方文档，命令-rclone mount&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>Rclone 的 mount 功能使用 FUSE 将 Remote 作为文件系统挂载到操作系统中。&lt;/p>
&lt;h2 id="使用-vfs">使用 VFS&lt;/h2>
&lt;p>&lt;a href="https://rclone.org/commands/rclone_mount/#vfs-virtual-file-system">https://rclone.org/commands/rclone_mount/#vfs-virtual-file-system&lt;/a>&lt;/p>
&lt;p>rclone mount 命令使用文件系统的 VFS，这将 rclone 使用 Remote 调整为看起来更像磁盘文件系统的东西。&lt;/p>
&lt;h3 id="vfs-缓存机制">VFS 缓存机制&lt;/h3>
&lt;p>rclone mount 可以使用两种 VFS 的缓存机制&lt;/p>
&lt;ul>
&lt;li>目录缓存&lt;/li>
&lt;li>文件缓存&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>文件缓存&lt;/strong>&lt;/p>
&lt;p>为 &amp;ndash;vfs-cache-mode 选项指定了除 off 以外的值，即表示开启文件缓存。开启文件缓存后，默认是 write-back 策略，对文件的所有&lt;!-- raw HTML omitted -->写入操作都是针对本地的缓存文件&lt;!-- raw HTML omitted -->，只有&lt;!-- raw HTML omitted -->关闭缓存文件后等待 5s&lt;!-- raw HTML omitted -->(该值可由 &amp;ndash;vfs-write-back 选项指定)后才会将缓存文件回写到 Remote 以更新原文件。如果 rclone 因为意外情况退出导致文件未上传，那么必须要使用相同选项启动 rclone，才会在开始运行时回写这些文件。&lt;/p>
&lt;blockquote>
&lt;p>用人话说：开启文件缓存后，修改的文件是都是本地缓存文件，需要等一会，才会缓存文件同步给源文件。&lt;/p>
&lt;/blockquote>
&lt;p>rclone 提供了 4 中缓存模式，模式越高，兼容性越好，但磁盘占用越多。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>off&lt;/strong> # 关闭文件缓存。最低的模式，兼容性最差。本地不做任何缓存，所有文件直接从云端获取并写入，网速特别好时（复制粘贴大文件时建议至少100M管以上速度）使用。&lt;/li>
&lt;li>&lt;strong>minimal&lt;/strong> # 最小模式。与 off 类似，一般只有新创建的文件才会缓存。&lt;/li>
&lt;li>&lt;strong>writes&lt;/strong> # 写模式。打开后有修改的文件都会缓存。如果回写失败，将以指数增加的间隔重试，最多 1 分钟。&lt;/li>
&lt;li>&lt;strong>full&lt;/strong> # 完全模式，兼容性最好。缓存全部文件。
&lt;ul>
&lt;li>在此模式下，缓存中的文件将是 &lt;strong>sparse files(稀疏文件)&lt;/strong>，并且 rclone 将跟踪已下载的文件的哪些位。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>notes: 对于在 Windows 和 Linux 中的 rclone mount，上述缓存模式的说明不太一样，比如关闭缓存的情况下，linux 用 vim 是无法编辑文件的，但是 windows 中用编辑器是可以编辑的，并且修改内容瞬间会同步到源文件。&lt;/p>
&lt;h1 id="syntax语法">Syntax(语法)&lt;/h1>
&lt;p>&lt;strong>rclone mount REMOTE:PATH /PATH/TO/MountPoint [FLAGS]&lt;/strong>&lt;/p>
&lt;h2 id="flags">FLAGS&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>&amp;ndash;network-mode&lt;/strong> # (仅限于 Windows 系统)挂载为远程网络驱动器，而不是磁盘驱动器。
&lt;ul>
&lt;li>网络驱动器可以在网络邻居中显示，方便访问和共享。&lt;/li>
&lt;li>网络驱动器可以避免一些 Windows 对本地驱动器的限制，如文件名长度和字符集。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>VFS 性能相关标志&lt;/p>
&lt;ul>
&lt;li>&lt;strong>&amp;ndash;no-modtime&lt;/strong> # 不要读/写修改时间（可以加快速度）。
&lt;ul>
&lt;li>特别是 S3 和 Swift 从 &amp;ndash;no-modtime 标志中受益匪浅（或使用 &amp;ndash;use-server-modtime 以获得稍微不同的效果），因为每次读取修改时间都需要一个事务。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>VFS 文件缓存相关标志&lt;/p>
&lt;ul>
&lt;li>&lt;strong>&amp;ndash;dir-cache-time duration&lt;/strong> # Time to cache directory entries for。&lt;code>默认值: 5m0s&lt;/code>&lt;/li>
&lt;li>&lt;strong>&amp;ndash;poll-interval duration&lt;/strong> # Time to wait between polling for changes. Must be smaller than dir-cache-time. Only on supported remotes. Set to 0 to disable。&lt;code>默认值: 1m0s&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>VFS 文件缓存相关标志&lt;/p>
&lt;ul>
&lt;li>&lt;strong>&amp;ndash;cache-dir STRING&lt;/strong> # 指定用于保存缓存文件的目录。`
&lt;ul>
&lt;li>Linux &lt;code>默认值: ~/.cache/rclone/&lt;/code>&lt;/li>
&lt;li>Windows &lt;code>默认值: %LOCALAPPDATA%/rclone/&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>&amp;ndash;vfs-cache-mode STRING&lt;/strong> # 缓存模式。&lt;code>默认值: off&lt;/code>
&lt;ul>
&lt;li>可用的值有: off | minimal | writes | full&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>&amp;ndash;vfs-cache-max-age DURATION&lt;/strong> # 缓存中的对象保存的最大时间，超时的将被删除。&lt;code>默认值: 1h&lt;/code>&lt;/li>
&lt;li>&lt;strong>&amp;ndash;vfs-cache-max-size SizeSuffix&lt;/strong> # 缓存占用的最大空间。&lt;code>默认值: off&lt;/code>
&lt;ul>
&lt;li>请注意，缓存可能由于两个原因而超出此大小。首先，因为它仅在每个 &amp;ndash;vfs-cache-poll-interval 期间进行检查。其次，因为打开的文件无法从缓存中逐出，当超过 &amp;ndash;vfs-cache-max-size 时，rclone 将尝试首先从缓存中逐出访问次数最少的文件，将从最长时间未被访问的文件开始。这种缓存刷新策略非常有效，并且更相关的文件可能会保留在缓存中。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>&amp;ndash;vfs-cache-poll-interval duration&lt;/strong> # 轮询缓存以查找陈旧对象的时间间隔。&lt;code>默认值: 1m0s&lt;/code> (default 1m0s)&lt;/li>
&lt;li>&lt;strong>&amp;ndash;vfs-write-back DURATION&lt;/strong> # 关闭文件后，将文件回写到 Remote 的等待时间。&lt;code>默认值: 5s&lt;/code>&lt;/li>
&lt;/ul>
&lt;h1 id="最佳实践">最佳实践&lt;/h1>
&lt;p>挂载 alist webdav 到本地磁盘&lt;/p>
&lt;ul>
&lt;li>&lt;code>rclone mount alist-net:/ Z: --cache-dir D:\appdata\rclone-cache --vfs-cache-mode writes --vfs-cache-max-age 30d --vfs-cache-max-size 100G --vfs-cache-poll-interval 10m --no-modtime --header Referer: -v&lt;/code>
&lt;ul>
&lt;li>让&lt;strong>文件夹视图&lt;/strong>变为&lt;strong>小图标&lt;/strong>可以避免打开文件夹时缓存全部文件，尤其是对于存图片的文件夹来说，可以极大得提高打开速度&lt;/li>
&lt;li>看视频的话，应该不用把视频缓存下来~ writes 模式就够了&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>Docs: Rclone 配置</title><link>https://desistdaydream.github.io/docs/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/Rclone/Rclone-%E9%85%8D%E7%BD%AE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/Rclone/Rclone-%E9%85%8D%E7%BD%AE/</guid><description>
&lt;h1 id="概述">概述&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://rclone.org/docs/">官方文档，用法&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://rclone.org/flags/">官方文档，全局命令行标志&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>Rclone 的配置有点混乱，不过大体分为两部分，&lt;strong>Backend(与后端相关)&lt;/strong> 和 &lt;strong>Non Backend(与后端无关)&lt;/strong> 两种配置。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Non Backend&lt;/strong> # 通常是指 Rclone 自身的运行时方式。比如使用 sync、copy 等命令时设置并发数、等等。
&lt;ul>
&lt;li>这部分配置无法通过 rclone.conf 文件设置。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Backend&lt;/strong> # 针对各种 Remote 所使用的 Backend 的配置。&lt;/li>
&lt;/ul>
&lt;p>这两类配置，可以使用&lt;strong>一种或多种&lt;/strong>方式进行配置，可用的配置方式有：&lt;/p>
&lt;ul>
&lt;li>命令行标志&lt;/li>
&lt;li>环境变量&lt;/li>
&lt;li>配置文件&lt;/li>
&lt;/ul>
&lt;h2 id="backend-无关配置">Backend 无关配置&lt;/h2>
&lt;p>Rclone 可以通过如下几种方式配置，优先级从上至下由高到低：&lt;/p>
&lt;ul>
&lt;li>命令行标志&lt;/li>
&lt;li>环境变量&lt;/li>
&lt;/ul>
&lt;p>rclone 命令的每个选项都可以通过环境变量设置其默认值。选项与环境变量的对应关系规则如下：&lt;/p>
&lt;ul>
&lt;li>去掉长选项名称开头的 &lt;code>--&lt;/code>&lt;/li>
&lt;li>选项名称中的 &lt;code>-&lt;/code> 改为 &lt;code>_&lt;/code>&lt;/li>
&lt;li>字母改为大写&lt;/li>
&lt;li>前面加上 &lt;code>RCLONE_&lt;/code> 前缀&lt;/li>
&lt;/ul>
&lt;p>比如：&lt;/p>
&lt;ul>
&lt;li>&amp;ndash;stats 对应 RCLONE_STATS&lt;/li>
&lt;li>&amp;ndash;drive-use-trash 对应 RCLONE_DRIVE_USE_TRASH&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>其中 &amp;ndash;verbose 的对应关系比较特殊，-v 对应 RCLONE_VERBOSE=1；-vv 对应 RCLONE_VERBOSE=2&lt;/p>
&lt;/blockquote>
&lt;h2 id="backend-相关配置">Backend 相关配置&lt;/h2>
&lt;p>Backend 配置本质上就是配置 Remote，Rclone 通过如下几种方式配置 Backend，优先级从上至下由高到低&lt;/p>
&lt;ul>
&lt;li>命令行选项&lt;/li>
&lt;li>环境变量&lt;/li>
&lt;li>rclone.conf 配置文件&lt;/li>
&lt;/ul>
&lt;p>对于 Backend 相关配置来说，配置 rclone.conf 文件，&lt;strong>就像设置默认值&lt;/strong>似的，&lt;strong>我们平时在使用 Rclone 时，一般都需要先创建配置文件&lt;/strong>，并配置想要管理的 Remote 信息(就是使用 &lt;code>rclone config&lt;/code> 命令或手动配置 rclone.conf 文件)，在这个文件中配置每个 Remote 的 Backend 信息。有了 Remote 之后，Rclone 就有了控制目标，可以对目标中的数据进行控制了。&lt;/p>
&lt;p>比如我们配置了一个名为 test 的 Remtoe，使用 s3 类型的 Backend，然后我们还可以通过 Flags 为 test 这个 Remote 补充其他的配置信息。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#75715e"># rclone config show&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>test&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>type &lt;span style="color:#f92672">=&lt;/span> s3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>provider &lt;span style="color:#f92672">=&lt;/span> Alibaba
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#75715e"># rclone lsd test: --s3-access-key-id XXXXXXXXXXXX --s3-secret-access-key YYYYYYYYYYYY --s3-endpoint oss-cn-beijing.aliyuncs.com&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这些 Backend 相关配置的命令行标志，可以在&lt;a href="https://rclone.org/flags/#backend-flags">全局标志-后端相关标志&lt;/a>中找到&lt;/p>
&lt;p>命令行标志、环境变量、rclone.conf 配置文件这三种配置的对应关系规则如下：&lt;/p>
&lt;ul>
&lt;li>
&lt;ul>
&lt;li>去掉长选项名称开头的 &lt;code>--&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>选项名称中的 &lt;code>-&lt;/code> 改为 &lt;code>_&lt;/code>&lt;/li>
&lt;li>还有一些规则对于配置文件和环境变量不一样
&lt;ul>
&lt;li>环境变量：
&lt;ul>
&lt;li>字母改为大写&lt;/li>
&lt;li>前面加上 &lt;code>RCLONE_&lt;/code> 前缀&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>配置文件：
&lt;ul>
&lt;li>去掉第一个 &lt;code>-&lt;/code> 前的字符串&lt;/li>
&lt;li>第一个 &lt;code>-&lt;/code> 之前的字符串作为配置文件中每个部分的名称，即 Backend 名称&lt;/li>
&lt;li>保持小写不变&lt;/li>
&lt;li>不加前缀&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>由于 Backend 相关配置都是与各种类型的存储相关联的，所以我们可以查看官方文档中每个存储页面，在其中有一个名为 &lt;code>Standard options&lt;/code> 的段落，详细描写了该 Backend 的所有可用配置，比如用 S3 类型的 Backend 举例，效果如下：&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/rclone/20230506163807.png" alt="image.png">&lt;/p>
&lt;p>其中 Config 和 Env Var 分别对应 &amp;ndash;s3-secret-access-key 这个选项在配置文件和环境变量中应该使用的名称。&lt;/p>
&lt;h2 id="rcloneconf">rclone.conf&lt;/h2>
&lt;p>&lt;strong>rclone.conf&lt;/strong> 是 &lt;a href="https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/%E6%97%A0%E6%B3%95%E5%88%86%E7%B1%BB%E7%9A%84%E8%AF%AD%E8%A8%80/INI.md">INI&lt;/a> 格式的配文件，其中保存了各种 Remote 信息。可以直接编辑该文件，也可以使用 &lt;code>rclone config&lt;/code> 命令在命令行的交互模式下进行配置。&lt;/p>
&lt;p>rclone.conf 配置文件的每个字段的用途在官方文档中没有找到说明，但是命令行标志跟配置文件的字段有对应关系，以下是我自己总结的：&lt;/p>
&lt;ul>
&lt;li>每个部分的名称就是 Remote 的名称&lt;/li>
&lt;li>每个 Remote 都有一个 type 字段用来指定该 Remote 使用的 Backend&lt;/li>
&lt;li>每个 Remote 的其他字段，根据其 Backend 的类型决定，不同的 Backend，有不同的字段。&lt;/li>
&lt;/ul>
&lt;h3 id="读取逻辑">读取逻辑&lt;/h3>
&lt;p>rclone 运行后，根据如下顺序从上到下依次查找 rclone.conf 文件&lt;/p>
&lt;ul>
&lt;li>&lt;strong>rclone 二进制可执行文件所在目录&lt;/strong>中的 rclone.conf 文件&lt;/li>
&lt;li>&lt;strong>$APPDATA/rclone/rclone.conf&lt;/strong>（该位置仅在 Windows 系统中有效）&lt;/li>
&lt;li>&lt;strong>$XDG_CONFIG_HOME/rclone/rclone.conf&lt;/strong>&lt;/li>
&lt;li>&lt;strong>~/.config/rclone/rclone.conf&lt;/strong>&lt;/li>
&lt;li>&lt;strong>~/.rclone.conf&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>如果上述位置都没有找到 rclone.conf 文件，则会在以下位置创建一个新的配置文件：&lt;/p>
&lt;ul>
&lt;li>Windows 上
&lt;ul>
&lt;li>在 &lt;strong>$APPDATA/rclone/rclone.conf&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>类 Unix 上
&lt;ul>
&lt;li>如果定义了 &lt;code>$XDG_CONFIG_HOME&lt;/code>，则在 &lt;strong>$XDG_CONFIG_HOME/rclone/rclone.conf&lt;/strong>&lt;/li>
&lt;li>如果未定义 &lt;code>$XDG_CONFIG_HOME&lt;/code>，则在 &lt;strong>~/.config/rclone/rclone.conf&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="backend-无关配置详解">Backend 无关配置详解&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://rclone.org/flags/#non-backend-flags">官方文档，命令行标志，与后端无关的标志&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>这部分配置无法通过 rclone.conf 文件配置。只能使用环境变量和命令行选项。除了在这里记录的通用配置意外，各个 Rclone 功能(比如 mount、sync、copy 等命令)还有自身的配置用以配置运行时行为。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>&amp;ndash;cache-dir&lt;/strong> # 用于缓存的目录。&lt;code>默认值：~/.cache/rclone&lt;/code>&lt;/li>
&lt;li>&lt;strong>-n, &amp;ndash;dry-run&lt;/strong> # 试运行，不会真的执行&lt;/li>
&lt;li>&lt;strong>-i, &amp;ndash;interactive&lt;/strong> # 开启交互模式&lt;/li>
&lt;li>&lt;strong>-p, &amp;ndash;progress&lt;/strong> # 显示传输进度、传输速度&lt;/li>
&lt;li>&lt;strong>&amp;ndash;transfers INT&lt;/strong> # 并行运行的文件传输数。&lt;code>默认值: 4&lt;/code>&lt;/li>
&lt;li>&lt;strong>-v&lt;/strong> # 输出更多的内容，重复只用该选项会增加输出的内容，比如 -vv、-vvv。比如 -vv 就会输出 Debug 信息。&lt;/li>
&lt;/ul>
&lt;h1 id="backend-相关配置详解">Backend 相关配置详解&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://rclone.org/flags/#backend-flags">官方文档，命令行标志，与后端有关的标志&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;strong>这部分配置本质就是配置 Remote&lt;/strong>，为每个 Remote 配置 Backend，可以用的配置内容非常多，并且每种类型的 Backend 通常都有其独立的配置内容。&lt;/p>
&lt;h2 id="s3">S3&lt;/h2>
&lt;p>&lt;a href="https://rclone.org/s3/">https://rclone.org/s3/&lt;/a>&lt;/p>
&lt;h2 id="webdav">WebDav&lt;/h2>
&lt;p>&lt;a href="https://rclone.org/webdav">https://rclone.org/webdav&lt;/a>&lt;/p>
&lt;h1 id="配置示例">配置示例&lt;/h1></description></item></channel></rss>