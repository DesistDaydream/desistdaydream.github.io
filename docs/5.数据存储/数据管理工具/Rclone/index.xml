<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Rclone on 断念梦的站点</title><link>https://desistdaydream.github.io/docs/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/Rclone/</link><description>Recent content in Rclone on 断念梦的站点</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/Rclone/index.xml" rel="self" type="application/rss+xml"/><item><title>Rclone</title><link>https://desistdaydream.github.io/docs/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/Rclone/Rclone/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/Rclone/Rclone/</guid><description>概述 参考：
GitHub 项目，rclone/rclone 官网 Rclone 是一个命令行工具，用来管理云存储上的文件。Rclone 也可以看作 rsync for cloud storage(用于云存储的 rsync)。Rclone 支持各种存储类型，包括 商业文件存储服务、标准传输协议(比如 WebDAV、S3 等)、等等。从这里我们可以查看到所有受支持的存储提供者
Rclone 将存储提供者抽象为 Remote，在我们配置 Rclone 时，经常会看到 Remote 这个词，创建、删除 Remote 这种行为，就是在 INI 格式的配置文件中配置 Remote。这些 Remote 由指定类型的 Backend 提供支持。
比如，我们可以这样描述: 我创建了一个名为 alist 的 Remote，使用的是 WebDav 类型的 Backend。
Rclone 还可以将这些 Remote 作为磁盘挂载在 Windows、macOS、Linux 上，并通过 SFTP、HTTP、WebDAV、FTP、DLNA 对外提供存储能力。
Rclone 安装 rclone 的挂载使用 FUSE，需要安装 winfsp。
Rclone 关联文件与配置 rclone.conf # 各种 Remotes 信息。
如果在某些已定义的位置都没有找到 rclone.conf 文件，则会在以下位置创建一个新的配置文件： Windows 上 在 $APPDATA/rclone/rclone.conf 类 Unix 上 如果定义了 $XDG_CONFIG_HOME，则在 $XDG_CONFIG_HOME/rclone/rclone.</description></item><item><title>Rclone mount</title><link>https://desistdaydream.github.io/docs/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/Rclone/Rclone-mount/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/Rclone/Rclone-mount/</guid><description>概述 参考：
官方文档，命令-rclone mount Rclone 的 mount 功能使用 FUSE 将 Remote 作为文件系统挂载到操作系统中。
使用 VFS https://rclone.org/commands/rclone_mount/#vfs-virtual-file-system
rclone mount 命令使用文件系统的 VFS，这将 rclone 使用 Remote 调整为看起来更像磁盘文件系统的东西。
VFS 缓存机制 rclone mount 可以使用两种 VFS 的缓存机制
目录缓存 文件缓存 文件缓存
为 &amp;ndash;vfs-cache-mode 选项指定了除 off 以外的值，即表示开启文件缓存。开启文件缓存后，默认是 write-back 策略，对文件的所有写入操作都是针对本地的缓存文件，只有关闭缓存文件后等待 5s(该值可由 &amp;ndash;vfs-write-back 选项指定)后才会将缓存文件回写到 Remote 以更新原文件。如果 rclone 因为意外情况退出导致文件未上传，那么必须要使用相同选项启动 rclone，才会在开始运行时回写这些文件。
用人话说：开启文件缓存后，修改的文件是都是本地缓存文件，需要等一会，才会缓存文件同步给源文件。
rclone 提供了 4 中缓存模式，模式越高，兼容性越好，但磁盘占用越多。
off # 关闭文件缓存。最低的模式，兼容性最差。本地不做任何缓存，所有文件直接从云端获取并写入，网速特别好时（复制粘贴大文件时建议至少100M管以上速度）使用。 minimal # 最小模式。与 off 类似，一般只有新创建的文件才会缓存。 writes # 写模式。打开后有修改的文件都会缓存。如果回写失败，将以指数增加的间隔重试，最多 1 分钟。 full # 完全模式，兼容性最好。缓存全部文件。 在此模式下，缓存中的文件将是 sparse files(稀疏文件)，并且 rclone 将跟踪已下载的文件的哪些位。 notes: 对于在 Windows 和 Linux 中的 rclone mount，上述缓存模式的说明不太一样，比如关闭缓存的情况下，linux 用 vim 是无法编辑文件的，但是 windows 中用编辑器是可以编辑的，并且修改内容瞬间会同步到源文件。</description></item><item><title>Rclone 配置</title><link>https://desistdaydream.github.io/docs/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/Rclone/Rclone-%E9%85%8D%E7%BD%AE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/Rclone/Rclone-%E9%85%8D%E7%BD%AE/</guid><description>概述 参考：
官方文档，用法 官方文档，全局命令行标志 Rclone 的配置有点混乱，不过大体分为两部分，Backend(与后端相关) 和 Non Backend(与后端无关) 两种配置。
Non Backend # 通常是指 Rclone 自身的运行时方式。比如使用 sync、copy 等命令时设置并发数、等等。 这部分配置无法通过 rclone.conf 文件设置。 Backend # 针对各种 Remote 所使用的 Backend 的配置。 这两类配置，可以使用一种或多种方式进行配置，可用的配置方式有：
命令行标志 环境变量 配置文件 Backend 无关配置 Rclone 可以通过如下几种方式配置，优先级从上至下由高到低：
命令行标志 环境变量 rclone 命令的每个选项都可以通过环境变量设置其默认值。选项与环境变量的对应关系规则如下：
去掉长选项名称开头的 -- 选项名称中的 - 改为 _ 字母改为大写 前面加上 RCLONE_ 前缀 比如：
&amp;ndash;stats 对应 RCLONE_STATS &amp;ndash;drive-use-trash 对应 RCLONE_DRIVE_USE_TRASH 其中 &amp;ndash;verbose 的对应关系比较特殊，-v 对应 RCLONE_VERBOSE=1；-vv 对应 RCLONE_VERBOSE=2
Backend 相关配置 Backend 配置本质上就是配置 Remote，Rclone 通过如下几种方式配置 Backend，优先级从上至下由高到低</description></item></channel></rss>