<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>存储的能力 on 断念梦的站点</title><link>https://desistdaydream.github.io/docs/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/%E5%AD%98%E5%82%A8/%E5%AD%98%E5%82%A8%E7%9A%84%E8%83%BD%E5%8A%9B/</link><description>Recent content in 存储的能力 on 断念梦的站点</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/%E5%AD%98%E5%82%A8/%E5%AD%98%E5%82%A8%E7%9A%84%E8%83%BD%E5%8A%9B/index.xml" rel="self" type="application/rss+xml"/><item><title>存储的能力</title><link>https://desistdaydream.github.io/docs/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/%E5%AD%98%E5%82%A8/%E5%AD%98%E5%82%A8%E7%9A%84%E8%83%BD%E5%8A%9B/%E5%AD%98%E5%82%A8%E7%9A%84%E8%83%BD%E5%8A%9B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/%E5%AD%98%E5%82%A8/%E5%AD%98%E5%82%A8%E7%9A%84%E8%83%BD%E5%8A%9B/%E5%AD%98%E5%82%A8%E7%9A%84%E8%83%BD%E5%8A%9B/</guid><description>概述 参考：
知乎，块存储、文件存储、对象存储这三者的本质差别是什么？ 基于不同的 存储的基础设施架构，我们可以实现形形色色的存储能力，每种存储能力，可以存放的数据内容各不相同。
现阶段，可以提供的存储能力分为三种：
Block Storage(块存储) File Storage(文件存储) Object Storage(对象存储) 块存储、文件存储、对象存储这三者的本质差别是什么？ 它们就是不同的接口。块存储就是最接近存储介质的接口，也就是包装最薄的，或者说没有包装。文件和对象存储都是对块存储的包装。可以简单认为对象存储就是不分层次的文件存储。或者把文件看作对象存储的进一步包装。
Block Storage(块存储) 参考：
Wiki, Block 说白了就是硬盘
File Storage(文件存储) 说白了就是 Filesystem(文件系统)
Object Based Storage(对象存储) 参考：
Wiki, Object storage 说白了就是任何东西，对象可以是任何东西。
Object Based Storage(基于对象的存储，简称 OBS) 是一种为计算机存储数据的能力。通常由分布式存储架构来实现。
与 File Storage 类似，只不过没有目录的层级结构，对象的获取，基于 RESTful 风格的 API 接口。
但是与文件存储不同，对象存储中的数据不支持在存储设备上直接修改，必须要先 GET 到要修改的对象，在本地修改完成后，再 PUT 或 POST 回去。所以，并不适合需要频繁读写的数据(例如关系型数据库的数据)。
而平时我们看到那些所谓的能在线修改的，其实是有一个客户端，我们在客户端操作，操作的时候，客户端是帮我们把对象 GET 出来的。
简单理解 1. 块存储
“虚拟座谈会”中王旭提到：块存储是给虚拟机用的。
这句话深刻地表达了什么是块存储。。不知道有没有被大家忽略过去。
对块存储最简单的理解方法就是：看产品。
例子：
Amazon 的 EC2 中就有块存储，叫做 EBS (Elastic Block Storage)。 什么鬼？</description></item></channel></rss>