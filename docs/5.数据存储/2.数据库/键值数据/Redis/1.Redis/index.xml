<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦 – 1.Redis</title><link>https://desistdaydream.github.io/docs/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/2.%E6%95%B0%E6%8D%AE%E5%BA%93/%E9%94%AE%E5%80%BC%E6%95%B0%E6%8D%AE/Redis/1.Redis/</link><description>Recent content in 1.Redis on 断念梦</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://desistdaydream.github.io/docs/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/2.%E6%95%B0%E6%8D%AE%E5%BA%93/%E9%94%AE%E5%80%BC%E6%95%B0%E6%8D%AE/Redis/1.Redis/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Pub/Sub(发布/订阅)</title><link>https://desistdaydream.github.io/docs/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/2.%E6%95%B0%E6%8D%AE%E5%BA%93/%E9%94%AE%E5%80%BC%E6%95%B0%E6%8D%AE/Redis/1.Redis/Pub_Sub%E5%8F%91%E5%B8%83_%E8%AE%A2%E9%98%85/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/2.%E6%95%B0%E6%8D%AE%E5%BA%93/%E9%94%AE%E5%80%BC%E6%95%B0%E6%8D%AE/Redis/1.Redis/Pub_Sub%E5%8F%91%E5%B8%83_%E8%AE%A2%E9%98%85/</guid><description>
&lt;h1 id="概述">概述&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://redis.io/topics/pubsub">官方文档&lt;/a>&lt;a href="https://en.wikipedia.org/wiki/Publish%E2%80%93subscribe_pattern">&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Publish%E2%80%93subscribe_pattern">Wiki 发布/订阅 模式&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>Redis 可以通过 SUBSCRIBE、UNSUBSCRIBE、PUBLISH 这类命令实现 Publish/Subscribe(发布/订阅)模式。&lt;/p>
&lt;p>Redis 的 发布/订阅模式中，&lt;strong>Messages(消息)&lt;/strong> 的&lt;strong>发送者称为 Publishers(发布者)&lt;/strong>、消息的&lt;strong>接收者称为 Subscribers(订阅者)&lt;/strong>。而发送者和接收者之间传递消息的&lt;strong>途径称为 Channels(频道)&lt;/strong>。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>订阅者可以订阅自己感兴趣的 Channels，并随时等待接收发布到这些 Channels 中的消息，并不需要知道有哪些发布者。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>发布者可以向任何 Channels 中发布消息，而不需要知道有哪些订阅者&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>这种将 发布者 与 订阅者 解耦的模式，可以实现更大的可扩展性和更动态的网络拓扑结构。&lt;/p>
&lt;p>Redis 中并没有默认已经存在的 Channels(频道)。 只要执行了 &lt;code>SUBSCRIBE&lt;/code> 命令，并指定 Channel 名称，Redis 就会创建一个频道，并且执行该命令的客户端就称为 Subscriber。比如，现在执行如下命令：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-basic" data-lang="basic">&lt;span style="display:flex;">&lt;span>127&lt;span style="color:#ae81ff">.0.0.1&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#ae81ff">6379&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span> SUBSCRIBE test1 test2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Reading messages&lt;span style="color:#f92672">...&lt;/span> (press Ctrl&lt;span style="color:#f92672">-&lt;/span>C to quit)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1) &lt;span style="color:#e6db74">&amp;#34;subscribe&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2) &lt;span style="color:#e6db74">&amp;#34;test1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3) (integer) &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1) &lt;span style="color:#e6db74">&amp;#34;subscribe&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2) &lt;span style="color:#e6db74">&amp;#34;test2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3) (integer) &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>此时，创建了两个 Channels，test1 和 test2，其他客户端发送到这些 Channels 的消息，将被推送到订阅了这俩通道的 Subscriber，也就是订阅者的客户端。效果如下：&lt;/p>
&lt;pre>&lt;code># 订阅 Channels
127.0.0.1:6379&amp;gt; SUBSCRIBE test1 test2
Reading messages... (press Ctrl-C to quit)
1) &amp;quot;subscribe&amp;quot;
2) &amp;quot;test1&amp;quot;
3) (integer) 1
1) &amp;quot;subscribe&amp;quot;
2) &amp;quot;test2&amp;quot;
3) (integer) 2
# 发布消息
127.0.0.1:6379&amp;gt; PUBLISH test1 message1
(integer) 1
# 接收到了消息
127.0.0.1:6379&amp;gt; SUBSCRIBE test1 test2
Reading messages... (press Ctrl-C to quit)
1) &amp;quot;subscribe&amp;quot;
2) &amp;quot;test1&amp;quot;
3) (integer) 1
1) &amp;quot;subscribe&amp;quot;
2) &amp;quot;test2&amp;quot;
3) (integer) 2
1) &amp;quot;message&amp;quot;
# 这里就是接收到的消息
2) &amp;quot;test1&amp;quot; # 接收到消息的频道
3) &amp;quot;message1&amp;quot; # 该频道接收到的消息内容
&lt;/code>&lt;/pre>
&lt;p>注意：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>订阅了一个或多个频道的客户端尽管可以订阅和取消订阅其他频道，但不应发出命令。对订阅和取消订阅操作的回复以消息的形式发送，以便客户端可以读取连贯的消息流，其中第一个元素表示消息的类型。在已订阅客户端的上下文中允许使用的命令是 SUBSCRIBE，PSUBSCRIBE，UNSUBSCRIBE，PUNSUBSCRIBE， PING 和 QUIT。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>但是，&lt;code>redis-cli&lt;/code>一旦进入订阅模式，该命令将不接受任何命令，只能通过退出该模式&lt;code>Ctrl-C&lt;/code>。&lt;/p>
&lt;/li>
&lt;/ul></description></item></channel></rss>