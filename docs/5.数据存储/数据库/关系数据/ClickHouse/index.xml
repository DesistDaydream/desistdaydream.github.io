<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ClickHouse on 断念梦的站点</title><link>https://desistdaydream.github.io/docs/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE/ClickHouse/</link><description>Recent content in ClickHouse on 断念梦的站点</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE/ClickHouse/index.xml" rel="self" type="application/rss+xml"/><item><title>ClickHouse</title><link>https://desistdaydream.github.io/docs/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE/ClickHouse/ClickHouse/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE/ClickHouse/ClickHouse/</guid><description>概述 参考：
GitHub 项目，ClickHouse/ClickHouse 官网 存算分离，查询性能过剩
https://clickhouse.com/docs/en/guides/sre/network-ports
端口号 描述 2181 ZooKeeper default service port. Note: see 9181 for ClickHouse Keeper 8123 HTTP default port 8443 HTTP SSL/TLS default port 9000 原生协议端口（也称为 ClickHouse TCP 协议）。由 ClickHouse 生态的应用程序和进程使用（e.g. 各种语言利用 SDK 编写的程序、clickhouse-client 等自带程序、etc.）。也用于分布式查询的内部服务器之间的通信。 9440 与 9000 的功能相同，但是带有 SSL/TLS 9004 MySQL emulation port 9005 PostgreSQL emulation port (also used for secure communication if SSL is enabled for ClickHouse). 9009 Inter-server communication port for low-level data access.</description></item><item><title>Engine</title><link>https://desistdaydream.github.io/docs/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE/ClickHouse/Engine/</link><pubDate>Tue, 25 Mar 2025 12:47:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE/ClickHouse/Engine/</guid><description>概述 参考：
官方文档，SQL 参考 - 引擎 流式数据同步：一种PostgreSQL到ClickHouse的高效数据同步方案 Engine(引擎) 是 ClickHouse 实现数据处理功能的核心抽象。数据库 以及 表 都由各种各样的 Engine 实现
Database Engine(数据库引擎) Table Engine(表引擎) Database Engine Table Engine Table Engine(表引擎) 本质上是用来定义表的类型。ClickHouse 的表甚至可以通过 Engine 从其他数据库中读取数据（e.g. 直接读取 PostgreSQL 中某个表的数据）
Table Engine 可以决定：
How and where data is stored, where to write it to, and where to read it from. 数据如何存储、在何处存储、将其写入何处以及从何处读取。 Which queries are supported, and how. 支持哪些查询以及如何支持。 Concurrent data access. 并发数据访问。 Use of indexes, if present. 使用索引（如果存在）。 Whether multithread request execution is possible.</description></item><item><title>ClickHouse MGMT</title><link>https://desistdaydream.github.io/docs/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE/ClickHouse/ClickHouse-MGMT/</link><pubDate>Sun, 05 Jan 2025 21:03:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE/ClickHouse/ClickHouse-MGMT/</guid><description>概述 参考：
官方文档，管理和部署 链接有点乱，官网页面关于这部分大改过。截至本文更新可以从页面的 Server Admin 点进来。 备份与恢复 参考：
官方文档，管理与部署 - 备份与恢复 GitHub 项目，AlexAkulov/clickhouse-backup</description></item><item><title>ClickHouse SQL</title><link>https://desistdaydream.github.io/docs/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE/ClickHouse/ClickHouse-SQL/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE/ClickHouse/ClickHouse-SQL/</guid><description>概述 参考：
官方文档，SQL 参考 SQL 关键字 可以在 官方文档，SQL 参考 - 语句 看到 ClickHouse 支持的所有 SQL 基础关键字。诸如常见的 SELECT、INSERT、etc. 还有一些独属于 ClickHouse 的关键字，e.g. KILL、OPTIMIZE、etc.
SELECT 有 EXCEPT 修饰符，可以用于排除某些列，比如下面的 SQL 可以从表中排除 domain 与 url 两列（i.e 返回结果没有这俩列）
SELECT * EXCEPT (domain,url) FROM nginx_logs.nginx_access ARRAY JOIN https://clickhouse.com/docs/sql-reference/statements/select/array-join
常用在多表联合查询的场景。下面的 SQL 用来从 my_table_one 表查询出某些结果，并将结果作用在 my_table_two 表中进行多次过滤。具体逻辑是：
从 my_table_one 表中查询 start_time 与 end_time 并组成各自的数组 利用 ARRAY JOIN，对 start_times 和 end_times 进行遍历，每次遍历都查询一次 my_tables_two，数组中的元素作为 WHERE 中的条件。 WITH time_ranges AS ( SELECT groupArray(DISTINCT start_time) AS start_times, groupArray(DISTINCT end_time) AS end_times FROM my_database.</description></item></channel></rss>