<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦 – Rust</title><link>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/</link><description>Recent content in Rust on 断念梦</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Rust</title><link>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/Rust/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Rust/Rust/</guid><description>
&lt;h1 id="概述">概述&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/rust-lang/rust">GitHub 项目，rust-lang/rust&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.rust-lang.org/">官网&lt;/a>、&lt;/li>
&lt;li>&lt;a href="https://doc.rust-lang.org/book/">官方文档&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h1 id="学习资料">学习资料&lt;/h1>
&lt;p>&lt;a href="https://www.bilibili.com/video/BV1hp4y1k7SV/">B 站-软件工艺师，Rust 编程语言入门教程（Rust 语言/Rust 权威指南配套）&lt;/a>&lt;/p>
&lt;h1 id="hello-world">Hello World&lt;/h1>
&lt;p>代码：&lt;code>hello_world.rs&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-rust" data-lang="rust">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fn&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> println!(&lt;span style="color:#e6db74">&amp;#34;Hello, world!&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ rustc main.rs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ./main
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Hello, world!
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="rust-语言关键字">Rust 语言关键字&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://doc.rust-lang.org/book/appendix-01-keywords.html">官方文档&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;ul>
&lt;li>&lt;code>as&lt;/code> - perform primitive casting, disambiguate the specific trait containing an item, or rename items in &lt;code>use&lt;/code> and &lt;code>extern crate&lt;/code> statements&lt;/li>
&lt;li>&lt;code>async&lt;/code> - return a &lt;code>Future&lt;/code> instead of blocking the current thread&lt;/li>
&lt;li>&lt;code>await&lt;/code> - suspend execution until the result of a &lt;code>Future&lt;/code> is ready&lt;/li>
&lt;li>&lt;code>break&lt;/code> - exit a loop immediately&lt;/li>
&lt;li>&lt;code>const&lt;/code> - define constant items or constant raw pointers&lt;/li>
&lt;li>&lt;code>continue&lt;/code> - continue to the next loop iteration&lt;/li>
&lt;li>&lt;code>crate&lt;/code> - link an external crate or a macro variable representing the crate in which the macro is defined&lt;/li>
&lt;li>&lt;code>dyn&lt;/code> - dynamic dispatch to a trait object&lt;/li>
&lt;li>&lt;code>else&lt;/code> - fallback for &lt;code>if&lt;/code> and &lt;code>if let&lt;/code> control flow constructs&lt;/li>
&lt;li>&lt;code>enum&lt;/code> - define an enumeration&lt;/li>
&lt;li>&lt;code>extern&lt;/code> - link an external crate, function, or variable&lt;/li>
&lt;li>&lt;code>false&lt;/code> - Boolean false literal&lt;/li>
&lt;li>&lt;code>fn&lt;/code> - define a function or the function pointer type&lt;/li>
&lt;li>&lt;code>for&lt;/code> - loop over items from an iterator, implement a trait, or specify a higher-ranked lifetime&lt;/li>
&lt;li>&lt;code>if&lt;/code> - branch based on the result of a conditional expression&lt;/li>
&lt;li>&lt;code>impl&lt;/code> - implement inherent or trait functionality&lt;/li>
&lt;li>&lt;code>in&lt;/code> - part of &lt;code>for&lt;/code> loop syntax&lt;/li>
&lt;li>&lt;code>let&lt;/code> - bind a variable&lt;/li>
&lt;li>&lt;code>loop&lt;/code> - loop unconditionally&lt;/li>
&lt;li>&lt;code>match&lt;/code> - match a value to patterns&lt;/li>
&lt;li>&lt;code>mod&lt;/code> - define a module&lt;/li>
&lt;li>&lt;code>move&lt;/code> - make a closure take ownership of all its captures&lt;/li>
&lt;li>&lt;code>mut&lt;/code> - denote mutability in references, raw pointers, or pattern bindings&lt;/li>
&lt;li>&lt;code>pub&lt;/code> - denote public visibility in struct fields, &lt;code>impl&lt;/code> blocks, or modules&lt;/li>
&lt;li>&lt;code>ref&lt;/code> - bind by reference&lt;/li>
&lt;li>&lt;code>return&lt;/code> - return from function&lt;/li>
&lt;li>&lt;code>Self&lt;/code> - a type alias for the type we are defining or implementing&lt;/li>
&lt;li>&lt;code>self&lt;/code> - method subject or current module&lt;/li>
&lt;li>&lt;code>static&lt;/code> - global variable or lifetime lasting the entire program execution&lt;/li>
&lt;li>&lt;code>struct&lt;/code> - define a structure&lt;/li>
&lt;li>&lt;code>super&lt;/code> - parent module of the current module&lt;/li>
&lt;li>&lt;code>trait&lt;/code> - define a trait&lt;/li>
&lt;li>&lt;code>true&lt;/code> - Boolean true literal&lt;/li>
&lt;li>&lt;code>type&lt;/code> - define a type alias or associated type&lt;/li>
&lt;li>&lt;code>union&lt;/code> - define a &lt;a href="https://doc.rust-lang.org/reference/items/unions.html">union&lt;/a> and is only a keyword when used in a union declaration&lt;/li>
&lt;li>&lt;code>unsafe&lt;/code> - denote unsafe code, functions, traits, or implementations&lt;/li>
&lt;li>&lt;code>use&lt;/code> - bring symbols into scope&lt;/li>
&lt;li>&lt;code>where&lt;/code> - denote clauses that constrain a type&lt;/li>
&lt;li>&lt;code>while&lt;/code> - loop conditionally based on the result of an expression&lt;/li>
&lt;/ul>
&lt;h1 id="rust-语言规范">Rust 语言规范&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;/blockquote></description></item></channel></rss>