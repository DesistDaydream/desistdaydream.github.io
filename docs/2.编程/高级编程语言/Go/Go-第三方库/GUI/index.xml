<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦 – GUI</title><link>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Go/Go-%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/GUI/</link><description>Recent content in GUI on 断念梦</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Go/Go-%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/GUI/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Fyne</title><link>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Go/Go-%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/GUI/Fyne/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Go/Go-%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/GUI/Fyne/</guid><description>
&lt;h1 id="概述">概述&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/fyne-io/fyne">GitHub 项目，fyne-io/fyne&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://fyne.io/">官网&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.jianshu.com/p/be97c0668252">简书，go fyne 开发桌面应用&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://juejin.cn/column/7087843642252984351">稀土掘进，专栏-Fyne ( go跨平台GUI )中文文档&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>Fyne 是一个易于学习、免费、开源的工具包，用于构建适用于桌面、移动设备及其他设备的图形应用程序。&lt;/p>
&lt;p>注意：使用 Fyne 需要安装 &lt;a href="https://sourceforge.net/projects/mingw-w64/">MinGW-w64&lt;/a>&lt;/p>
&lt;h2 id="hello-world">Hello World&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;fyne.io/fyne/v2/app&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;fyne.io/fyne/v2/container&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;fyne.io/fyne/v2/widget&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 实例化一个应用
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">a&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">app&lt;/span>.&lt;span style="color:#a6e22e">New&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 为应用创建一个窗口
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">w&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">a&lt;/span>.&lt;span style="color:#a6e22e">NewWindow&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Hello&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// ######## 创建一些应该在窗口中显示的内容，以及设计窗口中的布局 ########
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// 创建一个 Label 小部件
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">labelWidget&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">widget&lt;/span>.&lt;span style="color:#a6e22e">NewLabel&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Hello Fyne!&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 创建一个按钮小部件
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">buttonWidget&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">widget&lt;/span>.&lt;span style="color:#a6e22e">NewButton&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Hi!&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">func&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">labelWidget&lt;/span>.&lt;span style="color:#a6e22e">SetText&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Welcome :)&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 创建布局并将指定的对象（小部件、等等）放到这个布局中。
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// NewVBox 中会使用 fyne 中自带的 VBox 布局，这种布局会将对象从上到下堆叠。
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">layout&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">container&lt;/span>.&lt;span style="color:#a6e22e">NewVBox&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">labelWidget&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">buttonWidget&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// #################################################################
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 为 w 窗口设置应该在其中的内容
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">w&lt;/span>.&lt;span style="color:#a6e22e">SetContent&lt;/span>(&lt;span style="color:#a6e22e">layout&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 显示窗口并运行程序。必须要在 main() 函数的末尾，因为该方法将会阻塞。
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">w&lt;/span>.&lt;span style="color:#a6e22e">ShowAndRun&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>除了 Hello World 示例，官方还提供了一个演示程序，我们可以直接执行：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>go run fyne.io/fyne/v2/cmd/fyne_demo@latest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在这个窗口中，我们可以看到 Fyne 的所有功能，就像下面这样：&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/go/202306271643980.png" alt="image.png">&lt;/p>
&lt;h1 id="fyne-的组成">Fyne 的组成&lt;/h1>
&lt;p>Fyne 创建的 GUI 应用程序由一个或多个 &lt;strong>CanvasOjbects(画布对象)&lt;/strong>&lt;/p>
&lt;p>Fyne 用起来有点像写前端代码&lt;/p>
&lt;ul>
&lt;li>使用时先创建一个 App（代码中是 App 接口），这个 App 就像创建了一个浏览器；&lt;/li>
&lt;li>然后创建一个 Window（代码中是 Window 接口），这就像就为浏览器打开了一个标签；&lt;/li>
&lt;li>在这个 Window 中创建 &lt;strong>Canvas(画布)&lt;/strong>（代码中是 Canvas 接口），这就像标签页中打开了一个 HTML 页面；&lt;/li>
&lt;li>在 Canvas 中我们可以填充各种内容，Fyne 将内容抽象为 &lt;strong>CanvasObject(画布对象)&lt;/strong>（代码中是 CanvasObject 接口），这就像 HTML 中的元素；
&lt;ul>
&lt;li>而 &lt;strong>Widget(小组件)&lt;/strong> 是一种特殊类型的 CanvasObject，它具有与之关联的交互元素。HTML 中常见的元素（比如 表单、输入框、按钮、等等），我们都可以找到对应的 Widget
&lt;ul>
&lt;li>各种 Widget 都是一个实现了 CanvasObject 接口的结构体，比如 Form、Entry、Button 等等，我们可以在&lt;a href="#%E5%B0%8F%E9%83%A8%E4%BB%B6%E5%88%97%E8%A1%A8">小部件列表&lt;/a>找看到所有的小部件，这些小部件相关的代码都在 &lt;a href="https://pkg.go.dev/fyne.io/fyne/v2/widget">widget 包&lt;/a>中&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>在一个前端页面中，除了元素以外还应该包含样式，对于 Fyne 来说，我们通过 &lt;strong>Container(容器)&lt;/strong> 和 &lt;strong>Layouts(布局&lt;/strong>) 实现，这就像 CSS&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Container(容器)&lt;/strong> 也是一种 CanvasObject，只不过 Container 中可以使用 Layouts，并包含其他 CanvasObject（甚至可以包含其他 Container），这个概念有点像 Vue 的组件。
&lt;ul>
&lt;li>我们可以在 Container 中设计 &lt;strong>Layout(布局)&lt;/strong> 以安放各种 CanvasObject 的位置，在&lt;a href="#%E5%B8%83%E5%B1%80%E5%88%97%E8%A1%A8">布局列表&lt;/a>中可以看到 Fyne 自带的所有 Layout 样式。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="小部件列表">小部件列表&lt;/h2>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://developer.fyne.io/explore/widgets">官方文档，探索 Fyne-小部件列表&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h2 id="布局列表">布局列表&lt;/h2>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://developer.fyne.io/explore/layouts">官方文档，探索 Fyne-布局列表&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h1 id="数据绑定">数据绑定&lt;/h1>
&lt;p>Fyne v2.0.0 中引入了数据绑定，使将许多小部件连接到将随时间更新的数据源变得更加容易。该&lt;code>data/binding&lt;/code>包有许多有用的绑定，可以管理将在应用程序中使用的大多数标准类型。可以使用绑定 API（例如&lt;code>NewString&lt;/code>）来管理数据绑定，也可以将其连接到外部数据项，例如 (`BindInt(*int))。&lt;/p>
&lt;p>支持绑定的小部件通常有一个&lt;code>...WithData&lt;/code>构造函数来在创建小部件时设置绑定。您还可以调用&lt;code>Bind()&lt;/code>和 &lt;code>Unbind()&lt;/code>管理现有小部件的数据。以下示例显示了如何管理&lt;code>String&lt;/code>绑定到简单&lt;code>Label&lt;/code>小部件的数据项。&lt;/p>
&lt;h1 id="应用案例">应用案例&lt;/h1>
&lt;p>&lt;a href="https://mp.weixin.qq.com/s/VrTFMhpYvzr78ULqsQ15Sw">公众号-Go语言中文网，使用 Go GUI 库 fyne 编写一个计算器程序&lt;/a>&lt;/p></description></item><item><title>Docs: GUI</title><link>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Go/Go-%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/GUI/GUI/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Go/Go-%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/GUI/GUI/</guid><description>
&lt;h1 id="概述">概述&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;/blockquote>
&lt;h1 id="go-opencv">Go OpenCV&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://www.codebaoku.com/it-go/it-go-146781.html">http://www.codebaoku.com/it-go/it-go-146781.html&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;a href="https://github.com/go-opencv/go-opencv">https://github.com/go-opencv/go-opencv&lt;/a>
&lt;a href="https://github.com/hybridgroup/gocv">https://github.com/hybridgroup/gocv&lt;/a>&lt;/p></description></item></channel></rss>