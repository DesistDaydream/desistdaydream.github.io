<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>时间处理 on 断念梦的站点</title><link>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Go/Go-%E8%A7%84%E8%8C%83%E4%B8%8E%E6%A0%87%E5%87%86%E5%BA%93/%E6%97%B6%E9%97%B4%E5%A4%84%E7%90%86/</link><description>Recent content in 时间处理 on 断念梦的站点</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Go/Go-%E8%A7%84%E8%8C%83%E4%B8%8E%E6%A0%87%E5%87%86%E5%BA%93/%E6%97%B6%E9%97%B4%E5%A4%84%E7%90%86/index.xml" rel="self" type="application/rss+xml"/><item><title>Timer 与 Ticker</title><link>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Go/Go-%E8%A7%84%E8%8C%83%E4%B8%8E%E6%A0%87%E5%87%86%E5%BA%93/%E6%97%B6%E9%97%B4%E5%A4%84%E7%90%86/Timer-%E4%B8%8E-Ticker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Go/Go-%E8%A7%84%E8%8C%83%E4%B8%8E%E6%A0%87%E5%87%86%E5%BA%93/%E6%97%B6%E9%97%B4%E5%A4%84%E7%90%86/Timer-%E4%B8%8E-Ticker/</guid><description>我们经常需要在未来某个时间点运行代码、或者每隔一定时间重复运行代码。Go 内置的 Timer 与 Ticker 特性让就可以实现这些功能。
Timer
Timer(定时器)，用来在当前时间之后的某一个时刻运行 Go 代码
Timer 应用示例
package main import ( &amp;#34;fmt&amp;#34; &amp;#34;time&amp;#34; ) func main() { // NewTimer会创建一个定时器，在最少过去时间段`参数内定义的时间`后到期 // 返回值为名为Timer的结构体指针，其中时间会被发送给一个通道C timer1 := time.NewTimer(time.Second * 5) // 直到定时器的通道C明确的发送了定时器失效的值之前，将一直阻塞 &amp;lt;-timer1.C fmt.Println(&amp;#34;Timer 1 expired&amp;#34;) // 由于以协程方式启动，还没等到失效，就运行了 Stop() timer2 := time.NewTimer(time.Second) go func() { &amp;lt;-timer2.C fmt.Println(&amp;#34;Timer 2 expired&amp;#34;) }() stop2 := timer2.Stop() if stop2 { fmt.Println(&amp;#34;Timer 2 stopped&amp;#34;) } } // 第一个定时器将在程序开始后~5秒后失效，但是第二个在他没失效之前就停止了 Ticker
Ticker(打点器)，用于在固定的时间间隔重复执行代码。所谓 Ticker，就是 滴答、滴答、滴答，这种，一滴，一答，就是一个 Ticker
Ticker 应用示例</description></item></channel></rss>