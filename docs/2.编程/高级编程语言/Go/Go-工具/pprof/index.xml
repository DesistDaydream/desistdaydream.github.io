<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>pprof on 断念梦的站点</title><link>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Go/Go-%E5%B7%A5%E5%85%B7/pprof/</link><description>Recent content in pprof on 断念梦的站点</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Go/Go-%E5%B7%A5%E5%85%B7/pprof/index.xml" rel="self" type="application/rss+xml"/><item><title>pprof</title><link>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Go/Go-%E5%B7%A5%E5%85%B7/pprof/pprof/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Go/Go-%E5%B7%A5%E5%85%B7/pprof/pprof/</guid><description>概述 参考：
Go 官方文档，诊断 GitHub 项目，google/pprof GitHub 项目-文档，google/pprof/doc Go 包，net/http/pprof Go 博客，分析 Go 程序 思否，Golang 大杀器之性能剖析 PProf 公众号-云原生实验室，忙碌的开发人员的 Go Profiling、跟踪和可观察性指南 pprof 是 go 程序的性能分析器，一个可视化和分析 Profiling 数据的工具。pprof 可以从目标获取运行数据并生成 profile.proto 格式的 Profiles 文件，还可以读取 profile.proto 格式的 Profiling 样本集合，并生成报告。
profile.proto 是一个协议缓冲区，描述了一组调用堆栈和符号化信息。详见 https://developers.google.com/protocol-buffers
可以通过本地文件或 HTTP 读取 Profiles 文件。同时也可以聚合或比较多个 Profiles 文件。每个 profile.prot 格式的 Profile 样本的集合。
使用 pprof 想要使用 pprof 程序非常简单，只需要引入 net/http/pprof 包，并启动监听即可
package main import ( &amp;#34;log&amp;#34; &amp;#34;net/http&amp;#34; _ &amp;#34;net/http/pprof&amp;#34; ) func main() { if err := http.</description></item><item><title>通过pprof监控docker</title><link>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Go/Go-%E5%B7%A5%E5%85%B7/pprof/%E9%80%9A%E8%BF%87pprof%E7%9B%91%E6%8E%A7docker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Go/Go-%E5%B7%A5%E5%85%B7/pprof/%E9%80%9A%E8%BF%87pprof%E7%9B%91%E6%8E%A7docker/</guid><description>debug 模式启动 docker
$ /usr/bin/docker daemon -D -H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock 通过 socat 端口转发 $ socat -d -d TCP-LISTEN:8080,fork,bind=192.168.1.137 UNIX:/var/run/docker.sock 测试 [root@reg pprof]# curl -s http://10.39.0.102:8080/debug/vars | jq . { &amp;#34;cmdline&amp;#34;: [ &amp;#34;/usr/bin/dockerd&amp;#34;, &amp;#34;-D&amp;#34; ], &amp;#34;memstats&amp;#34;: { &amp;#34;Alloc&amp;#34;: 13847856, &amp;#34;TotalAlloc&amp;#34;: 71577968, &amp;#34;Sys&amp;#34;: 27052344, &amp;#34;Lookups&amp;#34;: 7829, &amp;#34;Mallocs&amp;#34;: 891300, &amp;#34;Frees&amp;#34;: 772846, &amp;#34;HeapAlloc&amp;#34;: 13847856, &amp;#34;HeapSys&amp;#34;: 18743296, &amp;#34;HeapIdle&amp;#34;: 1941504, &amp;#34;HeapInuse&amp;#34;: 16801792, &amp;#34;HeapReleased&amp;#34;: 1810432, &amp;#34;HeapObjects&amp;#34;: 118454, &amp;#34;StackInuse&amp;#34;: 1179648, &amp;#34;StackSys&amp;#34;: 1179648, &amp;#34;MSpanInuse&amp;#34;: 225280, &amp;#34;MSpanSys&amp;#34;: 262144, &amp;#34;MCacheInuse&amp;#34;: 4800, &amp;#34;MCacheSys&amp;#34;: 16384, &amp;#34;BuckHashSys&amp;#34;: 1460436, &amp;#34;GCSys&amp;#34;: 1374208, &amp;#34;OtherSys&amp;#34;: 4016228, &amp;#34;NextGC&amp;#34;: 25872553, &amp;#34;LastGC&amp;#34;: 1512984476111075800, &amp;#34;PauseTotalNs&amp;#34;: 29246607, &amp;#34;PauseNs&amp;#34;: [ 317474, 1159328, 271770, .</description></item></channel></rss>