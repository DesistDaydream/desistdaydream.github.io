<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GitHub on 断念梦的站点</title><link>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitHub/</link><description>Recent content in GitHub on 断念梦的站点</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitHub/index.xml" rel="self" type="application/rss+xml"/><item><title>GitHub</title><link>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitHub/GitHub/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitHub/GitHub/</guid><description>概述 参考：
官方文档 官方文档，中文 在代码仓库中，点击 . 即可进入 Web 版的 VS Code，在线编辑当前仓库的代码。
GitHub Desktop https://desktop.github.com/
专注于重要的事情，而不是与 Git 对抗。无论您是 Git 新手还是经验丰富的用户，GitHub Desktop 都能简化您的开发工作流程。</description></item><item><title>GitHub 管理</title><link>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitHub/GitHub-%E7%AE%A1%E7%90%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitHub/GitHub-%E7%AE%A1%E7%90%86/</guid><description>概述 参考：
git clone克隆或下载一个仓库单个文件夹 1、如果是想克隆别人的项目或者自己的 很简单的一个网站就解决了。DownGit： 只需要找到仓库中对应文件夹的 url,输入之后,点击 download 自动打包下载:
（这里说明一下，因为原作者的项目无法使用，这是我修改过的新项目吧，把资源链接改到了国内 CDN，所以访问速度很快！）
2、克隆自己的项目 注意：本方法会下载整个项目，但是，最后出现在本地项目文件下里只有需要的那个文件夹存在。类似先下载，再过滤。
有时候因为需要我们只想 gitclone 下仓库的单个或多个文件夹，而不是全部的仓库内容，这样就很省事，所以下面就开始教程啦
在 Git1.7.0 以前，这无法实现，但是幸运的是在 Git1.7.0 以后加入了 Sparse Checkout 模式，这使得 Check Out 指定文件或者文件夹成为可能。
举个例子：
现在有一个 test 仓库https://github.com/mygithub/test你要 gitclone 里面的tt子目录：在本地的硬盘位置打开Git Bash
git init test &amp;amp;&amp;amp; cd test //新建仓库并进入文件夹 git config core.sparsecheckout true //设置允许克隆子目录 echo &amp;#39;tt*&amp;#39; &amp;gt;&amp;gt; .git/info/sparse-checkout //设置要克隆的仓库的子目录路径 //空格别漏 git remote add origin git@github.com:mygithub/test.git //这里换成你要克隆的项目和库 git pull origin master //下载 ok，大功告成！！！
管理所有通知 管理所有已经订阅的 issue https://github.com/notifications/subscriptions
github上fork了别人的项目后，再同步更新别人的提交 我从 github 网站和用 git 命令两种方式说一下。</description></item><item><title>GitHub 搜索</title><link>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitHub/GitHub-%E6%90%9C%E7%B4%A2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitHub/GitHub-%E6%90%9C%E7%B4%A2/</guid><description>概述 参考：
官方文档，在 GitHub 上搜索 GitHub 的集成搜索涵盖了 GitHub 上的许多存储库、用户和代码行。
查找 Github 仓库所有者的联系方式 https://juejin.cn/post/6951642072935825439
通过提交记录
查看项目第一次 commit 时间 https://www.cnblogs.com/saysmy/p/7292177.html
这个代码库 commits7855 次，点击进入 commits 发现翻页只有两个按钮不能直接点击翻页到最后一页，那如何查看第一条记录呢？
原来 github为每个commit版本都生成了一个SHA hash值，我们可以通过SHA值来直接搜索到第N次的提交
点击一次 older 发现 url 格式为：
https://github.com/lodash/lodash/commits/master?after=c2616dd4f3ab267d000a2b4f564e1c76fc8b8378+34
后面的 after 即代表展示 SHA 为c2616dd4f3ab267d000a2b4f564e1c76fc8b8378 的后面第35条commit。
那c2616dd4f3ab267d000a2b4f564e1c76fc8b8378 这一串是怎么得到的呢？
在commits列表内的每一条记录后面都有一个copy图标，这里点击即会成功复制此条commit的SHA
c2616dd4f3ab267d000a2b4f564e1c76fc8b8378正式此代码库的最新一条commit的SHA。
于是如果我们想找到第一条记录，总commits记录是7855次，那么搜索url为：
https://github.com/lodash/lodash/commits/master?after=c2616dd4f3ab267d000a2b4f564e1c76fc8b8378+7853
成功搜索到想要的结果。
搜索 Issue 和 PR 纯粹与用户相关的搜索 involves:USERNAME # 搜索所有涉及 USERNAME 的内容。可以用户的东西包括: author(作者)、assignee(分配)、mentions(提及)、commenter(评论者)
author:USERNAME # 搜索由 USERNAME 创建的 ISSUE 和 PR
commenter:USERNAME # 搜索 USERNAME 用户评论过的内容
mentions:USERNAME # 搜索提及 USERNAME 的内容。i.</description></item></channel></rss>