<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Workflow 文件详解 on 断念梦的站点</title><link>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitHub/GitHub-Actions/Workflow-%E6%96%87%E4%BB%B6%E8%AF%A6%E8%A7%A3/</link><description>Recent content in Workflow 文件详解 on 断念梦的站点</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitHub/GitHub-Actions/Workflow-%E6%96%87%E4%BB%B6%E8%AF%A6%E8%A7%A3/index.xml" rel="self" type="application/rss+xml"/><item><title>Workflow 命令</title><link>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitHub/GitHub-Actions/Workflow-%E6%96%87%E4%BB%B6%E8%AF%A6%E8%A7%A3/Workflow-%E5%91%BD%E4%BB%A4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitHub/GitHub-Actions/Workflow-%E6%96%87%E4%BB%B6%E8%AF%A6%E8%A7%A3/Workflow-%E5%91%BD%E4%BB%A4/</guid><description>概述 参考：
官方文档，使用 Workflow-Workflow 命令 我们可以在 Workflow 中执行 Shell 命令时，使用 GitHub Action Workflow 的特殊命令。这些 Workflow 命令可以与运行机器通信以 设置环境变量、输出值、添加 debug 消息到 输出日志 等等。
大多数 Workflow 命令以特定格式通过 echo 命令使用，语法为：
echo &amp;quot;::WorkflowCommand Parameter1={DATA},Parameter2={DATA},...::{COMMAND|VALUE}&amp;quot;
下面是一个设置步骤的输出内容的示例：
jobs: test-workflow-command: runs-on: ubuntu-latest steps: - name: 设置 ARCH 变量的值为 uname -m 命令执行的结果 run: echo &amp;#39;::set-output name=ARCH::$(uname -m)&amp;#39; id: arch-generator - name: 从 id 为 arch-generator 步骤的输出中，获取 ARCH 的值 run: echo &amp;#34;The selected color is ${{ steps.arch-generator.outputs.ARCH }}&amp;#34;</description></item><item><title>Workflow 文件详解</title><link>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitHub/GitHub-Actions/Workflow-%E6%96%87%E4%BB%B6%E8%AF%A6%E8%A7%A3/Workflow-%E6%96%87%E4%BB%B6%E8%AF%A6%E8%A7%A3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitHub/GitHub-Actions/Workflow-%E6%96%87%E4%BB%B6%E8%AF%A6%E8%A7%A3/Workflow-%E6%96%87%E4%BB%B6%E8%AF%A6%E8%A7%A3/</guid><description>概述 参考：
官方文档，使用工作流-触发工作流 官方文档，使用工作流-触发工作流的事件 官方文档，使用工作流-Workflow 语法 GitHub 的 Actions 通过 YAML 格式的文件来定义运行方式。工作流文件必须保存在项目根目录下的 .github/workflows/ 目录下
顶层字段 name(STRING) # Workflow 的名称。默认值：当前 Workflow 的文件名。 run-name # on(on) # 指定触发 Workflow 的条件 permissions env defaults concurrency jobs(jobs) # Workflow 文件的主体，用于定义要执行的一项或多项任务 on https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#on
这个字段用来定义触发工作流的事件，在这里可以看到 GitHub 支持的所有事件，通常包含如下字段
&amp;lt;EVENT_NAME&amp;gt;.types # 根据指定 EVENT_NAME(事件名称) 事件的活动，触发 Workflow EVENT_NAME 指事件的名称，所有可用的事件详见 Events that trigger workflows types 就是指事件的 Activity types(活动类型) 比如名为 release 的事件是指一个项目的 Releases，release 有 published、created、edited、etc. 很多活动类型。 下面的示例就是指当项目的 Release 发布时（创建后点击 Publish release 按钮），开始执行 Workflow on: release: types: [published] push(push) # 当上传代码时，触发 Workflow pull_request(pull_request) # 当发生 PR 时，触发 orkflow schedule([]schedule) # 定时触发 Worlkflow workflow_dispatch(workflow_dispatch) # 手动触发 Workflow &amp;hellip;&amp;hellip; push branches: &amp;lt;[]STRING&amp;gt; # 指定出发条件，当上传代码到该字段指定的分支时，触发 Workflow</description></item></channel></rss>