<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GitHub Actions on 断念梦的站点</title><link>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitHub/GitHub-Actions/</link><description>Recent content in GitHub Actions on 断念梦的站点</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitHub/GitHub-Actions/index.xml" rel="self" type="application/rss+xml"/><item><title>GitHub Actions</title><link>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitHub/GitHub-Actions/GitHub-Actions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitHub/GitHub-Actions/GitHub-Actions/</guid><description>概述 参考：
官方文档 官方文档，学习 GitHub Actions - GitHub Actions 简介 域名中的路径改成 理解 GitHub Actions GitHub Actions 官方市场：Actions Marketplace 阮一峰老师的一篇文章：GitHub Actions 入门教程 https://blog.csdn.net/sculpta/article/details/104142607 GitHub Actions 是在 GitHub Universe 大会上发布的，被 Github 主管 Sam Lambert 称为 “再次改变软件开发” 的一款重磅功能（“we believe we will once again revolutionize software development.”）。于 2018 年 10 月推出，内测了一段时间后，于 2019 年 11 月 13 日正式上线
GitHub 会提供一个以下配置的服务器做为 runner：
2-core CPU 7 GB of RAM memory 14 GB of SSD disk space （免费额度最多可以同时运行 20 个作业，心动了有木有 💘）</description></item><item><title>Actions 配置</title><link>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitHub/GitHub-Actions/Actions-%E9%85%8D%E7%BD%AE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitHub/GitHub-Actions/Actions-%E9%85%8D%E7%BD%AE/</guid><description>概述 参考：
在每个仓库的 Setting 页面可以为仓库的 Actions 进行一些配置
Workflow 权限 有的 Action 要想正常运行，要保证 Workflow 使用的默认 GITHUB_TOKEN 具有对 Realease 的读写权限（比如 softprops/action-gh-release 需要将构建结果上传至 Release 中，这个属于写入操作）。可以在 https://github.com/${USER}/${REOP}/settings/actions 页面修改仓库的 Action 中关于 Workflow 的配置
Setting - Actions - General - Workflow permissions
参考: https://github.com/softprops/action-gh-release/issues/232#issuecomment-1375588379</description></item><item><title>好用的 Action</title><link>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitHub/GitHub-Actions/%E5%A5%BD%E7%94%A8%E7%9A%84-Action/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitHub/GitHub-Actions/%E5%A5%BD%E7%94%A8%E7%9A%84-Action/</guid><description>概述 参考：
GitHub Marketplace，Action docker/build-push-action https://github.com/docker/build-push-action
使用 Buildx 构建和推送 Docker 映像的 GitHub Action
name: Build and push Docker image uses: docker/build-push-action@v2 with: - **context: .** # 构建上下文 - **file: simulate_mysql_exporter/e37_exporter/Dockerfile** # 指定要使用的 Dockerfile 路径，`默认值：{context字段的值}/Dockerfile` - **push: true** # 构建完成后，是否推送镜像 - **tags: ghcr.io/desistdaydream/e37-exporter:v0.2.0** # 指定要构建的镜像名称 action-gh-release https://github.com/softprops/action-gh-release
用于创建 Realease 的 GitHub Action
Notes: action-gh-release 需要上传文件，所以需要将仓库的 Actions 配置 中的 Workflow 权限设置为读写</description></item><item><title>Contexts 与 Variables</title><link>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitHub/GitHub-Actions/Contexts-%E4%B8%8E-Variables/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitHub/GitHub-Actions/Contexts-%E4%B8%8E-Variables/</guid><description>概述 参考：
官方文档，学习 GitHub Actions-上下文 官方文档，学习 GitHub Actions-环境变量 GitHub Actions 中可以通过 Contexts(上下文) 与 Environment Variables(环境变量) 来暴露工作流的信息或引用工作流的信息。就像下面的示例一样：
这是一个环境变量的示例：
GitHub Action 中的环境变量本质上是 Shell 中的变量，引用方式也是一样的。
name: Greeting on variable day on: workflow_dispatch env: DAY_OF_WEEK: Monday jobs: greeting_job: runs-on: ubuntu-latest env: Greeting: Hello steps: - name: &amp;#34;Say Hello Mona it&amp;#39;s Monday&amp;#34; run: echo &amp;#34;$Greeting $First_Name. Today is $DAY_OF_WEEK!&amp;#34; env: First_Name: Mona 这是一个上下文的示例：
name: Greeting on variable day on: workflow_dispatch env: DAY_OF_WEEK: Monday jobs: greeting_job: runs-on: ubuntu-latest env: Greeting: Hello steps: - name: &amp;#34;Say Hello Mona it&amp;#39;s Monday&amp;#34; run: echo &amp;#34;${{ env.</description></item></channel></rss>