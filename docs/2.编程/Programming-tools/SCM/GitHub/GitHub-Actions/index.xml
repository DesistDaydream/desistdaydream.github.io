<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦的站点 – GitHub Actions</title><link>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitHub/GitHub-Actions/</link><description>Recent content in GitHub Actions on 断念梦的站点</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitHub/GitHub-Actions/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: GitHub Actions</title><link>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitHub/GitHub-Actions/GitHub-Actions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitHub/GitHub-Actions/GitHub-Actions/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.github.com/cn/actions">官方文档&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.github.com/en/actions/learn-github-actions/introduction-to-github-actions">官方文档，学习 GitHub Actions - GitHub Actions 简介&lt;/a>
&lt;ul>
&lt;li>域名中的路径改成 &lt;a href="https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions">理解 GitHub Actions&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>GitHub Actions 官方市场：&lt;a href="https://github.com/marketplace?type=actions">Actions Marketplace&lt;/a>&lt;/li>
&lt;li>阮一峰老师的一篇文章：&lt;a href="http://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html">GitHub Actions 入门教程&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.csdn.net/sculpta/article/details/104142607">https://blog.csdn.net/sculpta/article/details/104142607&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>GitHub Actions 是在 GitHub Universe 大会上发布的，被 Github 主管 Sam Lambert 称为 “再次改变软件开发” 的一款重磅功能（“&lt;em>we believe we will once again revolutionize software development.&lt;/em>”）。于 2018 年 10 月推出，内测了一段时间后，于 2019 年 11 月 13 日正式上线&lt;/p>
&lt;p>GitHub 会提供一个以下配置的服务器做为 runner：&lt;/p>
&lt;ul>
&lt;li>2-core CPU&lt;/li>
&lt;li>7 GB of RAM memory&lt;/li>
&lt;li>14 GB of SSD disk space&lt;/li>
&lt;/ul>
&lt;p>（免费额度最多可以同时运行 20 个作业，心动了有木有 💘）&lt;/p>
&lt;p>GitHub Actions 是一个 &lt;code>CI/CD（持续集成/持续部署）&lt;/code>工具，持续集成由很多操作组成，比如 &lt;strong>抓取代码&lt;/strong>、&lt;strong>运行测试&lt;/strong>、&lt;strong>登录远程服务器&lt;/strong>、&lt;strong>发布到第三方服务&lt;/strong> 等等。GitHub 把这些操作统称为 &lt;strong>&lt;code>Actions(操作、行为)&lt;/code>&lt;/strong>。&lt;/p>
&lt;p>Actions 是 GitHub Actions 的核心，简单来说，它其实就是一段可以执行的代码，可以用来做很多事情。&lt;/p>
&lt;blockquote>
&lt;p>比如，你在 python 3.7 环境下写了一个 python 项目放到了 GitHub 上，但是考虑到其他用户的生产环境各异，可能在不同的环境中运行结果都不一样，甚至无法安装，这时你总不能在自己电脑上把所有的 python 环境都测试一遍吧&lt;/p>
&lt;p>但是如果有了 GitHub Actions，你可以在 runner 服务器上部署一段 actions 代码来自动完成这项任务。你不仅可以指定它的操作系统（支持 Windows Server 2019、Ubuntu 18.04、Ubuntu 16.04 和 macOS Catalina 10.15），还可以指定触发时机、指定 python 版本、安装其他库等等&lt;/p>
&lt;p>此外，它还可以用来做很多有趣的事，比如当有人向仓库里提交 issue 时，给你的微信发一条消息；爬取课程表，每天早上准时发到你的邮箱；当向 master 分支提交代码时，自动构建 Docker 镜像并打上标签发布到 Docker Hub 上 ……&lt;/p>
&lt;/blockquote>
&lt;p>慢慢的，你会发现很多操作在不同项目里面是类似的，完全可以共享。GitHub 也注意到了这一点，于是它允许开发者把每个操作写成独立的脚本文件，存放到代码仓库，使得其他开发者可以引用。如果我们需要某个 action，不必自己写复杂的脚本，直接引用他人写好的 action 即可，整个 CI/CD 过程，就变成了一个个 action 的组合。这就是 GitHub Actions 最特别的地方。&lt;/p>
&lt;blockquote>
&lt;p>总而言之，GitHub Actions 就是为我们提供了一个高效易用的 CI/CD 工作流，帮助我们自动构建、测试、部署我们的代码&lt;/p>
&lt;/blockquote>
&lt;p>GitHub 做了一个官方市场(暂且称为 Actions Hub)，在这里可以搜索到其他人提交的 Actions。另外，还有一个名为 &lt;a href="https://github.com/shink/actions-bot">awesome-actions&lt;/a> 的仓库，搜罗了不少好用的 actions。&lt;/p>
&lt;p>既然 actions 是代码仓库，就有版本的概念，用户可以引用某个具体版本的 action。比如下面的例子，用的就是 Git 的指针的概念。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>actions/setup-node@74bc508 &lt;span style="color:#8f5902;font-style:italic"># 指向一个 commit&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>actions/setup-node@v1.0 &lt;span style="color:#8f5902;font-style:italic"># 指向一个标签&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>actions/setup-node@master &lt;span style="color:#8f5902;font-style:italic"># 指向一个分支&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="actions-基本概念">Actions 基本概念&lt;a class="td-heading-self-link" href="#actions-%e5%9f%ba%e6%9c%ac%e6%a6%82%e5%bf%b5" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>Workflow(工作流程)&lt;/strong> # 持续集成一次运行的过程，就是一个 workflow。定义了由 Event 触发的执行流程。
&lt;ul>
&lt;li>&lt;strong>Job(任务)&lt;/strong> # 一个 Workflow 由一个或多个 Jobs 构成，每个 Job 都是在 runner 中运行的程序，并且该程序具有一个或多个 Setp(步骤) 以完成 Job。
&lt;ul>
&lt;li>&lt;strong>Runner(运行器)&lt;/strong> # 运行 JOB 的环境，可以是 &lt;a href="docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Virtualization/Virtualization.md">虚拟机&lt;/a> 或 &lt;a href="docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Containerization/Containerization.md">容器&lt;/a>。通常由 Workflow 文件中的 &lt;code>.jobs.JOB_ID.runs-on&lt;/code> 字段指定。&lt;/li>
&lt;li>&lt;strong>Step(步骤)&lt;/strong> # 每个 job 由多个 Step 构成，一步步完成。
&lt;ul>
&lt;li>&lt;strong>Action(动作)&lt;/strong> # 每个 step 可以依次执行一个或多个命令（action）。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Event(事件)&lt;/strong> # 触发 Workflow 的特定活动。比如，推送新的提交到仓库或者创建 PR，甚至可以配置 cron 定时触发 Workflow，也可以设定只由手动惦记某个按钮触发。&lt;/li>
&lt;/ul>
&lt;h3 id="workflow">Workflow&lt;a class="td-heading-self-link" href="#workflow" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>与 Jenkins、Drone 这类 CI/CD 工具一样，GitHub Actions 也有一个配置文件，用来定义要执行的操作，这个配置文件叫做 &lt;strong>Workflow 文件&lt;/strong>，需要默认存放在代码仓库的 &lt;strong>.github/workflows&lt;/strong> 目录中。&lt;/p>
&lt;p>Workflow 文件用来定义 GitHub Actions 要执行的操作，需要存放在代码仓库的 &lt;code>.github/workflows/*.yml&lt;/code> 目录中。&lt;/p>
&lt;p>Workflow 文件是 YAML 格式，后缀名必须统一为 &lt;code>.yml&lt;/code>。一个代码库可以有多个 workflow 文件。GitHub 只要发现 .github/workflows 目录中有 .yml 文件，就会自动根据该文件的配置运行工作流 。&lt;/p>
&lt;h1 id="actions-关联文件与配置">Actions 关联文件与配置&lt;a class="td-heading-self-link" href="#actions-%e5%85%b3%e8%81%94%e6%96%87%e4%bb%b6%e4%b8%8e%e9%85%8d%e7%bd%ae" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;strong>.github/workflows/&lt;/strong> # 工作流文件保存目录&lt;/p>
&lt;p>详见 &lt;a href="https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming%20tools/SCM/GitHub/GitHub%20Actions/Actions%20%E9%85%8D%E7%BD%AE.md">Actions 配置&lt;/a>&lt;/p>
&lt;h1 id="简单示例">简单示例&lt;a class="td-heading-self-link" href="#%e7%ae%80%e5%8d%95%e7%a4%ba%e4%be%8b" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;ul>
&lt;li>从 GitHub 上的仓库，在 .github/workflows/ 目录中创建一个名为 github-actions-demo.yml 的新文件。 更多信息请参阅“&lt;a href="https://docs.github.com/cn/github/managing-files-in-a-repository/creating-new-files">创建新文件&lt;/a>”。&lt;/li>
&lt;li>将以下 YAML 内容复制到 github-actions-demo.yml 文件中：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># 定义了 Workflow 名称&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">GitHub Actions Demo&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># 定义了触发 Workflow 的 Event&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">on&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#000">push]&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># 定义了 Workflow 中包含的 Job&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">jobs&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">Explore-GitHub-Actions&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># 定义运行这个 job 的 Runner。类似 Dockerfile 中的 FORM 指令。&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">runs-on&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">ubuntu-latest&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># 定义运行该 Job 应该执行的 Step&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">steps&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># 定义了该 Step 的 Action&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">run&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">echo &amp;#34;🎉 The job was automatically triggered by a ${{ github.event_name }} event.&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">run&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">echo &amp;#34;🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">run&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">echo &amp;#34;🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}.&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># 该步骤使用一个actions 官方发布的名为 checkout 的 Action。&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># 这个 Action 用来将指定仓库的代码同步到工作流的 runner 中&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># 只要 runner 中有代码了，后续如何操作，就可以自己随便搞了~&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Check out repository code&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">uses&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">actions/checkout@v2&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">run&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">echo &amp;#34;💡 The ${{ github.repository }} repository has been cloned to the runner.&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">run&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">echo &amp;#34;🖥️ The workflow is now ready to test your code on the runner.&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">List files in the repository&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">run&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">|&lt;/span>&lt;span style="color:#8f5902;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"> ls ${{ github.workspace }}&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">run&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">echo &amp;#34;🍏 This job&amp;#39;s status is ${{ job.status }}.&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>滚动到页面底部，然后选择 Create a new branch for this commit and start a pull request（为此提交创建一个新分支并开始拉取请求）。 然后，若要创建拉取请求，请单击 Propose new file（提议新文件）。&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/github_action/1627537717320-0a2fe106-9eda-4c6f-a81b-6a5837803589.png" alt="image.png">&lt;/li>
&lt;/ul>
&lt;p>向仓库的分支提交工作流程文件会触发 push 事件并运行工作流程。&lt;/p>
&lt;h2 id="查看工作流程结果">查看工作流程结果&lt;a class="td-heading-self-link" href="#%e6%9f%a5%e7%9c%8b%e5%b7%a5%e4%bd%9c%e6%b5%81%e7%a8%8b%e7%bb%93%e6%9e%9c" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>在 GitHub 上，导航到仓库的主页面。&lt;/li>
&lt;li>在仓库名称下，单击 Actions（操作）。&lt;/li>
&lt;li>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/github_action/1627537717252-5a465a80-ace7-4a19-b689-c8a145ed90ee.png" alt="image.png">&lt;/li>
&lt;li>在左侧边栏中，单击您想要查看的工作流程。&lt;/li>
&lt;li>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/github_action/1627537717301-b7808d18-7c4f-40cc-85d4-83ef97121511.png" alt="image.png">&lt;/li>
&lt;li>从工作流程运行列表中，单击要查看的运行的名称。&lt;/li>
&lt;li>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/github_action/1627537717306-2e079ccf-8130-47fd-9642-f989e7b5fa74.png" alt="image.png">&lt;/li>
&lt;li>在 Jobs（作业）下，单击 Explore-GitHub-Actions 作业。&lt;/li>
&lt;li>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/github_action/1627537717287-fecb853f-8ee7-4868-81e3-7c843f665bcd.png" alt="image.png">&lt;/li>
&lt;li>日志显示每个步骤的处理方式。 展开任何步骤以查看其细节。&lt;/li>
&lt;li>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/github_action/1627537718475-e6315bfa-71e1-48e5-9514-16a822265b81.png" alt="image.png">&lt;/li>
&lt;/ul>
&lt;h2 id="更多工作流程模板">更多工作流程模板&lt;a class="td-heading-self-link" href="#%e6%9b%b4%e5%a4%9a%e5%b7%a5%e4%bd%9c%e6%b5%81%e7%a8%8b%e6%a8%a1%e6%9d%bf" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>GitHub 提供预配置的工作流程模板，您可以自定义以创建自己的持续集成工作流程。 GitHub 分析代码并显示可能适用于您的仓库的 CI 模板。 例如，如果仓库包含 Node.js 代码，您就会看到 Node.js 项目的建议。 您可以使用工作流程模板作为基础来构建自定义工作流程，或按原样使用模板。&lt;/p>
&lt;p>您可以在 &lt;a href="https://github.com/actions/starter-workflows">actions/starter-workflows&lt;/a> 仓库中浏览工作流程模板的完整列表。&lt;/p>
&lt;h2 id="后续步骤">后续步骤&lt;a class="td-heading-self-link" href="#%e5%90%8e%e7%bb%ad%e6%ad%a5%e9%aa%a4" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>每次将代码推送到分支时，您刚刚添加的示例工作流程都会运行，并显示 GitHub Actions 如何处理仓库的内容。 但是，这只是您可以对 GitHub Actions 执行操作的开始：&lt;/p>
&lt;ul>
&lt;li>您的仓库可以包含多个基于不同事件触发不同任务的工作流程。&lt;/li>
&lt;li>您可以使用工作流程安装软件测试应用程序，并让它们自动在 GitHub 的运行器上测试您的代码。&lt;/li>
&lt;/ul>
&lt;p>GitHub Actions 可以帮助您自动执行应用程序开发过程的几乎每个方面。 准备好开始了吗？ 以下是一些帮助您对 GitHub Actions 执行后续操作的有用资源：&lt;/p></description></item><item><title>Docs: Actions 配置</title><link>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitHub/GitHub-Actions/Actions-%E9%85%8D%E7%BD%AE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitHub/GitHub-Actions/Actions-%E9%85%8D%E7%BD%AE/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>在每个仓库的 Setting 页面可以为仓库的 Actions 进行一些配置&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/github_action/202404222254729.png" alt="image.png">&lt;/p>
&lt;h1 id="workflow-权限">Workflow 权限&lt;a class="td-heading-self-link" href="#workflow-%e6%9d%83%e9%99%90" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>有的 Action 要想正常运行，要保证 Workflow 使用的默认 GITHUB_TOKEN 具有对 Realease 的&lt;font color="#ff0000">读写权限&lt;/font>（比如 softprops/action-gh-release 需要将构建结果上传至 Release 中，这个属于写入操作）。可以在 &lt;code>https://github.com/${USER}/${REOP}/settings/actions&lt;/code> 页面修改仓库的 Action 中关于 Workflow 的配置&lt;/p>
&lt;p>Setting - Actions - General - Workflow permissions&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/github_acion/202404222221183.png" alt="image.png">&lt;/p>
&lt;p>参考: &lt;a href="https://github.com/softprops/action-gh-release/issues/232#issuecomment-1375588379">https://github.com/softprops/action-gh-release/issues/232#issuecomment-1375588379&lt;/a>&lt;/p></description></item><item><title>Docs: 好用的 Action</title><link>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitHub/GitHub-Actions/%E5%A5%BD%E7%94%A8%E7%9A%84-Action/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitHub/GitHub-Actions/%E5%A5%BD%E7%94%A8%E7%9A%84-Action/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/marketplace?type=actions">GitHub Marketplace，Action&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h1 id="dockerbuild-push-action">docker/build-push-action&lt;a class="td-heading-self-link" href="#dockerbuild-push-action" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;a href="https://github.com/docker/build-push-action">https://github.com/docker/build-push-action&lt;/a>&lt;/p>
&lt;p>使用 Buildx 构建和推送 Docker 映像的 GitHub Action&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Build and push Docker image&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">uses&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">docker/build-push-action@v2&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">with&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>- &lt;span style="color:#8f5902;font-style:italic">**context:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">.**&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># 构建上下文&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>- &lt;span style="color:#8f5902;font-style:italic">**file:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">simulate_mysql_exporter/e37_exporter/Dockerfile**&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># 指定要使用的 Dockerfile 路径，`默认值：{context字段的值}/Dockerfile`&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>- &lt;span style="color:#8f5902;font-style:italic">**push:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#8f5902;font-style:italic">**&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># 构建完成后，是否推送镜像&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>- &lt;span style="color:#8f5902;font-style:italic">**tags:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">ghcr.io/desistdaydream/e37-exporter:v0.2.0**&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># 指定要构建的镜像名称&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="action-gh-release">action-gh-release&lt;a class="td-heading-self-link" href="#action-gh-release" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;a href="https://github.com/softprops/action-gh-release">https://github.com/softprops/action-gh-release&lt;/a>&lt;/p>
&lt;p>用于创建 Realease 的 GitHub Action&lt;/p>
&lt;blockquote>
&lt;p>Notes: action-gh-release 需要上传文件，所以需要将仓库的 &lt;a href="https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming%20tools/SCM/GitHub/GitHub%20Actions/Actions%20%E9%85%8D%E7%BD%AE.md">Actions 配置&lt;/a> 中的 Workflow 权限设置为&lt;font color="#ff0000">读写&lt;/font>&lt;/p>
&lt;/blockquote></description></item><item><title>Docs: Actions 样例</title><link>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitHub/GitHub-Actions/Actions-%E6%A0%B7%E4%BE%8B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitHub/GitHub-Actions/Actions-%E6%A0%B7%E4%BE%8B/</guid><description>
&lt;h1 id="定时同步-github-的代码仓库到-gitee">定时同步 GitHub 的代码仓库到 Gitee&lt;a class="td-heading-self-link" href="#%e5%ae%9a%e6%97%b6%e5%90%8c%e6%ad%a5-github-%e7%9a%84%e4%bb%a3%e7%a0%81%e4%bb%93%e5%ba%93%e5%88%b0-gitee" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>该功能已经有很多实现了，这篇文章以 &lt;a href="https://github.com/Yikun/hub-mirror-action">https://github.com/Yikun/hub-mirror-action&lt;/a> 项目为例。这个项目的基本逻辑是这样的：&lt;/p>
&lt;ul>
&lt;li>通过 GitHub Actions 构建一个 Docker 容器，在 Docker 容器中，引入 Gitee 的私钥，这样可以在容器中使用 git 命令向 Gitee push 代码而不用输入密码了&lt;/li>
&lt;li>容器启动后，在容器内 pull github 上的代码，并 push 到 gitee 上。&lt;/li>
&lt;/ul>
&lt;p>首先先来一个最基本的 Action 的 workflow 文件示例&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Gitee repos mirror periodic job&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">on&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># 取消 push 的注释后，向本仓库推送代码即可开始 Gitee 同步&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># push:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">schedule&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># 每天北京时间9点跑&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">cron&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;0 1 * * *&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">jobs&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">build&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">runs-on&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">ubuntu-latest&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">steps&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Cache phpdragon src repos&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># 使用 github 官方提供的 action 来引用发行版的主要版本&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">uses&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">actions/cache@v1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">with&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">path&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">/home/runner/work/phpdragon/phpdragon-cache&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">key&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">${{ runner.os }}-phpdragon-repos-cache&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Mirror the Github organization repos to Gitee.&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># 这里我将对方项目原封不动 copy 到自己的 github 上了，所以这个步骤就直接使用自己的 action&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">uses&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">DesistDaydream/hub-mirror-action@main&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">with&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># 必选，需要同步的Github用户（源）&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">src&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">github/DesistDaydream&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># 必选，需要同步到的Gitee的用户（目的）&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">dst&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">gitee/DesistDaydream&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># 必选，Gitee公钥对应的私钥&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">dst_key&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">${{ secrets.GITEE_PRIVATE_KEY }}&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># 必选，Gitee对应的用于创建仓库的token&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">dst_token&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">${{ secrets.GITEE_TOKEN }}&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># 黑、白名单，静态名单机制，可以用于更新某些指定库&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># static_list: repo_name&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">black_list&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;eHualu,kubernetesAPI,v2ray&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># white_list: &amp;#39;repo_name,repo_name2&amp;#39;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># force_update: true&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>必选参数&lt;/p>
&lt;ul>
&lt;li>&lt;code>src&lt;/code> 需要被同步的源端账户名，如 github/DesistDaydream，表示 Github 的 DesistDaydream 账户。&lt;/li>
&lt;li>&lt;code>dst&lt;/code> 需要同步到的目的端账户名，如 gitee/DesistDaydream，表示 Gitee 的 DesistDaydream 账户。&lt;/li>
&lt;li>&lt;code>dst_key&lt;/code> 与 Gitee 公钥对应的私钥，给 GitHub Actions 激活后创建的容器中 git 命令认证所用。&lt;/li>
&lt;li>&lt;code>dst_token&lt;/code> 用于自动创建不存在的仓库。&lt;/li>
&lt;li>注意： dst_key 与 dst_token 的值是通过 GitHub 的 Secrets 功能 引用的，类似于 k8s 的 secret 功能。&lt;/li>
&lt;/ul>
&lt;p>可选参数&lt;/p>
&lt;ul>
&lt;li>&lt;code>account_type&lt;/code> 默认为 user，源和目的的账户类型，可以设置为 org（组织）或者 user（用户），目前仅支持&lt;strong>同类型账户&lt;/strong>（即组织到组织，或用户到用户）的同步。&lt;/li>
&lt;li>&lt;code>clone_style&lt;/code> 默认为 https，可以设置为 ssh 或者 https。&lt;/li>
&lt;li>&lt;code>cache_path&lt;/code> 默认为&amp;rsquo;&amp;rsquo;, 将代码缓存在指定目录，用于与 actions/cache 配合以加速镜像过程。&lt;/li>
&lt;li>&lt;code>black_list&lt;/code> 默认为&amp;rsquo;&amp;rsquo;, 配置后，黑名单中的 repos 将不会被同步，如“repo1,repo2,repo3”。&lt;/li>
&lt;li>&lt;code>white_list&lt;/code> 默认为&amp;rsquo;&amp;rsquo;, 配置后，仅同步白名单中的 repos，如“repo1,repo2,repo3”。&lt;/li>
&lt;li>&lt;code>static_list&lt;/code> 默认为&amp;rsquo;&amp;rsquo;, 配置后，仅同步静态列表，不会再动态获取需同步列表（黑白名单机制依旧生效），如“repo1,repo2,repo3”。&lt;/li>
&lt;li>&lt;code>force_update&lt;/code> 默认为 false, 配置后，启用 git push -f 强制同步，&lt;strong>注意：开启后，会强制覆盖目的端仓库&lt;/strong>。&lt;/li>
&lt;li>&lt;code>debug&lt;/code> 默认为 false, 配置后，启用 debug 开关，会显示所有执行命令。&lt;/li>
&lt;/ul>
&lt;h1 id="获取并配置-github-连接-gitee-所需的认证信息">获取并配置 GitHub 连接 Gitee 所需的认证信息&lt;a class="td-heading-self-link" href="#%e8%8e%b7%e5%8f%96%e5%b9%b6%e9%85%8d%e7%bd%ae-github-%e8%bf%9e%e6%8e%a5-gitee-%e6%89%80%e9%9c%80%e7%9a%84%e8%ae%a4%e8%af%81%e4%bf%a1%e6%81%af" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>认证信息比较敏感，详见 TOKEN 文章&lt;/p>
&lt;h2 id="获取-gitee-token">获取 Gitee TOKEN&lt;a class="td-heading-self-link" href="#%e8%8e%b7%e5%8f%96-gitee-token" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>使用该连接：&lt;a href="https://gitee.com/profile/personal_access_tokens/new">https://gitee.com/profile/personal_access_tokens/new&lt;/a>，添加&lt;code>令牌描述&lt;/code>后，点击&lt;code>提交&lt;/code>以生成 TOKEN&lt;/p>
&lt;h2 id="获取密钥对">获取密钥对&lt;a class="td-heading-self-link" href="#%e8%8e%b7%e5%8f%96%e5%af%86%e9%92%a5%e5%af%b9" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>随便找一个有 ssh-keygen 命令的主机，用于生成一对密钥。使用 ssh-keygen 命令生成密钥对，ssh-keygen 命令用法详见此处&lt;/p>
&lt;pre>&lt;code>ssh-keygen -t rsa -C 373406000@qq.com
&lt;/code>&lt;/pre>
&lt;h2 id="配置-gitee-公钥">配置 Gitee 公钥&lt;a class="td-heading-self-link" href="#%e9%85%8d%e7%bd%ae-gitee-%e5%85%ac%e9%92%a5" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>在 &lt;a href="https://gitee.com/profile/sshkeys">Gitee 的配置页面中&lt;/a>添加公钥信息。以便 GitHub 使用 私钥连接时，可以通过认证。&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/wn0scx/1640568955462-d3dbe873-2a73-4539-a477-0cfa71fb8a43.png" alt="image.png">&lt;/p>
&lt;h2 id="配置-私钥-和-token">配置 私钥 和 TOKEN&lt;a class="td-heading-self-link" href="#%e9%85%8d%e7%bd%ae-%e7%a7%81%e9%92%a5-%e5%92%8c-token" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>在 GitHub 以加密的方式传入到容器中。如果不加密，直接写到代码仓库中，那其他人就都看到了~~~~该操作主要是针对 代码仓库而言的，因为 私钥和 TOKEN 的信息，是需要在 Action 中引用的，而 Action 本身就是一摞代码~&lt;/p>
&lt;p>在&lt;a href="https://github.com/DesistDaydream/hub-mirror-action/settings/secrets">项目仓库的 Setting 中的 Secrets&lt;/a> 中&lt;a href="https://github.com/DesistDaydream/hub-mirror-action/settings/secrets/new">添加&lt;/a> 私钥 与 TOKEN 的变量。&lt;/p>
&lt;h3 id="添加-token">添加 TOKEN&lt;a class="td-heading-self-link" href="#%e6%b7%bb%e5%8a%a0-token" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/wn0scx/1640569010998-1d5f41bd-359d-4b4c-ae4d-d4352ba41ab7.png" alt="image.png">&lt;/p>
&lt;h3 id="添加私钥">添加私钥&lt;a class="td-heading-self-link" href="#%e6%b7%bb%e5%8a%a0%e7%a7%81%e9%92%a5" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/wn0scx/1616903594321-e357ab96-5486-42f9-ba85-9fdf869e9fbb.png" alt="">&lt;/p></description></item><item><title>Docs: Contexts 与 Variables</title><link>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitHub/GitHub-Actions/Contexts-%E4%B8%8E-Variables/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitHub/GitHub-Actions/Contexts-%E4%B8%8E-Variables/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.github.com/en/actions/learn-github-actions/contexts">官方文档，学习 GitHub Actions-上下文&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.github.com/en/actions/learn-github-actions/environment-variables">官方文档，学习 GitHub Actions-环境变量&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>GitHub Actions 中可以通过 &lt;strong>Contexts(上下文)&lt;/strong> 与 &lt;strong>Environment Variables(环境变量)&lt;/strong> 来暴露工作流的信息或引用工作流的信息。就像下面的示例一样：&lt;/p>
&lt;p>这是一个环境变量的示例：&lt;/p>
&lt;blockquote>
&lt;p>GitHub Action 中的环境变量本质上是 Shell 中的变量，引用方式也是一样的。&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Greeting on variable day&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">on&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">workflow_dispatch&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">env&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">DAY_OF_WEEK&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Monday&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">jobs&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">greeting_job&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">runs-on&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">ubuntu-latest&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">env&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">Greeting&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Hello&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">steps&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Say Hello Mona it&amp;#39;s Monday&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">run&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">echo &amp;#34;$Greeting $First_Name. Today is $DAY_OF_WEEK!&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">env&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">First_Name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Mona&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这是一个上下文的示例：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Greeting on variable day&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">on&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">workflow_dispatch&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">env&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">DAY_OF_WEEK&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Monday&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">jobs&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">greeting_job&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">runs-on&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">ubuntu-latest&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">env&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">Greeting&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Hello&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">steps&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Say Hello Mona it&amp;#39;s Monday&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">run&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">echo &amp;#34;${{ env.Greeting }} ${{ env.First_Name }}. Today is ${{ env.DAY_OF_WEEK }}!&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">env&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">First_Name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Mona&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>从示例中可以看到，想要使用 &lt;strong>Context(上下文)&lt;/strong>，需要使用一种特殊的语法，这种语法称为 &lt;strong>Expressions(表达式)&lt;/strong>。&lt;/p>
&lt;h2 id="expressions表达式">Expressions(表达式)&lt;a class="td-heading-self-link" href="#expressions%e8%a1%a8%e8%be%be%e5%bc%8f" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>在 GitHub Actions 的 Workflow 文件中，我们可以使用 &lt;strong>Expressions(表达式)&lt;/strong> 设置和访问** 环境变量 &lt;strong>或访问&lt;/strong>上下文 **信息。表达式可以是 &lt;em>字面量、上下文引用、函数&lt;/em> 的任意组合。&lt;/p>
&lt;p>以 &lt;code>$&lt;/code> 开口，&lt;code>{{ }}&lt;/code> 括起来的内容即为表达式的语法，当 GitHub Action 运行时，Workflow 中的 &lt;code>${{ &amp;lt;EXPRESSION&amp;gt; }}&lt;/code> 内容会被解析为表达式进行处理，表达式就像模板一样，解析完成后，使用实际的值替换表达式。以实现以变成的方式设置 Workflow 文件。&lt;/p>
&lt;blockquote>
&lt;p>注意：&lt;/p>
&lt;p>Workflow 中的 if 字段，会自动将其下的值解析为表达式，所以可以省略 &lt;code>${{ }}&lt;/code> 符号。&lt;/p>
&lt;/blockquote>
&lt;p>表达式 Fiterals(字面量)&lt;/p>
&lt;p>表达式 Operators(运算符)&lt;/p>
&lt;p>表达式 Functions(函数)&lt;/p>
&lt;ul>
&lt;li>contains&lt;/li>
&lt;li>startsWith&lt;/li>
&lt;li>endsWith&lt;/li>
&lt;li>format&lt;/li>
&lt;li>join&lt;/li>
&lt;li>toJSON&lt;/li>
&lt;li>fromJSON&lt;/li>
&lt;li>hashFiles&lt;/li>
&lt;li>状态检查函数
&lt;ul>
&lt;li>success&lt;/li>
&lt;li>always&lt;/li>
&lt;li>cancelled&lt;/li>
&lt;li>failure&lt;/li>
&lt;li>Evaluate Status Explicitly&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>函数使用示例&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">print&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">on&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">push&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">env&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">continue&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">time&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">3&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">jobs&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">job1&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">runs-on&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">ubuntu-latest&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">steps&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">continue-on-error&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">${{ fromJSON(env.continue) }}&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">timeout-minutes&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">${{ fromJSON(env.time) }}&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">run&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">echo ...&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="context上下文">Context(上下文)&lt;a class="td-heading-self-link" href="#context%e4%b8%8a%e4%b8%8b%e6%96%87" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>GitHub Action 中的上下文，是一种功能更丰富的环境变量，并且我们可以通过上下文的语法引用环境变量。&lt;/p>
&lt;p>在 Expressions(表达式) 中使用 Context(上下文)，可以让我们在 Workflow 文件中访问工作流运行信息、运行器环境信息、Job 信息、每个 Job 下的 Step 信息。&lt;/p>
&lt;p>每个上下文都是一个包含 &lt;strong>Properties(属性)&lt;/strong> 的 &lt;strong>Object(对象&lt;/strong>)，Properties 可以是字符串或其他 Objects&lt;/p>
&lt;p>在表达式语中使用上下文的语法为：&lt;code>${{ Object.Properties }}&lt;/code>。每个 Object 可以提供丰富的信息。&lt;/p>
&lt;p>现阶段 Action 有多个上下文可用：&lt;/p>
&lt;ul>
&lt;li>GitHub 本身信息相关的上下文
&lt;ul>
&lt;li>&lt;strong>github&lt;/strong> # Information about the workflow run.&lt;/li>
&lt;li>&lt;strong>secrets&lt;/strong> # Contains the names and values of secrets that are available to a workflow run.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Job 信息相关的上下文
&lt;ul>
&lt;li>&lt;strong>needs&lt;/strong> # Contains the outputs of all jobs that are defined as a dependency of the current job&lt;/li>
&lt;li>&lt;strong>env&lt;/strong> # Contains environment variables set in a workflow, job, or step.&lt;/li>
&lt;li>&lt;strong>job&lt;/strong> # Information about the currently running job.&lt;/li>
&lt;li>&lt;strong>steps&lt;/strong> # Information about the steps that have been run in the current job.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>runner&lt;/strong> # Information about the runner that is running the current job.&lt;/li>
&lt;li>&lt;strong>strategy&lt;/strong> # Information about the matrix execution strategy for the current job.&lt;/li>
&lt;li>&lt;strong>matrix&lt;/strong> # Contains the matrix properties defined in the workflow that apply to the current job.&lt;/li>
&lt;li>&lt;strong>inputs&lt;/strong> # Contains the inputs of a reusable workflow. For more information, see inputscontext&lt;/li>
&lt;/ul>
&lt;h1 id="github-本身信息相关的上下文">GitHub 本身信息相关的上下文&lt;a class="td-heading-self-link" href="#github-%e6%9c%ac%e8%ba%ab%e4%bf%a1%e6%81%af%e7%9b%b8%e5%85%b3%e7%9a%84%e4%b8%8a%e4%b8%8b%e6%96%87" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h2 id="github-上下文">github 上下文&lt;a class="td-heading-self-link" href="#github-%e4%b8%8a%e4%b8%8b%e6%96%87" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>github 上下文包含本次工作流的事件信息，还有很多 GitHub 信息，比如 &lt;code>github.actor&lt;/code> 属性表示发起工作流的用户名，如果这个项目只有自己一个人，那就是这个仓库的拥有者名称~&lt;/p>
&lt;h2 id="secrets-上下文">secrets 上下文&lt;a class="td-heading-self-link" href="#secrets-%e4%b8%8a%e4%b8%8b%e6%96%87" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>对于工作流程运行中的每个 Job，此上下文都是相同的。 您可以从 Job 中的任何步骤访问此上下文。 此对象包含下面列出的所有属性。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>属性名称&lt;/th>
&lt;th>类型&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>secrets.GITHUB_TOKEN&lt;/td>
&lt;td>String&lt;/td>
&lt;td>为每个工作流程运行自动创建的令牌。 更多信息请参阅“&lt;a href="https://docs.github.com/cn/actions/security-guides/automatic-token-authentication">自动令牌身份验证&lt;/a>”。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>secrets.&amp;lt;SecretName&amp;gt;&lt;/td>
&lt;td>String&lt;/td>
&lt;td>特定 Secret 的值&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>SecretName 可以在在一个项目的设置中添加，如下图：&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/qaf8qw/1652758616297-59e0ad52-f622-4d41-9235-b36a995ee87d.png" alt="image.png">&lt;/p>
&lt;p>我们为本仓库添加了一个 SecretName 为 DOCKER_REGISTRY_PASSWORD 的 Secret，那么，在 Actions 中，可以使用 &lt;code>${{ secrets.DOCKER_REGISTRY_PASSWORD }}&lt;/code> 引用 DOCKER_REGISTRY_PASSWORD 的值。&lt;/p>
&lt;p>这个上下文常用在登录行为，以防止将密码以明文形式呈现，比如下面的示例，我们将会通过 secrets 上下文登录容器镜像仓库，并推送构建的镜像到仓库中。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">jobs&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># 推送到 docker.io&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">push-docker&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">needs&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#000">generate-tags]&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">runs-on&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">ubuntu-latest&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">steps&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Check out repository code&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">uses&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">actions/checkout@v2&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">登录镜像仓库网站&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">uses&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">docker/login-action@v1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">with&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">registry&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">docker.io&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">username&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">${{ secrets.DOCKER_REGISTRY_USERNAME }}&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">password&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">${{ secrets.DOCKER_REGISTRY_PASSWORD }}&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">构建并推送容器镜像&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">uses&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">docker/build-push-action@v2&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">with&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">context&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">.&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">file&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Dockerfile&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">push&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">tags&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">docker.io/lchdzh/e37-exporter:${{needs.generate-tags.outputs.tag}}&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="job-信息相关的上下文">Job 信息相关的上下文&lt;a class="td-heading-self-link" href="#job-%e4%bf%a1%e6%81%af%e7%9b%b8%e5%85%b3%e7%9a%84%e4%b8%8a%e4%b8%8b%e6%96%87" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h2 id="needs-上下文">needs 上下文&lt;a class="td-heading-self-link" href="#needs-%e4%b8%8a%e4%b8%8b%e6%96%87" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>needs 上下文中包含了由 jobs.JOB_ID.needs 字段定义的依赖 Job 中的信息。包含如下属性：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>needs.&amp;lt;JOB_ID&amp;gt;&lt;/th>
&lt;th>OBJECT&lt;/th>
&lt;th>A single job that the current job depends on.&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>needs.&amp;lt;JOB_ID&amp;gt;.outputs&lt;/td>
&lt;td>OBJECT&lt;/td>
&lt;td>The set of outputs of a job that the current job depends on.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>needs.&amp;lt;JOB_ID&amp;gt;.outputs.&amp;lt;OUTPUT_NAME&amp;gt;&lt;/td>
&lt;td>STRING&lt;/td>
&lt;td>当前 Job 所依赖的 Job 的输出中，OUTPUT_NAME 输出的值。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>needs.&amp;lt;JOB_ID&amp;gt;.result&lt;/td>
&lt;td>STRING&lt;/td>
&lt;td>当前 Job 所依赖的 Job 的运行结果。可能的值有：success, failure, cancelled, or skipped。&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="steps-上下文">steps 上下文&lt;a class="td-heading-self-link" href="#steps-%e4%b8%8a%e4%b8%8b%e6%96%87" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>此上下文针对作业中的每个步骤而改变。 您可以从作业中的任何步骤访问此上下文。 此对象包含下面列出的所有属性。
steps 上下文中包含了已指定 JOB_ID 且已运行的 Job 中的每个 step 的信息，包含如下属性&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>属性名称&lt;/th>
&lt;th>类型&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>steps.&amp;lt;step_id&amp;gt;.outputs&lt;/td>
&lt;td>对象&lt;/td>
&lt;td>为步骤定义的输出集。 更多信息请参阅“&lt;a href="https://docs.github.com/cn/articles/metadata-syntax-for-github-actions#outputs-for-docker-container-and-javascript-actions">GitHub Actions 的元数据语法&lt;/a>”。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>steps.&amp;lt;step_id&amp;gt;.conclusion&lt;/td>
&lt;td>字符串&lt;/td>
&lt;td>在 &lt;a href="https://docs.github.com/cn/actions/reference/workflow-syntax-for-github-actions#jobsjob_idstepscontinue-on-error">continue-on-error&lt;/a> 应用之后完成的步骤的结果。 可能的值包括 success、failure、cancelled 或 skipped。 当 continue-on-error 步骤失败时，outcome 为 failure，但最终的 conclusion 为 success。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>steps.&amp;lt;step_id&amp;gt;.outcome&lt;/td>
&lt;td>字符串&lt;/td>
&lt;td>在 &lt;a href="https://docs.github.com/cn/actions/reference/workflow-syntax-for-github-actions#jobsjob_idstepscontinue-on-error">continue-on-error&lt;/a> 应用之前完成的步骤的结果。 可能的值包括 success、failure、cancelled 或 skipped。 当 continue-on-error 步骤失败时，outcome 为 failure，但最终的 conclusion 为 success。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>steps.&amp;lt;step_id&amp;gt;.outputs.&amp;lt;output_name&amp;gt;&lt;/td>
&lt;td>字符串&lt;/td>
&lt;td>指定 StepIP 步骤中指定的 OutputName 输出的值。&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="示例">示例&lt;a class="td-heading-self-link" href="#%e7%a4%ba%e4%be%8b" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Generate random failure&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">on&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">push&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">jobs&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">randomly-failing-job&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">runs-on&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">ubuntu-latest&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">steps&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">id&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">checkout&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">uses&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">actions/checkout@v3&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Generate 0 or 1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">id&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">generate_number&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">run&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">echo &amp;#34;::set-output name=random_number::$(($RANDOM % 2))&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Pass or fail&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">run&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">|&lt;/span>&lt;span style="color:#8f5902;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"> if [[ ${{ steps.generate_number.outputs.random_number }} == 0 ]]; then exit 0; else exit 1; fi&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过 &lt;code>${{ steps.generate_number.outputs.random_number }}&lt;/code> 引用了当前 Job 中 ID 为 generate_number 这个步骤的输出中，random_number 的值。&lt;/p></description></item><item><title>Docs: Workflow 文件详解</title><link>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitHub/GitHub-Actions/Workflow-%E6%96%87%E4%BB%B6%E8%AF%A6%E8%A7%A3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitHub/GitHub-Actions/Workflow-%E6%96%87%E4%BB%B6%E8%AF%A6%E8%A7%A3/</guid><description/></item></channel></rss>