<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GitLab on 断念梦的站点</title><link>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitLab/</link><description>Recent content in GitLab on 断念梦的站点</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitLab/index.xml" rel="self" type="application/rss+xml"/><item><title>GitLab</title><link>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitLab/GitLab/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitLab/GitLab/</guid><description>概述 参考：
官方文档 https://www.qikqiak.com/post/gitlab-install-on-k8s/ GitLab 部署 官方文档：https://docs.gitlab.com/ee/install/README.html
通过官方的 linux 软件包安装 https://about.gitlab.com/install/ 根据该页面选择想要运行 GitLab 的 Linux 发行版，可以通过 yum、apt 等方式直接安装 GitLab 及其所需的依赖。
使用 Docker 运行 GitLab 官方文档：https://docs.gitlab.com/omnibus/docker/
docker run --detach \ --hostname 10.10.100.151 \ --publish 443:443 --publish 80:80 --publish 9022:22 \ --name gitlab \ --restart always \ --volume /root/gitlab/config:/etc/gitlab \ --volume /root/gitlab/logs:/var/log/gitlab \ --volume /root/gitlab/data:/var/opt/gitlab \ gitlab/gitlab-ce:latest 部署完成后，使用 root 和 第一次打开 web 页面时设置的密码，即可登录管理员账户。
最佳实践 从 GitHub 导入仓库到 GitLab 并定时同步 https://www.jianshu.com/p/0959d021c281
Notes: GitLab 中有镜像仓库的能力，在 项目设置 - 仓库 - 镜像仓库 中。但是只有商业版才能使用从别的 git 仓库同步到 GitLab 的功能。</description></item><item><title>Packages AND Registries</title><link>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitLab/Packages-AND-Registries/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitLab/Packages-AND-Registries/</guid><description>概述 参考:
官方文档，部署并发布你的应用 - Packages 和 Registries 与 GitHub 不同，GitLab 有一个单独的存放 Assets 的地方，而不是放在 Release Assets 中，这个地方就是 Packages registry。
在 WebUI 点击左侧导航栏中 Deploy &amp;gt; Package Registry 标签可以查看项目中所有 Packages
GitLab 将多种实体或抽象概念抽象为 Packages
Package registry # 储存各种二进制文件 Container registry # 储存容器镜像 etc. 一个项目产生的交付物都可以称为 Packages。可以在项目左侧导航栏点击 Deploy &amp;gt; Package Registry 查看项目的 Packages。
Package registry GitLab 将如下的实体抽象为 Package:
Generic(通用) # 二进制文件 Helm # Helm 文件 etc. Generic package 参考:
官方文档，通用 Packages 使用 GitLab CI 推送通用的 Package</description></item></channel></rss>