<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦的站点 – GitLab</title><link>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitLab/</link><description>Recent content in GitLab on 断念梦的站点</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitLab/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: GitLab</title><link>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitLab/GitLab/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitLab/GitLab/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.gitlab.com/">官方文档&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.qikqiak.com/post/gitlab-install-on-k8s/">https://www.qikqiak.com/post/gitlab-install-on-k8s/&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h1 id="gitlab-部署">GitLab 部署&lt;a class="td-heading-self-link" href="#gitlab-%e9%83%a8%e7%bd%b2" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>官方文档：&lt;a href="https://docs.gitlab.com/ee/install/README.html">https://docs.gitlab.com/ee/install/README.html&lt;/a>&lt;/p>
&lt;h2 id="通过官方的-linux-软件包安装">通过官方的 linux 软件包安装&lt;a class="td-heading-self-link" href="#%e9%80%9a%e8%bf%87%e5%ae%98%e6%96%b9%e7%9a%84-linux-%e8%bd%af%e4%bb%b6%e5%8c%85%e5%ae%89%e8%a3%85" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;a href="https://about.gitlab.com/install/">https://about.gitlab.com/install/&lt;/a> 根据该页面选择想要运行 GitLab 的 Linux 发行版，可以通过 yum、apt 等方式直接安装 GitLab 及其所需的依赖。&lt;/p>
&lt;h2 id="使用-docker-运行-gitlab">使用 Docker 运行 GitLab&lt;a class="td-heading-self-link" href="#%e4%bd%bf%e7%94%a8-docker-%e8%bf%90%e8%a1%8c-gitlab" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>官方文档：&lt;a href="https://docs.gitlab.com/omnibus/docker/">https://docs.gitlab.com/omnibus/docker/&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker run --detach &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --hostname 10.10.100.151 &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --publish 443:443 --publish 80:80 --publish 9022:22 &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --name gitlab &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --restart always &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --volume /root/gitlab/config:/etc/gitlab &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --volume /root/gitlab/logs:/var/log/gitlab &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --volume /root/gitlab/data:/var/opt/gitlab &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> gitlab/gitlab-ce:latest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>部署完成后，使用 root 和 第一次打开 web 页面时设置的密码，即可登录管理员账户。&lt;/p>
&lt;h1 id="最佳实践">最佳实践&lt;a class="td-heading-self-link" href="#%e6%9c%80%e4%bd%b3%e5%ae%9e%e8%b7%b5" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h2 id="从-github-导入仓库到-gitlab-并定时同步">从 GitHub 导入仓库到 GitLab 并定时同步&lt;a class="td-heading-self-link" href="#%e4%bb%8e-github-%e5%af%bc%e5%85%a5%e4%bb%93%e5%ba%93%e5%88%b0-gitlab-%e5%b9%b6%e5%ae%9a%e6%97%b6%e5%90%8c%e6%ad%a5" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;a href="https://www.jianshu.com/p/0959d021c281">https://www.jianshu.com/p/0959d021c281&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Notes: GitLab 中有&lt;strong>镜像仓库&lt;/strong>的能力，在 &lt;code>项目设置 - 仓库 - 镜像仓库&lt;/code> 中。但是&lt;font color="#ff0000">只有商业版才能使用&lt;/font>从别的 git 仓库同步到 GitLab 的功能。&lt;/p>
&lt;/blockquote>
&lt;p>这里以从 GitHub 导入到 GitLab 为例&lt;/p>
&lt;p>一、导入仓库&lt;/p>
&lt;p>GitLab 选择 &lt;code>新建项目/仓库 - 导入项目&lt;/code> 选择 GitHub 项目（需要 &lt;a href="https://github.com/settings/tokens">GitHub 的 Personal access tokens&lt;/a> 以通过 GitHub 认证）&lt;/p>
&lt;p>二、关联仓库&lt;/p>
&lt;p>假如已经成功导入了 DesistDaydream/net_tool 项目。需要通过 &lt;a href="https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming%20tools/SCM/Git/git%20CLI.md">git CLI&lt;/a> 让两个仓库互相管理起来&lt;/p>
&lt;blockquote>
&lt;p>在设备上使用 &lt;a href="https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/Utility/OpenSSH/OpenSSH%20Utilities.md">OpenSSH Utilities&lt;/a> 创建 id_rsa.pub，并拷贝到 &lt;a href="https://gitlab.com/-/profile/keys">GitLab&lt;/a> 和 &lt;a href="https://github.com/settings/keys">GitHub&lt;/a> 的 SSH 密钥中&lt;/p>
&lt;/blockquote>
&lt;p>先 clone 刚才已导入的仓库，然后查看一下当前的 remote 信息&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># git clone git@gitlab.com:DesistDaydream/net_tool.git&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># git remote -v&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>origin git@gitlab.com:DesistDaydream/net_tool.git &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>fetch&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>origin git@gitlab.com:DesistDaydream/net_tool.git &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>push&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>添加 GitHub 远程仓库，此时本地项目中，包含了两个 remote 信息&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># git remote add github git@github.com:DesistDaydream/net_tool.git&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># git remote -v&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>github git@github.com:DesistDaydream/net_tool.git &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>fetch&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>github git@github.com:DesistDaydream/net_tool.git &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>push&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>origin git@gitlab.com:DesistDaydream/net_tool.git &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>fetch&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>origin git@gitlab.com:DesistDaydream/net_tool.git &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>push&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>三、同步代码&lt;/p>
&lt;p>从 GitHub 仓库中同步代码到本地，然后再从本地同步代码到 GitLab&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># git pull github main&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># git push origin main --force&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: GitLab CI</title><link>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitLab/GitLab-CI/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitLab/GitLab-CI/</guid><description/></item><item><title>Docs: Packages AND Registries</title><link>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitLab/Packages-AND-Registries/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming-tools/SCM/GitLab/Packages-AND-Registries/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.gitlab.com/ee/user/packages/package_registry/">官方文档，部署并发布你的应用 - Packages 和 Registries&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>与 GitHub 不同，GitLab 有一个单独的存放 Assets 的地方，而不是放在 Release Assets 中，这个地方就是 Packages registry。&lt;/p>
&lt;p>在 WebUI 点击左侧导航栏中 &lt;strong>Deploy &amp;gt; Package Registry&lt;/strong> 标签可以查看项目中所有 Packages&lt;/p>
&lt;p>GitLab 将多种实体或抽象概念抽象为 Packages&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#Package%20registry">Package registry&lt;/a> # 储存各种二进制文件&lt;/li>
&lt;li>Container registry # 储存容器镜像&lt;/li>
&lt;li>etc.&lt;/li>
&lt;/ul>
&lt;p>一个项目产生的交付物都可以称为 Packages。可以在项目左侧导航栏点击 &lt;strong>Deploy &amp;gt; Package Registry&lt;/strong> 查看项目的 Packages。&lt;/p>
&lt;h1 id="package-registry">Package registry&lt;a class="td-heading-self-link" href="#package-registry" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>GitLab 将如下的实体抽象为 Package:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Generic(通用)&lt;/strong> # 二进制文件&lt;/li>
&lt;li>&lt;strong>Helm&lt;/strong> # Helm 文件&lt;/li>
&lt;li>etc.&lt;/li>
&lt;/ul>
&lt;h1 id="generic-package">Generic package&lt;a class="td-heading-self-link" href="#generic-package" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.gitlab.com/ee/user/packages/generic_packages">官方文档，通用 Packages&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>使用 &lt;a href="https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/Programming%20tools/SCM/GitLab/GitLab%20CI/GitLab%20CI.md">GitLab CI&lt;/a> 推送通用的 Package&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.gitlab.com/ee/user/packages/generic_packages/#publish-a-generic-package-by-using-cicd">https://docs.gitlab.com/ee/user/packages/generic_packages/#publish-a-generic-package-by-using-cicd&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="generic-package-管理">Generic package 管理&lt;a class="td-heading-self-link" href="#generic-package-%e7%ae%a1%e7%90%86" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;blockquote>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.gitlab.com/ee/user/packages/package_registry/reduce_package_registry_storage.html">官方文档，减少 Package registry 存储用量&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h3 id="上传与下载-package">上传与下载 Package&lt;a class="td-heading-self-link" href="#%e4%b8%8a%e4%bc%a0%e4%b8%8e%e4%b8%8b%e8%bd%bd-package" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">MY_TOKEN&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;XXXXXXXX&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">UPLOAD_FILE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;node_exporter&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">UPLOAD_URL&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">CI_API_V4_URL&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>&lt;span style="color:#4e9a06">/projects/&lt;/span>&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">CI_PROJECT_ID&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>&lt;span style="color:#4e9a06">/packages/generic/node_exporter/v1.0.0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># CI_API_V4_URL 通常为 https://gitlab.example.com/api/v4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># CI_PROJECT_ID 可以从项目左侧导航栏点击 **Settings &amp;gt; General** 查看到&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>curl -k --header &lt;span style="color:#4e9a06">&amp;#34;PRIVATE-TOKEN: &lt;/span>&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">MY_TOKEN&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span> --upload-file bin/node_exporter &lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">UPLOAD_URL&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># 下载时使用 UPLOAD_URL 即可匿名下载 Package 而不必更改项目的可见性。&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>[!Tip] Package 的可见性
从项目左侧导航栏点击 &lt;strong>Setting &amp;gt; General &amp;gt; Visibility, project features, permissions&lt;/strong> 打开 &lt;strong>Package registry &amp;gt; Allow anyone to pull from Package Registry&lt;/strong> 的开关。&lt;/p>
&lt;p>&lt;font color="#ff0000">此时可以匿名下载 Package&lt;/font>&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>[!Notes] 相同 Package 的处理
当我们上传相同的 Package 时，GitLab 会保留所有 Package，并不会覆盖原始的包。使用 API 下载时，会下载最后上传的版本。&lt;/p>
&lt;p>若想删除相同 Pacakage 的旧版本，可以配置自动删除策略或手动删除，参考下文&lt;a href="#%E5%88%A0%E9%99%A4%20Package">删除 Package&lt;/a>。&lt;/p>
&lt;/blockquote>
&lt;h3 id="删除-package">删除 Package&lt;a class="td-heading-self-link" href="#%e5%88%a0%e9%99%a4-package" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>自动删除根据策略删除相同的 Package，手动删除则任意&lt;/p>
&lt;p>手动删除有两种途径，利用 &lt;a href="https://docs.gitlab.com/ee/api/packages.html#delete-a-project-package">API&lt;/a> 或者在 Web UI 操作。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>curl --request DELETE --header &lt;span style="color:#4e9a06">&amp;#34;PRIVATE-TOKEN: &amp;lt;your_access_token&amp;gt;&amp;#34;&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;https://gitlab.example.com/api/v4/projects/:id/packages/:package_id&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>要配置自动删除策略，点击左侧导航栏 &lt;strong>Settings &amp;gt; Packages and registries&lt;/strong> 配置 &lt;strong>Manage storage used by package assets&lt;/strong>，这里包含如下规则&lt;/p>
&lt;ul>
&lt;li>清理重复的 asset。执行周期为 12 小时。可以配置保留多少个重复的 asset。主要用在&lt;/li>
&lt;li>Notes: 现阶段暂无其他规则&lt;/li>
&lt;/ul></description></item></channel></rss>