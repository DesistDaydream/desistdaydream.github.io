<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦的站点 – Visual Studio Code</title><link>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/%E7%BC%96%E7%A8%8B%E5%B7%A5%E5%85%B7/IDE/Visual-Studio-Code/</link><description>Recent content in Visual Studio Code on 断念梦的站点</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/%E7%BC%96%E7%A8%8B%E5%B7%A5%E5%85%B7/IDE/Visual-Studio-Code/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: code-server</title><link>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/%E7%BC%96%E7%A8%8B%E5%B7%A5%E5%85%B7/IDE/Visual-Studio-Code/code-server/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/%E7%BC%96%E7%A8%8B%E5%B7%A5%E5%85%B7/IDE/Visual-Studio-Code/code-server/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/coder/code-server">GitHub 项目，coder/code-server&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://coder.com/">官网&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>code-server 可以让 VS Code 运行在任何机器上，并在浏览器中访问。&lt;/p>
&lt;p>code-server 是一个免费的基于浏览器的 IDE，而 Coder 是该企业提供的收费版本。&lt;/p>
&lt;h1 id="部署">部署&lt;a class="td-heading-self-link" href="#%e9%83%a8%e7%bd%b2" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>mkdir -p /opt/code-server/user-data-dir
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nerdctl run --name code-server --network host -d &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>-v &lt;span style="color:#e6db74">&amp;#34;/opt/code-server/user-data-dir:/root&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>-u &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>id -u&lt;span style="color:#66d9ef">)&lt;/span>&lt;span style="color:#e6db74">:&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>id -g&lt;span style="color:#66d9ef">)&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>-e &lt;span style="color:#e6db74">&amp;#34;DOCKER_USER=&lt;/span>$USER&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>codercom/code-server:latest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="个性部署">个性部署&lt;a class="td-heading-self-link" href="#%e4%b8%aa%e6%80%a7%e9%83%a8%e7%bd%b2" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>nerdctl run --name code-server --network host -d &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>-v &lt;span style="color:#e6db74">&amp;#34;/opt/code-server/user-data-dir:/root&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>-v &lt;span style="color:#e6db74">&amp;#34;/usr/local/go:/usr/local/go&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>-v &lt;span style="color:#e6db74">&amp;#34;/root/go:/root/go&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>-v &lt;span style="color:#e6db74">&amp;#34;/root/projects:/root/projects&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>-u &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>id -u&lt;span style="color:#66d9ef">)&lt;/span>&lt;span style="color:#e6db74">:&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>id -g&lt;span style="color:#66d9ef">)&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>-e &lt;span style="color:#e6db74">&amp;#34;DOCKER_USER=&lt;/span>$USER&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>-e &lt;span style="color:#e6db74">&amp;#34;GOPROXY=https://goproxy.cn,https://goproxy.io,https://mirrors.aliyun.com/goproxy/,direct&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>codercom/code-server:latest &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>--bind-addr 0.0.0.0:58080
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="code-server-关联文件">code-server 关联文件&lt;a class="td-heading-self-link" href="#code-server-%e5%85%b3%e8%81%94%e6%96%87%e4%bb%b6" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;strong>~/*&lt;/strong> # code-server 运行时生成的持久化数据都在当前用户的家目录下。刚部署完只有如下几个文件&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── .config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   └── code-server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   └── config.yaml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── .local
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    └── share
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    └── code-server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    ├── coder-logs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    │   ├── code-server-stderr.log
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    │   └── code-server-stdout.log
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>   └── heartbeat
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>~/.config/code-server/config.yaml&lt;/strong> # 登录密码、监听端口 等基本信息
&lt;strong>~/.vscode-remote/data/*&lt;/strong> #
&lt;strong>~/.local/share/code-server/*&lt;/strong> # 默认的用户数据(即.持久化数据)路径。可以通过 &lt;code>--user-data-dir&lt;/code> 命令行参数指定。&lt;/p>
&lt;blockquote>
&lt;p>默认的目录中有一些文件是不属于用户数据。比如 coder-logs、hearteat 等。&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>&lt;strong>./coder.json&lt;/strong> #&lt;/li>
&lt;li>.&lt;strong>/coder-logs/*&lt;/strong> #&lt;/li>
&lt;li>.&lt;strong>/extensions/*&lt;/strong> # 默认扩展保存路径。可以通过 &lt;code>--extensions-dir&lt;/code> 命令行参数指定。&lt;/li>
&lt;li>&lt;strong>./logs/*&lt;/strong> #&lt;/li>
&lt;li>.&lt;strong>/machineid&lt;/strong> #&lt;/li>
&lt;li>.&lt;strong>/User/*&lt;/strong> #
&lt;ul>
&lt;li>&lt;strong>./settings.json&lt;/strong> # 默认配置&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>Docs: Plugins(插件)</title><link>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/%E7%BC%96%E7%A8%8B%E5%B7%A5%E5%85%B7/IDE/Visual-Studio-Code/Plugins%E6%8F%92%E4%BB%B6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/%E7%BC%96%E7%A8%8B%E5%B7%A5%E5%85%B7/IDE/Visual-Studio-Code/Plugins%E6%8F%92%E4%BB%B6/</guid><description/></item><item><title>Docs: Visual Studio Code</title><link>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/%E7%BC%96%E7%A8%8B%E5%B7%A5%E5%85%B7/IDE/Visual-Studio-Code/Visual-Studio-Code/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/%E7%BC%96%E7%A8%8B%E5%B7%A5%E5%85%B7/IDE/Visual-Studio-Code/Visual-Studio-Code/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/microsoft/vscode">GitHub 项目，microsoft/vscode&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://code.visualstudio.com/">官网&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://code.visualstudio.com/docs">官方文档&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h1 id="vs-code-关联文件与配置">VS Code 关联文件与配置&lt;a class="td-heading-self-link" href="#vs-code-%e5%85%b3%e8%81%94%e6%96%87%e4%bb%b6%e4%b8%8e%e9%85%8d%e7%bd%ae" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;strong>${UserDataDir}&lt;/strong> # 用户数据目录。&lt;/p>
&lt;ul>
&lt;li>Windows 默认在 &lt;code>%APPDATA%/Code/&lt;/code>&lt;/li>
&lt;li>Linux 默认在 &lt;code>${HOME}/.vscode-server/data/&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>VS Code 运行时生成的持久化数据通常都在同一个目录中。之所以称为用户数据目录，是因为需要以用户为基础来运行一个进程，不同的用户运行的 VS Code，读取的数据应该是不同的。所以这些数据一般就保存在用户的家目录中。&lt;/p>
&lt;ul>
&lt;li>.&lt;strong>/User/&lt;/strong> #
&lt;ul>
&lt;li>&lt;strong>./workspaceStorage/&lt;/strong> # 工作空间的配置与持久化数据&lt;/li>
&lt;li>&lt;strong>./keybindings.json&lt;/strong> # 快捷键&lt;/li>
&lt;li>&lt;strong>./settings.json&lt;/strong> # 用户自定义的配置。默认配置在代码内部。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>${ExtensionsDir}&lt;/strong> # 扩展目录。&lt;/p>
&lt;ul>
&lt;li>Windows 默认在 &lt;code>%USERPROFILE%/.vscode/extensions/&lt;/code>&lt;/li>
&lt;li>Linux 默认在 &lt;code>%{HOME}/.vscode-server/extensions/&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="配置">配置&lt;a class="td-heading-self-link" href="#%e9%85%8d%e7%bd%ae" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>使用快捷键 &lt;code>Ctrl+Shift+p&lt;/code> ，然后搜索 &lt;code>setting&lt;/code>，即可看到如下图所示的一些可用的配置。这个编辑的就是 &lt;code>${UserDataDir}/User/setting.json&lt;/code> 文件&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/rxda5d/1622254287638-dfe1f8a0-03be-45af-af7b-a192a3deb17c.png" alt="image.png">&lt;/p>
&lt;ul>
&lt;li>&lt;strong>首选项：打开默认设置(JSON) # 打开 defaultSettings.json 文件&lt;/strong>。这个文件是 VS Code 的默认配置，其中还有每个字段的注释&lt;/li>
&lt;li>&lt;strong>首选项：打开设置(JSON) # 打开 settings.json 文件&lt;/strong>。一般用户配置都在这个文件中编写。&lt;/li>
&lt;li>&lt;strong>首选项：打开工作区设置(JSON) # 打开 .vscode/setting 文件&lt;/strong>。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>defaultSettings.json&lt;/strong> # VS Code 默认配置文件。其中还有每个字段的注释
&lt;strong>settings.json&lt;/strong> # VS Code 配置文件。该配置文件分为两类&lt;/p>
&lt;ul>
&lt;li>&lt;strong>用户配置&lt;/strong> # 当前用户使用 VS Code 的配置，用来覆盖默认配置。
&lt;ul>
&lt;li>Windows 目录：&lt;strong>~/AppData/Roaming/Code/User/settings.json&lt;/strong> #
&lt;ul>
&lt;li>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/rxda5d/1622255508565-70016efb-d366-4869-a851-8d29af6810ab.png" alt="image.png">&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>工作区配置&lt;/strong> # VS Code 当前工作区的配置，该配置文件通常存在于项目目录中。这个配置会覆盖用户配置以及默认配置。具有最高优先级
&lt;ul>
&lt;li>&lt;strong>$PROJECT/.vscode/settings.json&lt;/strong> # $PROJECT 为当前项目的目录。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>配置文件有优先级之分，工作区配置 &amp;gt; 用户配置 &amp;gt; 默认配置。高优先级的配置将会覆盖低优先级的配置&lt;/p>
&lt;p>上述三个配置文件的优先级从上到下，由低到高。优先级高的配置文件内容将会优先级低的配置文件内容。&lt;/p></description></item><item><title>Docs: VS Code 快捷键</title><link>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/%E7%BC%96%E7%A8%8B%E5%B7%A5%E5%85%B7/IDE/Visual-Studio-Code/VS-Code-%E5%BF%AB%E6%8D%B7%E9%94%AE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/%E7%BC%96%E7%A8%8B%E5%B7%A5%E5%85%B7/IDE/Visual-Studio-Code/VS-Code-%E5%BF%AB%E6%8D%B7%E9%94%AE/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://code.visualstudio.com/shortcuts/keyboard-shortcuts-windows.pdf">官方文档&lt;/a>,pdf&lt;/li>
&lt;li>&lt;a href="https://docs.microsoft.com/zh-cn/visualstudio/ide/default-keyboard-shortcuts-in-visual-studio">官方文档&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.microsoft.com/zh-cn/visualstudio/ide/productivity-shortcuts">https://docs.microsoft.com/zh-cn/visualstudio/ide/productivity-shortcuts&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>多个组合按键表示需要连续按&lt;/p>
&lt;h1 id="全局快捷键">全局快捷键&lt;a class="td-heading-self-link" href="#%e5%85%a8%e5%b1%80%e5%bf%ab%e6%8d%b7%e9%94%ae" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>Ctrl+q 搜索 Visual Studio。主要用于快速切换 VS Code 本身的功能&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/izq5cy/1640249077536-e62dfef8-9671-42f9-a9be-cb61bf2ad504.png" alt="image.png">&lt;/p>
&lt;p>Ctrl+k,Ctrl+s 打开键盘快捷方式列表&lt;/p>
&lt;h1 id="视图">视图&lt;a class="td-heading-self-link" href="#%e8%a7%86%e5%9b%be" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Ctrl+Shift+e&lt;/strong> # 显示资源管理器&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Ctrl+Shift+g&lt;/strong> # 显示源代码管理&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Ctrl+k,Ctrl+F5&lt;/strong> # (自定义)Git 刷新&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Ctrl+Shift+f&lt;/strong> # 显示搜索&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Ctrl+Alt+→&lt;/strong> 将编辑器拆分到新组&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Ctrl+Alt+→&lt;/strong> 将编辑器合并到前一个组&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Ctrl+PageUp&lt;/strong> 选中上一个编辑器&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Ctrl+PageDown&lt;/strong> 选中下一个编辑器&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Ctrl+k,Ctrl+→&lt;/strong> 选中右侧编辑器组&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Ctrl+k,Ctrl+←&lt;/strong> 选中左侧编辑器组&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="组内操作">组内操作&lt;a class="td-heading-self-link" href="#%e7%bb%84%e5%86%85%e6%93%8d%e4%bd%9c" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;strong>Alt+NUM&lt;/strong> 选中组中第 NUM 号编辑器&lt;/p>
&lt;h1 id="编辑时操作">编辑时操作&lt;a class="td-heading-self-link" href="#%e7%bc%96%e8%be%91%e6%97%b6%e6%93%8d%e4%bd%9c" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>操作光标所在代码&lt;/p>
&lt;ul>
&lt;li>折叠
&lt;ul>
&lt;li>&lt;strong>Ctrl+k,Ctrl+[&lt;/strong> 递归折叠光标所在代码块所有层&lt;/li>
&lt;li>&lt;strong>Ctrl+Shift+[&lt;/strong> 折叠光标所在代码代码 1 层&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>展开
&lt;ul>
&lt;li>&lt;strong>Ctrl+k,Ctrl+]&lt;/strong> 递归展开光标所在代码块所有层&lt;/li>
&lt;li>&lt;strong>Ctrl+Shift+]&lt;/strong> 展开光标所在代码代码 1 层&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>操作文件所有代码&lt;/p>
&lt;ul>
&lt;li>折叠
&lt;ul>
&lt;li>&lt;strong>Ctrl+k,Ctrl+0&lt;/strong> 折叠所有代码全部层&lt;/li>
&lt;li>**Ctrl+k,Ctrl+NUM **折叠所有代码的 NUM 层&lt;/li>
&lt;li>&lt;strong>Ctrl+k,Ctrl+/&lt;/strong> 折叠所有代码的注释&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>展开
&lt;ul>
&lt;li>&lt;strong>Ctrl+k,Ctrl+j&lt;/strong> 展开所有代码的全部层&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Alt+Shift+a&lt;/strong> 添加代码块注释&lt;/p>
&lt;p>&lt;strong>Ctrl+/&lt;/strong> 添加代码行注释&lt;/p>
&lt;p>&lt;strong>Alt + z&lt;/strong> # 开启/关闭 自动换行功能。自动换行用于当一行内容过长时，可以自动换行显示。&lt;/p>
&lt;h2 id="光标移动">光标移动&lt;a class="td-heading-self-link" href="#%e5%85%89%e6%a0%87%e7%a7%bb%e5%8a%a8" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>光标移动通常以 Ctrl 与 方向键 为主&lt;/p>
&lt;p>&lt;strong>Ctrl+Alt+↑&lt;/strong> 向上添加一个光标。多次使用，可以添加多个光标&lt;/p>
&lt;p>&lt;strong>Ctrl+Alt+↓&lt;/strong> 向下添加一个光标。多次使用，可以添加多个光标&lt;/p>
&lt;h2 id="光标选中">光标选中&lt;a class="td-heading-self-link" href="#%e5%85%89%e6%a0%87%e9%80%89%e4%b8%ad" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>代码选择快捷键通常都是以 Shift 与 方向键 为主&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Shift+→&lt;/strong> 选中光标右侧的字符，多次使用可选中多个&lt;/li>
&lt;li>&lt;strong>Shift+←&lt;/strong> 选中光标左侧的字符，多次使用可选中多个&lt;/li>
&lt;li>&lt;strong>Shift+Alt+→&lt;/strong> 选中光标所在的单词。将下划线连接的单词当做多个个体&lt;/li>
&lt;li>&lt;strong>Shift+Alt+→&lt;/strong> 取消选中光标所在的单词。将下划线连接的单词当做多个个体&lt;/li>
&lt;li>&lt;strong>Shift+Ctrl+→&lt;/strong> 选中光标所在位置到右侧下一个单词的结尾。将下划线连接的单词当做一个整体&lt;/li>
&lt;li>&lt;strong>Shift+Ctrl+←&lt;/strong> 选中光标所在位置到左侧下一个单词的结尾。将下划线连接的单词当做一个整体&lt;/li>
&lt;/ul>
&lt;h2 id="搜索内容">搜索内容&lt;a class="td-heading-self-link" href="#%e6%90%9c%e7%b4%a2%e5%86%85%e5%ae%b9" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;strong>Ctrl+d&lt;/strong> 搜索选中的字符。多次使用的话，就是搜索下一个的效果。&lt;/p>
&lt;blockquote>
&lt;p>若没有选中的字符，则搜索当前光标所在的单词&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Ctrl+Shift+l&lt;/strong> 搜索所有与选中字符一样的字符&lt;/p>
&lt;h1 id="代码跳转">代码跳转&lt;a class="td-heading-self-link" href="#%e4%bb%a3%e7%a0%81%e8%b7%b3%e8%bd%ac" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>Ctrl + F12 跳转到当前代码的实现&lt;/p>
&lt;p>Shift + F12 跳转到当前代码的引用&lt;/p>
&lt;p>Alt + ← 跳回。在跳转代码后，跳回上一个位置&lt;/p>
&lt;h1 id="其他">其他&lt;a class="td-heading-self-link" href="#%e5%85%b6%e4%bb%96" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>Ctrl + Shift + p 打开命令面板&lt;/p>
&lt;p>Ctrl+r 打开工作区&lt;/p></description></item><item><title>Docs: VS Code 配置详解</title><link>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/%E7%BC%96%E7%A8%8B%E5%B7%A5%E5%85%B7/IDE/Visual-Studio-Code/VS-Code-%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/%E7%BC%96%E7%A8%8B%E5%B7%A5%E5%85%B7/IDE/Visual-Studio-Code/VS-Code-%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h1 id="配置详解">配置详解&lt;a class="td-heading-self-link" href="#%e9%85%8d%e7%bd%ae%e8%af%a6%e8%a7%a3" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 通用配置
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// 资源管理器自动展开功能。即.追踪代码时，是否自动展开资源管理器中的目录。
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// 该配置在前端代码中，最好关闭，因为前端的依赖都在本地目录中，展开之后太乱了
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">&amp;#34;explorer.autoReveal&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 启用后，将不会显示扩展建议的通知。
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">&amp;#34;extensions.ignoreRecommendations&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 终端在 Windows 上使用的 shell 的路径(默认: C:\WINDOWS\System32\WindowsPowerShell\v1.0\powershell.exe)。
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// [详细了解如何配置 shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration)。
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// &amp;#34;terminal.integrated.shell.windows&amp;#34;: &amp;#34;D:\\Tools\\Git\\bin\\bash.exe&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// 上面的指令已弃用，使用下面的方式来配置 shell
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">&amp;#34;terminal.integrated.profiles.windows&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;PowerShell&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;source&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;PowerShell&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;icon&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;terminal-powershell&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;bash&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;path&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;D:\\Tools\\Git\\bin\\bash.exe&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;terminal.integrated.defaultProfile.windows&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Ubuntu-20.04 (WSL)&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;terminal.integrated.automationShell.linux&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 控制侧边栏和活动栏的位置。它们可以显示在工作台的左侧或右侧。
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">&amp;#34;workbench.sideBar.location&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;left&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 默认行尾字符，可用的值有如下几个：
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// \n # 表示 LF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// \r\n # 表示 CRLF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// auto # 表示 使用具体操作系统规定的行末字符。
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">&amp;#34;files.eol&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;\n&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 配置语言的文件关联(如: `&amp;#34;*.extension&amp;#34;: &amp;#34;html&amp;#34;`)。这些关联的优先级高于已安装语言的默认关联。
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">&amp;#34;files.associations&amp;#34;&lt;/span>: {},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;editor.columnSelection&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">false&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 控制编辑器是否显示控制字符。
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">&amp;#34;editor.renderControlCharacters&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">false&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 扩展 Git
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// 若设置为 true，则自动从当前 Git 存储库的默认远程库提取提交。若设置为“全部”，则从所有远程库进行提取。
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">&amp;#34;git.autofetch&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;git.enableSmartCommit&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 扩展 Go
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">&amp;#34;go.toolsManagement.autoUpdate&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;go.useLanguageServer&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 扩展 YAML
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">&amp;#34;yaml.schemas&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;file:///toc.schema.json&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;/toc\\.yml/i&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;yaml.schemaStore.enable&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">false&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;redhat.telemetry.enabled&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">false&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 扩展 Kubernetes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">&amp;#34;vs-kubernetes&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;vs-kubernetes.knownKubeconfigs&amp;#34;&lt;/span>: [&lt;span style="color:#e6db74">&amp;#34;D:\\Tools\\vs-kubernetes\\config&amp;#34;&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;vs-kubernetes.kubeconfig&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;D:\\Tools\\vs-kubernetes\\config&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;vs-kubernetes.kubectl-path.windows&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;D:\\Tools\\vs-kubernetes\\tools\\kubectl\\kubectl.exe&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;vs-kubernetes.minikube-path.windows&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;D:\\Tools\\vs-kubernetes\\tools\\minikube\\windows-amd64\\minikube.exe&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;vs-kubernetes.helm-path.windows&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;D:\\Tools\\vs-kubernetes\\tools\\helm\\windows-amd64\\helm.exe&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;vs-kubernetes.draft-path.windows&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;D:\\Tools\\vs-kubernetes\\tools\\draft\\windows-amd64\\draft.exe&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 扩展 Ansible
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// 由于插件依赖于 ansible-lint 程序，所以在 windows 中关闭该功能以防止持续报错 `spawnSync C:\WINDOWS\system32\cmd.exe ENOENT`
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">&amp;#34;ansible.ansibleLint.enabled&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="调试配置">调试配置&lt;a class="td-heading-self-link" href="#%e8%b0%83%e8%af%95%e9%85%8d%e7%bd%ae" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;strong>configurations&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>env&lt;/strong>(STRING) # 指定调试时的工作目录。
&lt;ul>
&lt;li>在程序中指定某个需要读取的文件路径时，若 env 为空则读取文件可能会失败。因为调试程序默认以运行文件为当前工作目录。&lt;/li>
&lt;li>可以设置为 &lt;code>${workspaceFolder}&lt;/code> 则让调试程序以当前工作空间目录作为调试时的工作目录。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;version&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;0.2.0&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;configurations&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Launch file&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;go&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;request&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;launch&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;mode&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;debug&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;program&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;${file}&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;env&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;NAMESPACE&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;default&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;args&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;alidns&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;-d&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;desistdaydream.ltd&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;-o&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;list&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;-u&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;断灬念梦&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;-F&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;owner.yaml&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: VS Code 中的 WSL</title><link>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/%E7%BC%96%E7%A8%8B%E5%B7%A5%E5%85%B7/IDE/Visual-Studio-Code/VS-Code-%E4%B8%AD%E7%9A%84-WSL/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/%E7%BC%96%E7%A8%8B%E5%B7%A5%E5%85%B7/IDE/Visual-Studio-Code/VS-Code-%E4%B8%AD%E7%9A%84-WSL/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://code.visualstudio.com/docs/remote/wsl">官方文档,远程-WSL&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/pz2gno/1636522141650-89ca683f-8e68-4305-879f-ce3e78f565fd.png" alt="image.png">&lt;/p>
&lt;p>使用指定发行版的 WSL&lt;/p>
&lt;blockquote>
&lt;p>使用第一个的话，go 环境始终无法获取环境变量&lt;/p>
&lt;/blockquote>
&lt;h2 id="wsl-代理">WSL 代理&lt;a class="td-heading-self-link" href="#wsl-%e4%bb%a3%e7%90%86" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>VS Code 中的 WSL 将会继承 VS Code 的代理配置。&lt;/p>
&lt;p>若启动 VS Code 之前，已启动系统代理(比如 Clash for windows)，则 VS Code 中的 WSL 也会使用代理，而此时 VS Code 的默认代理是 127.0.0.1:7890，此时 WSL 继承了这个配置，那么访问 WSL 中的这个地址是有问题的（此时 Ubuntu 中可并没有运行 Clash，也自然不会监听本地 7890 端口）&lt;/p>
&lt;p>所以，若想让插件使用本地连接，启动 VS Code 之前不要开启系统代理。&lt;/p>
&lt;h1 id="vs-code-部分扩展联网失败的问题">VS Code 部分扩展联网失败的问题&lt;a class="td-heading-self-link" href="#vs-code-%e9%83%a8%e5%88%86%e6%89%a9%e5%b1%95%e8%81%94%e7%bd%91%e5%a4%b1%e8%b4%a5%e7%9a%84%e9%97%ae%e9%a2%98" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;a href="https://kawnnor.com/wsl-vscode-proxy">https://kawnnor.com/wsl-vscode-proxy&lt;/a>&lt;/p>
&lt;p>在 VS Code 中，通过 Remote - WSL 打开 Ubuntu 子系统中的项目&lt;/p>
&lt;ul>
&lt;li>IntelliCode 扩展无法下载模型，WakaTime 扩展无法上传统计数据&lt;/li>
&lt;li>ChatGPT 无法访问&lt;/li>
&lt;/ul>
&lt;h2 id="猜测原因">猜测原因&lt;a class="td-heading-self-link" href="#%e7%8c%9c%e6%b5%8b%e5%8e%9f%e5%9b%a0" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>Clash for Windows + TUN Mode 对 Ubuntu 子系统中的 vscode-server 没有起到代理的作用，但是 IntelliCode 和 WakaTime 在没有代理的情况下应该也可以正常工作，所以怀疑 vscode-server 被配置了错误的代理。&lt;/p>
&lt;p>开启 Clash for Windows 之后，Windows 系统代理一般被设置为 &lt;code>127.0.0.1:7890&lt;/code>，VS Code 会继承这个代理设置，Ubuntu 子系统中的 vscode-server 应该也继承了这个代理设置。但是 Ubuntu 子系统在 &lt;code>127.0.0.1:7890&lt;/code> 上并没有代理服务，导致 vscode-server 联网失败。&lt;/p>
&lt;h2 id="解决方法">解决方法&lt;a class="td-heading-self-link" href="#%e8%a7%a3%e5%86%b3%e6%96%b9%e6%b3%95" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;blockquote>
&lt;p>说白了，就是让 wsl 启动时自动配置各种代理，以便让 vscode 可以继承 wsl 中的代理配置，这样 vscode 中的插件也可以使用这个代理配置了&lt;/p>
&lt;/blockquote>
&lt;p>打开 VS Code 设置，并搜索 &amp;ldquo;proxy&amp;rdquo; 可以看到：&lt;/p>
&lt;p>&lt;img src="https://cdn.hashnode.com/res/hashnode/image/upload/v1659638904404/U2-J89Pys.png?auto=compress,format&amp;amp;format=webp" alt="vscode_proxy_settings.png">&lt;/p>
&lt;p>VS Code 的代理设置，会从 &amp;ldquo;http_proxy&amp;rdquo; 和 &amp;ldquo;https_proxy&amp;rdquo; 环境变量中继承，所以在 Ubuntu 子系统中正确设置 &amp;ldquo;http_proxy&amp;rdquo; 和 &amp;ldquo;https_proxy&amp;rdquo; 环境变量应该可以解决问题。&lt;/p>
&lt;p>在 Ubuntu 子系统的 &lt;code>~/.bashrc&lt;/code> 文件末尾加上下面代码：&lt;/p>
&lt;pre tabindex="0">&lt;code># 获取 Host IP
WINDOWS_IP=$(ip route | grep default | awk &amp;#39;{print $3}&amp;#39;)
PROXY_HTTP=&amp;#34;http://${WINDOWS_IP}:7890&amp;#34;
# 设置环境变量
export http_proxy=&amp;#34;${PROXY_HTTP}&amp;#34;
export https_proxy=&amp;#34;${PROXY_HTTP}&amp;#34;
&lt;/code>&lt;/pre>&lt;p>重新在 VS Code 中打开 Ubuntu 子系统的远程项目，发现 IntelliCode 和 WakaTime 仍然无法正常工作，经排除发现 Windows 防火墙阻止了 Ubuntu 子系统访问 Host IP。&lt;/p>
&lt;p>在 Windows 防火墙中增加一条规则：&lt;/p>
&lt;pre tabindex="0">&lt;code>New-NetFirewallRule -DisplayName &amp;#34;WSL&amp;#34; -Direction Inbound -InterfaceAlias &amp;#34;vEthernet (WSL)&amp;#34; -Action Allow
&lt;/code>&lt;/pre>&lt;p>另外，Clash for Windows 需要启用 Allow LAN。&lt;/p>
&lt;p>至此，问题解决。&lt;/p></description></item></channel></rss>