<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦 – 自然语言处理</title><link>https://desistdaydream.github.io/docs/12.%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80%E5%A4%84%E7%90%86/</link><description>Recent content in 自然语言处理 on 断念梦</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/12.%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80%E5%A4%84%E7%90%86/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: 自然语言处理</title><link>https://desistdaydream.github.io/docs/12.%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80%E5%A4%84%E7%90%86/%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80%E5%A4%84%E7%90%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/12.%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80%E5%A4%84%E7%90%86/%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80%E5%A4%84%E7%90%86/</guid><description>
&lt;h1 id="概述">概述&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Natural_language_processing">Wiki，Natural_language_processing&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;strong>Natural Language Processing(自然语言处理，简称 NLP)&lt;/strong> 是语言学、计算机科学和人工智能的跨学科领域，主要关注计算机与人类语言之间的交互，特别是如何编写程序来处理和分析大量的自然语言数据。目标是让计算机能够“理解”文档的内容，包括其中的语言上下文细微差别。技术可以准确提取文档中包含的信息和见解，以及对文档本身进行分类和组织。&lt;/p>
&lt;h1 id="语言模型">语言模型&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Language_model">Wiki，Language_model&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;strong>Language model(语言模型)&lt;/strong> 是单词序列的概率分布。&lt;/p>
&lt;p>通过语言模型，才可以实现自然语言处理。NLP 程序都会使用语言模型，我们将自然语言作为输入，传递给语言模型，语言模型将会预测其将要输出的每一个单词的出现概率，然后逐一输出这些单词。&lt;/p>
&lt;p>想要训练出来一个良好的语言模型，通常会需要类似 &lt;a href="https://desistdaydream.github.io/docs/12.%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/Transformers.md">Transformers&lt;/a> 这种机器学习模型。&lt;/p>
&lt;h2 id="large-language-model">Large language model&lt;/h2>
&lt;p>&lt;strong>Large language model(大语言模型，简称 LLM)&lt;/strong> 是由具有许多参数（通常为数十亿或更多权重）的神经网络组成的&lt;a href="#%E8%AF%AD%E8%A8%80%E6%A8%A1%E5%9E%8B">语言模型&lt;/a>，使用自我监督学习对大量未标记文本进行训练。LLM 在 2018 年左右出现，并在各种任务中表现出色。这已经将自然语言处理研究的重点从之前为特定任务训练专门的监督模型的范式转移了。&lt;/p>
&lt;blockquote>
&lt;p>我们经常看到 LLM 实现的模型后面有 XB 的样式，其中 B 表示 Billions(十亿)，这个 XB 指的就是参数的数量。比如 6B 表示 60 亿参数。&lt;/p>
&lt;/blockquote>
&lt;h3 id="常见模型">常见模型&lt;/h3>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Large_language_model#List_of_large_language_models">Wiki，Large_language_model-大语言模型列表&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://mp.weixin.qq.com/s/wa55CHRNMeBUXl91WFJVpA">公众号-OSC 开源社区，大预言模型精选开源项目&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>我们常见的语言模型在现阶段（2023.5）可以简单分为如下几大类&lt;/p>
&lt;ul>
&lt;li>BERT 系
&lt;ul>
&lt;li>类似完形填空，联系上下文直接给出空中的内容&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>GPT 系
&lt;ul>
&lt;li>一字一字推测的自回归模型。有a推测b，然后根据ab推测c，根据abc推测d，以此类推&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>其他系&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Bidirectional Encoder Representations from Transformers(来自 Transformers 的双向编码器表示，简称 BERT)&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Generative Pre-trained Transformer(生成式预训练 Transformer，简称 GPT)&lt;/strong>&lt;/p>
&lt;p>&lt;strong>General Language Model(通用语言模型，简称 GLM)&lt;/strong> # 清华开源&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/THUDM/GLM">GitHub 项目，THUDM/GLM&lt;/a> 框架&lt;/li>
&lt;li>实践项目
&lt;ul>
&lt;li>&lt;a href="https://github.com/THUDM/ChatGLM-6B">THUDM/ChatGLM-6B&lt;/a>
&lt;ul>
&lt;li>量化后的模型需要使用到 CPU 处理一些数据，需要安装 gcc 与 openmp(有的 &lt;a href="docs/2.%E7%BC%96%E7%A8%8B/%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/C/C%20%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/GCC.md">GCC&lt;/a> 的整合包中包含了 openmp)。&lt;/li>
&lt;li>TODO: 有没有办法不用 CPU？&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://github.com/THUDM/GLM-130B">THUDM/GLM-130B&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Large Language Model Meta AI(简称 LLaMA)&lt;/strong>&lt;/p>
&lt;p>&lt;strong>MOSS&lt;/strong> # 复旦开源&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/OpenLMLab/MOSS">GitHub 项目，OpenLMLab/MOSS&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.zhihu.com/question/596908242/answer/2994534005">https://www.zhihu.com/question/596908242/answer/2994534005&lt;/a>&lt;/li>
&lt;/ul></description></item></channel></rss>