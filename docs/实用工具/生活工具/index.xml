<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦 – _index</title><link>https://desistdaydream.github.io/docs/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E7%94%9F%E6%B4%BB%E5%B7%A5%E5%85%B7/</link><description>Recent content in _index on 断念梦</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E7%94%9F%E6%B4%BB%E5%B7%A5%E5%85%B7/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: 青龙</title><link>https://desistdaydream.github.io/docs/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E7%94%9F%E6%B4%BB%E5%B7%A5%E5%85%B7/%E9%9D%92%E9%BE%99/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E7%94%9F%E6%B4%BB%E5%B7%A5%E5%85%B7/%E9%9D%92%E9%BE%99/</guid><description>
&lt;h1 id="概述">概述&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/whyour/qinglong">GitHub 项目，whyour/qinglong&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.fakerengine.com/">Faker 官网&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://blog.mf0a.cn/?sort=3">http://blog.mf0a.cn/?sort=3&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.csdn.net/m0_66043650">https://blog.csdn.net/m0_66043650&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>一个支持 Python、JavaScript、Shell、TypeScript 代码编写的定时任务的管理平台。&lt;/p>
&lt;h2 id="关联文件与配置">关联文件与配置&lt;/h2>
&lt;p>&lt;strong>/ql/config/&lt;/strong> #&lt;/p>
&lt;ul>
&lt;li>&lt;strong>./auth.json&lt;/strong> # 认证信息&lt;/li>
&lt;/ul>
&lt;h1 id="安装">安装&lt;/h1>
&lt;p>&lt;a href="https://github.com/zhangguanzhang/docker-compose/tree/master/qinglong">https://github.com/zhangguanzhang/docker-compose/tree/master/qinglong&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>version: &lt;span style="color:#e6db74">&amp;#34;3&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>services:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> qinglong:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> image: whyour/qinglong:latest
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> container_name: qinglong
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> restart: unless-stopped
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tty: true
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ports:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - 5700:5700
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - 5701:5701
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> environment:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - ENABLE_HANGUP&lt;span style="color:#f92672">=&lt;/span>true
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - ENABLE_WEB_PANEL&lt;span style="color:#f92672">=&lt;/span>true
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> volumes:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - ./qinglong/config:/ql/config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - ./qinglong/log:/ql/log
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - ./qinglong/db:/ql/db
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - ./qinglong/repo:/ql/repo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - ./qinglong/raw:/ql/raw
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - ./qinglong/scripts:/ql/scripts
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - ./qinglong/jbot:/ql/jbot
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - ./qinglong/ninja:/ql/ninja
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker-compose up -d
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker exec -it qinglong bash
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apk add ca-certificates
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd /ql
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">(&lt;/span>可选&lt;span style="color:#f92672">)&lt;/span> pnpm config set registry https://registry.npmmirror.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pnpm install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以参考 &lt;a href="https://github.com/shufflewzc/QLDependency">shufflewzc/QLDependency&lt;/a> 项目中的脚本，以便安装未来可能用到的各种依赖。&lt;/p>
&lt;h2 id="添加各种依赖库">添加各种依赖库&lt;/h2>
&lt;p>打开青龙页面后，点击左侧的&lt;strong>依赖管理&lt;/strong>，每次添加时选择&lt;strong>自动拆分&lt;/strong>，下面是各种语言的依赖列表，直接复制即可：&lt;/p>
&lt;p>nodejs&lt;/p>
&lt;pre tabindex="0">&lt;code>ts-md5
@types/node
prettytable
node-telegram-bot-api
tslib
ql
common
fs
typescript
axios
png-js
axios
ws@7.4.3
crypto-js
jieba
global-agent
jsdom -g
moment
form-data
date-fns
node-jsencrypt
require
js-base64
tough-cookie
json5
jsdom
dotenv
qs
&lt;/code>&lt;/pre>&lt;p>Python&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>ping3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>canvas
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>requests
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>jieba
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>PyExecJS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>httpx
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Linxu&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>lxml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bizMsg
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bizCode
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gcc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>python-devel
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aiohttp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>magic
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="任务推荐">任务推荐&lt;/h1>
&lt;p>&lt;a href="https://github.com/shufflewzc/faker2">https://github.com/shufflewzc/faker2&lt;/a>&lt;/p>
&lt;ul>
&lt;li>这里主要是京东的&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://github.com/leafTheFish/DeathNote">https://github.com/leafTheFish/DeathNote&lt;/a>&lt;/p>
&lt;ul>
&lt;li>这里还有美团和饿了么&lt;/li>
&lt;li>&lt;a href="https://blog.csdn.net/m0_66043650/article/details/127577400">https://blog.csdn.net/m0_66043650/article/details/127577400&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.csdn.net/m0_66043650/article/details/127577831">https://blog.csdn.net/m0_66043650/article/details/127577831&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="京东任务">京东任务&lt;/h1>
&lt;h2 id="获取京东-cookie">获取京东 cookie&lt;/h2>
&lt;p>chrome 浏览器去 &lt;a href="https://bean.m.jd.com/bean/signIndex.action">https://bean.m.jd.com/bean/signIndex.action&lt;/a> 获取 cookies：xx_key 然后 xx_pin，去仪表板添加环境 JD_COOKIE，值是 xx_key=xxx;xx_pin=xxx&lt;/p>
&lt;h3 id="注意">注意&lt;/h3>
&lt;p>&amp;ldquo;Invalid character in header content [&amp;quot;cookie&amp;quot;]&amp;rdquo;&lt;/p>
&lt;p>京东资产变动通知 API请求失败，请检查网路重试京东资产变动通知 API请求失败，请检查网路重试京东资产变动通知 API请求失败，请检查网路重试京东资产变动通知 API请求失败，请检查网路重试京东资产变动通知 API请求失败，请检查网路重试京东资产变动通知 API请求失败，请检查网路重试京东资产变动通知 API请求失败，请检查网路重试京东资产变动通知 API请求失败，请检查网路重试&lt;/p>
&lt;p>京东资产变动通知 API请求失败，请检查网路重试&lt;/p>
&lt;p>未知情况：undefined&lt;/p>
&lt;p>未知情况，跳出&lt;/p>
&lt;p>NI OPENWR 下 docker 安装撸JD羊毛，始终是API请求失败。不管是桥接模式还是host模式都是显示API请求失败。后面换了VPS还是一样的效果，这真是头都大了。已经弄了2天了，还是失败，欲哭无泪啊&lt;/p>
&lt;p>网上页看到很多API请求错误，都是没有能解决的。哪位兄弟已经解决的，帮忙看看，谢谢。&lt;/p>
&lt;p>&lt;strong>如果有 jd 用户名是中文的，获取 CK 的时候不要使用网页版 F12，这样获取的 pin 是中文的，脚本没办法识别。&lt;/strong>&lt;/p>
&lt;h2 id="加任务">加任务&lt;/h2>
&lt;p>转到 ip:5700，密码是 admin/admin，或者可以得到它：&lt;code>docker exec qinglong jq .password /ql/config/auth.json&lt;/code>，在仪表板上添加一个 crontab：&lt;/p>
&lt;p>&lt;code>*/4 * * * * ql repo https://git.metauniverse-cn.com/https://github.com/shufflewzc/faker2.git &amp;quot;jd_|jx_|gua_|jddj_|jdCookie&amp;quot; &amp;quot;activity|backUp&amp;quot; &amp;quot;^jd[^_]|USER|function|utils|sendNotify|ZooFaker_Necklace.js|JDJRValidator_|sign_graphics_validate|ql|JDSignValidator|magic|depend|h5sts&amp;quot; &amp;quot;main&amp;quot;&lt;/code>&lt;/p>
&lt;p>该命令可以从 &lt;a href="https://github.com/shufflewzc/faker2.git">shufflewzc/faker2&lt;/a> 项目获得。&lt;/p>
&lt;p>添加的脚本运行日志报错的话，docker exec -it -w /ql/scripts/ qinglong pnpm install&lt;/p>
&lt;h3 id="其他">其他&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ql repo https://git.metauniverse-cn.com/https://github.com/shufflewzc/faker2.git &lt;span style="color:#e6db74">&amp;#34;jd_|jx_|gua_|jddj_|jdCookie&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;activity|backUp&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;^jd[^_]|USER|function|utils|sendNotify|ZooFaker_Necklace.js|JDJRValidator_|sign_graphics_validate|ql|JDSignValidator|magic|depend&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;main&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ql repo https://git.metauniverse-cn.com/https://github.com/shufflewzc/faker2.git &lt;span style="color:#e6db74">&amp;#34;jd_|jx_|gua_|jddj_|jdCookie&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;activity|backUp&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;^jd[^_]|USER|function|utils|sendNotify|ZooFaker_Necklace.js|JDJRValidator_|sign_graphics_validate|ql|JDSignValidator|magic|depend|h5sts&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;main&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="问题">问题&lt;/h2>
&lt;p>jing喜工厂啥的没激活的话下jing喜apk，然后进去激活下相关的&lt;/p>
&lt;h1 id="美团任务">美团任务&lt;/h1>
&lt;h2 id="获取认证信息">获取认证信息&lt;/h2>
&lt;p>&lt;code>*.meituan.com&lt;/code>，通常是从 &lt;a href="https://passport.meituan.com/api/v3/account/mobilelogin">https://passport.meituan.com/api/v3/account/mobilelogin&lt;/a> 接口下获取 &lt;code>token&lt;/code> 与 &lt;code>userID&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://cdn.nlark.com/yuque/0/2022/png/12851928/1669014201988-960614d3-48a8-4972-889a-4f3c5a1b2511.png#averageHue=%23fdfbf8&amp;amp;clientId=uc22ad544-6212-4&amp;amp;from=paste&amp;amp;height=164&amp;amp;id=ue6047f6b&amp;amp;originHeight=164&amp;amp;originWidth=373&amp;amp;originalType=binary&amp;amp;ratio=1&amp;amp;rotation=0&amp;amp;showTitle=false&amp;amp;size=15947&amp;amp;status=done&amp;amp;style=none&amp;amp;taskId=u58bbfc75-5cdc-40ee-8f63-3cfd0e1a198&amp;amp;title=&amp;amp;width=373" alt="image.png">&lt;/p>
&lt;p>自行捉包把 token(一般在请求头里)填到变量 meituanCookie 中, 多账号换行或 &lt;code>&amp;amp;&lt;/code> 或 &lt;code>@&lt;/code> 隔开&lt;/p>
&lt;p>export meituanCookie=&amp;ldquo;AgGZIgsYHyxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&amp;rdquo;&lt;/p>
&lt;p>可用的连接&lt;/p>
&lt;ul>
&lt;li>i.meituan.com&lt;/li>
&lt;/ul>
&lt;h2 id="加任务-1">加任务&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ql raw https://ghproxy.com/https://raw.githubusercontent.com/leafTheFish/DeathNote/main/meituanV3.js
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="饿了么任务">饿了么任务&lt;/h1>
&lt;p>安装&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ql raw https://ghproxy.com/https://raw.githubusercontent.com/leafTheFish/DeathNote/main/elm.js
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>获取认证信息&lt;/p>
&lt;p>&lt;a href="https://h5.ele.me">https://h5.ele.me&lt;/a>&lt;/p>
&lt;p>在某个接口的请求头的 cookie 中获取 &lt;code>SID&lt;/code> 与 &lt;code>cookie2&lt;/code>，接口通常是：&lt;a href="https://waimai-guide.ele.me/h5/mtop.alsc.personal.queryminecenter">https://waimai-guide.ele.me/h5/mtop.alsc.personal.queryminecenter&lt;/a>&lt;/p></description></item></channel></rss>