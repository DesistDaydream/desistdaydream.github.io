<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦的站点 – 多媒体处理工具</title><link>https://desistdaydream.github.io/docs/11.%E5%A4%9A%E5%AA%92%E4%BD%93/%E5%A4%9A%E5%AA%92%E4%BD%93%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7/</link><description>Recent content in 多媒体处理工具 on 断念梦的站点</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/11.%E5%A4%9A%E5%AA%92%E4%BD%93/%E5%A4%9A%E5%AA%92%E4%BD%93%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: 多媒体处理工具</title><link>https://desistdaydream.github.io/docs/11.%E5%A4%9A%E5%AA%92%E4%BD%93/%E5%A4%9A%E5%AA%92%E4%BD%93%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7/%E5%A4%9A%E5%AA%92%E4%BD%93%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/11.%E5%A4%9A%E5%AA%92%E4%BD%93/%E5%A4%9A%E5%AA%92%E4%BD%93%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7/%E5%A4%9A%E5%AA%92%E4%BD%93%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/138863913">知乎，视频录制、视频剪辑、字幕制作&amp;hellip;&amp;hellip;当一名 UP 主需要哪些软件&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>视频录制&lt;/p>
&lt;ul>
&lt;li>OBS Studio&lt;/li>
&lt;li>&lt;a href="https://github.com/alyssaxuu/screenity">GitHub 项目，alyssaxuu/screenity&lt;/a> # 浏览器插件的屏幕录制
&lt;ul>
&lt;li>&lt;a href="https://mp.weixin.qq.com/s/OxKtgIsVDwad6tqvlGnMQw">https://mp.weixin.qq.com/s/OxKtgIsVDwad6tqvlGnMQw&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>视频剪辑&lt;/p>
&lt;ul>
&lt;li>Premiere&lt;/li>
&lt;li>Shotcut&lt;/li>
&lt;li>必剪 # B 站的&lt;/li>
&lt;/ul>
&lt;p>字幕制作&lt;/p>
&lt;ul>
&lt;li>听见字幕&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://github.com/Baiyuetribe/paper2gui">GitHub 项目，Baiyuetribe/paper2gui&lt;/a>&lt;/p>
&lt;ul>
&lt;li>大家有没有遇到过一种情况，在网上好不容易找到一个开源神器，但是用不了。就比如一些 AI 视频补帧、4k 修复工具，它们大部分都是公布了一个算法模型。普通人想上手使用，没点编程基础，难度很大很大。&lt;strong>但  GitHub  上，有个大佬把这些上手成本很高的工具，全都做成了直观的 GUI 界面，并集合在一起发布了出来。&lt;/strong> 这个叫小白兔 AI 的工具箱一共包含视频超分、音频降噪、人像抠图、人脸修复等十几种工具。&lt;/li>
&lt;/ul>
&lt;h1 id="obs-studio">OBS Studio&lt;a class="td-heading-self-link" href="#obs-studio" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/obsproject/obs-studio">GitHub 项目，obsproject/obs-studio&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://obsproject.com/">官网&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;strong>Open Broadcaster Software(开放广播软件，简称 OBS)&lt;/strong> 是一款用于视频录制和直播的免费和开源软件&lt;/p>
&lt;h2 id="最佳实践">最佳实践&lt;a class="td-heading-self-link" href="#%e6%9c%80%e4%bd%b3%e5%ae%9e%e8%b7%b5" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>只录制音频&lt;/p>
&lt;ul>
&lt;li>文件 - 设置 - 输出 - 输出模式 # 简单 改为 高级&lt;/li>
&lt;li>录像 - 类型 # 标准 改为 自定义输出（FFmpeg）&lt;/li>
&lt;li>容器格式 # 默认 改为 wav（音频）&lt;/li>
&lt;/ul>
&lt;h1 id="shotcut">Shotcut&lt;a class="td-heading-self-link" href="#shotcut" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/mltframework/shotcut">GitHub 项目，mltframework/shotcut&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://shotcut.org/">官网&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>导出视频: &lt;a href="https://jingyan.baidu.com/article/86f4a73e2716ee77d752695a.html">https://jingyan.baidu.com/article/86f4a73e2716ee77d752695a.html&lt;/a>&lt;/p>
&lt;h1 id="音频处理">音频处理&lt;a class="td-heading-self-link" href="#%e9%9f%b3%e9%a2%91%e5%a4%84%e7%90%86" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h2 id="buzz">Buzz&lt;a class="td-heading-self-link" href="#buzz" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/chidiwilliams/buzz">GitHub 项目，chidiwilliams/buzz&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.bilibili.com/video/BV1sG411N7RS">B 站，真正的最强字幕神器，离线语音转文字，一键搞定！&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>Buzz 可以在我们的个人计算机上离线转录和翻译音频。由 OpenAI 的 Whisper 提供支持。&lt;/p>
&lt;h1 id="图片处理">图片处理&lt;a class="td-heading-self-link" href="#%e5%9b%be%e7%89%87%e5%a4%84%e7%90%86" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h2 id="photopea">Photopea&lt;a class="td-heading-self-link" href="#photopea" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/photopea/photopea">GitHub 项目，photopea/photopea&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.photopea.com/">官网&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>在线图片编辑工具&lt;/p>
&lt;h2 id="photodemon">PhotoDemon&lt;a class="td-heading-self-link" href="#photodemon" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/tannerhelland/PhotoDemon">GitHub 项目，tannerhelland/PhotoDemon&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://photodemon.org/">官网&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>小巧玲珑的图片编辑工具&lt;/p>
&lt;p>图片处理工具&lt;/p>
&lt;h2 id="其他">其他&lt;a class="td-heading-self-link" href="#%e5%85%b6%e4%bb%96" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;a href="https://github.com/Sanster/lama-cleaner">Lama Cleaner&lt;/a> # 基于 SOTA AI 模型构建的开源图片处理工具&lt;/p>
&lt;p>&lt;a href="https://github.com/ihmily/DouyinLiveRecorder">ihmily/DouyinLiveRecorder&lt;/a> # 多平台直播录制工具&lt;/p>
&lt;h1 id="led-控制">LED 控制&lt;a class="td-heading-self-link" href="#led-%e6%8e%a7%e5%88%b6" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>软件 和 硬件。硬件用于连接多块屏幕，软件可以向硬件发送媒体信息（图片、视频、等），硬件将图片、视频投到多块屏幕组成的大屏上。&lt;/p>
&lt;p>硬件通常可以称为 LED 多媒体播放器。&lt;/p>
&lt;p>仰邦软件 &lt;a href="https://shanghai0518686.11467.com/">https://shanghai0518686.11467.com/&lt;/a>&lt;/p>
&lt;ul>
&lt;li>LedshowYQ 程序 # 可用于向机器发送媒体信息以投屏到大屏上
&lt;ul>
&lt;li>设置 功能的默认密码: 168&lt;/li>
&lt;li>设置 - 设置屏参，寻机 # 可添加设备&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>Docs: FFmpeg</title><link>https://desistdaydream.github.io/docs/11.%E5%A4%9A%E5%AA%92%E4%BD%93/%E5%A4%9A%E5%AA%92%E4%BD%93%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7/FFmpeg/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/11.%E5%A4%9A%E5%AA%92%E4%BD%93/%E5%A4%9A%E5%AA%92%E4%BD%93%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7/FFmpeg/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/FFmpeg/FFmpeg">GitHub 项目，FFmpge/FFmpge&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://ffmpeg.org/">官网&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>FFmpeg 是一个库和工具的集合，用于处理多媒体内容，比如 音频、视频、字幕、相关元数据 等。&lt;/p>
&lt;p>FFmpeg 是视频处理最常用的开源软件。它功能强大，用途广泛，大量用于视频网站和商业软件（比如 Youtube 和 iTunes），也是许多音频和视频格式的标准编码/解码实现。&lt;/p>
&lt;p>FFmpeg 本身是一个庞大的项目，包含许多组件和库文件，最常用的是它的命令行工具。本文介绍 FFmpeg 命令行如何处理视频，比桌面视频处理软件更简洁高效。&lt;/p>
&lt;h1 id="安装-ffmpeg">安装 FFmpeg&lt;a class="td-heading-self-link" href="#%e5%ae%89%e8%a3%85-ffmpeg" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;a href="https://www.bilibili.com/read/cv23895928/">https://www.bilibili.com/read/cv23895928/&lt;/a>&lt;/p>
&lt;p>可以根据 &lt;a href="https://www.ffmpeg.org/download.html">官方文档&lt;/a> 先完成安装。&lt;/p>
&lt;p>首先来到FFmpeg的官网https://ffmpeg.org，根据你使用的电脑平台进行下载。这里我们下载Windows版本，这里有两个版本，具体选择哪个版本可以参考下面这句话自行决定。这里选择 &lt;a href="https://github.com/BtbN/FFmpeg-Builds/releases">Windows builds by BtbN&lt;/a> 版本进行下载。&lt;/p>
&lt;blockquote>
&lt;p>Notes: 在Windows系统上，Gyan.dev 和 BtbN 都提供了 FFmpeg 的预编译版本。Gyan.dev 通常使用 MSVC 编译器，而 BtbN 使用 MinGW 编译器。因此，Gyan.dev 的版本可能会更符合 Windows 标准，而 BtbN 的版本可能会更加开放和跨平台。&lt;/p>
&lt;/blockquote>
&lt;p>这时候来到 GitHub 页面，选择其中的 Windows 版本下载。这里有两个版本，具体下载哪个版本根据下面这段话自行决定，两者区别如下：&lt;/p>
&lt;blockquote>
&lt;p>Notes: 完整版适用于终端用户，因为它包含了所有的可执行文件和静态库，用户可以从命令行调用 FFmpeg 的工具来进行视频处理；&lt;/p>
&lt;p>Shared 版仅包含共享库和工具，不包含可执行文件和静态库，这使得开发者可以使用 FFmpeg 的功能实现自己的应用程序或集成 FFmpeg 到自己的项目中。&lt;/p>
&lt;/blockquote>
&lt;p>下载完整版 &lt;a href="https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-master-latest-win64-gpl.zip">ffmpeg-master-latest-win64-gpl.zip&lt;/a>。解压后直接使用 CLI 二进制文件即可开始使用。&lt;/p>
&lt;h1 id="命令行工具">命令行工具&lt;a class="td-heading-self-link" href="#%e5%91%bd%e4%bb%a4%e8%a1%8c%e5%b7%a5%e5%85%b7" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.ruanyifeng.com/blog/2020/01/ffmpeg.html">阮一峰，FFmpeg 视频处理入门教程&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h2 id="基本概念">基本概念&lt;a class="td-heading-self-link" href="#%e5%9f%ba%e6%9c%ac%e6%a6%82%e5%bf%b5" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;h3 id="容器">容器&lt;a class="td-heading-self-link" href="#%e5%ae%b9%e5%99%a8" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>视频文件本身其实是一个容器（container），里面包括了视频和音频，也可能有字幕等其他内容。&lt;/p>
&lt;p>常见的容器格式有以下几种。一般来说，视频文件的后缀名反映了它的容器格式。&lt;/p>
&lt;ul>
&lt;li>MP4&lt;/li>
&lt;li>MKV&lt;/li>
&lt;li>WebM&lt;/li>
&lt;li>AVI&lt;/li>
&lt;/ul>
&lt;p>&lt;code>ffmpeg -formats&lt;/code> 命令查看 FFmpeg 支持的容器。&lt;/p>
&lt;h3 id="编码格式">编码格式&lt;a class="td-heading-self-link" href="#%e7%bc%96%e7%a0%81%e6%a0%bc%e5%bc%8f" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>视频和音频都需要经过编码，才能保存成文件。不同的编码格式（CODEC），有不同的压缩率，会导致文件大小和清晰度的差异。&lt;/p>
&lt;p>常用的视频编码格式如下。&lt;/p>
&lt;ul>
&lt;li>H.262&lt;/li>
&lt;li>H.264&lt;/li>
&lt;li>H.265&lt;/li>
&lt;/ul>
&lt;p>上面的编码格式都是有版权的，但是可以免费使用。此外，还有几种无版权的视频编码格式。&lt;/p>
&lt;ul>
&lt;li>VP8&lt;/li>
&lt;li>VP9&lt;/li>
&lt;li>AV1&lt;/li>
&lt;/ul>
&lt;p>常用的音频编码格式如下。&lt;/p>
&lt;ul>
&lt;li>MP3&lt;/li>
&lt;li>AAC&lt;/li>
&lt;/ul>
&lt;p>上面所有这些都是有损的编码格式，编码后会损失一些细节，以换取压缩后较小的文件体积。无损的编码格式压缩出来的文件体积较大，这里就不介绍了。&lt;/p>
&lt;p>&lt;code>ffmpeg -codecs&lt;/code> 命令可以查看 FFmpeg 支持的编码格式，视频编码和音频编码都在内。&lt;/p>
&lt;h3 id="编码器">编码器&lt;a class="td-heading-self-link" href="#%e7%bc%96%e7%a0%81%e5%99%a8" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>编码器（encoders）是实现某种编码格式的库文件。只有安装了某种格式的编码器，才能实现该格式视频/音频的编码和解码。&lt;/p>
&lt;p>以下是一些 FFmpeg 内置的视频编码器。&lt;/p>
&lt;ul>
&lt;li>libx264：最流行的开源 H.264 编码器&lt;/li>
&lt;li>NVENC：基于 NVIDIA GPU 的 H.264 编码器&lt;/li>
&lt;li>libx265：开源的 HEVC 编码器&lt;/li>
&lt;li>libvpx：谷歌的 VP8 和 VP9 编码器&lt;/li>
&lt;li>libaom：AV1 编码器&lt;/li>
&lt;/ul>
&lt;p>音频编码器如下。&lt;/p>
&lt;ul>
&lt;li>libfdk-aac&lt;/li>
&lt;li>aac&lt;/li>
&lt;/ul>
&lt;p>&lt;code>ffmpeg -encoders&lt;/code> 命令可以查看 FFmpeg 已安装的编码器。&lt;/p>
&lt;h2 id="ffmpeg">ffmpeg&lt;a class="td-heading-self-link" href="#ffmpeg" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://ffmpeg.org/ffmpeg.html">https://ffmpeg.org/ffmpeg.html&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>FFmpeg 的命令行参数非常多，可以分成五个部分&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ffmpeg &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>1&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>2&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span> -i &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>3&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>4&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>5&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>上面命令中，五个部分的参数依次如下。&lt;/p>
&lt;ol>
&lt;li>全局参数&lt;/li>
&lt;li>输入文件参数&lt;/li>
&lt;li>输入文件&lt;/li>
&lt;li>输出文件参数&lt;/li>
&lt;li>输出文件&lt;/li>
&lt;/ol>
&lt;p>参数太多的时候，为了便于查看，ffmpeg 命令可以写成多行。&lt;/p>
&lt;p>下面是一个例子&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ ffmpeg &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span>-y &lt;span style="color:#4e9a06">\ &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># 全局参数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-c:a libfdk_aac -c:v libx264 &lt;span style="color:#4e9a06">\ &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># 输入文件参数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-i input.mp4 &lt;span style="color:#4e9a06">\ &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># 输入文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-c:v libvpx-vp9 -c:a libvorbis &lt;span style="color:#4e9a06">\ &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># 输出文件参数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>output.webm &lt;span style="color:#8f5902;font-style:italic"># 输出文件&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>上面的命令将 mp4 文件转成 webm 文件，这两个都是容器格式。输入的 mp4 文件的音频编码格式是 aac，视频编码格式是 H.264；输出的 webm 文件的视频编码格式是 VP9，音频格式是 Vorbis。&lt;/p>
&lt;p>如果不指明编码格式，FFmpeg 会自己判断输入文件的编码。因此，上面的命令可以简单写成 &lt;code>ffmpeg -i input.avi output.mp4&lt;/code>&lt;/p>
&lt;h3 id="syntax语法">Syntax(语法)&lt;a class="td-heading-self-link" href="#syntax%e8%af%ad%e6%b3%95" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;h4 id="options">OPTIONS&lt;a class="td-heading-self-link" href="#options" aria-label="Heading self-link">&lt;/a>&lt;/h4>
&lt;p>&lt;a href="https://ffmpeg.org/ffmpeg.html#Options">https://ffmpeg.org/ffmpeg.html#Options&lt;/a>&lt;/p>
&lt;ul>
&lt;li>-c：指定编码器&lt;/li>
&lt;li>-c copy：直接复制，不经过重新编码（这样比较快）&lt;/li>
&lt;li>&lt;strong>-c:v&lt;/strong> # 指定视频编码器。可以使用 &lt;code>ffmpeg -encoders&lt;/code> 查看说有可用的编码器&lt;/li>
&lt;li>&lt;strong>-c:a&lt;/strong> # 指定音频编码器&lt;/li>
&lt;li>&lt;strong>-i&lt;/strong> # 指定输入文件&lt;/li>
&lt;li>&lt;strong>-an&lt;/strong> # 去除音频流&lt;/li>
&lt;li>&lt;strong>-vn&lt;/strong> # 去除视频流&lt;/li>
&lt;li>&lt;strong>-preset&lt;/strong> # 指定输出的视频质量，会影响文件的生成速度，有以下几个可用的值 ultrafast, superfast, veryfast, faster, fast, medium, slow, slower, veryslow。&lt;/li>
&lt;li>&lt;strong>-y&lt;/strong> # 不经过确认，输出时直接覆盖同名文件。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>通用选项&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>-hide_banner&lt;/strong> # 查看视频文件的元信息，比如编码格式和比特率，可以只使用 -i 参数。上面命令会输出很多冗余信息，加上-hide_banner 参数，可以只显示元信息。&lt;/li>
&lt;li>&lt;strong>-encoders&lt;/strong> # 显示所有可用的编码器&lt;/li>
&lt;/ul>
&lt;h3 id="example">EXAMPLE&lt;a class="td-heading-self-link" href="#example" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>&lt;strong>添加水印&lt;/strong>&lt;/p>
&lt;p>&lt;code>ffmpeg -i input.mp4 -vf &amp;quot;drawtext=text='DesistDaydream':x=1800:y=10:fontsize=24:fontcolor=white:fontfile=SmileySans-Oblique-2.ttf&amp;quot; output.mp4&lt;/code>&lt;/p>
&lt;ul>
&lt;li>文字：DesistDaydream&lt;/li>
&lt;li>位置：x=1800,y=10&lt;/li>
&lt;li>字体大小：24&lt;/li>
&lt;li>颜色：白&lt;/li>
&lt;li>字体：得意黑&lt;/li>
&lt;/ul>
&lt;h4 id="压缩视频">压缩视频&lt;a class="td-heading-self-link" href="#%e5%8e%8b%e7%bc%a9%e8%a7%86%e9%a2%91" aria-label="Heading self-link">&lt;/a>&lt;/h4>
&lt;p>&lt;a href="https://longjin666.cn/1443/">https://longjin666.cn/1443/&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://neo0moriarty.github.io/h265-compress-video/">https://neo0moriarty.github.io/h265-compress-video/&lt;/a>&lt;/p>
&lt;p>有两项参数选择，一个是影响清晰度，一个是影响文件大小的，测试了几个参数，结果差距很小，可以直接使用默认的参数。&lt;strong>确保 crf 参数在 20 左右比较重要，这项影响了清晰度，18 以下肉眼不可以分辨，18-30 差距非常小，30 以上清晰度不大好，所以选20左右即可&lt;/strong>。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ffmpeg -i input.avi -c:v libx265 -crf &lt;span style="color:#0000cf;font-weight:bold">20&lt;/span> -c:a copy output.mp4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="转换编码格式">转换编码格式&lt;a class="td-heading-self-link" href="#%e8%bd%ac%e6%8d%a2%e7%bc%96%e7%a0%81%e6%a0%bc%e5%bc%8f" aria-label="Heading self-link">&lt;/a>&lt;/h4>
&lt;p>转换编码格式（transcoding）指的是， 将视频文件从一种编码转成另一种编码。比如转成 H.264 编码，一般使用编码器 libx264，所以只需指定输出文件的视频编码器即可。&lt;/p>
&lt;p>下面是转成 H.265 编码的写法。&lt;/p>
&lt;p>$ ffmpeg -i [input.file] -c:v libx265 output.mp4&lt;/p>
&lt;h4 id="转换容器格式">转换容器格式&lt;a class="td-heading-self-link" href="#%e8%bd%ac%e6%8d%a2%e5%ae%b9%e5%99%a8%e6%a0%bc%e5%bc%8f" aria-label="Heading self-link">&lt;/a>&lt;/h4>
&lt;p>转换容器格式（transmuxing）指的是，将视频文件从一种容器转到另一种容器。下面是 mp4 转 webm 的写法。&lt;/p>
&lt;p>上面例子中，只是转一下容器，内部的编码格式不变，所以使用-c copy 指定直接拷贝，不经过转码，这样比较快。&lt;/p>
&lt;h4 id="调整码率">调整码率&lt;a class="td-heading-self-link" href="#%e8%b0%83%e6%95%b4%e7%a0%81%e7%8e%87" aria-label="Heading self-link">&lt;/a>&lt;/h4>
&lt;p>调整码率（transrating）指的是，改变编码的比特率，一般用来将视频文件的体积变小。下面的例子指定码率最小为 964K，最大为 3856K，缓冲区大小为 2000K。&lt;/p>
&lt;p>$ ffmpeg \ -i input.mp4 \ -minrate 964K -maxrate 3856K -bufsize 2000K \ output.mp4&lt;/p>
&lt;h4 id="改变分辨率transsizing">改变分辨率（transsizing）&lt;a class="td-heading-self-link" href="#%e6%94%b9%e5%8f%98%e5%88%86%e8%be%a8%e7%8e%87transsizing" aria-label="Heading self-link">&lt;/a>&lt;/h4>
&lt;p>下面是改变视频分辨率（transsizing）的例子，从 1080p 转为 480p 。&lt;/p>
&lt;p>$ ffmpeg \ -i input.mp4 \ -vf scale=480:-1 \ output.mp4&lt;/p>
&lt;h4 id="提取音频">提取音频&lt;a class="td-heading-self-link" href="#%e6%8f%90%e5%8f%96%e9%9f%b3%e9%a2%91" aria-label="Heading self-link">&lt;/a>&lt;/h4>
&lt;p>有时，需要从视频里面提取音频（demuxing），可以像下面这样写。&lt;/p>
&lt;p>上面例子中，-vn 表示去掉视频，-c:a copy 表示不改变音频编码，直接拷贝。&lt;/p>
&lt;h4 id="添加音轨">添加音轨&lt;a class="td-heading-self-link" href="#%e6%b7%bb%e5%8a%a0%e9%9f%b3%e8%bd%a8" aria-label="Heading self-link">&lt;/a>&lt;/h4>
&lt;p>添加音轨（muxing）指的是，将外部音频加入视频，比如添加背景音乐或旁白。&lt;/p>
&lt;p>上面例子中，有音频和视频两个输入文件，FFmpeg 会将它们合成为一个文件。&lt;/p>
&lt;h4 id="截图">截图&lt;a class="td-heading-self-link" href="#%e6%88%aa%e5%9b%be" aria-label="Heading self-link">&lt;/a>&lt;/h4>
&lt;p>下面的例子是从指定时间开始，连续对 1 秒钟的视频进行截图。&lt;/p>
&lt;p>如果只需要截一张图，可以指定只截取一帧。&lt;/p>
&lt;p>上面例子中，-vframes 1 指定只截取一帧，-q:v 2 表示输出的图片质量，一般是 1 到 5 之间（1 为质量最高）。&lt;/p>
&lt;h4 id="裁剪">裁剪&lt;a class="td-heading-self-link" href="#%e8%a3%81%e5%89%aa" aria-label="Heading self-link">&lt;/a>&lt;/h4>
&lt;p>裁剪（cutting）指的是，截取原始视频里面的一个片段，输出为一个新视频。可以指定开始时间（start）和持续时间（duration），也可以指定结束时间（end）。&lt;/p>
&lt;p>下面是实际的例子。&lt;/p>
&lt;p>上面例子中，-c copy 表示不改变音频和视频的编码格式，直接拷贝，这样会快很多。&lt;/p>
&lt;h4 id="为音频添加封面">为音频添加封面&lt;a class="td-heading-self-link" href="#%e4%b8%ba%e9%9f%b3%e9%a2%91%e6%b7%bb%e5%8a%a0%e5%b0%81%e9%9d%a2" aria-label="Heading self-link">&lt;/a>&lt;/h4>
&lt;p>有些视频网站只允许上传视频文件。如果要上传音频文件，必须为音频添加封面，将其转为视频，然后上传。&lt;/p>
&lt;p>下面命令可以将音频文件，转为带封面的视频文件。&lt;/p>
&lt;p>上面命令中，有两个输入文件，一个是封面图片 cover.jpg，另一个是音频文件 input.mp3。-loop 1 参数表示图片无限循环，-shortest 参数表示音频文件结束，输出视频就结束。&lt;/p>
&lt;h2 id="ffprobe">ffprobe&lt;a class="td-heading-self-link" href="#ffprobe" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;a href="https://ffmpeg.org/ffprobe.html">https://ffmpeg.org/ffprobe.html&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.cnblogs.com/renhui/p/9209664.html">https://www.cnblogs.com/renhui/p/9209664.html&lt;/a>&lt;/p>
&lt;p>ffprobe 是 ffmpeg 命令行工具中相对简单的，此命令是用来查看媒体文件格式的工具。&lt;/p></description></item><item><title>Docs: PotPlayer</title><link>https://desistdaydream.github.io/docs/11.%E5%A4%9A%E5%AA%92%E4%BD%93/%E5%A4%9A%E5%AA%92%E4%BD%93%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7/PotPlayer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/11.%E5%A4%9A%E5%AA%92%E4%BD%93/%E5%A4%9A%E5%AA%92%E4%BD%93%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7/PotPlayer/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://potplayer.tv/">官网&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/PotPlayer">Wiki, PotPlayer&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote></description></item><item><title>Docs:</title><link>https://desistdaydream.github.io/docs/11.%E5%A4%9A%E5%AA%92%E4%BD%93/%E5%A4%9A%E5%AA%92%E4%BD%93%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7/%E6%9C%AA%E5%91%BD%E5%90%8D/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/11.%E5%A4%9A%E5%AA%92%E4%BD%93/%E5%A4%9A%E5%AA%92%E4%BD%93%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7/%E6%9C%AA%E5%91%BD%E5%90%8D/</guid><description/></item></channel></rss>