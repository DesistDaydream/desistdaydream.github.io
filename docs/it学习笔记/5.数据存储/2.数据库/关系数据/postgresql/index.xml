<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦 – PostgreSQL</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/2.%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE/postgresql/</link><description>Recent content in PostgreSQL on 断念梦</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/2.%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE/postgresql/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: PostgreSQL</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/2.%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE/postgresql/postgresql/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/2.%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE/postgresql/postgresql/</guid><description>
&lt;h1 id="概述">概述&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.postgresql.org/">官网&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.ruanyifeng.com/blog/2013/12/getting_started_with_postgresql.html">PostgreSQL 新手入门-阮一峰&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>PostgreSQL 是一个功能强大的开源对象关系数据库系统，经过 30 多年的积极开发，在可靠性、特性健壮性和性能方面赢得了很高的声誉。&lt;/p>
&lt;p>&lt;strong>一、安装&lt;/strong>&lt;/p>
&lt;p>首先，安装 PostgreSQL 客户端。&lt;/p>
&lt;blockquote>
&lt;p>sudo apt-get install postgresql-client&lt;/p>
&lt;/blockquote>
&lt;p>然后，安装 PostgreSQL 服务器。&lt;/p>
&lt;blockquote>
&lt;p>sudo apt-get install postgresql&lt;/p>
&lt;/blockquote>
&lt;p>正常情况下，安装完成后，PostgreSQL 服务器会自动在本机的 5432 端口开启。&lt;/p>
&lt;p>如果还想安装图形管理界面，可以运行下面命令，但是本文不涉及这方面内容。&lt;/p>
&lt;blockquote>
&lt;p>sudo apt-get install pgadmin3&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>二、添加新用户和新数据库&lt;/strong>&lt;/p>
&lt;p>初次安装后，默认生成一个名为 postgres 的数据库和一个名为 postgres 的数据库用户。这里需要注意的是，同时还生成了一个名为 postgres 的 Linux 系统用户。&lt;/p>
&lt;p>下面，我们使用 postgres 用户，来生成其他用户和新数据库。好几种方法可以达到这个目的，这里介绍两种。&lt;/p>
&lt;p>&lt;strong>第一种方法，使用 PostgreSQL 控制台。&lt;/strong>&lt;/p>
&lt;p>首先，新建一个 Linux 新用户，可以取你想要的名字，这里为 dbuser。&lt;/p>
&lt;blockquote>
&lt;p>sudo adduser dbuser&lt;/p>
&lt;/blockquote>
&lt;p>然后，切换到 postgres 用户。&lt;/p>
&lt;blockquote>
&lt;p>sudo su - postgres&lt;/p>
&lt;/blockquote>
&lt;p>下一步，使用 psql 命令登录 PostgreSQL 控制台。&lt;/p>
&lt;blockquote>
&lt;p>psql&lt;/p>
&lt;/blockquote>
&lt;p>这时相当于系统用户 postgres 以同名数据库用户的身份，登录数据库，这是不用输入密码的。如果一切正常，系统提示符会变为&amp;quot;postgres=#&amp;quot;，表示这时已经进入了数据库控制台。以下的命令都在控制台内完成。&lt;/p>
&lt;p>第一件事是使用\password 命令，为 postgres 用户设置一个密码。&lt;/p>
&lt;blockquote>
&lt;p>\password postgres&lt;/p>
&lt;/blockquote>
&lt;p>第二件事是创建数据库用户 dbuser（刚才创建的是 Linux 系统用户），并设置密码。&lt;/p>
&lt;blockquote>
&lt;p>CREATE USER dbuser WITH PASSWORD &amp;lsquo;password&amp;rsquo;;&lt;/p>
&lt;/blockquote>
&lt;p>第三件事是创建用户数据库，这里为 exampledb，并指定所有者为 dbuser。&lt;/p>
&lt;blockquote>
&lt;p>CREATE DATABASE exampledb OWNER dbuser;&lt;/p>
&lt;/blockquote>
&lt;p>第四件事是将 exampledb 数据库的所有权限都赋予 dbuser，否则 dbuser 只能登录控制台，没有任何数据库操作权限。&lt;/p>
&lt;blockquote>
&lt;p>GRANT ALL PRIVILEGES ON DATABASE exampledb to dbuser;&lt;/p>
&lt;/blockquote>
&lt;p>最后，使用\q 命令退出控制台（也可以直接按 ctrl+D）。&lt;/p>
&lt;blockquote>
&lt;p>\q&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>第二种方法，使用 shell 命令行。&lt;/strong>&lt;/p>
&lt;p>添加新用户和新数据库，除了在 PostgreSQL 控制台内，还可以在 shell 命令行下完成。这是因为 PostgreSQL 提供了命令行程序 createuser 和 createdb。还是以新建用户 dbuser 和数据库 exampledb 为例。&lt;/p>
&lt;p>首先，创建数据库用户 dbuser，并指定其为超级用户。&lt;/p>
&lt;pre>&lt;code>sudo -u postgres createuser --superuser dbuser
&lt;/code>&lt;/pre>
&lt;p>然后，登录数据库控制台，设置 dbuser 用户的密码，完成后退出控制台。&lt;/p>
&lt;pre>&lt;code>sudo -u postgres psql
\password dbuser
\q
&lt;/code>&lt;/pre>
&lt;p>接着，在 shell 命令行下，创建数据库 exampledb，并指定所有者为 dbuser。&lt;/p>
&lt;pre>&lt;code>sudo -u postgres createdb -O dbuser exampledb
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>三、登录数据库&lt;/strong>&lt;/p>
&lt;p>添加新用户和新数据库以后，就要以新用户的名义登录数据库，这时使用的是 psql 命令。&lt;/p>
&lt;blockquote>
&lt;p>psql -U dbuser -d exampledb -h 127.0.0.1 -p 5432&lt;/p>
&lt;/blockquote>
&lt;p>上面命令的参数含义如下：-U 指定用户，-d 指定数据库，-h 指定服务器，-p 指定端口。&lt;/p>
&lt;p>输入上面命令以后，系统会提示输入 dbuser 用户的密码。输入正确，就可以登录控制台了。&lt;/p>
&lt;p>psql 命令存在简写形式。如果当前 Linux 系统用户，同时也是 PostgreSQL 用户，则可以省略用户名（-U 参数的部分）。举例来说，我的 Linux 系统用户名为 ruanyf，且 PostgreSQL 数据库存在同名用户，则我以 ruanyf 身份登录 Linux 系统后，可以直接使用下面的命令登录数据库，且不需要密码。&lt;/p>
&lt;blockquote>
&lt;p>psql exampledb&lt;/p>
&lt;/blockquote>
&lt;p>此时，如果 PostgreSQL 内部还存在与当前系统用户同名的数据库，则连数据库名都可以省略。比如，假定存在一个叫做 ruanyf 的数据库，则直接键入 psql 就可以登录该数据库。&lt;/p>
&lt;blockquote>
&lt;p>psql&lt;/p>
&lt;/blockquote>
&lt;p>另外，如果要恢复外部数据，可以使用下面的命令。&lt;/p>
&lt;blockquote>
&lt;p>psql exampledb &amp;lt; exampledb.sql&lt;/p>
&lt;/blockquote></description></item><item><title>Docs: psql 命令</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/2.%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE/postgresql/psql-%E5%91%BD%E4%BB%A4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/2.%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE/postgresql/psql-%E5%91%BD%E4%BB%A4/</guid><description>
&lt;h1 id="控制台命令">控制台命令&lt;/h1>
&lt;p>除了前面已经用到的 \password 命令（设置密码）和 \q 命令（退出）以外，控制台还提供一系列其他命令。&lt;/p>
&lt;pre>&lt;code>\h：查看SQL命令的解释，比如\h select。
\?：查看psql命令列表。
\l：列出所有数据库。
\c [database_name]：连接其他数据库。
\d：列出当前数据库的所有表格。
\d [table_name]：列出某一张表格的结构。
\du：列出所有用户。
\e：打开文本编辑器。
\conninfo：列出当前数据库和连接的信息。
&lt;/code>&lt;/pre>
&lt;p>数据库操作&lt;/p>
&lt;p>基本的数据库操作，就是使用一般的 SQL 语言。&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-plsql" data-lang="plsql"># 创建新表
CREATE TABLE user_tbl(name VARCHAR(20), signup_date DATE);
# 插入数据
INSERT INTO user_tbl(name, signup_date) VALUES(&amp;#39;张三&amp;#39;, &amp;#39;2013-12-22&amp;#39;);
# 从表中查询数据
SELECT * FROM user_tbl;
# 更新数据
UPDATE user_tbl set name = &amp;#39;李四&amp;#39; WHERE name = &amp;#39;张三&amp;#39;;
# 删除记录
DELETE FROM user_tbl WHERE name = &amp;#39;李四&amp;#39; ;
# 添加栏位
ALTER TABLE user_tbl ADD email VARCHAR(40);
# 更新结构
ALTER TABLE user_tbl ALTER COLUMN signup_date SET NOT NULL;
# 更名栏位
ALTER TABLE user_tbl RENAME COLUMN signup_date TO signup;
# 删除栏位
ALTER TABLE user_tbl DROP COLUMN email;
# 表格更名
ALTER TABLE user_tbl RENAME TO backup_tbl;
# 删除表格
DROP TABLE IF EXISTS backup_tbl;
&lt;/code>&lt;/pre></description></item></channel></rss>