<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦 – 关系数据</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/2.%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE/</link><description>Recent content in 关系数据 on 断念梦</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/2.%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: MySQL</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/2.%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE/mysql/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/2.%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE/mysql/</guid><description>
&lt;h1 id="概述">概述&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.mysql.com/">官网&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>MySQL 的社区版本 MariaDB ，使用安装 MySQL 的 时候，会自动安装 MariaDB 。同时安装 mariadb-server ，即可开始使用了&lt;/p>
&lt;h1 id="mysql-部署">MySQL 部署&lt;/h1>
&lt;h2 id="docker-启动-mysql">docker 启动 MySQL&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>mkdir -p /opt/mysql/config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir -p /opt/mysql/data
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker run -d --name mysql --restart always &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>--network host &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>-v /opt/mysql/data:/var/lib/mysql
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-v /opt/mysql/config:/etc/mysql/conf.d
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-e MYSQL_ROOT_PASSWORD&lt;span style="color:#f92672">=&lt;/span>mysql &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>mysql:8
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>对于 5.7+ 版本，推荐设置 SQL Mode，去掉默认的 ONLY_FULL_GROUP_BY。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>tee /opt/mysql/config/mysql.cnf &amp;gt; /dev/null &lt;span style="color:#e6db74">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">[mysqld]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果不去掉这个模式，当我们使用 &lt;code>group by&lt;/code> 时，&lt;code>select&lt;/code> 中选择的列如果不在 group by 中，将会报错：
&lt;code>ERROR 1055 (42000): Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'kalacloud.user_id' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by&lt;/code>
如果想解决该错误，除了修改 SQL 模式外，还可以使用 &lt;code>ANY_VALUE()&lt;/code> 函数处理每一个 select 选中的列但是没有参与 group by 分组的字段。详见：&lt;a href="https://dev.mysql.com/doc/refman/5.7/en/group-by-handling.html">官方文档，函数和运算符-聚合函数-MySQL 对 GROUP BY 的处理&lt;/a>&lt;/p>
&lt;h2 id="kubernetes-中部署-mysql">Kubernetes 中部署 MySQL&lt;/h2>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://mp.weixin.qq.com/s/C0EYTBJ7sLw823-qE5TjTA">阳明公众号&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h1 id="mysql-关联文件与配置">MySQL 关联文件与配置&lt;/h1>
&lt;p>**/etc/my.cnf **# MariaDB 基础配置文件
&lt;strong>/var/lib/myql/*&lt;/strong> # 数据存储路径&lt;/p>
&lt;h1 id="mysql-数据类型">MySQL 数据类型&lt;/h1>
&lt;p>MySQL 中定义数据字段的类型对你数据库的优化是非常重要的。
MySQL 支持多种类型，大致可以分为三类：数值、日期/时间和字符串(字符)类型。&lt;/p>
&lt;h2 id="数值类型">数值类型&lt;/h2>
&lt;p>MySQL 支持所有标准 SQL 数值数据类型。&lt;/p>
&lt;p>这些类型包括严格数值数据类型(INTEGER、SMALLINT、DECIMAL 和 NUMERIC)，以及近似数值数据类型(FLOAT、REAL 和 DOUBLE PRECISION)。&lt;/p>
&lt;p>关键字 INT 是 INTEGER 的同义词，关键字 DEC 是 DECIMAL 的同义词。&lt;/p>
&lt;p>BIT 数据类型保存位字段值，并且支持 MyISAM、MEMORY、InnoDB 和 BDB 表。&lt;/p>
&lt;p>作为 SQL 标准的扩展，MySQL 也支持整数类型 TINYINT、MEDIUMINT 和 BIGINT。下面的表显示了需要的每个整数类型的存储和范围。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>类型&lt;/th>
&lt;th>大小&lt;/th>
&lt;th>范围（有符号）&lt;/th>
&lt;th>范围（无符号）&lt;/th>
&lt;th>用途&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>TINYINT&lt;/td>
&lt;td>1 byte&lt;/td>
&lt;td>(-128，127)&lt;/td>
&lt;td>(0，255)&lt;/td>
&lt;td>小整数值&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SMALLINT&lt;/td>
&lt;td>2 bytes&lt;/td>
&lt;td>(-32 768，32 767)&lt;/td>
&lt;td>(0，65 535)&lt;/td>
&lt;td>大整数值&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>MEDIUMINT&lt;/td>
&lt;td>3 bytes&lt;/td>
&lt;td>(-8 388 608，8 388 607)&lt;/td>
&lt;td>(0，16 777 215)&lt;/td>
&lt;td>大整数值&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>INT 或 INTEGER&lt;/td>
&lt;td>4 bytes&lt;/td>
&lt;td>(-2 147 483 648，2 147 483 647)&lt;/td>
&lt;td>(0，4 294 967 295)&lt;/td>
&lt;td>大整数值&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>BIGINT&lt;/td>
&lt;td>8 bytes&lt;/td>
&lt;td>(-9,223,372,036,854,775,808，9 223 372 036 854 775 807)&lt;/td>
&lt;td>(0，18 446 744 073 709 551 615)&lt;/td>
&lt;td>极大整数值&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>FLOAT&lt;/td>
&lt;td>4 bytes&lt;/td>
&lt;td>(-3.402 823 466 E+38，-1.175 494 351 E-38)，0，(1.175 494 351 E-38，3.402 823 466 351 E+38)&lt;/td>
&lt;td>0，(1.175 494 351 E-38，3.402 823 466 E+38)&lt;/td>
&lt;td>单精度&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>浮点数值&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DOUBLE&lt;/td>
&lt;td>8 bytes&lt;/td>
&lt;td>(-1.797 693 134 862 315 7 E+308，-2.225 073 858 507 201 4 E-308)，0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)&lt;/td>
&lt;td>0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)&lt;/td>
&lt;td>双精度&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>浮点数值&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DECIMAL&lt;/td>
&lt;td>对 DECIMAL(M,D) ，如果 M&amp;gt;D，为 M+2 否则为 D+2&lt;/td>
&lt;td>依赖于 M 和 D 的值&lt;/td>
&lt;td>依赖于 M 和 D 的值&lt;/td>
&lt;td>小数值&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="日期和时间类型">日期和时间类型&lt;/h2>
&lt;p>表示时间值的日期和时间类型为 DATETIME、DATE、TIMESTAMP、TIME 和 YEAR。&lt;/p>
&lt;p>每个时间类型有一个有效值范围和一个&amp;quot;零&amp;quot;值，当指定不合法的 MySQL 不能表示的值时使用&amp;quot;零&amp;quot;值。&lt;/p>
&lt;p>TIMESTAMP 类型有专有的自动更新特性，将在后面描述。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>类型&lt;/th>
&lt;th>大小( bytes)&lt;/th>
&lt;th>范围&lt;/th>
&lt;th>格式&lt;/th>
&lt;th>用途&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>DATE&lt;/td>
&lt;td>3&lt;/td>
&lt;td>1000-01-01/9999-12-31&lt;/td>
&lt;td>YYYY-MM-DD&lt;/td>
&lt;td>日期值&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TIME&lt;/td>
&lt;td>3&lt;/td>
&lt;td>&amp;lsquo;-838:59:59&amp;rsquo;/&amp;lsquo;838:59:59&amp;rsquo;&lt;/td>
&lt;td>HH:MM:SS&lt;/td>
&lt;td>时间值或持续时间&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>YEAR&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1901/2155&lt;/td>
&lt;td>YYYY&lt;/td>
&lt;td>年份值&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DATETIME&lt;/td>
&lt;td>8&lt;/td>
&lt;td>1000-01-01 00:00:00/9999-12-31 23:59:59&lt;/td>
&lt;td>YYYY-MM-DD HH:MM:SS&lt;/td>
&lt;td>混合日期和时间值&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TIMESTAMP&lt;/td>
&lt;td>4&lt;/td>
&lt;td>1970-01-01 00:00:00/2038&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>结束时间是第 2147483647 秒，北京时间 2038-1-19 11:14:07，格林尼治时间 2038 年 1 月 19 日 凌晨 03:14:07&lt;/td>
&lt;td>YYYYMMDD HHMMSS&lt;/td>
&lt;td>混合日期和时间值，时间戳&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="字符串类型">字符串类型&lt;/h2>
&lt;p>字符串类型指 CHAR、VARCHAR、BINARY、VARBINARY、BLOB、TEXT、ENUM 和 SET。该节描述了这些类型如何工作以及如何在查询中使用这些类型。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>类型&lt;/th>
&lt;th>大小&lt;/th>
&lt;th>用途&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>CHAR&lt;/td>
&lt;td>0-255 bytes&lt;/td>
&lt;td>定长字符串&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>VARCHAR&lt;/td>
&lt;td>0-65535 bytes&lt;/td>
&lt;td>变长字符串&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TINYBLOB&lt;/td>
&lt;td>0-255 bytes&lt;/td>
&lt;td>不超过 255 个字符的二进制字符串&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TINYTEXT&lt;/td>
&lt;td>0-255 bytes&lt;/td>
&lt;td>短文本字符串&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>BLOB&lt;/td>
&lt;td>0-65 535 bytes&lt;/td>
&lt;td>二进制形式的长文本数据&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TEXT&lt;/td>
&lt;td>0-65 535 bytes&lt;/td>
&lt;td>长文本数据&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>MEDIUMBLOB&lt;/td>
&lt;td>0-16 777 215 bytes&lt;/td>
&lt;td>二进制形式的中等长度文本数据&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>MEDIUMTEXT&lt;/td>
&lt;td>0-16 777 215 bytes&lt;/td>
&lt;td>中等长度文本数据&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>LONGBLOB&lt;/td>
&lt;td>0-4 294 967 295 bytes&lt;/td>
&lt;td>二进制形式的极大文本数据&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>LONGTEXT&lt;/td>
&lt;td>0-4 294 967 295 bytes&lt;/td>
&lt;td>极大文本数据&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>注意：char(n) 和 varchar(n) 中括号中 n 代表字符的个数，并不代表字节个数，比如 CHAR(30) 就可以存储 30 个字符。&lt;/p>
&lt;p>CHAR 和 VARCHAR 类型类似，但它们保存和检索的方式不同。它们的最大长度和是否尾部空格被保留等方面也不同。在存储或检索过程中不进行大小写转换。&lt;/p>
&lt;p>BINARY 和 VARBINARY 类似于 CHAR 和 VARCHAR，不同的是它们包含二进制字符串而不要非二进制字符串。也就是说，它们包含字节字符串而不是字符字符串。这说明它们没有字符集，并且排序和比较基于列值字节的数值值。&lt;/p>
&lt;p>BLOB 是一个二进制大对象，可以容纳可变数量的数据。有 4 种 BLOB 类型：TINYBLOB、BLOB、MEDIUMBLOB 和 LONGBLOB。它们区别在于可容纳存储范围不同。&lt;/p>
&lt;p>有 4 种 TEXT 类型：TINYTEXT、TEXT、MEDIUMTEXT 和 LONGTEXT。对应的这 4 种 BLOB 类型，可存储的最大长度不同，可根据实际情况选择。&lt;/p>
&lt;h1 id="mysql-命令行工具">mysql 命令行工具&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://dev.mysql.com/doc/refman/8.0/en/mysql.html">官方文档，MySQL 程序-客户端程序-mysql&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>mysql 是一个简单的 SQL Shell。 它支持交互和非交互使用。 交互使用时，查询结果以 ASCII 表格式显示。 非交互使用（例如，用作过滤器）时，结果以制表符分隔的格式显示。 可以使用命令选项更改输出格式。&lt;/p>
&lt;h2 id="syntax语法">Syntax(语法)&lt;/h2>
&lt;p>&lt;strong>mysql [OPTIONS] [DATABASE]&lt;/strong>
**DATABASE **# 指定连接 mysql 后要操作的数据库。若不指定，则需要在交互模式下使用 &lt;code>use&lt;/code> 指令选择数据库，否则对数据库的操作将会报 &lt;code>No database selected&lt;/code> 错误：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>mysql&amp;gt; show tables;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ERROR &lt;span style="color:#ae81ff">1046&lt;/span> &lt;span style="color:#f92672">(&lt;/span>3D000&lt;span style="color:#f92672">)&lt;/span>: No database selected
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>OPTIONS：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>**-h, &amp;ndash;host &lt;!-- raw HTML omitted --> **# 指定要连接的 mysql 主机。如果链接本机 mysql，可以省略。&lt;/li>
&lt;li>**-P, &amp;ndash;port &lt;!-- raw HTML omitted --> **# 指定要连接的 mysql 的端口。默认值：&lt;code>3306&lt;/code>&lt;/li>
&lt;li>**-u, &amp;ndash;user &lt;!-- raw HTML omitted --> **# 指定要登录 mysql 的用户名&lt;/li>
&lt;li>&lt;strong>-p, &amp;ndash;password &lt;!-- raw HTML omitted -->&lt;/strong> # 使用密码来登录。如果指定要登录 mysql 的用户密码为空，则该选项可省&lt;/li>
&lt;/ul>
&lt;h2 id="命令行模式">命令行模式&lt;/h2>
&lt;p>略&lt;/p>
&lt;h2 id="交互模式">交互模式&lt;/h2>
&lt;h3 id="斜线命令">斜线命令&lt;/h3>
&lt;p>在 mysql 的交互模式中有一组 mysql 程序自带的命令，用以 控制输出格式、检查、获取数据信息 等等，这些命令以 &lt;code>\&lt;/code> 开头，不过也有与之相对应的字符串命令&lt;/p>
&lt;ul>
&lt;li>**\u, use &lt;!-- raw HTML omitted --> **# 选择想要操作的数据库&lt;/li>
&lt;/ul>
&lt;h3 id="基础示例">基础示例&lt;/h3>
&lt;ul>
&lt;li>grant select,insert,update,delete,create,drop ON mysql.* TO &amp;rsquo;lichenhao&amp;rsquo;@&amp;rsquo;localhost&amp;rsquo; identified by &amp;rsquo;lichenhao&amp;rsquo;; # 为名为 mysql 的数据库创建名为 lichenhao 的用户，密码为 lichenhao，具有 select、insert、update、delete、create、drop 这些命令的执行权限。&lt;/li>
&lt;li>flush privileges; # 刷新权限。由权限账号信息是在 MYSQLD 服务启动的时候就加载到内存中的，所以你在原权限表中的任何直接修改都不会直接生效。用 flush privileges 把中表中的信息更新到内存。&lt;/li>
&lt;li>select user(); # 查看当前登录的用户。&lt;/li>
&lt;li>show databases; # 列出所有已经存在的数据库&lt;/li>
&lt;li>use mysql; # 切换当前要操作的数据库为 mysql&lt;/li>
&lt;li>show tables; # 显示当前数据库中所有的表&lt;/li>
&lt;li>show columns from db; # 显示当前数据库中名为 db 的表的属性。效果如下
&lt;ul>
&lt;li>desc test; # 与该命令效果相同&lt;/li>
&lt;li>Field # 该表中都有哪些列&lt;/li>
&lt;li>Type # 该列的数据类型&lt;/li>
&lt;li>Null # 该列是否可以插入 null&lt;/li>
&lt;li>Key # 索引类型&lt;/li>
&lt;li>Default # 该列插入空值时。默认插入什么值。&lt;/li>
&lt;li>Extra # 该列额外的参数。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;pre>&lt;code>MariaDB [mysql]&amp;gt; SHOW COLUMNS FROM db;
+-----------------------+---------------+------+-----+---------+-------+
| Field | Type | Null | Key | Default | Extra |
+-----------------------+---------------+------+-----+---------+-------+
| Host | char(60) | NO | PRI | | |
| Db | char(64) | NO | PRI | | |
| User | char(16) | NO | PRI | | |
| Select_priv | enum('N','Y') | NO | | N | |
.......
&lt;/code>&lt;/pre>
&lt;ul>
&lt;li>select Host,db from db; #显示 db 表中，Host 和 Db 列及其内容，效果如下&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;pre>&lt;code>MariaDB [mysql]&amp;gt; SELECT Host,db from db;
+-----------+---------+
| Host | db |
+-----------+---------+
| % | test |
| % | test\_% |
| localhost | mysql |
+-----------+---------+
&lt;/code>&lt;/pre>
&lt;h1 id="mysqladmin">mysqladmin&lt;/h1>
&lt;p>EXAMPLE&lt;/p>
&lt;ul>
&lt;li>mysqladmin -u root -p password &amp;ldquo;my_password&amp;rdquo; #修改 root 密码，密码为：my_password。如果默认密码为空，则可以不加-p。&lt;/li>
&lt;/ul></description></item><item><title>Docs: MySQL</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/2.%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE/mysql/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/2.%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE/mysql/</guid><description/></item><item><title>Docs: PostgreSQL</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/2.%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE/postgresql/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/2.%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE/postgresql/</guid><description>
&lt;h1 id="概述">概述&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.postgresql.org/">官网&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.ruanyifeng.com/blog/2013/12/getting_started_with_postgresql.html">PostgreSQL 新手入门-阮一峰&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>PostgreSQL 是一个功能强大的开源对象关系数据库系统，经过 30 多年的积极开发，在可靠性、特性健壮性和性能方面赢得了很高的声誉。&lt;/p>
&lt;p>&lt;strong>一、安装&lt;/strong>&lt;/p>
&lt;p>首先，安装 PostgreSQL 客户端。&lt;/p>
&lt;blockquote>
&lt;p>sudo apt-get install postgresql-client&lt;/p>
&lt;/blockquote>
&lt;p>然后，安装 PostgreSQL 服务器。&lt;/p>
&lt;blockquote>
&lt;p>sudo apt-get install postgresql&lt;/p>
&lt;/blockquote>
&lt;p>正常情况下，安装完成后，PostgreSQL 服务器会自动在本机的 5432 端口开启。&lt;/p>
&lt;p>如果还想安装图形管理界面，可以运行下面命令，但是本文不涉及这方面内容。&lt;/p>
&lt;blockquote>
&lt;p>sudo apt-get install pgadmin3&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>二、添加新用户和新数据库&lt;/strong>&lt;/p>
&lt;p>初次安装后，默认生成一个名为 postgres 的数据库和一个名为 postgres 的数据库用户。这里需要注意的是，同时还生成了一个名为 postgres 的 Linux 系统用户。&lt;/p>
&lt;p>下面，我们使用 postgres 用户，来生成其他用户和新数据库。好几种方法可以达到这个目的，这里介绍两种。&lt;/p>
&lt;p>&lt;strong>第一种方法，使用 PostgreSQL 控制台。&lt;/strong>&lt;/p>
&lt;p>首先，新建一个 Linux 新用户，可以取你想要的名字，这里为 dbuser。&lt;/p>
&lt;blockquote>
&lt;p>sudo adduser dbuser&lt;/p>
&lt;/blockquote>
&lt;p>然后，切换到 postgres 用户。&lt;/p>
&lt;blockquote>
&lt;p>sudo su - postgres&lt;/p>
&lt;/blockquote>
&lt;p>下一步，使用 psql 命令登录 PostgreSQL 控制台。&lt;/p>
&lt;blockquote>
&lt;p>psql&lt;/p>
&lt;/blockquote>
&lt;p>这时相当于系统用户 postgres 以同名数据库用户的身份，登录数据库，这是不用输入密码的。如果一切正常，系统提示符会变为&amp;quot;postgres=#&amp;quot;，表示这时已经进入了数据库控制台。以下的命令都在控制台内完成。&lt;/p>
&lt;p>第一件事是使用\password 命令，为 postgres 用户设置一个密码。&lt;/p>
&lt;blockquote>
&lt;p>\password postgres&lt;/p>
&lt;/blockquote>
&lt;p>第二件事是创建数据库用户 dbuser（刚才创建的是 Linux 系统用户），并设置密码。&lt;/p>
&lt;blockquote>
&lt;p>CREATE USER dbuser WITH PASSWORD &amp;lsquo;password&amp;rsquo;;&lt;/p>
&lt;/blockquote>
&lt;p>第三件事是创建用户数据库，这里为 exampledb，并指定所有者为 dbuser。&lt;/p>
&lt;blockquote>
&lt;p>CREATE DATABASE exampledb OWNER dbuser;&lt;/p>
&lt;/blockquote>
&lt;p>第四件事是将 exampledb 数据库的所有权限都赋予 dbuser，否则 dbuser 只能登录控制台，没有任何数据库操作权限。&lt;/p>
&lt;blockquote>
&lt;p>GRANT ALL PRIVILEGES ON DATABASE exampledb to dbuser;&lt;/p>
&lt;/blockquote>
&lt;p>最后，使用\q 命令退出控制台（也可以直接按 ctrl+D）。&lt;/p>
&lt;blockquote>
&lt;p>\q&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>第二种方法，使用 shell 命令行。&lt;/strong>&lt;/p>
&lt;p>添加新用户和新数据库，除了在 PostgreSQL 控制台内，还可以在 shell 命令行下完成。这是因为 PostgreSQL 提供了命令行程序 createuser 和 createdb。还是以新建用户 dbuser 和数据库 exampledb 为例。&lt;/p>
&lt;p>首先，创建数据库用户 dbuser，并指定其为超级用户。&lt;/p>
&lt;pre>&lt;code>sudo -u postgres createuser --superuser dbuser
&lt;/code>&lt;/pre>
&lt;p>然后，登录数据库控制台，设置 dbuser 用户的密码，完成后退出控制台。&lt;/p>
&lt;pre>&lt;code>sudo -u postgres psql
\password dbuser
\q
&lt;/code>&lt;/pre>
&lt;p>接着，在 shell 命令行下，创建数据库 exampledb，并指定所有者为 dbuser。&lt;/p>
&lt;pre>&lt;code>sudo -u postgres createdb -O dbuser exampledb
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>三、登录数据库&lt;/strong>&lt;/p>
&lt;p>添加新用户和新数据库以后，就要以新用户的名义登录数据库，这时使用的是 psql 命令。&lt;/p>
&lt;blockquote>
&lt;p>psql -U dbuser -d exampledb -h 127.0.0.1 -p 5432&lt;/p>
&lt;/blockquote>
&lt;p>上面命令的参数含义如下：-U 指定用户，-d 指定数据库，-h 指定服务器，-p 指定端口。&lt;/p>
&lt;p>输入上面命令以后，系统会提示输入 dbuser 用户的密码。输入正确，就可以登录控制台了。&lt;/p>
&lt;p>psql 命令存在简写形式。如果当前 Linux 系统用户，同时也是 PostgreSQL 用户，则可以省略用户名（-U 参数的部分）。举例来说，我的 Linux 系统用户名为 ruanyf，且 PostgreSQL 数据库存在同名用户，则我以 ruanyf 身份登录 Linux 系统后，可以直接使用下面的命令登录数据库，且不需要密码。&lt;/p>
&lt;blockquote>
&lt;p>psql exampledb&lt;/p>
&lt;/blockquote>
&lt;p>此时，如果 PostgreSQL 内部还存在与当前系统用户同名的数据库，则连数据库名都可以省略。比如，假定存在一个叫做 ruanyf 的数据库，则直接键入 psql 就可以登录该数据库。&lt;/p>
&lt;blockquote>
&lt;p>psql&lt;/p>
&lt;/blockquote>
&lt;p>另外，如果要恢复外部数据，可以使用下面的命令。&lt;/p>
&lt;blockquote>
&lt;p>psql exampledb &amp;lt; exampledb.sql&lt;/p>
&lt;/blockquote></description></item><item><title>Docs: PostgreSQL</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/2.%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE/postgresql/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/2.%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE/postgresql/</guid><description/></item><item><title>Docs: SQL</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/2.%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE/sql/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/2.%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE/sql/</guid><description>
&lt;h1 id="概述">概述&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/SQL">Wiki,SQL&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.runoob.com/sql/sql-tutorial.html">菜鸟教程，SQL&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;strong>Structured Query Language(结构化查询语言，简称 SQL)&lt;/strong> 是一种特定领域的编程语言，用于管理 RDBMS(关系数据库管理系统) 中保存的数据。使用 SQL 编写的语句也可以称为 &lt;strong>Expression(表达式)&lt;/strong>。
SQL 在 1986 年成为 &lt;strong>American National Standards Institute(美国国家标准化组织，简称 ANSI)&lt;/strong> 的一项标准，在 1987 年成为国际标准化组织（ISO）标准。
每种关系型数据库所使用的 SQL 基本都一样，但是又有其自身特殊的 SQL。由于 MySQL 的使用率非常高，所以 SQL 文档的各种例子都以 MySQL 为主。&lt;/p>
&lt;h2 id="关键字">关键字&lt;/h2>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://dev.mysql.com/doc/refman/8.0/en/keywords.html">MySQL 官方文档，语言结构-关键字和保留字&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>SELECT
FROM
ORDER BY
GROUP BY
WHERE&lt;/p>
&lt;h1 id="sql-标准">SQL 标准&lt;/h1>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Year&lt;/th>
&lt;th>Name&lt;/th>
&lt;th>Alias&lt;/th>
&lt;th>Comments&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>1986&lt;/td>
&lt;td>SQL-86&lt;/td>
&lt;td>SQL-87&lt;/td>
&lt;td>First formalized by ANSI&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>1989&lt;/td>
&lt;td>SQL-89&lt;/td>
&lt;td>&lt;a href="https://en.wikipedia.org/wiki/Federal_Information_Processing_Standard">FIPS&lt;/a> 127-1&lt;/td>
&lt;td>Minor revision that added integrity constraints adopted as FIPS 127-1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>1992&lt;/td>
&lt;td>&lt;a href="https://en.wikipedia.org/wiki/SQL-92">SQL-92&lt;/a>&lt;/td>
&lt;td>SQL2, FIPS 127-2&lt;/td>
&lt;td>Major revision (ISO 9075), &lt;em>Entry Level&lt;/em> SQL-92 adopted as FIPS 127-2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>1999&lt;/td>
&lt;td>&lt;a href="https://en.wikipedia.org/wiki/SQL:1999">SQL:1999&lt;/a>&lt;/td>
&lt;td>SQL3&lt;/td>
&lt;td>Added regular expression matching, &lt;a href="https://en.wikipedia.org/wiki/Hierarchical_and_recursive_queries_in_SQL">recursive queries&lt;/a> (e.g. &lt;a href="https://en.wikipedia.org/wiki/Transitive_closure">transitive closure&lt;/a>), &lt;a href="https://en.wikipedia.org/wiki/Database_trigger">triggers&lt;/a>, support for procedural and control-of-flow statements, nonscalar types (arrays), and some object-oriented features (e.g. &lt;a href="https://en.wikipedia.org/wiki/Structured_type">structured types&lt;/a>), support for embedding SQL in Java (&lt;a href="https://en.wikipedia.org/wiki/SQL/OLB">SQL/OLB&lt;/a>) and vice versa (&lt;a href="https://en.wikipedia.org/wiki/SQL/JRT">SQL/JRT&lt;/a>)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>2003&lt;/td>
&lt;td>&lt;a href="https://en.wikipedia.org/wiki/SQL:2003">SQL:2003&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>Introduced &lt;a href="https://en.wikipedia.org/wiki/XML">XML&lt;/a>-related features (&lt;a href="https://en.wikipedia.org/wiki/SQL/XML">SQL/XML&lt;/a>), &lt;a href="https://en.wikipedia.org/wiki/SQL_window_function">window functions&lt;/a>, standardized sequences, and columns with autogenerated values (including identity columns)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>2006&lt;/td>
&lt;td>&lt;a href="https://en.wikipedia.org/wiki/SQL:2006">SQL:2006&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>ISO/IEC 9075-14:2006 defines ways that SQL can be used with XML. It defines ways of importing and storing XML data in an SQL database, manipulating it within the database, and publishing both XML and conventional SQL data in XML form. In addition, it lets applications integrate queries into their SQL code with &lt;a href="https://en.wikipedia.org/wiki/XQuery">XQuery&lt;/a>, the XML Query Language published by the World Wide Web Consortium (&lt;a href="https://en.wikipedia.org/wiki/W3C">W3C&lt;/a>), to concurrently access ordinary SQL-data and XML documents.&lt;a href="https://en.wikipedia.org/wiki/SQL#cite_note-SQLXML2006-36">[33]&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>2008&lt;/td>
&lt;td>&lt;a href="https://en.wikipedia.org/wiki/SQL:2008">SQL:2008&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>Legalizes ORDER BY outside cursor definitions. Adds INSTEAD OF triggers, TRUNCATE statement,&lt;a href="https://en.wikipedia.org/wiki/SQL#cite_note-iablog.sybase.com-paulley-37">[34]&lt;/a> FETCH clause&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>2011&lt;/td>
&lt;td>&lt;a href="https://en.wikipedia.org/wiki/SQL:2011">SQL:2011&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>Adds temporal data (PERIOD FOR)&lt;a href="https://en.wikipedia.org/wiki/SQL#cite_note-feature_temporal-38">[35]&lt;/a> (more information at &lt;a href="https://en.wikipedia.org/wiki/Temporal_database#History">Temporal database#History&lt;/a>). Enhancements for &lt;a href="https://en.wikipedia.org/wiki/SQL_window_function">window functions&lt;/a> and FETCH clause.&lt;a href="https://en.wikipedia.org/wiki/SQL#cite_note-features_2011-39">[36]&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>2016&lt;/td>
&lt;td>&lt;a href="https://en.wikipedia.org/wiki/SQL:2016">SQL:2016&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>Adds row pattern matching, polymorphic table functions, &lt;a href="https://en.wikipedia.org/wiki/JSON">JSON&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>2019&lt;/td>
&lt;td>SQL:2019&lt;/td>
&lt;td>&lt;/td>
&lt;td>Adds Part 15, multidimensional arrays (MDarray type and operators)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h1 id="sql-语句">SQL 语句&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://dev.mysql.com/doc/refman/8.0/en/sql-statements.html">MySQL 官方文档，SLQ 语句&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>SQL 语言被细分为几个语言元素，包括：&lt;/p>
&lt;ul>
&lt;li>子句，它们是语句和查询的组成部分。（在某些情况下，这些是可选的。）&lt;/li>
&lt;li>表达式，可以生成&lt;a href="https://en.wikipedia.org/wiki/Scalar_(computing)">标&lt;/a>量值或由数据的&lt;a href="https://en.wikipedia.org/wiki/Column_(database)">列&lt;/a>和&lt;a href="https://en.wikipedia.org/wiki/Row_(database)">行&lt;/a>组成的&lt;a href="https://en.wikipedia.org/wiki/Table_(database)">表&lt;/a>&lt;/li>
&lt;li>Predicates，指定可以评估为 SQL&lt;a href="https://en.wikipedia.org/wiki/Ternary_logic">三值逻辑 (3VL)&lt;/a>（真/假/未知）或&lt;a href="https://en.wikipedia.org/wiki/Boolean_logic">布尔&lt;/a> &lt;a href="https://en.wikipedia.org/wiki/Truth_value">真值&lt;/a>的条件，用于限制语句和查询的效果，或更改程序流程。&lt;/li>
&lt;li>查询，根据特定条件检索数据。这是 SQL 的一个重要元素。&lt;/li>
&lt;li>语句，可能对模式和数据产生持久影响，或者可能控制&lt;a href="https://en.wikipedia.org/wiki/Database_transaction">事务&lt;/a>、程序流、连接、会话或诊断。
&lt;ul>
&lt;li>SQL 语句还包括&lt;a href="https://en.wikipedia.org/wiki/Semicolon">分号&lt;/a>(&amp;quot;;&amp;quot;) 语句终止符。虽然不是每个平台都需要它，但它被定义为 SQL 语法的标准部分。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Whitespace_(computer_science)">SQL 语句和查询中通常会忽略无关紧要的空格&lt;/a>，从而更容易格式化 SQL 代码以提高可读性。&lt;/li>
&lt;/ul>
&lt;p>在 MySQL 中按照功能将各种语句进行了分类：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://dev.mysql.com/doc/refman/8.0/en/sql-data-definition-statements.html">Data Definition Statements&lt;/a>(数据定义语句)&lt;/li>
&lt;li>&lt;a href="https://desistdaydream.github.io/docs/IT%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/2.%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE/SQL/%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C%E8%AF%AD%E5%8F%A5.md">Data Manipulation Statements&lt;/a>(数据操作语句)&lt;/li>
&lt;li>&lt;a href="https://dev.mysql.com/doc/refman/8.0/en/sql-transactional-statements.html">Transactional and Locking Statements&lt;/a>(事务和锁语句)&lt;/li>
&lt;li>&lt;a href="https://dev.mysql.com/doc/refman/8.0/en/sql-replication-statements.html">Replication Statements&lt;/a>(复制语句)&lt;/li>
&lt;li>&lt;a href="https://dev.mysql.com/doc/refman/8.0/en/sql-prepared-statements.html">Prepared Statements&lt;/a>(预处理语句)&lt;/li>
&lt;li>&lt;a href="https://dev.mysql.com/doc/refman/8.0/en/sql-compound-statements.html">Compound Statement Syntax&lt;/a>(符合语句)&lt;/li>
&lt;li>&lt;a href="https://dev.mysql.com/doc/refman/8.0/en/sql-server-administration-statements.html">Database Administration Statements&lt;/a>(数据库管理语句)&lt;/li>
&lt;li>&lt;a href="https://dev.mysql.com/doc/refman/8.0/en/sql-utility-statements.html">Utility Statements&lt;/a>(使用程序语句)&lt;/li>
&lt;/ul>
&lt;h2 id="基础示例">基础示例&lt;/h2>
&lt;p>显示当前存在哪些数据库&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>mysql&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">show&lt;/span> databases;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#75715e">--------------------+
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#66d9ef">Database&lt;/span> &lt;span style="color:#f92672">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#75715e">--------------------+
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#f92672">|&lt;/span> information_schema &lt;span style="color:#f92672">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">|&lt;/span> mysql &lt;span style="color:#f92672">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">|&lt;/span> performance_schema &lt;span style="color:#f92672">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">|&lt;/span> sys &lt;span style="color:#f92672">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#75715e">--------------------+
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#ae81ff">4&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span> &lt;span style="color:#66d9ef">in&lt;/span> &lt;span style="color:#66d9ef">set&lt;/span> (&lt;span style="color:#ae81ff">0&lt;/span>.&lt;span style="color:#ae81ff">00&lt;/span> sec)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>通常 MySQL 部署成功后，都有几个默认的数据库&lt;/p>
&lt;ul>
&lt;li>information_schema&lt;/li>
&lt;li>mysql&lt;/li>
&lt;li>performance_schema&lt;/li>
&lt;li>sys&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>创建数据库&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>mysql&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">create&lt;/span> &lt;span style="color:#66d9ef">database&lt;/span> menagerie;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Query OK, &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#66d9ef">row&lt;/span> affected (&lt;span style="color:#ae81ff">0&lt;/span>.&lt;span style="color:#ae81ff">00&lt;/span> sec)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>开始使用数据库&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>mysql&lt;span style="color:#f92672">&amp;gt;&lt;/span> use menagerie
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">Database&lt;/span> changed
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建表&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>mysql&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">create&lt;/span> &lt;span style="color:#66d9ef">table&lt;/span> pet (name VARCHAR(&lt;span style="color:#ae81ff">20&lt;/span>), &lt;span style="color:#66d9ef">owner&lt;/span> VARCHAR(&lt;span style="color:#ae81ff">20&lt;/span>),species VARCHAR(&lt;span style="color:#ae81ff">20&lt;/span>), sex CHAR(&lt;span style="color:#ae81ff">1&lt;/span>), birth DATE, death DATE);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Query OK, &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span> affected (&lt;span style="color:#ae81ff">0&lt;/span>.&lt;span style="color:#ae81ff">01&lt;/span> sec)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>显示表、查看表信息&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>mysql&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">show&lt;/span> tables;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#75715e">---------------------+
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#f92672">|&lt;/span> Tables_in_menagerie &lt;span style="color:#f92672">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#75715e">---------------------+
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#f92672">|&lt;/span> pet &lt;span style="color:#f92672">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#75715e">---------------------+
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#66d9ef">row&lt;/span> &lt;span style="color:#66d9ef">in&lt;/span> &lt;span style="color:#66d9ef">set&lt;/span> (&lt;span style="color:#ae81ff">0&lt;/span>.&lt;span style="color:#ae81ff">00&lt;/span> sec)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysql&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">describe&lt;/span> pet;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#75715e">---------+-------------+------+-----+---------+-------+
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#f92672">|&lt;/span> Field &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#66d9ef">Type&lt;/span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#66d9ef">Null&lt;/span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#66d9ef">Key&lt;/span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#66d9ef">Default&lt;/span> &lt;span style="color:#f92672">|&lt;/span> Extra &lt;span style="color:#f92672">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#75715e">---------+-------------+------+-----+---------+-------+
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#f92672">|&lt;/span> name &lt;span style="color:#f92672">|&lt;/span> varchar(&lt;span style="color:#ae81ff">20&lt;/span>) &lt;span style="color:#f92672">|&lt;/span> YES &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#66d9ef">NULL&lt;/span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#f92672">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#66d9ef">owner&lt;/span> &lt;span style="color:#f92672">|&lt;/span> varchar(&lt;span style="color:#ae81ff">20&lt;/span>) &lt;span style="color:#f92672">|&lt;/span> YES &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#66d9ef">NULL&lt;/span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#f92672">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">|&lt;/span> species &lt;span style="color:#f92672">|&lt;/span> varchar(&lt;span style="color:#ae81ff">20&lt;/span>) &lt;span style="color:#f92672">|&lt;/span> YES &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#66d9ef">NULL&lt;/span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#f92672">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">|&lt;/span> sex &lt;span style="color:#f92672">|&lt;/span> char(&lt;span style="color:#ae81ff">1&lt;/span>) &lt;span style="color:#f92672">|&lt;/span> YES &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#66d9ef">NULL&lt;/span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#f92672">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">|&lt;/span> birth &lt;span style="color:#f92672">|&lt;/span> date &lt;span style="color:#f92672">|&lt;/span> YES &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#66d9ef">NULL&lt;/span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#f92672">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">|&lt;/span> death &lt;span style="color:#f92672">|&lt;/span> date &lt;span style="color:#f92672">|&lt;/span> YES &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#66d9ef">NULL&lt;/span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#f92672">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#75715e">---------+-------------+------+-----+---------+-------+
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#ae81ff">6&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span> &lt;span style="color:#66d9ef">in&lt;/span> &lt;span style="color:#66d9ef">set&lt;/span> (&lt;span style="color:#ae81ff">0&lt;/span>.&lt;span style="color:#ae81ff">00&lt;/span> sec)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>将数据加载到表中&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- 直接从文件中将数据加载表中
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>mysql&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">LOAD&lt;/span> &lt;span style="color:#66d9ef">DATA&lt;/span> &lt;span style="color:#66d9ef">LOCAL&lt;/span> INFILE &lt;span style="color:#e6db74">&amp;#39;/pet.txt&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">INTO&lt;/span> &lt;span style="color:#66d9ef">TABLE&lt;/span> pet;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- 使用 SQL 语句一条一条插入数据到表中
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">INSERT&lt;/span> &lt;span style="color:#66d9ef">INTO&lt;/span> pet &lt;span style="color:#66d9ef">VALUES&lt;/span> (&lt;span style="color:#e6db74">&amp;#39;Puffball&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;Diane&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;hamster&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;f&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;1999-03-30&amp;#39;&lt;/span>,&lt;span style="color:#66d9ef">NULL&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>查询数据&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>mysql&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">select&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#66d9ef">from&lt;/span> pet;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#75715e">----------+--------+---------+------+------------+------------+
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#f92672">|&lt;/span> name &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#66d9ef">owner&lt;/span> &lt;span style="color:#f92672">|&lt;/span> species &lt;span style="color:#f92672">|&lt;/span> sex &lt;span style="color:#f92672">|&lt;/span> birth &lt;span style="color:#f92672">|&lt;/span> death &lt;span style="color:#f92672">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#75715e">----------+--------+---------+------+------------+------------+
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#f92672">|&lt;/span> name &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#66d9ef">owner&lt;/span> &lt;span style="color:#f92672">|&lt;/span> species &lt;span style="color:#f92672">|&lt;/span> s &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">0000&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">00&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">0000&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">00&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#f92672">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">|&lt;/span> Fluffy &lt;span style="color:#f92672">|&lt;/span> Harold &lt;span style="color:#f92672">|&lt;/span> cat &lt;span style="color:#f92672">|&lt;/span> f &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">1993&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">02&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">04&lt;/span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">0000&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">00&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#f92672">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">|&lt;/span> Claws &lt;span style="color:#f92672">|&lt;/span> Gwen &lt;span style="color:#f92672">|&lt;/span> cat &lt;span style="color:#f92672">|&lt;/span> m &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">1994&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">03&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">17&lt;/span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">0000&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">00&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#f92672">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">|&lt;/span> Buffy &lt;span style="color:#f92672">|&lt;/span> Harold &lt;span style="color:#f92672">|&lt;/span> dog &lt;span style="color:#f92672">|&lt;/span> f &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">1989&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">05&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">13&lt;/span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">0000&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">00&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#f92672">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">|&lt;/span> Fang &lt;span style="color:#f92672">|&lt;/span> Benny &lt;span style="color:#f92672">|&lt;/span> dog &lt;span style="color:#f92672">|&lt;/span> m &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">1990&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">08&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">27&lt;/span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">0000&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">00&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#f92672">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">|&lt;/span> Bowser &lt;span style="color:#f92672">|&lt;/span> Diane &lt;span style="color:#f92672">|&lt;/span> dog &lt;span style="color:#f92672">|&lt;/span> m &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">1979&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">08&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">31&lt;/span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">1995&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">07&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">29&lt;/span> &lt;span style="color:#f92672">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">|&lt;/span> Chirpy &lt;span style="color:#f92672">|&lt;/span> Gwen &lt;span style="color:#f92672">|&lt;/span> bird &lt;span style="color:#f92672">|&lt;/span> f &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">1998&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">09&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">11&lt;/span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">0000&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">00&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#f92672">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">|&lt;/span> Whistler &lt;span style="color:#f92672">|&lt;/span> Gwen &lt;span style="color:#f92672">|&lt;/span> bird &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">1997&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">12&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">09&lt;/span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">0000&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">00&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#f92672">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">|&lt;/span> Slim &lt;span style="color:#f92672">|&lt;/span> Benny &lt;span style="color:#f92672">|&lt;/span> snake &lt;span style="color:#f92672">|&lt;/span> m &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">1996&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">04&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">29&lt;/span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">0000&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">00&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#f92672">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#75715e">----------+--------+---------+------+------------+------------+
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#ae81ff">9&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span> &lt;span style="color:#66d9ef">in&lt;/span> &lt;span style="color:#66d9ef">set&lt;/span> (&lt;span style="color:#ae81ff">0&lt;/span>.&lt;span style="color:#ae81ff">00&lt;/span> sec)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="数据定义语句">数据定义语句&lt;/h1>
&lt;h2 id="create--创建数据库或者表">create # 创建数据库或者表&lt;/h2>
&lt;p>&lt;strong>create database NAME [ARGS];&lt;/strong>
&lt;strong>create table NAME (Column_Name1 Column_Type1 [ARGS],&amp;hellip;.,Column_NameN Column_TypeN [ARGS])[ARGS];&lt;/strong>
其中 Column_Type 可以使用的参数，涉及每种关系型数据库的各自实现方式&lt;/p>
&lt;h3 id="args">ARGS&lt;/h3>
&lt;p>适用于创建 database 时使用的 ARGS：&lt;/p>
&lt;ul>
&lt;li>character set # 指定字符集为 CharacterName。定义了字符以及字符的编码。&lt;/li>
&lt;li>collation # 指定字符序为 CollationName。定义了字符的培训规则。&lt;/li>
&lt;/ul>
&lt;p>适用于创建 table 时使用的 ARGS：
在 () 外设置的 ARGS 将对所有列生效，也可以在 () 内对指定的列设置 ARGS&lt;/p>
&lt;ul>
&lt;li>null | not null # 指定该列是否可以插入 null 值。默认为 yes，可以插入。一般情况使用设置为 not null,原因见下面说明。&lt;/li>
&lt;li>default [VALUE] # 指定该列在插入数据为空时的默认值。默认插入 NULL。
&lt;ul>
&lt;li>Note:如果当前列不设定 default 的 VALUE ，在插入数据时，如果不指定列的值。则会根据列的 null 或者 not null 来插入值&lt;/li>
&lt;li>当 null 为 yes 时，默认插入 null&lt;/li>
&lt;li>当 null 为 no 时，默认根据当前列的类型插入值,对于数值类型插入 0，字符串类型插入空字符串，时间戳类型插入当前日期和时间，ENUM 类型插入枚举组的第一条。&lt;/li>
&lt;li>e.g.当设置列为 not null、default 不指定 VALUE 时。在插入一个空值时，会报错。因为插入空值，会根据 default 的规则插入 null，但是又不能插入 null，所以插入失败&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>comment # 指定该列的注释&lt;/li>
&lt;li>key | primary key | unique key | foreign key &amp;lt;(Column_Name)&amp;gt; # 指定 Column_Name 为该表的索引&lt;/li>
&lt;li>primary key # 关键字用于定义列为主键。 您可以使用多列来定义主键，列间以逗号分隔。&lt;/li>
&lt;li>engine # 设置存储引擎&lt;/li>
&lt;li>charset=ENCODE # 设置编码为 ENCODE。一般设定为 utf8&lt;/li>
&lt;li>collate&lt;/li>
&lt;/ul>
&lt;p>适用于 int 类型数据的参数&lt;/p>
&lt;ul>
&lt;li>auto_increment # 指定该字段自动递增。该参数只适用于 int 类型。每个表有且只能有一个自动递增列，且必须将该列定义为 key&lt;/li>
&lt;li>unsigned # 指定该列的数值无符号，i.e.不会为负数&lt;/li>
&lt;/ul>
&lt;h3 id="example">EXAMPLE&lt;/h3>
&lt;ul>
&lt;li>创建一个名为 caredaily 的数据库
&lt;ul>
&lt;li>create database caredaily set utf8 collate utf8_general_ci;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>创建名为 practice 的数据库，并且指定字符集为 utf8，字符序为 utf8_general_ci。
&lt;ul>
&lt;li>create database &lt;code>practice&lt;/code> character set utf8 collate utf8_general_ci;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>创建一个名为 test 的表，其中只有名为 id 的列，类型是 int。
&lt;ul>
&lt;li>create table &lt;code>test&lt;/code> (&lt;code>id&lt;/code> int);&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>创建一个名为 product 的数据表。第一列名为 id 的 int 类型 ，无符号，自动递增。第二列名为 size 的 varchar(64) 类型。设定 id 列为主键。自动生成默认值，引擎为 innodb。编码为 utf8&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">create&lt;/span> &lt;span style="color:#66d9ef">table&lt;/span> &lt;span style="color:#f92672">`&lt;/span>product&lt;span style="color:#f92672">`&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">`&lt;/span>id&lt;span style="color:#f92672">`&lt;/span> int unsigned &lt;span style="color:#66d9ef">not&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> auto_increment,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">`&lt;/span>product&lt;span style="color:#f92672">`&lt;/span> varchar(&lt;span style="color:#ae81ff">64&lt;/span>) &lt;span style="color:#66d9ef">not&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">primary&lt;/span> &lt;span style="color:#66d9ef">key&lt;/span> (&lt;span style="color:#f92672">`&lt;/span>id&lt;span style="color:#f92672">`&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)engine&lt;span style="color:#f92672">=&lt;/span>innodb &lt;span style="color:#66d9ef">default&lt;/span> charset&lt;span style="color:#f92672">=&lt;/span>utf8;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>#创建一个名为 size 的表。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">create&lt;/span> &lt;span style="color:#66d9ef">table&lt;/span> &lt;span style="color:#f92672">`&lt;/span>&lt;span style="color:#66d9ef">size&lt;/span>&lt;span style="color:#f92672">`&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">`&lt;/span>id&lt;span style="color:#f92672">`&lt;/span> int unsigned &lt;span style="color:#66d9ef">not&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> auto_increment,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">`&lt;/span>&lt;span style="color:#66d9ef">size&lt;/span>&lt;span style="color:#f92672">`&lt;/span> varchar(&lt;span style="color:#ae81ff">64&lt;/span>) &lt;span style="color:#66d9ef">not&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">primary&lt;/span> &lt;span style="color:#66d9ef">key&lt;/span> (&lt;span style="color:#f92672">`&lt;/span>id&lt;span style="color:#f92672">`&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)engine&lt;span style="color:#f92672">=&lt;/span>innodb &lt;span style="color:#66d9ef">default&lt;/span> charset&lt;span style="color:#f92672">=&lt;/span>utf8;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>创建一个名为 inventory 的表。第四列名为 create_time 的 时间戳 类型&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">create&lt;/span> &lt;span style="color:#66d9ef">table&lt;/span> &lt;span style="color:#f92672">`&lt;/span>inventory&lt;span style="color:#f92672">`&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">`&lt;/span>id&lt;span style="color:#f92672">`&lt;/span> int unsigned &lt;span style="color:#66d9ef">not&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> auto_increment,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">`&lt;/span>src&lt;span style="color:#f92672">`&lt;/span> varchar(&lt;span style="color:#ae81ff">64&lt;/span>) &lt;span style="color:#66d9ef">not&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#66d9ef">default&lt;/span> &lt;span style="color:#e6db74">&amp;#34;总部&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">`&lt;/span>product&lt;span style="color:#f92672">`&lt;/span> varchar(&lt;span style="color:#ae81ff">64&lt;/span>) &lt;span style="color:#66d9ef">not&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">`&lt;/span>&lt;span style="color:#66d9ef">size&lt;/span>&lt;span style="color:#f92672">`&lt;/span> varchar(&lt;span style="color:#ae81ff">64&lt;/span>) &lt;span style="color:#66d9ef">not&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">`&lt;/span>amount&lt;span style="color:#f92672">`&lt;/span> int &lt;span style="color:#66d9ef">not&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">`&lt;/span>create_time&lt;span style="color:#f92672">`&lt;/span> &lt;span style="color:#66d9ef">timestamp&lt;/span> &lt;span style="color:#66d9ef">not&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">primary&lt;/span> &lt;span style="color:#66d9ef">key&lt;/span> (&lt;span style="color:#f92672">`&lt;/span>id&lt;span style="color:#f92672">`&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)engine&lt;span style="color:#f92672">=&lt;/span>innodb &lt;span style="color:#66d9ef">default&lt;/span> charset&lt;span style="color:#f92672">=&lt;/span>utf8;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="drop--删除数据库或者表">drop # 删除数据库或者表&lt;/h2>
&lt;p>&lt;strong>drop {database|table} NAME;&lt;/strong>&lt;/p>
&lt;h2 id="truncate--清空数据">truncate # 清空数据&lt;/h2>
&lt;p>EXAMPLE&lt;/p>
&lt;ul>
&lt;li>truncate table inventory; #清空 emp 表，这个命令删除上万条记录特别快，因为他不记录日志&lt;/li>
&lt;/ul>
&lt;h2 id="alter--修改数据库或者数据表">alter # 修改数据库或者数据表&lt;/h2>
&lt;p>&lt;strong>alter database NAME;&lt;/strong> #修改数据库的信息
&lt;strong>alter table NAME;&lt;/strong> #修改数据表的信息
EXAMPLE&lt;/p>
&lt;ul>
&lt;li>alter table inventory add column &lt;code>create_time&lt;/code> timestamp; #修改 inventory 表，添加名为 create_time 的列&lt;/li>
&lt;li>alter table inventory drop column &lt;code>create_time&lt;/code> #删除 inventory 表中名为 create_time 的列&lt;/li>
&lt;/ul>
&lt;h1 id="数据操作语句">数据操作语句&lt;/h1>
&lt;p>详见《&lt;a href="https://desistdaydream.github.io/docs/IT%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/2.%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE/SQL/%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C%E8%AF%AD%E5%8F%A5.md">数据操作语句&lt;/a>》&lt;/p>
&lt;h1 id="事务和锁定语句">事务和锁定语句&lt;/h1>
&lt;h1 id="复制语句">复制语句&lt;/h1>
&lt;h1 id="prepared预处理-语句">Prepared(预处理) 语句&lt;/h1>
&lt;h1 id="compound复合-语句">Compound(复合) 语句&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://dev.mysql.com/doc/refman/8.0/en/sql-compound-statements.html">MySQL 官方文档，SQL 语句-复合语句&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h2 id="控制结构语句">控制结构语句&lt;/h2>
&lt;h3 id="casehttpsdevmysqlcomdocrefman80encasehtml">&lt;a href="https://dev.mysql.com/doc/refman/8.0/en/case.html">case&lt;/a>&lt;/h3>
&lt;h3 id="if">if&lt;/h3>
&lt;h1 id="数据库管理语句">数据库管理语句&lt;/h1>
&lt;h2 id="show--显示信息">show # 显示信息&lt;/h2>
&lt;p>显示有关数据库、表、列的信息，或有关服务器状态的信息。&lt;/p>
&lt;h3 id="example-1">EXAMPLE&lt;/h3>
&lt;ul>
&lt;li>查看创建 test 数据库的 sql 语句
&lt;ul>
&lt;li>show create database test;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>查看创建 test 表的 sql 语句
&lt;ul>
&lt;li>show create table test;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>显示数据库的状态信息
&lt;ul>
&lt;li>show status;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="实用程序语句">实用程序语句&lt;/h1>
&lt;h2 id="use--使用指定数据库作为后续-sql-执行的目标库">use # 使用指定数据库作为后续 SQL 执行的目标库&lt;/h2>
&lt;h1 id="特殊符号">特殊符号&lt;/h1>
&lt;h2 id="heading">@&lt;/h2>
&lt;p>声明变量、调用变量&lt;/p>
&lt;h1 id="其他">其他&lt;/h1>
&lt;p>创建一个 utf8mb4 类型的数据库
create database db2 DEFAULT CHARACTER SET utf8mb4;
创建表
CREATE TABLE students (id int UNSIGNED NOT NULL PRIMARY KEY,name VARCHAR（20）NOT NULL,age tinyint UNSIGNED);&lt;/p>
&lt;p>为 emp 表添加记录(有 id，name，sex，age 字段)
insert into emp (id,name,sex,age) values(1,&amp;lsquo;xiaoming&amp;rsquo;,&amp;rsquo;m&amp;rsquo;,30);&lt;/p>
&lt;p>修改 emp 表的内容（第几行第几个字段）
update emp set age=18 where id=4;&lt;/p>
&lt;p>批量执行 sql 程序
mysql &amp;lt; hellodb_innodb.sql&lt;/p>
&lt;p>备注：也可不进入数据库的情况下查看数据库
mysql -e &amp;lsquo;show databases&amp;rsquo;&lt;/p></description></item><item><title>Docs: SQL</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/2.%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE/sql/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/2.%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE/sql/</guid><description/></item><item><title>Docs: SQLite</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/2.%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE/sqlite/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/2.%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE/sqlite/</guid><description>
&lt;h1 id="概述">概述&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/sqlite/sqlite">GitHub 项目，sqlite/sqlite&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.sqlite.org/index.html">官网&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/SQLite">Wiki,SQLite&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>SQLite 是一种 C 语言库，实现小型，快速，自有，高可靠性，全功能，SQL 数据库引擎。 SQLite 是世界上最常用的数据库引擎。 SQLite 内置于所有移动电话和大多数计算机中，并捆绑在人们每天使用的无数其他应用程序内。更多信息&amp;hellip;&lt;/p>
&lt;p>SQLite 文件格式是稳定的，跨平台和向后兼容的，开发人员承诺通过 2050 年保持这种方式。SQLite 数据库文件通常用作传输系统之间的丰富内容作为数据的长期存档格式。主动使用中有超过 1 万亿（1E12）SQLite 数据库&lt;/p>
&lt;p>用白话说，SQLite 通常嵌入在其他程序中，并且 SQLite 存储的数据信息一般只在一个文件中，使用起来非常方便。&lt;/p>
&lt;p>通过 sqlite 内置的 sqlite_master 表查看用户创建的表的信息&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">#&lt;/span> sqlite_master &lt;span style="color:#960050;background-color:#1e0010">是一个隐藏的表，维护了&lt;/span> sqlite &lt;span style="color:#960050;background-color:#1e0010">数据库自身的数据信息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sqlite&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">select&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#66d9ef">from&lt;/span> sqlite_master &lt;span style="color:#66d9ef">where&lt;/span> &lt;span style="color:#66d9ef">type&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;table&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">type&lt;/span> name tbl_name rootpage &lt;span style="color:#66d9ef">sql&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">---------- ---------- ---------- ---------- ------------------------------------------
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">table&lt;/span> memos memos &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#66d9ef">CREATE&lt;/span> &lt;span style="color:#66d9ef">TABLE&lt;/span> memos(text, priority INTEGER)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="sqlite-命令行工具">sqlite 命令行工具&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://manpages.ubuntu.com/manpages/jammy/en/man1/sqlite3.1.html">Ubuntu Manual,sqlite3(1)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>现阶段通常使用 sqlite3 工具，这个工具可以对接 SQLite 版本 3 的接口。sqlite3 有“交互模式”或“命令行模式”两种模式。&lt;/p>
&lt;h2 id="syntax语法">Syntax(语法)&lt;/h2>
&lt;p>&lt;strong>sqlite3 [OPTIONS] [DatabaseFile] [SQL]&lt;/strong>
SQLite 与 MySQL 不太一样，一个文件是一个数据库。&lt;/p>
&lt;h2 id="命令行模式">命令行模式&lt;/h2>
&lt;p>我们可以通过命令行模式查询数据，并且在直接设定输出格式&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">$&lt;/span> sqlite3 &lt;span style="color:#f92672">-&lt;/span>header &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#66d9ef">column&lt;/span> mydata.db &lt;span style="color:#e6db74">&amp;#39;select * from memos;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>text priority
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">--------------------------- ----------
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>deliver project description &lt;span style="color:#ae81ff">10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lunch &lt;span style="color:#66d9ef">with&lt;/span> Christine &lt;span style="color:#ae81ff">100&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>OPTIONS&lt;/strong>
sqlite3 的很多选项与交互模式中的点命令具有相同的效果&lt;/p>
&lt;ul>
&lt;li>&lt;strong>-column&lt;/strong> # 以列模式输出查询结果&lt;/li>
&lt;li>&lt;strong>-header&lt;/strong> # 输出查询结果时，显示标头&lt;/li>
&lt;/ul>
&lt;h2 id="交互模式">交互模式&lt;/h2>
&lt;p>使用 &lt;code>sqlite3 DataBase&lt;/code> 命令指定数据库文件即可连接到数据库，并启动交互模式。如果数据库文件不存在，则会自动创建后连接。下面是一个最基本的使用示例，执行了 创建表、插入数据、查询数据 这几个操作：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">$&lt;/span> sqlite3 mydata.db
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SQLite &lt;span style="color:#66d9ef">version&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>.&lt;span style="color:#ae81ff">31&lt;/span>.&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#ae81ff">2020&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">01&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">27&lt;/span> &lt;span style="color:#ae81ff">19&lt;/span>:&lt;span style="color:#ae81ff">55&lt;/span>:&lt;span style="color:#ae81ff">54&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Enter &lt;span style="color:#e6db74">&amp;#34;.help&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#66d9ef">usage&lt;/span> hints.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sqlite&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">create&lt;/span> &lt;span style="color:#66d9ef">table&lt;/span> memos(text, priority INTEGER);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sqlite&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">insert&lt;/span> &lt;span style="color:#66d9ef">into&lt;/span> memos &lt;span style="color:#66d9ef">values&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;deliver project description&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">10&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sqlite&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">insert&lt;/span> &lt;span style="color:#66d9ef">into&lt;/span> memos &lt;span style="color:#66d9ef">values&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;lunch with Christine&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">100&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sqlite&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">select&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#66d9ef">from&lt;/span> memos;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>deliver project description&lt;span style="color:#f92672">|&lt;/span>&lt;span style="color:#ae81ff">10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lunch &lt;span style="color:#66d9ef">with&lt;/span> Christine&lt;span style="color:#f92672">|&lt;/span>&lt;span style="color:#ae81ff">100&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="点命令">点命令&lt;/h3>
&lt;p>sqlite3 的交互模式有一组 &lt;strong>Meta-commands(元命令)&lt;/strong> 用于 控制输出格式、检查当前连接的数据库文件、对已连接的数据库文件执行管理操作(e.g.重建索引、等等)。所有的元命令始终以 &lt;code>.&lt;/code> 符号开头，所以以可以称为 &lt;strong>Dot-commands(点命令)&lt;/strong>。比如，我可以通过如下方式让 select 查询输出得更加人类可读：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>sqlite&lt;span style="color:#f92672">&amp;gt;&lt;/span> .header &lt;span style="color:#66d9ef">on&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sqlite&lt;span style="color:#f92672">&amp;gt;&lt;/span> .&lt;span style="color:#66d9ef">mode&lt;/span> &lt;span style="color:#66d9ef">column&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sqlite&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">select&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#66d9ef">from&lt;/span> memos;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>text priority
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">--------------------------- ----------
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>deliver project description &lt;span style="color:#ae81ff">10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lunch &lt;span style="color:#66d9ef">with&lt;/span> Christine &lt;span style="color:#ae81ff">100&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>所有可用的元命令可以通过 &lt;code>.help&lt;/code> 这个元命令查看&lt;/p>
&lt;ul>
&lt;li>**.databases **# 列出已连接的数据库的名称和文件的绝对路径&lt;/li>
&lt;li>&lt;strong>.header &amp;lt;on|off&amp;gt;&lt;/strong> # 输出查询结果时，是否显示标头&lt;/li>
&lt;li>&lt;strong>.separator &lt;!-- raw HTML omitted -->&lt;/strong> # 设置分隔符&lt;/li>
&lt;li>&lt;strong>.show&lt;/strong> # 显示所有配置的当前值&lt;/li>
&lt;li>&lt;strong>.tables [TABLE]&lt;/strong> # 列出所有表或指定的表&lt;/li>
&lt;li>&lt;strong>.width &amp;lt;NUM1 NUM2 &amp;hellip;&amp;gt;&lt;/strong> # 为 column 模式设置列宽&lt;/li>
&lt;/ul></description></item></channel></rss>