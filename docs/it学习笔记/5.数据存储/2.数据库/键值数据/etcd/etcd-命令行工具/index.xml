<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦 – Etcd 命令行工具</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/2.%E6%95%B0%E6%8D%AE%E5%BA%93/%E9%94%AE%E5%80%BC%E6%95%B0%E6%8D%AE/etcd/etcd-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/</link><description>Recent content in Etcd 命令行工具 on 断念梦</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/2.%E6%95%B0%E6%8D%AE%E5%BA%93/%E9%94%AE%E5%80%BC%E6%95%B0%E6%8D%AE/etcd/etcd-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: etcdctl user命令</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/2.%E6%95%B0%E6%8D%AE%E5%BA%93/%E9%94%AE%E5%80%BC%E6%95%B0%E6%8D%AE/etcd/etcd-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/etcdctl-user%E5%91%BD%E4%BB%A4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/2.%E6%95%B0%E6%8D%AE%E5%BA%93/%E9%94%AE%E5%80%BC%E6%95%B0%E6%8D%AE/etcd/etcd-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/etcdctl-user%E5%91%BD%E4%BB%A4/</guid><description>
&lt;h1 id="etcdctl-user-command-options-arguments--用户添加授予和撤消子命令">etcdctl user COMMAND [OPTIONS] [Arguments&amp;hellip;] # 用户添加，授予和撤消子命令&lt;/h1>
&lt;p>SubCommand 包括&lt;/p>
&lt;ul>
&lt;li>add # add a new user for the etcd cluster&lt;/li>
&lt;li>get # get details for a user&lt;/li>
&lt;li>list #list all current users&lt;/li>
&lt;li>remove #remove a user for the etcd cluster&lt;/li>
&lt;li>grant # grant roles to an etcd user&lt;/li>
&lt;li>revoke # revoke roles for an etcd user&lt;/li>
&lt;li>passwd # change password for a user&lt;/li>
&lt;/ul>
&lt;h2 id="etcdctl-user-add-user--为-etcd-集群添加用户">etcdctl user add USER # 为 etcd 集群添加用户&lt;/h2></description></item><item><title>Docs: etcdctl 命令行工具</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/2.%E6%95%B0%E6%8D%AE%E5%BA%93/%E9%94%AE%E5%80%BC%E6%95%B0%E6%8D%AE/etcd/etcd-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/etcdctl-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/2.%E6%95%B0%E6%8D%AE%E5%BA%93/%E9%94%AE%E5%80%BC%E6%95%B0%E6%8D%AE/etcd/etcd-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/etcdctl-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/</guid><description>
&lt;h1 id="概述">概述&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>官方文档：&lt;a href="https://github.com/etcd-io/etcd/tree/master/etcdctl">https://github.com/etcd-io/etcd/tree/master/etcdctl&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://etcd.io/docs/latest/integrations/">etcd 可用的库和客户端&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h1 id="etcdctl-globaloptions-command-commandoptions-arguments">etcdctl [GlobalOptions] COMMAND [CommandOptions] [Arguments&amp;hellip;]&lt;/h1>
&lt;p>使用说明：&lt;/p>
&lt;ol>
&lt;li>export ETCDCTL_API=3 使用该命令使得 etcdctl 通过 v3 版本来进行操作&lt;/li>
&lt;li>如果在 etcd 的配置文件中的 Security 段落，开启了验证证书，则在使用命令时，需要使用&amp;ndash;cert、&amp;ndash;key、&amp;ndash;cacert 选项来指定验证所需证书，否则无法操纵服务器
&lt;ol>
&lt;li>v2 版本中使用如下方式 etcdctl &amp;ndash;key-file=/etc/kubernetes/pki/etcd/peer.key &amp;ndash;cert-file=/etc/kubernetes/pki/etcd/peer.crt &amp;ndash;ca-file=/etc/kubernetes/pki/etcd/ca.crt &amp;ndash;endpoints=&amp;ldquo;https://IP:PORT&amp;rdquo; COMMAND&lt;/li>
&lt;li>v3 版本中使用如下方式 etcdctl &amp;ndash;key=/etc/kubernetes/pki/etcd/peer.key &amp;ndash;cert=/etc/kubernetes/pki/etcd/peer.crt &amp;ndash;cacert=/etc/kubernetes/pki/etcd/ca.crt &amp;ndash;endpoints=&amp;ldquo;https://IP:PORT&amp;rdquo; COMMAND&lt;/li>
&lt;li>在下面的 EXAMPLE 则不再输入认证相关参数，以便查阅方便。但是实际使用中需要使用，否则无法连接 etcd 服务端&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;h2 id="global-options">GLOBAL OPTIONS:&lt;/h2>
&lt;ul>
&lt;li>** &amp;ndash;cacert=/PATH/FILE** # 使用此 CA 包验证启用 TLS 的安全服务器的证书。即 etcd 的 ca，用该 ca 来验证 cert 选项中提供的证书是否正确&lt;/li>
&lt;li>**&amp;ndash;cert=/PATH/FILE **# 使用指定的 TLS 证书文件鉴定客户端是否安全。即 etcd 的 peer 证书，peer 证书对于 etcdctl 来说就是与它交互的服务端的证书&lt;/li>
&lt;li>&lt;strong>&amp;ndash;key=/PATH/FILE&lt;/strong> # 使用指定的 TLS 证书的密钥文件鉴定客户端是否安全。即 etcd 的 peer 证书的私钥&lt;/li>
&lt;li>**&amp;ndash;endpoints=[IP1:PORT1,IP2:PORT2,&amp;hellip;..] **# 指定后端服务器的 IP 和 Port&lt;/li>
&lt;li>&amp;ndash;command-timeout=5s # timeout for short running command (excluding dial timeout)&lt;/li>
&lt;li>&amp;ndash;debug[=false] # enable client-side debug logging&lt;/li>
&lt;li>&amp;ndash;dial-timeout=2s # dial timeout for client connections&lt;/li>
&lt;li>&amp;ndash;hex[=false] # print byte strings as hex encoded strings&lt;/li>
&lt;li>&amp;ndash;insecure-skip-tls-verify[=false # skip server certificate verification&lt;/li>
&lt;li>&amp;ndash;insecure-transport[=true] # disable transport security for client connections&lt;/li>
&lt;li>&amp;ndash;user=&amp;quot;&amp;quot; # username[:password] for authentication (prompt if password is not supplied)&lt;/li>
&lt;li>-w, &amp;ndash;write-out=&amp;ldquo;simple&amp;rdquo; # 指定输出内容的格式，格式可有有这么几个 (fields, json, protobuf, simple, table)(一般常用 json)
&lt;ul>
&lt;li>Note：输出的 json 格式只有一行，可以使用 jq 程序来对 json 进行格式化，可以把每个{}分行，以便人类阅读，下图为样例&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/miobxe/1616136392283-c0b50823-df6d-49d3-8d85-2aed1c7de3e0.jpeg" alt="">&lt;/p>
&lt;h1 id="子命令详解">子命令详解&lt;/h1>
&lt;h1 id="base-基本">Base 基本&lt;/h1>
&lt;h2 id="get--获取键或者键的范围gets-the-key-or-a-range-of-keys">get # 获取键或者键的范围。Gets the key or a range of keys&lt;/h2>
&lt;p>&lt;strong>etcdctl get [OPTIONS] [Range-End]&lt;/strong>
OPTIONS&lt;/p>
&lt;ul>
&lt;li>&amp;ndash;consistency=&amp;ldquo;l&amp;rdquo; Linearizable(l) or Serializable(s)&lt;/li>
&lt;li>&amp;ndash;from-key[=false] Get keys that are greater than or equal to the given key using byte compare&lt;/li>
&lt;li>**&amp;ndash;keys-only[=false] **# 仅获取键而不显示该键所对应的值&lt;/li>
&lt;li>&amp;ndash;limit=0 #Maximum number of results&lt;/li>
&lt;li>&amp;ndash;order=&amp;quot;&amp;quot; #Order of results; ASCEND or DESCEND (ASCEND by default)&lt;/li>
&lt;li>&lt;strong>&amp;ndash;prefix[=false]&lt;/strong> # 获取 KEY 前缀匹配到的所有的键。前缀就是键名的从开头开始的的字符串。可以指定&lt;code>''&lt;/code>匹配所有 KEY&lt;/li>
&lt;li>&amp;ndash;print-value-only[=false] Only write values when using the &amp;ldquo;simple&amp;rdquo; output format&lt;/li>
&lt;li>&amp;ndash;rev=0 Specify the kv revision&lt;/li>
&lt;li>&amp;ndash;sort-by=&amp;quot;&amp;quot; Sort target; CREATE, KEY, MODIFY, VALUE, or VERSION&lt;/li>
&lt;/ul>
&lt;p>EXAMPLE&lt;/p>
&lt;ul>
&lt;li>etcdctl get &amp;ndash;prefix &amp;ndash;keys-only &amp;rsquo;&amp;rsquo; #获取所有键，并且只显示键名。&lt;/li>
&lt;li>etcdctl get &amp;ndash;prefix &amp;ndash;keys-only / #获取以&lt;code>/&lt;/code>开头的所有键，并且只显示键名。&lt;/li>
&lt;li>etcdv3 get /registry/events/kube-system/kube-flannel-ds-amd64-47cnw.15966b23d2027e45 -w=json | jq . #以 json 格式输出指定键的值，并使用 jq 命令对 json 内容进行格式化输出以便人类阅读&lt;/li>
&lt;/ul>
&lt;p>put # 写入一个 key/value 到 etcd 存储中。&lt;/p>
&lt;p>del # 删除指定的 key 或一个范围的 keys&lt;/p>
&lt;p>txn Txn processes all the requests in one transaction&lt;/p>
&lt;p>compaction Compacts the event history in etcd&lt;/p>
&lt;h1 id="alarm--etcd-中告警相关命令">alarm # etcd 中告警相关命令&lt;/h1>
&lt;h2 id="alerm-disarm--解除所有告警">alerm disarm # 解除所有告警&lt;/h2>
&lt;h2 id="alarm-list--列出-etcd-中所有的告警">alarm list # 列出 etcd 中所有的告警&lt;/h2>
&lt;h1 id="check--检查-etcd-的性能">check # 检查 etcd 的性能&lt;/h1>
&lt;h2 id="check-datascale--check-the-memory-usage-of-holding-data-for-different-workloads-on-a-given-server-endpoint">check datascale # Check the memory usage of holding data for different workloads on a given server endpoint.&lt;/h2>
&lt;h2 id="check-perf--检查-etcd-的性能">check perf # 检查 etcd 的性能&lt;/h2>
&lt;p>检查 60 秒的 etcd 群集性能。经常运行检查性能可以创建一个较大的键空间历史记录，可以使用&amp;ndash;auto-compact 和&amp;ndash;auto-defrag 选项（如下所述）对其进行自动压缩和碎片整理。&lt;/p>
&lt;p>OPTIONS&lt;/p>
&lt;ol>
&lt;li>--load # 性能检查的工作负载模型。可接受的工作负载：s(small 小)，m(medium 中)，l(large 大)，xl(x 大)&lt;/li>
&lt;/ol>
&lt;h1 id="defrag--对指定-endpoints-的-etcd-成员的存储空间进行碎片整理">defrag # 对指定 endpoints 的 etcd 成员的存储空间进行碎片整理&lt;/h1>
&lt;h1 id="endpoint--用于查询-etcd-中各个端点的信息">endpoint # 用于查询 etcd 中各个端点的信息&lt;/h1>
&lt;p>endpoint health #Checks the healthiness of endpoints specified in &lt;code>--endpoints&lt;/code> flag&lt;/p>
&lt;p>endpoint status # 打印出 &amp;ndash;endpoints 标志中指定的 endpoints 状态&lt;/p>
&lt;p>endpoint hashkv #Prints the KV history hash for each endpoint in &amp;ndash;endpoints&lt;/p>
&lt;h1 id="lease-相关命令">lease 相关命令&lt;/h1>
&lt;p>lease grant Creates leases&lt;/p>
&lt;p>lease revoke Revokes leases&lt;/p>
&lt;p>lease timetolive Get lease information&lt;/p>
&lt;p>lease keep-alive Keeps leases alive (renew)&lt;/p>
&lt;h1 id="member--用于管理-etcd-集群中的成员">member # 用于管理 etcd 集群中的成员&lt;/h1>
&lt;p>member add # 将新成员作为新对等方引入 etcd 集群中。&lt;/p>
&lt;p>member remove # 从参与集群共识的成员中删除 etcd 集群的成员。&lt;/p>
&lt;p>member update # 为 etcd 集群中现有成员设置对等 URL。&lt;/p>
&lt;p>member list # 列出集群中的所有成员&lt;/p>
&lt;p>EXAMPLE&lt;/p>
&lt;ol>
&lt;li>etcdctl member list #列出 etcd 集群中的成员&lt;/li>
&lt;li>etcdctl member list &amp;ndash;write-out=json | jq . #通过 json 可以看到 etcd 集群中，哪个是节点是 leader&lt;/li>
&lt;/ol>
&lt;h1 id="snapshot-快照相关命令用来让用户对-etcd-的数据进行备份与恢复">snapshot 快照相关命令。用来让用户对 etcd 的数据进行备份与恢复。&lt;/h1>
&lt;p>&lt;strong>etcdctl snapshot save&lt;/strong> # 存储一个 etcd 节点后端快照到指定文件。Stores an etcd node backend snapshot to a given file
EXAMPLE&lt;/p>
&lt;ul>
&lt;li>etcdctl snapshot save snapshot.db #备份指定后端节点的 etcd 数据到 snapshot.db 文件&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>etcdctl snapshot restore [OPTIONS]&lt;/strong> # 恢复一个 etcd 成员的快照到一个 etcd 的文件夹中。
OPTIONS&lt;/p>
&lt;ul>
&lt;li>**&amp;ndash;data-dir=/PATH/FILE **# 把指定的路径作为 snapshot 文件的恢复目录，会把数据写到指定的目录下。Path to the data directory&lt;/li>
&lt;/ul>
&lt;p>EXAMPLE&lt;/p>
&lt;ul>
&lt;li>etcdctl snapshot restore snapshot.db &amp;ndash;data-dir=/var/lib/etcd/ #从 snapshot.db 文件中恢复数据到/var/lib/etcd/目录下&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>etcdctl snapshot status&lt;/strong> # 取指定文件的后端快照状态。Gets backend snapshot status of a given file
EXAMPLE&lt;/p>
&lt;ul>
&lt;li>etcdv3 snapshot status snapshot.db #获取 snapshot.db 的状态，包括键/值对有多少，占多少空间&lt;/li>
&lt;/ul>
&lt;h1 id="其他">其他&lt;/h1>
&lt;p>make-mirror Makes a mirror at the destination etcd cluster&lt;/p>
&lt;p>migrate Migrates keys in a v2 store to a mvcc store&lt;/p>
&lt;p>lock Acquires a named lock&lt;/p>
&lt;p>elect Observes and participates in leader election&lt;/p>
&lt;p>auth enable Enables authentication&lt;/p>
&lt;p>auth disable Disables authentication&lt;/p>
&lt;h2 id="user--etcd-用户相关的命令">user # etcd 用户相关的命令&lt;/h2>
&lt;p>详见：&lt;a href="https://www.yuque.com/go/doc/33190532">etcdctl user 命令&lt;/a>&lt;/p>
&lt;h2 id="role--etcd-的-role-相关的命令">role # etcd 的 role 相关的命令&lt;/h2>
&lt;p>role add #Adds a new role&lt;/p>
&lt;p>role delete #Deletes a role&lt;/p>
&lt;p>role get #Gets detailed information of a role&lt;/p>
&lt;p>role list #Lists all roles&lt;/p>
&lt;p>role grant-permission #Grants a key to a role&lt;/p>
&lt;p>role revoke-permission #Revokes a key from a role&lt;/p>
&lt;p>watch Watches events stream on keys or prefixes&lt;/p></description></item></channel></rss>