<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦 – 1.存储</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/1.%E5%AD%98%E5%82%A8/</link><description>Recent content in 1.存储 on 断念梦</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/1.%E5%AD%98%E5%82%A8/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: 存储的基础设施架构</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/1.%E5%AD%98%E5%82%A8/%E5%AD%98%E5%82%A8%E7%9A%84%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD%E6%9E%B6%E6%9E%84/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/1.%E5%AD%98%E5%82%A8/%E5%AD%98%E5%82%A8%E7%9A%84%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD%E6%9E%B6%E6%9E%84/</guid><description>
&lt;h1 id="概述">概述&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;a href="https://www.jianshu.com/p/59ba16e6a764">简书&lt;/a>、&lt;a href="https://zhuanlan.zhihu.com/p/166289089">知乎原文&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>随着企业网络应用数据量的加大，企业已经感觉到存储容量和性能落后于网络应用发展需求。在这种应用条件下满足用户的存储需求的技术应运而生，&lt;strong>DAS、NAS、SAN&lt;/strong> 三种存储架构成为当时主流的存储技术。&lt;/p>
&lt;p>并且，在很长很长的一段时间里，这三种架构几乎统治了数据存储市场。所有行业用户的数据存储需求，都是在这三者中进行选择。然而，随着时代的发展，传统的存储开始暴露出他们的问题，价格昂贵、不易扩展、等等。这时 &lt;strong>DS(分布式存储)&lt;/strong> 粉墨登场。&lt;/p>
&lt;p>分布式存储 不但可以提供 DAS、NAS、SAN 三种架构可以提供的能力，比如 &lt;strong>块存储&lt;/strong> 和 &lt;strong>文件存储&lt;/strong> 能力，还可以提供一种新兴的 &lt;strong>对象存储&lt;/strong> 的能力&lt;/p>
&lt;h1 id="存储架构分类">存储架构分类&lt;/h1>
&lt;p>**一、集中式存储 **又称为 传统的存储。从名字上可以看出来，就是把存储集中起来，统一管理。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Direct Attached Storage(直连式存储，简称 DAS)&lt;/strong>
&lt;ul>
&lt;li>基本都是商业解决方案，直接买硬件。其实，IDE、SATA、SCSI、SAS，甚至 USB，都可以算是 DAS。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Fabric Attached Storage(网络化存储)&lt;/strong>
&lt;ul>
&lt;li>&lt;strong>Network Attached Storage(网络附加存储，简称 NAS)&lt;/strong>
&lt;ul>
&lt;li>以 NFS 和 SMB 协议的实现程序为代表&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Stoarge Area Network(存储区域网络，简称 SAN)&lt;/strong>
&lt;ul>
&lt;li>基本都是商业解决方案，直接买硬件&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>二、分布式存储&lt;/strong> 又称为 新型的存储。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>中间控制节点架构&lt;/strong>
&lt;ul>
&lt;li>以 HDFS 为代表&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>完全无中心架构-计算模式&lt;/strong>
&lt;ul>
&lt;li>以 Ceph 为代表&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>完全无中心架构-一致性哈希&lt;/strong>
&lt;ul>
&lt;li>以 Swift 为代表&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>DAS 存储一般应用在中小企业，与计算机采用直连方式，NAS 存储则通过以太网添加到计算机上，SAN 存储则使用 FC 接口，提供性能更加的存储。NAS 与 SAN 的主要区别体现在&lt;strong>操作系统&lt;/strong>在什么位置，如下图所示。
&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/frxt1g/1616133322347-476edd1b-4f58-4947-bab2-721c98247201.png" alt="">&lt;/p>
&lt;h2 id="direct-attachedstorage直连式存储简称-das">Direct-AttachedStorage(直连式存储，简称 DAS)&lt;/h2>
&lt;ul>
&lt;li>存储设备是通过电缆（通常是 SCSI 接口电缆）直接挂到服务器总线上。&lt;/li>
&lt;li>DAS 方案中外接式存储设备目前主要是指 RAID、JBOD 等。&lt;/li>
&lt;/ul>
&lt;p>DAS 存储在我们生活中是非常常见的，尤其是在中小企业应用中，DAS 是最主要的应用模式，&lt;strong>存储系统被直连到应用的服务器中&lt;/strong>，在中小企业中，许多的数据应用是必须安装在直连的 DAS 存储器上。&lt;/p>
&lt;p>DAS 存储更多的依赖服务器主机操作系统进行数据的 IO 读写和存储维护管理，数据备份和恢复要求占用服务器主机资源(包括 CPU、系统 IO 等)，数据流需要回流主机再到服务器连接着的磁带机(库)，数据备份通常占用服务器主机资源 20-30%,因此许多企业用户的日常数据备份常常在深夜或业务系统不繁忙时进行，以免影响正常业务系统的运行。直连式存储的数据量越大，备份和恢复的时间就越长，对服务器硬件的依赖性和影响就越大。&lt;/p>
&lt;p>直连式存储与服务器主机之间的连接通道通常采用 SCSI 连接，随着服务器 CPU 的处理能力越来越强，存储硬盘空间越来越大，阵列的硬盘数量越来越多，SCSI 通道将会成为 IO 瓶颈;服务器主机 SCSI ID 资源有限，能够建立的 SCSI 通道连接有限。&lt;/p>
&lt;p>无论直连式存储还是服务器主机的扩展，从一台服务器扩展为多台服务器组成的群集，或存储阵列容量的扩展，都会造成业务系统的停机，从而给企业带来经济损失，对于银行、电信、传媒等行业 7×24 小时服务的关键业务系统，这是不可接受的。并且直连式存储或服务器主机的升级扩展，只能由原设备厂商提供，往往受原设备厂商限制。&lt;/p>
&lt;h2 id="network-attached-storage网络附加存储简称-nas">Network Attached Storage(网络附加存储，简称 NAS)&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>存储设备通过标准的网络拓扑结构(例如以太网)连接&lt;/p>
&lt;/li>
&lt;li>
&lt;p>NAS 是在网络中放置一个单独的存储服务器，此存储服务器开启网络共享。&lt;/p>
&lt;pre>&lt;code>NAS存储也通常被称为附加存储，顾名思义，就是存储设备通过**标准的网络拓扑结构(例如以太网)**添加到一群计算机上。NAS是文件级的存储方法，它的重点在于帮助工作组和部门级机构解决迅速增加存储容量的需求。如今用户采用NAS较多的功能是用来文档共享、图片共享、电影共享等等，而且随着云计算的发展，一些NAS厂商也推出了云存储功能，大大方便了企业和个人用户的使用。
NAS产品是真正即插即用的产品。NAS设备一般支持多计算机平台，用户通过网络支持协议可进入相同的文档，因而NAS设备无需改造即可用于混合Unix/Windows NT局域网内，同时NAS的应用非常灵活。
但NAS有一个关键性问题，即备份过程中的带宽消耗。与将备份数据流从LAN中转移出去的存储区域网(SAN)不同，NAS仍使用网络进行备份和恢复。NAS 的一个缺点是它将存储事务由并行SCSI连接转移到了网络上。这就是说LAN除了必须处理正常的最终用户传输流外，还必须处理包括备份操作的存储磁盘请求。
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;h2 id="storage-area-network存储区域网络简称-san">Storage Area Network(存储区域网络，简称 SAN)&lt;/h2>
&lt;p>SAN 连接又分 iSCSI 标准、SAS 标准、FC 协议。这种连接需要单独的存储产品。可以通过交换机连接&lt;/p>
&lt;pre>&lt;code> 存储区域网络，从名字上我们也可以看出，这个是通过**光纤通道交换机**连接存储阵列和服务器主机，最后成为一个专用的存储网络。SAN经过十多年历史的发展，已经相当成熟，成为业界的事实标准(但各个厂商的光纤交换技术不完全相同，其服务器和SAN存储有兼容性的要求)。
SAN提供了一种与现有LAN连接的简易方法，并且通过同一物理通道支持广泛使用的SCSI和IP协议。SAN不受现今主流的、基于SCSI存储结构的布局限制。特别重要的是，随着存储容量的爆炸性增长，SAN允许企业独立地增加它们的存储容量。SAN的结构允许任何服务器连接到任何存储阵列，这样不管数据置放在那里，服务器都可直接存取所需的数据。因为采用了光纤接口，SAN还具有更高的带宽。
因为SAN解决方案是从基本功能剥离出存储功能，所以运行备份操作就无需考虑它们对网络总体性能的影响。SAN方案也使得管理及集中控制实现简化，特别是对于全部存储设备都集群在一起的时候。最后一点，光纤接口提供了10公里的连接长度，这使得实现物理上分离的、不在机房的存储变得非常容易。
&lt;/code>&lt;/pre>
&lt;h2 id="distributed-storage分布式存储简称-ds">Distributed Storage(分布式存储，简称 DS)&lt;/h2>
&lt;h1 id="存储能力分类">存储能力分类&lt;/h1>
&lt;p>块存储、文件存储、对象存储 这三个词是指：存储架构所能提供的一种&lt;strong>存储能力&lt;/strong>。&lt;/p>
&lt;p>在 &lt;strong>DAS 和 SAN&lt;/strong> 中，存储资源就像一块一块的硬盘，直接挂载在主机上，我们称之为 &lt;strong>块存储&lt;/strong>。
而在 &lt;strong>NAS&lt;/strong> 中，呈现出来的是一个基于文件系统的目录架构，有目录、子目录、孙目录、文件，我们称之为 &lt;strong>文件存储&lt;/strong>。
在 &lt;strong>DS&lt;/strong> 中，可以根据具体实现方式，提供 &lt;strong>块存储、文件存储、对象存储&lt;/strong>&lt;/p>
&lt;h1 id="接口存储技术发展的一些基本概念">接口、存储技术发展的一些基本概念&lt;/h1>
&lt;p>&lt;strong>IDE&lt;/strong>、 &lt;strong>SATA&lt;/strong>、 &lt;strong>SCSI&lt;/strong>、 &lt;strong>SAS&lt;/strong>、 &lt;strong>光纤通道&lt;/strong> 前两种主要是个人电脑上用的，IDE 接口现在很少用了，但老电脑还在用，后面三种主要用在服务器上。&lt;/p>
&lt;p>ATA 硬盘一般使用 IDE 接口，分为 PATA 硬盘（即 parallelATA,并行 ATA 硬盘接口规范）和 SATA 硬盘（即 serialATA，串行 ATA 硬盘接口规范)。&lt;/p>
&lt;p>SATA 其实是 scsi 体系里抽取出的一部分，也就是说 scsi 能兼容 sata，但 sata 反过来就不行。scsi 本质上还是为服务器准备的磁盘系统，它非常强调所有的控制可以由 scsi 体系自己完成，不需要 cpu 控制，所以 scsi 非常省资源，而 sata 需要 cpu 介入控制传输过程&lt;/p>
&lt;p>SCSI 和 iSCSI 二者不是一个层面的概念。
Scsi 技术是一种接口，小型计算机系统接口。服务器上用的。&lt;/p>
&lt;p>iSCSI 技术是新储存技术，供硬件设备使用的可以在 IP 协议的上层运行的 SCSI 指令集，这种指令集合可以实现在 IP 网络上运行 SCSI 协议，使其能够在诸如高速千兆以太网上进行路由选择。将现有 SCSI 接口与以太网络(Ethernet)技术结合，使服务器可与使用 IP 网络的储存装置互相交换资料。&lt;/p>
&lt;p>SAS 是新一代的 SCSI 技术，和 SATA 硬盘相同，都是采用串行技术以获得更高的传输速度，并通过缩短连结线改善内部空间等。SAS 是并行 SCSI 接口之后开发出的全新接口。兼容 SATA。&lt;/p>
&lt;h1 id="架构对比">架构对比&lt;/h1>
&lt;h2 id="dasnassan-三种存储技术的优缺点">DAS、NAS、SAN 三种存储技术的优缺点&lt;/h2>
&lt;p>&lt;strong>DAS(直接附加存储设备：Direct Attached Storage)&lt;/strong>
       直接附加存储是指将存储设备通过 SCSI 接口直接连接到一台服务器上使用。
【优点】
       DAS 购置成本低，配置简单，使用过程和使用本机硬盘并无太大差别，对于服务器的要求仅仅是一个外接的 SCSI 口，因此对于小型企业很有吸引力。
【缺点】
      (1)服务器本身容易成为系统瓶颈;
      (2)服务器发生故障，数据不可访问;
      (3)对于存在多个服务器的系统来说，设备分散，不便管理。同时多台服务器使用 DAS 时，存储空间不能在服务器之间动态分配，可能造成相当的资源浪费;
      (4)数据备份操作复杂。&lt;/p>
&lt;p>&lt;strong>NAS(网络附加存储服务器：Network Attached Storage)&lt;/strong>
       NAS 实际是一种带有瘦服务器的存储设备。这个瘦服务器实际是一台网络文件服务器。NAS 设备直接连接到 TCP/IP 网络上，网络服务器通过 TCP/IP 网络存取管理数据。
【优点】
      NAS 作为一种瘦服务器系统，易于安装和部署，管理使用也很方便。同时由于可以允许客户机不通过服务器直接在 NAS 中存取数据，因此对服务器来说可以减少系统开销。NAS 为异构平台使用统一存储系统提供了解决方案。由于 NAS 只需要在一个基本的磁盘阵列柜外增加一套瘦服务器系统，对硬件要求很低，软件成本也不高，甚至可以使用免费的 LINUX 解决方案，成本只比直接附加存储略高。
【缺点】
      (1)由于存储数据通过普通数据网络传输，因此易受网络上其它流量的影响。当网络上有其它大数据流量时会严重影响系统性能;
      (2)由于存储数据通过普通数据网络传输，因此容易产生数据泄漏等安全问题;
      (3)存储只能以文件方式访问，而不能像普通文件系统一样直接访问物理数据块，因此会在某些情况下严重影响系统效率，比如大型数据库就不能使用 NAS。&lt;/p>
&lt;p>&lt;strong>SAN(专用存储区域网络：Storage Area Network)&lt;/strong>
       SAN 实际是一种专门为存储建立的独立于 TCP/IP 网络之外的专用网络。
【优点】
       目前一般的 SAN 提供 2Gb/S 到 4Gb/S 的传输数率，同时 SAN 网络独立于数据网络存在，因此存取速度很快，另外 SAN 一般采用高端的 RAID 阵列，使 SAN 的性能在几种专业存储方案中傲视群雄。SAN 由于其基础是一个专用网络，因此扩展性很强，不管是在一个 SAN 系统中增加一定的存储空间还是增加几台使用存储空间的服务器都非常方便。通过 SAN 接口的磁带机，SAN 系统可以方便高效的实现数据的集中备份。SAN 作为一种新兴的存储方式，是未来存储技术的发展方向。
【缺点】
       (1)价格昂贵。不论是 SAN 阵列柜还是 SAN 必须的光纤通道交换机价格都是十分昂贵的，就连服务器上使用的光通道卡的价格也是不容易被小型商业企业所接受;
       (2)需要单独建立光纤网络，异地扩展比较困难。&lt;/p></description></item><item><title>Docs: 存储的基础设施架构</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/1.%E5%AD%98%E5%82%A8/%E5%AD%98%E5%82%A8%E7%9A%84%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD%E6%9E%B6%E6%9E%84/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/1.%E5%AD%98%E5%82%A8/%E5%AD%98%E5%82%A8%E7%9A%84%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD%E6%9E%B6%E6%9E%84/</guid><description/></item><item><title>Docs: 存储的能力</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/1.%E5%AD%98%E5%82%A8/%E5%AD%98%E5%82%A8%E7%9A%84%E8%83%BD%E5%8A%9B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/1.%E5%AD%98%E5%82%A8/%E5%AD%98%E5%82%A8%E7%9A%84%E8%83%BD%E5%8A%9B/</guid><description>
&lt;h1 id="概述">概述&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.zhihu.com/question/21536660">知乎&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>基于不同的 &lt;a href="https://www.yuque.com/go/doc/33184857">存储基础设施架构&lt;/a>，我们可以实现形形色色的&lt;strong>存储能力&lt;/strong>，每种存储能力，可以存放的数据内容各不相同。&lt;/p>
&lt;p>现阶段，可以提供的存储能力分为三种：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Block Storage(块存储)&lt;/strong>&lt;/li>
&lt;li>&lt;strong>File Storage(文件存储)&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Object Storage(对象存储)&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h2 id="块存储文件存储对象存储这三者的本质差别是什么">块存储、文件存储、对象存储这三者的本质差别是什么？&lt;/h2>
&lt;p>它们就是不同的接口。块存储就是最接近存储介质的接口，也就是包装最薄的，或者说没有包装。文件和对象存储都是对块存储的包装。可以简单认为对象存储就是不分层次的文件存储。或者把文件看作对象存储的进一步包装。&lt;/p>
&lt;h1 id="block-storage块存储">Block Storage(块存储)&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;a href="https://en.wikipedia.org/wiki/Block_(data_storage)">Wiki,Block&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>说白了就是硬盘&lt;/p>
&lt;h1 id="file-storage文件存储">File Storage(文件存储)&lt;/h1>
&lt;p>说白了就是文件系统&lt;/p>
&lt;h1 id="object-based-storage对象存储">Object Based Storage(对象存储)&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;a href="https://en.wikipedia.org/wiki/Object_storage">Wiki&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>说白了就是任何东西，对象可以是任何东西。&lt;/p>
&lt;p>**Object Based Storage(基于对象的存储，简称 OBS) **是一种为计算机存储数据的能力。通常由分布式存储架构来实现。&lt;/p>
&lt;p>与 File Storage 类似，只不过没有目录的层级结构，对象的获取，基于 RESTful 风格的 API 接口。&lt;/p>
&lt;p>但是与文件存储不同，对象存储中的数据不支持在存储设备上直接修改，必须要先 GET 到要修改的对象，在本地修改完成后，再 PUT 或 POST 回去。所以，并不适合需要频繁读写的数据(例如关系型数据库的数据)。&lt;/p>
&lt;p>而平时我们看到那些所谓的能在线修改的，其实是有一个客户端，我们在客户端操作，操作的时候，客户端是帮我们把对象 GET 出来的。&lt;/p>
&lt;h1 id="简单理解">简单理解&lt;/h1>
&lt;p>&lt;strong>1. 块存储&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>“虚拟座谈会”中王旭提到：块存储是给虚拟机用的。&lt;/p>
&lt;/blockquote>
&lt;p>这句话深刻地表达了什么是块存储。。不知道有没有被大家忽略过去。&lt;/p>
&lt;p>对块存储最简单的理解方法就是：看产品。&lt;/p>
&lt;p>例子：&lt;/p>
&lt;ul>
&lt;li>Amazon 的 EC2 中就有块存储，叫做 EBS (Elastic Block Storage)。&lt;/li>
&lt;/ul>
&lt;p>什么鬼？&lt;/p>
&lt;p>其实就是虚拟机挂载的一块虚拟磁盘。。。&lt;/p>
&lt;p>推而广之，你会发现，自己平时用的 VMware、VirtualBox 都可以创建虚拟磁盘。能够造出这个东西，且构造的东西能被当作磁盘去用的，就叫做块存储。&lt;/p>
&lt;p>再来一个例子：&lt;/p>
&lt;ul>
&lt;li>RedHat 的 Ceph 中块存储产品的命令行接口是： create image, list image, delete image&lt;/li>
&lt;li>阿里云、腾讯云同样有类似 EBS 的功能&lt;/li>
&lt;/ul>
&lt;p>所以楼上的各位中 chen yue, 大华云存储对块存储的理解都是对的。&lt;/p>
&lt;p>&lt;strong>2. 对象存储和文件存储&lt;/strong>
之所以将这两个放在一起说，是因为这两个和楼上杨志丰的解读类似，主要是 API 不同。。。&lt;/p>
&lt;p>对象存储：&lt;/p>
&lt;ul>
&lt;li>大多数对象存储的实现本质上是&lt;strong>键值对&lt;/strong>存储系统&lt;/li>
&lt;li>采用扁平化的管理方式(根据键，找到值)&lt;/li>
&lt;li>值可以是任何东西，可以是小文件(小二进制片段)，可以是大文件&lt;/li>
&lt;li>对象存储一般不支持追加写和更新，面向的是一次写入，多次读取的需求场景。&lt;/li>
&lt;li>多采用 RESTFul API&lt;/li>
&lt;/ul>
&lt;p>文件存储&lt;/p>
&lt;ul>
&lt;li>文件存储不考虑底层到底怎么实现的（很多其实就是对象存储上套一层目录管理层）&lt;/li>
&lt;li>采用目录结构管理数据&lt;/li>
&lt;li>一般要尽可能兼容 POSIX 文件系统 API&lt;/li>
&lt;/ul>
&lt;p>对于产品，仍然可以看 AWS 的相关内容。在对象存储方面，阿里云和腾讯云就有点扰乱概念了，里面频繁出现“管理海量文件”。。。那你到底是对象存储还是文件存储(虽然前面说了文件存储可以基于对象存储来做)&lt;/p>
&lt;p>另外还可以看 Ceph，这孩子将自己的产品封装成了块存储、对象存储、文件存储三种。&lt;/p>
&lt;h1 id="知乎回答">知乎回答&lt;/h1>
&lt;h2 id="回答一">回答一&lt;/h2>
&lt;p>这三者的本质差别是使用数据的“用户”不同：块存储的用户是可以读写块设备的软件系统，例如传统的文件系统、数据库；文件存储的用户是自然人；对象存储的用户则是其它计算机软件。&lt;/p>
&lt;p>首先要说明一下的是，这三个概念都是分布式存储中的概念，由不同的网络存储协议实现。不过“网络”和“存储”的结合本身会对解释这三个概念的本质差异带来不便，下面的解释中我会先解释存储本身，之后再结合网络来说明。&lt;/p>
&lt;h3 id="块存储">块存储&lt;/h3>
&lt;p>传统的文件系统，是直接访问存储数据的硬件介质的。介质不关心也无法去关心这些数据的组织方式以及结构，因此用的是最简单粗暴的组织方式：所有数据按照固定的大小分块，每一块赋予一个用于寻址的编号。以大家比较熟悉的机械硬盘为例，一块就是一个扇区，老式硬盘是 512 字节大小，新硬盘是 4K 字节大小。老式硬盘用柱面-磁头-扇区号（CHS，Cylinder-Head-Sector）组成的编号进行寻址，现代硬盘用一个逻辑块编号寻址（LBA，Logical Block Addressing）。所以，硬盘往往又叫块设备（Block Device）,当然，除了硬盘还有其它块设备，例如不同规格的软盘，各种规格的光盘，磁带等。&lt;/p>
&lt;p>至于哪些块组成一个文件，哪些块记录的是目录/子目录信息，这是文件系统的事情。不同的文件系统有不同的组织结构，这个就不展开了。为了方便管理，硬盘这样的块设备通常可以划分为多个逻辑块设备，也就是我们熟悉的硬盘分区（Partition）。反过来，单个介质的容量、性能有限，可以通过某些技术手段把多个物理块设备组合成一个逻辑块设备，例如各种级别的 RAID，JBOD，某些操作系统的卷管理系统（Volume Manager）如 Windows 的动态磁盘、Linux 的 LVM 等。&lt;/p>
&lt;p>补充一下的是，块设备的使用对象除了传统的文件系统以及一些专用的管理工具软件如备份软件、分区软件外，还有一些支持直接读写块设备的软件如数据库等，但一般用户很少这样使用。&lt;/p>
&lt;p>在网络存储中，服务器把本地的一个逻辑块设备——底层可能是一个物理块设备的一部分，也可能是多个物理块设备的组合，又或者多个物理块设备的组合中的一部分，甚至是一个本地文件系统上的一个文件——通过某种协议模拟成一个块设备，远程的客户端（可以是一台物理主机，也可以是虚拟机，某个回答所说的块设备是给虚拟机用是错误的）使用相同的协议把这个逻辑块设备作为一个本地存储介质来使用，划分分区，格式化自己的文件系统等等。这就是块存储，比较常见的块存储协议是 iSCSI。&lt;/p>
&lt;h3 id="文件存储">文件存储&lt;/h3>
&lt;p>文件存储的用户是自然人，最容易理解。计算机中所有的数据都是 0 和 1，存储在硬件介质上的一连串的 01 组合对我们来说完全无法去分辨以及管理。因此我们用“文件”这个概念对这些数据进行组织，所有用于同一用途的数据，按照不同应用程序要求的结构方式组成不同类型的文件（通常用不同的后缀来指代不同的类型），然后我们给每一个文件起一个方便理解记忆的名字。而当文件很多的时候，我们按照某种划分方式给这些文件分组，每一组文件放在同一个目录（或者叫文件夹）里面，当然我们也需要给这些目录起一个容易理解和记忆的名字。而且目录下面除了文件还可以有下一级目录（称之为子目录或者子文件夹），所有的文件、目录形成一个树状结构。我们最常用的 Windows 系统中，打开资源管理器就可以看到以这种方式组织起来的无数个文件和目录。在 Linux 可以用 tree 命令列出以某个文件夹为根节点列出一棵树：&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/oxzk92/1616133225674-7597bd4a-b175-48b3-90e4-3b60c1e4db7d.jpeg" alt="">&lt;/p>
&lt;p>为了方便查找，从根节点开始逐级目录往下，一直到文件本身，把这些目录、子目录、文件的名字用特殊的字符（例如 Windows/DOS 用“\”，类 Unix 系统用“/”）拼接起来，这样的一串字符称之为路径，例如 Linux 中的“/etc/systemd/system.conf”或者 Windows 中的“C:\Windows\System32\taskmgr.exe”。人类用路径作为唯一标识来访问具体的文件。而由作为自然人的程序员所编写的各种软件程序，绝大部分也使用这种方式来访问文件。&lt;/p>
&lt;p>把存储介质上的数据组织成目录-子目录-文件这种形式的数据结构，用于从这个结构中寻找、添加、修改、删除文件的程序，以及用于维护这个结构的程序，组成的系统有一个专用的名字：文件系统（File System）。文件系统有很多，常见的有 Windows 的 FAT/FAT32/NTFS，Linux 的 EXT2/EXT3/EXT4/XFS/BtrFS 等。而在网络存储中，底层数据并非存储在本地的存储介质，而是另外一台服务器上，不同的客户端都可以用类似文件系统的方式访问这台服务器上的文件，这样的系统叫网络文件系统（Network File System），常见的网络文件系统有 Windows 网络的 CIFS（也叫 SMB）、类 Unix 系统网络的 NFS 等。而文件存储除了网络文件系统外，FTP、HTTP 其实也算是文件存储的某种特殊实现，都是可以通过某个 url 来访问一个文件。&lt;/p>
&lt;h3 id="对象存储">对象存储&lt;/h3>
&lt;p>对象存储其实介于块存储和文件存储之间。文件存储的树状结构以及路径访问方式虽然方便人类理解、记忆和访问，但计算机需要把路径进行分解，然后逐级向下查找，最后才能查找到需要的文件，对于应用程序来说既没必要，也很浪费性能。&lt;/p>
&lt;p>而块存储是排它的，服务器上的某个逻辑块被一台客户端挂载后，其它客户端就无法访问上面的数据了。而且挂载了块存储的客户端上的一个程序要访问里面的数据，不算类似数据库直接访问裸设备这种方式外，通常也需要对其进行分区、安装文件系统后才能使用。除了在网络上传输的数据包效率更高以外，并不比使用文件存储好多少，客户端的文件系统依然需要对路径分解，然后逐级查找才能定位到某一个具体的文件。&lt;/p>
&lt;p>是否可以用不排它但又类似块设备访问的方式呢？理论上是可以的，但对块设备的访问方式虽然比文件存储快，其实也很麻烦——一个文件往往是由多个块组成，并且很可能是不连续的。例如要读取一个文件，可能需要发出这样的指令：&lt;/p>
&lt;ul>
&lt;li>读取从编号 A₁ 开始的 N₁ 个块；&lt;/li>
&lt;li>读取从编号 A₂ 开始的 N₂ 个块；&lt;/li>
&lt;li>读取从编号 A₃ 开始的 N₃ 个块；&lt;/li>
&lt;li>…………&lt;/li>
&lt;li>读取从编号 Ai 开始的 Ni 个块。&lt;/li>
&lt;/ul>
&lt;p>最后自行把这 i 个连续的块自行拼接成一个文件，这才完成了一个文件的读取操作。为了发出这些指令，访问文件的软件系统需要记录下这个文件分成多少个部分，每个部分的起始块编号是多少，有多少块，顺序如何。不单是读取操作，删除、写入、修改操作也是如此，非常麻烦复杂。而且往往一个文件可能需要被多个系统访问使用，这就更麻烦了。&lt;/p>
&lt;p>为了解决这中麻烦，使用一个统一的底层存储系统，管理这些文件和底层介质的组织结构，然后给每个文件一个唯一的标识，其它系统需要访问某个文件，直接提供文件的标识就可以了。存储系统可以用更高效的数据组织方式来管理这些标识以及其对应的存储介质上的块。&lt;/p>
&lt;p>当然，对于不同的软件系统来说，一次访问需要获取的不一定是单个我们传统意义上的文件，根据不同的需要可能只是一个/组值，某个文件的一部分，也可能是多个文件的组合，甚至是某个块设备，统称为对象。这就是对象存储。&lt;/p>
&lt;h2 id="回答二">回答二&lt;/h2>
&lt;p>这三种存储，分别对应了不同的访问协议，这也就决定了他们的本质差别。&lt;/p>
&lt;p>先说一下文件存储，主要操作对象是文件和文件夹。以 NFS 为例，文件相关的接口包括：LOOKUP/ACCESS/READ/WRITE/CREATE/REMOVE/RENAME 等等，文件夹相关的接口包括：MKDIR/RMDIR/READDIR 等等。同时也会有 FSSTAT/FSINFO 等接口用于提供文件系统级别的信息。POSIX，SAMBA 等也是文件存储协议。协议更注重接口的灵活，以及访问权限控制。&lt;/p>
&lt;p>块存储，主要操作对象是磁盘。以 SCSI 为例，主要接口有 Read/Write/Read Capacity/Inquiry 等等。FC，iSCSI，也是块存储协议。和文件存储相比，没有文件和目录树的概念，一般协议也不会定义磁盘的创建和删除操作。协议更注重传输控制。&lt;/p>
&lt;p>对象存储，主要操作对象是对象（Object）。以 S3 为例，主要接口有 PUT/GET/DELETE 等。和文件和对象存储相比，没有随机读写的接口。和文件存储相比，没有目录树的概念。协议更注重简洁。&lt;/p>
&lt;h2 id="回答三">回答三&lt;/h2>
&lt;p>看了目前赞最多的“繁星亮”君的回答，感觉解释的还是不甚清楚。&lt;/p>
&lt;p>大家可以看看这个解释，简单明了：&lt;/p>
&lt;p>虚拟座谈会：有关分布式存储的三个基本问题&lt;/p>
&lt;p>引用下“豪迈”的观点：&lt;/p>
&lt;p>分布式存储的应用场景相对于其存储接口，现在流行分为三种:&lt;/p>
&lt;ol>
&lt;li>对象存储: 也就是通常意义的键值存储，其接口就是简单的 GET、PUT、DEL 和其他扩展，如七牛、又拍、Swift、S3&lt;/li>
&lt;li>块存储: 这种接口通常以 QEMU Driver 或者 Kernel Module 的方式存在，这种接口需要实现 Linux 的 Block Device 的接口或者 QEMU 提供的 Block Driver 接口，如 Sheepdog，AWS 的 EBS，青云的云硬盘和阿里云的盘古系统，还有 Ceph 的 RBD（RBD 是 Ceph 面向块存储的接口）&lt;/li>
&lt;li>文件存储: 通常意义是支持 POSIX 接口，它跟传统的文件系统如 Ext4 是一个类型的，但区别在于分布式存储提供了并行化的能力，如 Ceph 的 CephFS(CephFS 是 Ceph 面向文件存储的接口)，但是有时候又会把 GFS，HDFS 这种非 POSIX 接口的类文件存储接口归入此类。&lt;/li>
&lt;/ol></description></item><item><title>Docs: 存储的能力</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/1.%E5%AD%98%E5%82%A8/%E5%AD%98%E5%82%A8%E7%9A%84%E8%83%BD%E5%8A%9B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/1.%E5%AD%98%E5%82%A8/%E5%AD%98%E5%82%A8%E7%9A%84%E8%83%BD%E5%8A%9B/</guid><description/></item></channel></rss>