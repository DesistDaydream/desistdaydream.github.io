<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦 – Linux 硬件管理工具</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/x.linux-%E7%AE%A1%E7%90%86/linux-%E7%A1%AC%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</link><description>Recent content in Linux 硬件管理工具 on 断念梦</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/x.linux-%E7%AE%A1%E7%90%86/linux-%E7%A1%AC%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: CPU 硬件管理工具</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/x.linux-%E7%AE%A1%E7%90%86/linux-%E7%A1%AC%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/cpu-%E7%A1%AC%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/x.linux-%E7%AE%A1%E7%90%86/linux-%E7%A1%AC%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/cpu-%E7%A1%AC%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</guid><description>
&lt;h1 id="概述">概述&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;/blockquote>
&lt;h1 id="linux-环境查看-cpu-信息">Linux 环境查看 CPU 信息&lt;/h1>
&lt;p>/proc/stat # 参见：&lt;a href="https://www.yuque.com/desistdaydream/learning/rsm2ly#e87jG">VFS 虚拟文件系统&lt;/a>&lt;/p>
&lt;p>通过 cat /proc/cpuinfo 命令，可以查看 CPU 相关的信息：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#75715e"># cat /proc/cpuinfo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>processor : &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vendor_id : GenuineIntel
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cpu family : &lt;span style="color:#ae81ff">6&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>model : &lt;span style="color:#ae81ff">44&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>model name : Intel&lt;span style="color:#f92672">(&lt;/span>R&lt;span style="color:#f92672">)&lt;/span> Xeon&lt;span style="color:#f92672">(&lt;/span>R&lt;span style="color:#f92672">)&lt;/span> CPU E5620 @ 2.40GHz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>stepping : &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cpu MHz : 1596.000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cache size : &lt;span style="color:#ae81ff">12288&lt;/span> KB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>physical id : &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>siblings : &lt;span style="color:#ae81ff">8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>core id : &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cpu cores : &lt;span style="color:#ae81ff">4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apicid : &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>initial apicid : &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fpu : yes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fpu_exception : yes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cpuid level : &lt;span style="color:#ae81ff">11&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wp : yes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid dca sse4_1 sse4_2 popcnt aes lahf_lm arat epb dts tpr_shadow vnmi flexpriority ept vpid
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bogomips : 4800.15
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>clflush size : &lt;span style="color:#ae81ff">64&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cache_alignment : &lt;span style="color:#ae81ff">64&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>address sizes : &lt;span style="color:#ae81ff">40&lt;/span> bits physical, &lt;span style="color:#ae81ff">48&lt;/span> bits virtual
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>power management:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>......
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="cpu-核心数相关信息">CPU 核心数相关信息&lt;/h2>
&lt;p>在查看到的相关信息中，通常有些信息比较让人迷惑，这里列出一些解释：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>physical id&lt;/strong> # 指的是物理封装的处理器的 id。&lt;/li>
&lt;li>&lt;strong>cpu cores&lt;/strong> # 位于相同物理封装的处理器中的内核数量。&lt;/li>
&lt;li>**core id **# 每个内核的 id (不一定是按顺序排列的数字) 。&lt;/li>
&lt;li>&lt;strong>siblings&lt;/strong> # 位于相同物理封装的处理器中的逻辑处理器的数量。&lt;/li>
&lt;li>&lt;strong>processor&lt;/strong> # 逻辑处理器的 id。&lt;/li>
&lt;/ul>
&lt;p>我们通常可以用下面这些命令获得这些参数的信息：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#75715e"># cat /proc/cpuinfo | grep &amp;#34;physical id&amp;#34; | sort|uniq&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>physical id : &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>physical id : &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#75715e"># cat /proc/cpuinfo | grep &amp;#34;cpu cores&amp;#34; | sort|uniq&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cpu cores : &lt;span style="color:#ae81ff">4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#75715e"># cat /proc/cpuinfo | grep &amp;#34;core id&amp;#34; | sort|uniq&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>core id : &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>core id : &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>core id : &lt;span style="color:#ae81ff">10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>core id : &lt;span style="color:#ae81ff">9&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#75715e"># cat /proc/cpuinfo | grep &amp;#34;siblings&amp;#34; | sort|uniq&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>siblings : &lt;span style="color:#ae81ff">8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#75715e"># cat /proc/cpuinfo | grep &amp;#34;processor&amp;#34; | sort -n -k 2 -t: | uniq&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>processor : &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>processor : &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>processor : &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>processor : &lt;span style="color:#ae81ff">3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>processor : &lt;span style="color:#ae81ff">4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>processor : &lt;span style="color:#ae81ff">5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>processor : &lt;span style="color:#ae81ff">6&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>processor : &lt;span style="color:#ae81ff">7&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>processor : &lt;span style="color:#ae81ff">8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>processor : &lt;span style="color:#ae81ff">9&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>processor : &lt;span style="color:#ae81ff">10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>processor : &lt;span style="color:#ae81ff">11&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>processor : &lt;span style="color:#ae81ff">12&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>processor : &lt;span style="color:#ae81ff">13&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>processor : &lt;span style="color:#ae81ff">14&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>processor : &lt;span style="color:#ae81ff">15&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过上面的结果，可以看出这台机器：&lt;/p>
&lt;ol>
&lt;li>physical id # 有 2 个物理处理器(i.e.装在主板上的 CPU)（有 2 个）&lt;/li>
&lt;li>cpu cores # 每个物理处理器有 4 个内核（为 4）&lt;/li>
&lt;li>siblings # 每个物理处理器有 8 个逻辑处理器（为 8）
&lt;ol>
&lt;li>可见台机器的处理器开启了&lt;strong>超线程技术&lt;/strong>，每个内核（core）被划分为了 2 个逻辑处理器（processor）&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>processor # 总共有 16 个逻辑处理器（有 16 个）&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>超线程技术&lt;/strong>：超线程技术就是利用特殊的硬件指令，把两个逻辑处理器模拟成两个物理芯片，让单个处理器都能使用线程级并行计算，进而兼容多线程操作系统和软件，减少了 CPU 的闲置时间，提高的 CPU 的运行效率。&lt;/p></description></item><item><title>Docs: dmidecode</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/x.linux-%E7%AE%A1%E7%90%86/linux-%E7%A1%AC%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/dmidecode/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/x.linux-%E7%AE%A1%E7%90%86/linux-%E7%A1%AC%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/dmidecode/</guid><description>
&lt;p>dmidecode 命令可以让你在 Linux 系统下获取有关硬件方面的信息。dmidecode 的作用是将 DMI 数据库中的信息解码，以可读的文本方式显示。由于 DMI 信息可以人为修改，因此里面的信息不一定是系统准确的信息。dmidecode 遵循 SMBIOS/DMI 标准，其输出的信息包括BIOS、系统、主板、处理器、内存、缓存等等。&lt;/p>
&lt;p>DMI（Desktop Management Interface,DMI）就是帮助收集电脑系统信息的管理系统，DMI 信息的收集必须在严格遵照SMBIOS规范的前提下进行。SMBIOS（System Management BIOS）是主板或系统制造者以标准格式显示产品管理信息所需遵循的统一规范。SMBIOS和DMI是由行业指导机构Desktop Management Task Force(DMTF)起草的开放性的技术标准，其中DMI设计适用于任何的平台和操作系统。&lt;/p>
&lt;p>DMI充当了管理工具和系统层之间接口的角色。它建立了标准的可管理系统更加方便了电脑厂商和用户对系统的了解。DMI的主要组成部分是Management Information Format(MIF)数据库。这个数据库包括了所有有关电脑系统和配件的信息。通过DMI，用户可以获取序列号、电脑厂商、串口信息以及其它系统配件信息。&lt;/p></description></item><item><title>Docs: Linux 硬件信息获取</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/x.linux-%E7%AE%A1%E7%90%86/linux-%E7%A1%AC%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/linux-%E7%A1%AC%E4%BB%B6%E4%BF%A1%E6%81%AF%E8%8E%B7%E5%8F%96/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/x.linux-%E7%AE%A1%E7%90%86/linux-%E7%A1%AC%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/linux-%E7%A1%AC%E4%BB%B6%E4%BF%A1%E6%81%AF%E8%8E%B7%E5%8F%96/</guid><description>
&lt;blockquote>
&lt;p>参考：&lt;a href="https://jouyouyun.github.io/post/linux_hardware_info/">原文&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h1 id="linux-硬件信息获取">Linux 硬件信息获取&lt;/h1>
&lt;p>在 &lt;code>linux&lt;/code> 上可以通过 &lt;code>dmidecode&lt;/code> 或是 &lt;code>lshw&lt;/code> 来获取硬件信息，能够方便的查看系统配置。但它们的输出信息过多，解析起来有些麻烦，另外 &lt;code>lshw&lt;/code> 对 &lt;code>usb&lt;/code> 接口的网卡支持不好，显示的信息不够，所以在此整理下通过读文件或是一些简单命令来获取硬件信息的方法。&lt;/p>
&lt;h2 id="dmi">DMI&lt;/h2>
&lt;p>一般情况下内核默认加载了 &lt;code>dmi sysfs&lt;/code> ，路径是 &lt;code>/sys/class/dmi&lt;/code> 。里面包含了 &lt;code>bios&lt;/code> ， &lt;code>board&lt;/code> ， &lt;code>product&lt;/code> 等信息。&lt;/p>
&lt;h3 id="bios">Bios&lt;/h3>
&lt;p>通过命令 &lt;code>ls -l /sys/class/dmi/id/bios_*&lt;/code> 可以看到支持的 &lt;code>bios&lt;/code> 字段，如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>root@host-3 ~&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#75715e"># ls -l /sys/class/dmi/id/bios_*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-r--r--r-- &lt;span style="color:#ae81ff">1&lt;/span> root root &lt;span style="color:#ae81ff">4096&lt;/span> Feb &lt;span style="color:#ae81ff">3&lt;/span> 10:45 /sys/class/dmi/id/bios_date
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-r--r--r-- &lt;span style="color:#ae81ff">1&lt;/span> root root &lt;span style="color:#ae81ff">4096&lt;/span> Feb &lt;span style="color:#ae81ff">3&lt;/span> 10:45 /sys/class/dmi/id/bios_vendor
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-r--r--r-- &lt;span style="color:#ae81ff">1&lt;/span> root root &lt;span style="color:#ae81ff">4096&lt;/span> Feb &lt;span style="color:#ae81ff">3&lt;/span> 10:45 /sys/class/dmi/id/bios_version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>直接读文件即可获取对应值。&lt;/p>
&lt;h3 id="board">Board&lt;/h3>
&lt;p>通过命令 &lt;code>ls -l /sys/class/dmi/id/board_*&lt;/code> 可以看到支持的 &lt;code>board&lt;/code> 字段，如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>root@host-3 ~&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#75715e"># ls -l /sys/class/dmi/id/board_*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-r--r--r-- &lt;span style="color:#ae81ff">1&lt;/span> root root &lt;span style="color:#ae81ff">4096&lt;/span> Mar &lt;span style="color:#ae81ff">21&lt;/span> 20:28 /sys/class/dmi/id/board_asset_tag
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-r--r--r-- &lt;span style="color:#ae81ff">1&lt;/span> root root &lt;span style="color:#ae81ff">4096&lt;/span> Mar &lt;span style="color:#ae81ff">21&lt;/span> 20:28 /sys/class/dmi/id/board_name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-r-------- &lt;span style="color:#ae81ff">1&lt;/span> root root &lt;span style="color:#ae81ff">4096&lt;/span> Mar &lt;span style="color:#ae81ff">21&lt;/span> 20:28 /sys/class/dmi/id/board_serial
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-r--r--r-- &lt;span style="color:#ae81ff">1&lt;/span> root root &lt;span style="color:#ae81ff">4096&lt;/span> Mar &lt;span style="color:#ae81ff">21&lt;/span> 20:28 /sys/class/dmi/id/board_vendor
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-r--r--r-- &lt;span style="color:#ae81ff">1&lt;/span> root root &lt;span style="color:#ae81ff">4096&lt;/span> Mar &lt;span style="color:#ae81ff">21&lt;/span> 20:28 /sys/class/dmi/id/board_version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>直接读文件即可获取对应值，但有些文件需要 &lt;code>root&lt;/code> 权限。&lt;/p>
&lt;h3 id="product">Product&lt;/h3>
&lt;p>通过命令 &lt;code>ls -l /sys/class/dmi/id/product_*&lt;/code> 可以看到支持的 &lt;code>product&lt;/code> 字段，如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>root@host-3 ~&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#75715e"># ls -l /sys/class/dmi/id/product_*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-r--r--r-- &lt;span style="color:#ae81ff">1&lt;/span> root root &lt;span style="color:#ae81ff">4096&lt;/span> Feb &lt;span style="color:#ae81ff">3&lt;/span> 10:45 /sys/class/dmi/id/product_name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-r-------- &lt;span style="color:#ae81ff">1&lt;/span> root root &lt;span style="color:#ae81ff">4096&lt;/span> Feb &lt;span style="color:#ae81ff">3&lt;/span> 10:45 /sys/class/dmi/id/product_serial
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-r-------- &lt;span style="color:#ae81ff">1&lt;/span> root root &lt;span style="color:#ae81ff">4096&lt;/span> Mar &lt;span style="color:#ae81ff">21&lt;/span> 20:28 /sys/class/dmi/id/product_uuid
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-r--r--r-- &lt;span style="color:#ae81ff">1&lt;/span> root root &lt;span style="color:#ae81ff">4096&lt;/span> Feb &lt;span style="color:#ae81ff">3&lt;/span> 10:45 /sys/class/dmi/id/product_version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>直接读文件即可获取对应值，但有些文件需要 &lt;code>root&lt;/code> 权限。
其中 &lt;code>product_uuid&lt;/code> 可作为机器的唯一 &lt;code>ID&lt;/code> 。&lt;/p>
&lt;h2 id="cpu">CPU&lt;/h2>
&lt;p>通过读取文件 &lt;code>/proc/cpuinfo&lt;/code> 可获取 &lt;code>cpu&lt;/code> 的信息，一般 &lt;code>model name&lt;/code> 字段为 &lt;code>cpu&lt;/code> 名称，如：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>root@host-3 ~&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#75715e"># cat /proc/cpuinfo|grep &amp;#39;model name&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>model name : Intel&lt;span style="color:#f92672">(&lt;/span>R&lt;span style="color:#f92672">)&lt;/span> Xeon&lt;span style="color:#f92672">(&lt;/span>R&lt;span style="color:#f92672">)&lt;/span> Gold &lt;span style="color:#ae81ff">5218&lt;/span> CPU @ 2.30GHz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>model name : Intel&lt;span style="color:#f92672">(&lt;/span>R&lt;span style="color:#f92672">)&lt;/span> Xeon&lt;span style="color:#f92672">(&lt;/span>R&lt;span style="color:#f92672">)&lt;/span> Gold &lt;span style="color:#ae81ff">5218&lt;/span> CPU @ 2.30GHz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>model name : Intel&lt;span style="color:#f92672">(&lt;/span>R&lt;span style="color:#f92672">)&lt;/span> Xeon&lt;span style="color:#f92672">(&lt;/span>R&lt;span style="color:#f92672">)&lt;/span> Gold &lt;span style="color:#ae81ff">5218&lt;/span> CPU @ 2.30GHz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>model name : Intel&lt;span style="color:#f92672">(&lt;/span>R&lt;span style="color:#f92672">)&lt;/span> Xeon&lt;span style="color:#f92672">(&lt;/span>R&lt;span style="color:#f92672">)&lt;/span> Gold &lt;span style="color:#ae81ff">5218&lt;/span> CPU @ 2.30GHz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>model name : Intel&lt;span style="color:#f92672">(&lt;/span>R&lt;span style="color:#f92672">)&lt;/span> Xeon&lt;span style="color:#f92672">(&lt;/span>R&lt;span style="color:#f92672">)&lt;/span> Gold &lt;span style="color:#ae81ff">5218&lt;/span> CPU @ 2.30GHz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>model name : Intel&lt;span style="color:#f92672">(&lt;/span>R&lt;span style="color:#f92672">)&lt;/span> Xeon&lt;span style="color:#f92672">(&lt;/span>R&lt;span style="color:#f92672">)&lt;/span> Gold &lt;span style="color:#ae81ff">5218&lt;/span> CPU @ 2.30GHz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>......
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>但在龙芯，申威上可能不是这个字段，需要根据文件内容确定。&lt;/strong>&lt;/p>
&lt;h2 id="memory">Memory&lt;/h2>
&lt;p>通过读取文件 &lt;code>/proc/meminfo&lt;/code> 可获取内存总大小，字段是 &lt;code>MemTotal&lt;/code> ，如：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>root@host-3 ~&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#75715e"># cat /proc/meminfo |grep MemTotal&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>MemTotal: &lt;span style="color:#ae81ff">263570816&lt;/span> kB
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>对于内存厂商等信息还未找到获取方法，待以后补全。&lt;/strong>&lt;/p>
&lt;h2 id="disk">Disk&lt;/h2>
&lt;p>硬盘信息这里使用 &lt;code>lsblk&lt;/code> 来获取，通过指定它的参数来获取，如：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">$&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">lsblk&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">-J&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">-bno&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">NAME,SERIAL,TYPE,SIZE,VENDOR,MODEL,MOUNTPOINT,UUID&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;blockdevices&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#f92672">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;sda&amp;#34;&lt;/span>, &lt;span style="color:#f92672">&amp;#34;serial&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;TF0500WE0GAV0V&amp;#34;&lt;/span>, &lt;span style="color:#f92672">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;disk&amp;#34;&lt;/span>, &lt;span style="color:#f92672">&amp;#34;size&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;500107862016&amp;#34;&lt;/span>, &lt;span style="color:#f92672">&amp;#34;vendor&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;ATA &amp;#34;&lt;/span>, &lt;span style="color:#f92672">&amp;#34;model&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;HGST HTS725050A7&amp;#34;&lt;/span>, &lt;span style="color:#f92672">&amp;#34;mountpoint&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">null&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;children&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#f92672">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;sda1&amp;#34;&lt;/span>, &lt;span style="color:#f92672">&amp;#34;serial&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">null&lt;/span>, &lt;span style="color:#f92672">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;part&amp;#34;&lt;/span>, &lt;span style="color:#f92672">&amp;#34;size&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;4294967296&amp;#34;&lt;/span>, &lt;span style="color:#f92672">&amp;#34;vendor&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">null&lt;/span>, &lt;span style="color:#f92672">&amp;#34;model&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">null&lt;/span>, &lt;span style="color:#f92672">&amp;#34;mountpoint&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;/boot&amp;#34;&lt;/span>},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#f92672">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;sda2&amp;#34;&lt;/span>, &lt;span style="color:#f92672">&amp;#34;serial&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">null&lt;/span>, &lt;span style="color:#f92672">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;part&amp;#34;&lt;/span>, &lt;span style="color:#f92672">&amp;#34;size&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;4294967296&amp;#34;&lt;/span>, &lt;span style="color:#f92672">&amp;#34;vendor&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">null&lt;/span>, &lt;span style="color:#f92672">&amp;#34;model&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">null&lt;/span>, &lt;span style="color:#f92672">&amp;#34;mountpoint&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;[SWAP]&amp;#34;&lt;/span>},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#f92672">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;sda3&amp;#34;&lt;/span>, &lt;span style="color:#f92672">&amp;#34;serial&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">null&lt;/span>, &lt;span style="color:#f92672">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;part&amp;#34;&lt;/span>, &lt;span style="color:#f92672">&amp;#34;size&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;1024&amp;#34;&lt;/span>, &lt;span style="color:#f92672">&amp;#34;vendor&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">null&lt;/span>, &lt;span style="color:#f92672">&amp;#34;model&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">null&lt;/span>, &lt;span style="color:#f92672">&amp;#34;mountpoint&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">null&lt;/span>},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#f92672">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;sda5&amp;#34;&lt;/span>, &lt;span style="color:#f92672">&amp;#34;serial&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">null&lt;/span>, &lt;span style="color:#f92672">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;part&amp;#34;&lt;/span>, &lt;span style="color:#f92672">&amp;#34;size&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;107374182400&amp;#34;&lt;/span>, &lt;span style="color:#f92672">&amp;#34;vendor&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">null&lt;/span>, &lt;span style="color:#f92672">&amp;#34;model&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">null&lt;/span>, &lt;span style="color:#f92672">&amp;#34;mountpoint&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;/Data&amp;#34;&lt;/span>},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#f92672">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;sda6&amp;#34;&lt;/span>, &lt;span style="color:#f92672">&amp;#34;serial&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">null&lt;/span>, &lt;span style="color:#f92672">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;part&amp;#34;&lt;/span>, &lt;span style="color:#f92672">&amp;#34;size&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;64424509440&amp;#34;&lt;/span>, &lt;span style="color:#f92672">&amp;#34;vendor&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">null&lt;/span>, &lt;span style="color:#f92672">&amp;#34;model&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">null&lt;/span>, &lt;span style="color:#f92672">&amp;#34;mountpoint&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;/&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>参数的含义通过 &lt;code>lsblk -h&lt;/code> 命令查看。
&lt;strong>只有 &lt;strong>&lt;code>**type**&lt;/code>&lt;/strong> 为 &lt;strong>&lt;code>**disk**&lt;/code>&lt;/strong> 时才表示为一块硬盘，其它如 &lt;strong>&lt;code>**loop**&lt;/code>&lt;/strong> 则应该过滤掉。&lt;/strong> 每块硬盘中的 &lt;code>children&lt;/code> 表示它下面的分区，通过 &lt;code>mountpoint&lt;/code> 可确定硬盘在此系统上的使用情况。&lt;/p>
&lt;p>&lt;code>lsscsi&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>root@host-2 ~&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#75715e"># lsscsi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>0:0:16:0&lt;span style="color:#f92672">]&lt;/span> enclosu MSCC SXP 36x12G RevB -
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>0:2:0:0&lt;span style="color:#f92672">]&lt;/span> disk AVAGO MR9361-8i 4.68 /dev/sda
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>0:2:1:0&lt;span style="color:#f92672">]&lt;/span> disk AVAGO MR9361-8i 4.68 /dev/sdb
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="network">Network&lt;/h2>
&lt;p>简单直接：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>lspci | grep -i Ethernet
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这里是先获取系统上的网络接口，这包括了物理网卡和虚拟网卡(如 &lt;code>docker&lt;/code> 创建的)。
~~所以要先过滤，过滤顺序如下：~~
~~1. 按名字过滤~~
~~过滤掉 &lt;del>&lt;code>~~lo~~&lt;/code>
~~2. 按驱动过滤&lt;/del>
~~过滤掉驱动为 &lt;del>&lt;code>~~dummy, veth, vboxnet, vmnet, vmxnet, vmxnet2, vmxnet3~~&lt;/code>&lt;/del> 的网卡, 虚拟机中的~~
~~3. 按网卡类型过滤~~
~~过滤掉 &lt;del>&lt;code>~~bridge~~&lt;/code>&lt;/del> 类型的网卡~~
如果网卡接口同时存在于 &lt;code>/sys/class/net/&lt;/code> 和 &lt;code>/sys/devices/virtual/net/&lt;/code> 中，则需要过滤掉。
接下来分别给出网卡信息获取的方法：&lt;/p>
&lt;h4 id="interface-name">&lt;strong>Interface Name&lt;/strong>&lt;/h4>
&lt;p>即是上面的目录下的子目录名&lt;/p>
&lt;h4 id="mac-address">&lt;strong>Mac Address&lt;/strong>&lt;/h4>
&lt;p>读取文件 &lt;code>/sys/class/net/&amp;lt;iface name&amp;gt;/address&lt;/code> 可得到&lt;/p>
&lt;h4 id="ip">&lt;strong>IP&lt;/strong>&lt;/h4>
&lt;p>通过调用 &lt;code>ioctl&lt;/code> 来获取指定 &lt;code>iface name&lt;/code> 的 &lt;code>ip&lt;/code> ，代码大致如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">char&lt;/span>&lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#a6e22e">get_ip_for_iface&lt;/span>(&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>iface)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> fd;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">struct&lt;/span> ifreq ifr;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fd &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">socket&lt;/span>(AF_INET, SOCK_DGRAM, &lt;span style="color:#ae81ff">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (fd &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fprintf&lt;/span>(stderr, &lt;span style="color:#e6db74">&amp;#34;open socket failed: %s&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">strerror&lt;/span>(errno));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// must init ifr
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">memset&lt;/span>(&lt;span style="color:#f92672">&amp;amp;&lt;/span>ifr, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#66d9ef">sizeof&lt;/span>(ifr));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ifr.ifr_addr.sa_family &lt;span style="color:#f92672">=&lt;/span> AF_INET;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">strncpy&lt;/span>(ifr.ifr_name, name.&lt;span style="color:#a6e22e">c_str&lt;/span>(), IFNAMSIZ &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ioctl&lt;/span>(fd, SIOCGIFADDR, &lt;span style="color:#f92672">&amp;amp;&lt;/span>ifr);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">close&lt;/span>(fd);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>c_addr &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">inet_ntoa&lt;/span>(((&lt;span style="color:#66d9ef">struct&lt;/span> sockaddr_in &lt;span style="color:#f92672">*&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>ifr.ifr_addr)&lt;span style="color:#f92672">-&amp;gt;&lt;/span>sin_addr);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>ip &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">calloc&lt;/span>(&lt;span style="color:#a6e22e">strlen&lt;/span>(c_addr)&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#66d9ef">sizeof&lt;/span>(&lt;span style="color:#66d9ef">char&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">memcpy&lt;/span>(ip, c_addr, &lt;span style="color:#a6e22e">strlen&lt;/span>(c_addr));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> ip;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>ipv6&lt;/code> 的暂未测试。&lt;/p>
&lt;h4 id="model">&lt;strong>Model&lt;/strong>&lt;/h4>
&lt;p>网卡一般在 &lt;code>pci&lt;/code> 接口上，但也有些实在 &lt;code>usb&lt;/code> 接口上，要分别获取。
不过都要先读取文件 &lt;code>/sys/class/net/enp0s25/device/uevent&lt;/code> ，然后分别处理。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>pci&lt;/strong>
&lt;code>uevent&lt;/code> 内容如：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>DRIVER&lt;span style="color:#f92672">=&lt;/span>e1000e
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>PCI_CLASS&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">20000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>PCI_ID&lt;span style="color:#f92672">=&lt;/span>8086:1502
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>PCI_SUBSYS_ID&lt;span style="color:#f92672">=&lt;/span>17AA:21F3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>PCI_SLOT_NAME&lt;span style="color:#f92672">=&lt;/span>0000:00:19.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>MODALIAS&lt;span style="color:#f92672">=&lt;/span>pci:v00008086d00001502sv000017AAsd000021F3bc02sc00i00
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>取到其中的 &lt;code>PCI_SLOT_NAME&lt;/code> ，然后执行 &lt;code>lspci -k -s &amp;lt;PCI_SLOT_NAME&amp;gt;&lt;/code> 来获取 &lt;code>model&lt;/code> 信息，如：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ lspci -k -s 0000:00:19.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>00:19.0 Ethernet controller: Intel Corporation 82579LM Gigabit Network Connection &lt;span style="color:#f92672">(&lt;/span>Lewisville&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">(&lt;/span>rev 04&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Subsystem: Lenovo 82579LM Gigabit Network Connection
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Kernel driver in use: e1000e
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Kernel modules: e1000e
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>其中 &lt;code>Subsystem&lt;/code> 之后的即是 &lt;code>model&lt;/code> 信息。&lt;/li>
&lt;li>&lt;strong>usb&lt;/strong>
&lt;code>uevent&lt;/code> 内容如：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>DEVTYPE&lt;span style="color:#f92672">=&lt;/span>usb_interface
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DRIVER&lt;span style="color:#f92672">=&lt;/span>ath9k_htc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>PRODUCT&lt;span style="color:#f92672">=&lt;/span>cf3/9271/108
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>TYPE&lt;span style="color:#f92672">=&lt;/span>255/255/255
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>INTERFACE&lt;span style="color:#f92672">=&lt;/span>255/0/0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>MODALIAS&lt;span style="color:#f92672">=&lt;/span>usb:v0CF3p9271d0108dcFFdscFFdpFFicFFisc00ip00in00
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>取到其中的 &lt;code>PRODUCT&lt;/code> ，然后将 &lt;code>/&lt;/code> 替换为 &lt;code>:&lt;/code> ，然后执行 &lt;code>lsusb -d &amp;lt;product&amp;gt;&lt;/code> 来获取 &lt;code>model&lt;/code> 信息，如：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 可以不要最后的 &amp;#39;108&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ lsusb -d cf3:9271:108
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Bus &lt;span style="color:#ae81ff">001&lt;/span> Device 007: ID 0cf3:9271 Atheros Communications, Inc. AR9271 802.11n
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>其中 &lt;code>Subsystem&lt;/code> 之后的即是 &lt;code>model&lt;/code> 信息。&lt;/li>
&lt;/ul>
&lt;h2 id="bluetooth">Bluetooth&lt;/h2>
&lt;p>在 &lt;code>/sys/class/bluetooth/&lt;/code> 下是蓝牙设备，与 &lt;strong>网卡&lt;/strong> 一样，根据 &lt;code>/sys/class/bluetooth/&amp;lt;hciX&amp;gt;/device/uevent&lt;/code> 的内容使用 &lt;code>lspci&lt;/code> 或 &lt;code>lsusb&lt;/code> 来获取 &lt;code>model&lt;/code> 信息。
如：&lt;/p>
&lt;p>| ```
1
2
3
4
5
6
7&lt;/p>
&lt;pre>&lt;code> | ```
$ cat /sys/class/bluetooth/hci0/device/uevent
DEVTYPE=usb_interface
DRIVER=btusb
PRODUCT=a5c/21e6/112
TYPE=255/1/1
INTERFACE=255/1/1
MODALIAS=usb:v0A5Cp21E6d0112dcFFdsc01dp01icFFisc01ip01in00
&lt;/code>&lt;/pre>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;/table>
&lt;p>这就是一个 &lt;code>usb&lt;/code> 接口的设备，所以使用 &lt;code>lsusb&lt;/code> 来获取 &lt;code>model&lt;/code> 信息，如：&lt;/p>
&lt;p>| ```
1
2&lt;/p>
&lt;pre>&lt;code> | ```
$ lsusb -d a5c:21e6:112
Bus 001 Device 003: ID 0a5c:21e6 Broadcom Corp. BCM20702 Bluetooth 4.0 [ThinkPad]
&lt;/code>&lt;/pre>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;/table>
&lt;h2 id="graphic">Graphic&lt;/h2>
&lt;p>显卡信息在 &lt;code>/sys/class/drm/&lt;/code> 下，里面还包含了显卡支持输出接口，但只有 &lt;code>card+integer&lt;/code> 组成的目录才是显卡的，如本机的信息：&lt;/p>
&lt;p>| ```
1
2&lt;/p>
&lt;pre>&lt;code> | ```
$ ls /sys/class/drm/
card0@ card0-DP-1@ card0-DP-2@ card0-DP-3@ card0-HDMI-A-1@ card0-HDMI-A-2@ card0-HDMI-A-3@ card0-LVDS-1@ card0-VGA-1@ renderD128@ version
&lt;/code>&lt;/pre>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;/table>
&lt;p>根据输出可知只有一块显卡 &lt;code>card0&lt;/code> ，通过读取文件 &lt;code>card0/device/uevent&lt;/code> 获取设备类型，然后同 &lt;strong>网卡&lt;/strong> 一样查询 &lt;code>model&lt;/code> 信息，如：&lt;/p>
&lt;p>| ```
1
2
3
4
5
6
7
8
9
10
11
12
13&lt;/p>
&lt;pre>&lt;code> | ```
$ cat /sys/class/drm/card0/device/uevent
DRIVER=i915
PCI_CLASS=30000
PCI_ID=8086:0166
PCI_SUBSYS_ID=17AA:21FA
PCI_SLOT_NAME=0000:00:02.0
MODALIAS=pci:v00008086d00000166sv000017AAsd000021FAbc03sc00i00
$ lspci -k -s 0000:00:02.0
00:02.0 VGA compatible controller: Intel Corporation 3rd Gen Core processor Graphics Controller (rev 09)
Subsystem: Lenovo 3rd Gen Core processor Graphics Controller
Kernel driver in use: i915
Kernel modules: i915
&lt;/code>&lt;/pre>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;/table>
&lt;p>另外 &lt;code>/sys/class/hwmon/&lt;/code> 和 &lt;code>/sys/class/graphics/&lt;/code> 下有当前使用中的显卡设备，也是对应子目录下的 &lt;code>device/uevent&lt;/code> 来获取信息。
若无 &lt;code>device&lt;/code> 目录或是 &lt;code>device/uevent&lt;/code> 中的内容既没有 &lt;code>pci&lt;/code> 信息也没有 &lt;code>usb&lt;/code> 信息，则过滤掉，有就如下所示获取：
&lt;code>**hwmon**&lt;/code>&lt;/p>
&lt;p>| ```
1
2
3
4
5
6
7
8
9
10
11
12
13&lt;/p>
&lt;pre>&lt;code> | ```
$ cat /sys/class/hwmon/hwmon2/device/uevent
DRIVER=nouveau
PCI_CLASS=30000
PCI_ID=10DE:0A75
PCI_SUBSYS_ID=17AA:3957
PCI_SLOT_NAME=0000:02:00.0
MODALIAS=pci:v000010DEd00000A75sv000017AAsd00003957bc03sc00i00
$ lspci -k -s 0000:02:00.0
02:00.0 VGA compatible controller: NVIDIA Corporation GT218M [GeForce 310M] (rev a2)
Subsystem: Lenovo GT218M [GeForce 310M]
Kernel driver in use: nouveau
Kernel modules: nouveau
&lt;/code>&lt;/pre>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;/table>
&lt;p>&lt;code>**graphics**&lt;/code>&lt;/p>
&lt;p>| ```
1
2
3
4
5
6
7
8
9
10
11
12
13&lt;/p>
&lt;pre>&lt;code> | ```
$ cat /sys/class/graphics/fb0/device/uevent
DRIVER=i915
PCI_CLASS=30000
PCI_ID=8086:0166
PCI_SUBSYS_ID=17AA:21FA
PCI_SLOT_NAME=0000:00:02.0
MODALIAS=pci:v00008086d00000166sv000017AAsd000021FAbc03sc00i00
$ lspci -k -s 0000:00:02.0
00:02.0 VGA compatible controller: Intel Corporation 3rd Gen Core processor Graphics Controller (rev 09)
Subsystem: Lenovo 3rd Gen Core processor Graphics Controller
Kernel driver in use: i915
Kernel modules: i915
&lt;/code>&lt;/pre>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;/table>
&lt;h4 id="display-monitor">Display Monitor&lt;/h4>
&lt;p>显示器的信息目前是从 &lt;code>edid&lt;/code> 中获取，先确定显示器连接的显卡端口，然后使用 &lt;code>edid-decode&lt;/code> (需要安装)解析其的 &lt;code>edid&lt;/code> 文件，就可得到详细信息。如本机是 &lt;code>card0-LVDS-1&lt;/code> ：&lt;/p>
&lt;p>| ```
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40&lt;/p>
&lt;pre>&lt;code> | ```
$ cat /sys/class/drm/card0-LVDS-1/edid|edid-decode
Extracted contents:
header: 00 ff ff ff ff ff ff 00
serial number: 06 af 6c 10 00 00 00 00 00 14
version: 01 04
basic params: 90 1c 10 78 02
chroma info: 20 e5 92 55 54 92 28 25 50 54
established: 00 00 00
standard: 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01
descriptor 1: 12 1b 56 58 50 00 19 30 30 20 36 00 15 9c 10 00 00 18
descriptor 2: 00 00 00 0f 00 00 00 00 00 00 00 00 00 00 00 00 00 20
descriptor 3: 00 00 00 fe 00 41 55 4f 0a 20 20 20 20 20 20 20 20 20
descriptor 4: 00 00 00 fe 00 42 31 32 35 58 57 30 31 20 56 30 20 0a
extensions: 00
checksum: ec
Manufacturer: AUO Model 106c Serial Number 0
Made week 0 of 2010
EDID version: 1.4
Digital display
6 bits per primary color channel
Digital interface is not defined
Maximum image size: 28 cm x 16 cm
Gamma: 2.20
Supported color formats: RGB 4:4:4
First detailed timing is preferred timing
Established timings supported:
Standard timings supported:
Detailed mode: Clock 69.300 MHz, 277 mm x 156 mm
1366 1414 1446 1454 hborder 0
768 771 777 793 vborder 0
-hsync -vsync
Manufacturer-specified data, tag 15
ASCII string: AUO
ASCII string: B125XW01
Checksum: 0xec (valid)
EDID block does NOT conform to EDID 1.3!
Missing name descriptor
Missing monitor ranges
Detailed block string not properly terminated
&lt;/code>&lt;/pre>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;/table>
&lt;h2 id="sound">Sound&lt;/h2>
&lt;p>声卡设备在 &lt;code>/sys/class/sound&lt;/code> 目录下，目录名一般是 &lt;code>card+integer&lt;/code> 组成，如本机的信息：&lt;/p>
&lt;p>| ```
1
2&lt;/p>
&lt;pre>&lt;code> | ```
$ ls /sys/class/sound/
card0@ controlC0@ hwC0D0@ hwC0D3@ pcmC0D0c@ pcmC0D0p@ pcmC0D3p@ pcmC0D7p@ pcmC0D8p@ timer@
&lt;/code>&lt;/pre>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;/table>
&lt;p>就只有一块声卡 &lt;code>card0&lt;/code> ，通过读取文件 &lt;code>card0/device/uevent&lt;/code> 获取设备类型，然后同 &lt;strong>网卡&lt;/strong> 一样查询 &lt;code>model&lt;/code> 信息，如：&lt;/p>
&lt;p>| ```
1
2
3
4
5
6
7
8
9
10
11
12
13&lt;/p>
&lt;pre>&lt;code> | ```
$ cat /sys/class/sound/card0/device/uevent
DRIVER=snd_hda_intel
PCI_CLASS=40300
PCI_ID=8086:1E20
PCI_SUBSYS_ID=17AA:21FA
PCI_SLOT_NAME=0000:00:1b.0
MODALIAS=pci:v00008086d00001E20sv000017AAsd000021FAbc04sc03i00
$ lspci -k -s 0000:00:1b.0
00:1b.0 Audio device: Intel Corporation 7 Series/C216 Chipset Family High Definition Audio Controller (rev 04)
Subsystem: Lenovo 7 Series/C216 Chipset Family High Definition Audio Controller
Kernel driver in use: snd_hda_intel
Kernel modules: snd_hda_intel
&lt;/code>&lt;/pre>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;/table>
&lt;h2 id="inputoutput-device">Input/Output Device&lt;/h2>
&lt;p>输入设备的信息可以从 &lt;code>/proc/bus/input/devices&lt;/code> 文件中获取，如：&lt;/p>
&lt;p>| ```
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34&lt;/p>
&lt;pre>&lt;code> | ```
I: Bus=0019 Vendor=0000 Product=0005 Version=0000
N: Name=&amp;quot;Lid Switch&amp;quot;
P: Phys=PNP0C0D/button/input0
S: Sysfs=/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0C0D:00/input/input0
U: Uniq=
H: Handlers=event0
B: PROP=0
B: EV=21
B: SW=1
I: Bus=0011 Vendor=0001 Product=0001 Version=ab54
N: Name=&amp;quot;AT Translated Set 2 keyboard&amp;quot;
P: Phys=isa0060/serio0/input0
S: Sysfs=/devices/platform/i8042/serio0/input/input3
U: Uniq=
H: Handlers=sysrq kbd event3 leds
B: PROP=0
B: EV=120013
B: KEY=10000 0 0 0 1000402000000 3803078f800d001 feffffdfffefffff fffffffffffffffe
B: MSC=10
B: LED=7
I: Bus=0011 Vendor=0002 Product=0007 Version=01b1
N: Name=&amp;quot;SynPS/2 Synaptics TouchPad&amp;quot;
P: Phys=isa0060/serio1/input0
S: Sysfs=/devices/platform/i8042/serio1/input/input5
U: Uniq=
H: Handlers=mouse0 event5
B: PROP=5
B: EV=b
B: KEY=e520 10000 0 0 0 0
B: ABS=660800011000003
...
&lt;/code>&lt;/pre>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;/table>
&lt;p>由于内容太多，这里就只显示部分内容。
另外也可通过 &lt;code>xinput&lt;/code> 命令获取，如：&lt;/p>
&lt;p>| ```
1
2
3
4
5
6
7
8
9
10
11
12
13&lt;/p>
&lt;pre>&lt;code> | ```
$ xinput
⎡ Virtual core pointer id=2 [master pointer (3)]
⎜ ↳ Virtual core XTEST pointer id=4 [slave pointer (2)]
⎜ ↳ SynPS/2 Synaptics TouchPad id=11 [slave pointer (2)]
⎜ ↳ TPPS/2 IBM TrackPoint id=12 [slave pointer (2)]
⎣ Virtual core keyboard id=3 [master keyboard (2)]
↳ Virtual core XTEST keyboard id=5 [slave keyboard (3)]
↳ Power Button id=6 [slave keyboard (3)]
↳ Video Bus id=7 [slave keyboard (3)]
↳ Sleep Button id=8 [slave keyboard (3)]
↳ Integrated Camera: Integrated C id=9 [slave keyboard (3)]
↳ AT Translated Set 2 keyboard id=10 [slave keyboard (3)]
↳ ThinkPad Extra Buttons id=13 [slave keyboard (3)]
&lt;/code>&lt;/pre>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;/table>
&lt;p>使用 &lt;code>xinput list-prop &amp;lt;device id&amp;gt;&lt;/code> 可以查看设备的属性。&lt;/p>
&lt;h2 id="battery">Battery&lt;/h2>
&lt;p>电池信息可以从 &lt;code>/sys/class/power_supply/&amp;lt;name&amp;gt;/uevent&lt;/code> 文件中获取，电池的名称一般以 &lt;code>BAT&lt;/code> 开头。如本机的信息：&lt;/p>
&lt;p>| ```
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17&lt;/p>
&lt;pre>&lt;code> | ```
$ cat /sys/class/power_supply/BAT0/uevent
POWER_SUPPLY_NAME=BAT0
POWER_SUPPLY_STATUS=Full
POWER_SUPPLY_PRESENT=1
POWER_SUPPLY_TECHNOLOGY=Li-ion
POWER_SUPPLY_CYCLE_COUNT=0
POWER_SUPPLY_VOLTAGE_MIN_DESIGN=11100000
POWER_SUPPLY_VOLTAGE_NOW=12226000
POWER_SUPPLY_POWER_NOW=0
POWER_SUPPLY_ENERGY_FULL_DESIGN=57720000
POWER_SUPPLY_ENERGY_FULL=48000000
POWER_SUPPLY_ENERGY_NOW=48000000
POWER_SUPPLY_CAPACITY=100
POWER_SUPPLY_CAPACITY_LEVEL=Full
POWER_SUPPLY_MODEL_NAME=45N1023
POWER_SUPPLY_MANUFACTURER=SANYO
POWER_SUPPLY_SERIAL_NUMBER=15921
&lt;/code>&lt;/pre>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;/table>
&lt;h2 id="backlight">Backlight&lt;/h2>
&lt;p>&lt;code>/sys/class/backlight/&lt;/code> 目录下的是背光设备，如显示屏，背光键盘等，可以更改文件内容来调节这些设备的亮度。如：&lt;/p>
&lt;p>| ```
1
2&lt;/p>
&lt;pre>&lt;code> | ```
$ ls /sys/class/backlight/intel_backlight/
actual_brightness bl_power brightness device@ max_brightness power/ subsystem@ type uevent
&lt;/code>&lt;/pre>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;/table>
&lt;ul>
&lt;li>&lt;strong>brightness&lt;/strong>
更改这个文件可以修改此设备的当前亮度&lt;/li>
&lt;li>&lt;strong>max_brightness&lt;/strong>
这个文件显示的是此设备支持的最大亮度&lt;/li>
&lt;/ul>
&lt;p>另外背光设备 &lt;code>device&lt;/code> 可能只想真实的显卡设备，一般是子目录中包含 &lt;code>video&lt;/code> 的。&lt;/p>
&lt;h2 id="camera">Camera&lt;/h2>
&lt;p>&lt;code>/sys/class/video4linux/&lt;/code> 下是摄像头设备，不同子目录中的设备可能是同一个，也是读取 &lt;code>device/uevent&lt;/code> 文件来选择 &lt;code>lspci&lt;/code> 或 &lt;code>lsusb&lt;/code> 获取设备信息，如：&lt;/p>
&lt;p>| ```
1
2
3
4
5
6
7
8
9
10&lt;/p>
&lt;pre>&lt;code> | ```
$ cat /sys/class/video4linux/video0/device/uevent
DEVTYPE=usb_interface
DRIVER=uvcvideo
PRODUCT=5986/2d2/11
TYPE=239/2/1
INTERFACE=14/1/0
MODALIAS=usb:v5986p02D2d0011dcEFdsc02dp01ic0Eisc01ip00in00
$ lsusb -d 5986:2d2:11
Bus 001 Device 004: ID 5986:02d2 Acer, Inc
&lt;/code>&lt;/pre>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;/table>
&lt;h2 id="printer">Printer&lt;/h2>
&lt;p>打印机应该是在 &lt;code>/sys/class/printer&lt;/code> 下，信息获取方法应该与上文一致，本人手中没有打印机就不给出示例了。&lt;/p>
&lt;h2 id="fingerprint">Fingerprint&lt;/h2>
&lt;p>指纹的功能目前是由 &lt;code>libfprint&lt;/code> 项目提供，调用其提供的接口来获取。
如使用 &lt;code>qdbus&lt;/code> 来获取：&lt;/p>
&lt;p>| ```
1
2&lt;/p>
&lt;pre>&lt;code> | ```
$ qdbus --system --literal net.reactivated.Fprint /net/reactivated/Fprint/Manager net.reactivated.Fprint.Manager.GetDevices
[Argument: ao {}]
&lt;/code>&lt;/pre>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;/table>
&lt;p>输出可知本机没有指纹设备。&lt;/p>
&lt;h1 id="实现">实现&lt;/h1>
&lt;p>这里用 &lt;code>Go&lt;/code> 实现了 &lt;code>hardware&lt;/code> ，见此： &lt;a href="https://github.com/jouyouyun/hardware">hardware&lt;/a>&lt;/p></description></item><item><title>Docs: Memory 硬件管理工具</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/x.linux-%E7%AE%A1%E7%90%86/linux-%E7%A1%AC%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/memory-%E7%A1%AC%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/x.linux-%E7%AE%A1%E7%90%86/linux-%E7%A1%AC%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/memory-%E7%A1%AC%E4%BB%B6%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</guid><description>
&lt;h1 id="概述">概述&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;/blockquote>
&lt;h1 id="看内存的品牌及型号">看内存的品牌及型号&lt;/h1>
&lt;p>背景：想加个内存，Mysql 服务器上的内存不够了，就算可以插(插槽都有，现在是 4 条 4G 内存，还有空闲八个槽。)，不知道兼不兼容，否则不稳定的,不兼容的话，死的更惨,这个不一定了，停产了，就没有办法了。怎么办?得看内存的品牌及型号。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>root@jackxiang ~&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#75715e"># rpm -qa|grep dmidecode&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dmidecode-2.11-2.el6.x86_64
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>root@jackxiang ~&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#75715e"># dmidecode&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>查看服务器型号、序列号：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>root@jackxiang ~&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#75715e"># dmidecode|grep &amp;#34;System Information&amp;#34; -A9|egrep &amp;#34;Manufacturer|Product|Serial&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Manufacturer: VMware, Inc.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Product Name: VMware Virtual Platform
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Serial Number: VMware-42 &lt;span style="color:#ae81ff">18&lt;/span> c8 &lt;span style="color:#ae81ff">32&lt;/span> &lt;span style="color:#ae81ff">77&lt;/span> c6 ec 16-3f &lt;span style="color:#ae81ff">31&lt;/span> &lt;span style="color:#ae81ff">94&lt;/span> e9 d0 &lt;span style="color:#ae81ff">34&lt;/span> a6 ac
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Linux 查看内存的插槽数,已经使用多少插槽.每条内存多大：&lt;/p>
&lt;pre>&lt;code>[root@jackxiang ~]# dmidecode|grep -A5 &amp;quot;Memory Device&amp;quot;|grep Size|grep -v Range
Size: 4096 MB
Size: 2048 MB
Size: No Module Installed
Size: No Module Installed
&lt;/code>&lt;/pre>
&lt;p>Linux 查看内存的频率：&lt;/p>
&lt;pre>&lt;code>[root@localhost htdocs]# dmidecode|grep -A16 &amp;quot;Memory Device&amp;quot;|grep 'Speed'
Speed: 667 MHz (1.5 ns)
Speed: 667 MHz (1.5 ns)
Speed: 667 MHz (1.5 ns)
Speed: 667 MHz (1.5 ns)
Speed: Unknown
&lt;/code>&lt;/pre>
&lt;p>在 linux 查看内存型号的命令：&lt;/p>
&lt;pre>&lt;code>dmidecode -t memory
&lt;/code>&lt;/pre>
&lt;p>查看主板型号：&lt;/p>
&lt;pre>&lt;code>dmidecode |grep -A16 &amp;quot;System Information$&amp;quot;
&lt;/code>&lt;/pre>
&lt;p>内存槽及内存条：&lt;/p>
&lt;pre>&lt;code>dmidecode |grep -A16 &amp;quot;Memory Device$&amp;quot;
&lt;/code>&lt;/pre>
&lt;p>硬盘：&lt;/p>
&lt;pre>&lt;code>fdisk -l
smartctl -a /dev/sda
&lt;/code>&lt;/pre>
&lt;p>网卡：&lt;/p>
&lt;pre>&lt;code>mii-tool
&lt;/code>&lt;/pre>
&lt;!-- raw HTML omitted -->
&lt;pre>&lt;code>dmidecode|grep -P 'Maximum\s+Capacity' //最大支持几G内存
# dmidecode |grep &amp;quot;Product Name&amp;quot; //查看服务器品牌和型号
# dmidecode|grep -P -A5 &amp;quot;Memory\s+Device&amp;quot;|grep Size|grep -v Range //总共几个插槽，已使用几个插槽
Size: 1024 MB //此插槽有1根1G内存
Size: 1024 MB //此插槽有1根1G内存
Size: 1024 MB //此插槽有1根1G内存
Size: 1024 MB //此插槽有1根1G内存
Size: No Module Installed //此插槽未使用
Size: No Module Installed //此插槽未使用
&lt;/code>&lt;/pre>
&lt;!-- raw HTML omitted -->
&lt;pre>&lt;code># dmidecode -t 17 //数字17是dmidecode的参数，本文最后有其他数字参数
&lt;/code>&lt;/pre>
&lt;!-- raw HTML omitted -->
&lt;pre>&lt;code># dmidecode 2.7
SMBIOS 2.4 present.
Handle 0x0015, DMI type 17, 27 bytes.
Memory Device
Array Handle: 0x0013
Error Information Handle: Not Provided
Total Width: 72 bits
Data Width: 64 bits
Size: 2048 MB 【插槽1有1条2GB内存】
Form Factor: DIMM
Set: None
Locator: DIMM00
Bank Locator: BANK
Type: Other
Type Detail: Other
Speed: 667 MHz (1.5 ns)
Manufacturer:
Serial Number: BZACSKZ001
Asset Tag: RAM82
Part Number: MT9HTF6472FY-53EA2
Handle 0x0017, DMI type 17, 27 bytes.
Memory Device
Array Handle: 0x0013
Error Information Handle: Not Provided
Total Width: 72 bits
Data Width: 64 bits
Size: 2048 MB 【插槽2有1条2GB内存】
Form Factor: DIMM
Set: None
Locator: DIMM10
Bank Locator: BANK
Type: Other
Type Detail: Other
Speed: 667 MHz (1.5 ns)
Manufacturer:
Serial Number: BZACSKZ001
Asset Tag: RAM83
Part Number: MT9HTF6472FY-53EA2
Handle 0x0019, DMI type 17, 27 bytes.
Memory Device
Array Handle: 0x0013
Error Information Handle: Not Provided
Total Width: 72 bits
Data Width: 64 bits
Size: 2048 MB 【插槽3有1条2GB内存】
Form Factor: DIMM
Set: None
Locator: DIMM20
Bank Locator: BANK
Type: Other
Type Detail: Other
Speed: 667 MHz (1.5 ns)
Manufacturer:
Serial Number: BZACSKZ001
Asset Tag: RAM84
Part Number: MT9HTF6472FY-53EA2
Handle 0x001B, DMI type 17, 27 bytes.
Memory Device
Array Handle: 0x0013
Error Information Handle: Not Provided
Total Width: 72 bits
Data Width: 64 bits
Size: 2048 MB 【插槽4有1条2GB内存】
Form Factor: DIMM
Set: None
Locator: DIMM30
Bank Locator: BANK
Type: Other
Type Detail: Other
Speed: 667 MHz (1.5 ns)
Manufacturer:
Serial Number: BZACSKZ001
Asset Tag: RAM85
Part Number: MT9HTF6472FY-53EA2
&lt;/code>&lt;/pre>
&lt;p>实践来源：&lt;/p>
&lt;p>&lt;a href="http://www.jbxue.com/LINUXjishu/10053.html">http://www.jbxue.com/LINUXjishu/10053.html&lt;/a>&lt;/p>
&lt;p>&lt;a href="http://www.linuxsir.org/bbs/thread309696.html">http://www.linuxsir.org/bbs/thread309696.html&lt;/a>&lt;/p>
&lt;p>&lt;a href="http://xclinux.diandian.com/post/2013-04-16/40049844350">http://xclinux.diandian.com/post/2013-04-16/40049844350&lt;/a>作者：justwinit@向东博客 专注 WEB 应用 构架之美 &amp;mdash; 构架之美，在于尽态极妍 | 应用之美，在于药到病除&lt;/p>
&lt;p>地址：&lt;a href="http://www.justwinit.cn/post/7496/">http://www.justwinit.cn/post/7496/&lt;/a>&lt;/p></description></item></channel></rss>