<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦 – LVS</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/3.%E9%9B%86%E7%BE%A4%E4%B8%8E%E5%88%86%E5%B8%83%E5%BC%8F/lvs/</link><description>Recent content in LVS on 断念梦</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/3.%E9%9B%86%E7%BE%A4%E4%B8%8E%E5%88%86%E5%B8%83%E5%BC%8F/lvs/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: IPVS</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/3.%E9%9B%86%E7%BE%A4%E4%B8%8E%E5%88%86%E5%B8%83%E5%BC%8F/lvs/ipvs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/3.%E9%9B%86%E7%BE%A4%E4%B8%8E%E5%88%86%E5%B8%83%E5%BC%8F/lvs/ipvs/</guid><description>
&lt;h1 id="概述">概述&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/IP_Virtual_Server">Wiki,IPVS&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.linuxvirtualserver.org/software/ipvs.html">官方文档&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;strong>IP Virtual Service(IP 虚拟服务，简称 IPVS)&lt;/strong> 是基于 &lt;a href="https://desistdaydream.github.io/docs/IT%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/2.Kernel(%E5%86%85%E6%A0%B8)/8.Network%20%E7%AE%A1%E7%90%86/Linux%20%E7%BD%91%E7%BB%9C%E6%B5%81%E9%87%8F%E6%8E%A7%E5%88%B6/Netfilter%20%E6%B5%81%E9%87%8F%E6%8E%A7%E5%88%B6%E7%B3%BB%E7%BB%9F/_index.md">Netfilter&lt;/a> 的 Linux 内核模块，用来实现 &lt;a href="https://desistdaydream.github.io/docs/IT%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/3.%E9%9B%86%E7%BE%A4%E4%B8%8E%E5%88%86%E5%B8%83%E5%BC%8F/LVS/_index.md">LVS&lt;/a> 集群中的 **Scheduler(调度器) **功能。启动这个模块的 Linux 服务器就变成了 LVS 系统中的 &lt;strong>Director&lt;/strong>，此时，这个服务器可以看作是一种高效的 Layer-4(四层) 交换机。在 Director 上运行 IPVS 代码是 LVS 的基本要素。&lt;/p>
&lt;p>IPVS 在服务器上运行，并充当 RS 集群前面的负载均衡器。IPVS 可以将基于 TCP 和 UDP 的服务请求定向到真实服务器，并使真实服务器的服务在单个 IP 地址上表现为虚拟服务。当一个 TCP 连接的初始 SYN 报文到达时，IPVS 就选择一台服务器，将报文转发给它。此后通过查发报文的 IP 和 TCP 报文头地址，保证此连接的后继报文被转发到相同的服务器。这样，IPVS 无法检查到请求的内容再选择服务器，这就要求后端的服务器组是提供相同的服务，不管请求被送到哪一台服务器，返回结果都应该是一样的。但是在有一些应用中后端的服务器可能功能不一，有的是提供 HTML 文档的 Web 服务器，有的是提供图片的 Web 服务器，有的是提供 CGI 的 Web 服务器。这时，就需要基于内容请求分发 (Content-Based Request Distribution)，同时基于内容请求分发可以提高后端服务器上访问的局部性。&lt;/p>
&lt;ul>
&lt;li>一个 ipvs 主机可以同时定义多个 cluster service&lt;/li>
&lt;li>一个 cluster service 上至少应该定义一个 real server，定义时指明 lvs-type，以及 lvs scheduler&lt;/li>
&lt;/ul>
&lt;p>用白话理解 IPVS：
IPVS 就是包括 Director 和 RS 在内的所有设备上的 IP，统一虚拟成一个 IP，这个 IP 就是面向用户的唯一 IP，用户通过这个 IP，就可以访问集群，让集群为其提供服务，这也是负载均衡的体现，也是集群的体现，把很多设备当做一个整体来看。&lt;/p>
&lt;h2 id="ipvs-与-lvs-的关系">IPVS 与 LVS 的关系&lt;/h2>
&lt;p>LVS 更偏向于描述一个概念，而 IPVS 程序则是实现 LVS 的最核心部分。通过 IPVS 以及其管理工具 ipvsadm，可以实现 LVS 中的 Director(指挥器)。而 RS，本质上并不需要 LVS 或者 IPVS 代码支持，只需要在 DR 模式下，配置一些内核参数即可。&lt;/p>
&lt;p>而随着发展，IPVS 已经存单独的程序，被包含在 Linux 内核中，成了了默认自带的模块。&lt;/p>
&lt;p>可以这么说，IPVS 就是 LVS；也可以说，LVS 包含 ipvs 与 ipvsadm。&lt;/p>
&lt;h1 id="ipvs-配置">IPVS 配置&lt;/h1>
&lt;p>ipvs 可以通过两种方式进行配置：&lt;/p>
&lt;ul>
&lt;li>ipvsadm 命令&lt;/li>
&lt;li>ipvs 模块参数&lt;/li>
&lt;/ul>
&lt;p>ipvs 是一个内核模块，所以，想要配置 ipvs 则需要以[内核模块](Module(模块).md Kernel/Module(模块).md)的配置方式来进行配置。可以通过 modinfo -p ip_vs 命令查看该模块可以配置的参数&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>root@lichenhao:~# modinfo -p ip_vs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>conn_tab_bits:Set connections&lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span> hash size &lt;span style="color:#f92672">(&lt;/span>int&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>现阶段，可用的参数只有一个：
&lt;strong>conn_tab_bits&lt;/strong> # 设置连接表的大小。&lt;code>默认值：12&lt;/code>。&lt;/p>
&lt;ul>
&lt;li>该参数控制下面示例中 size 的大小，2 的 12 次方，4096&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>root@lichenhao:~# ipvsadm -ln
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>IP Virtual Server version 1.2.1 &lt;span style="color:#f92672">(&lt;/span>size&lt;span style="color:#f92672">=&lt;/span>4096&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Prot LocalAddress:Port Scheduler Flags
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -&amp;gt; RemoteAddress:Port Forward Weight ActiveConn InActConn
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>IPVS connection hash table size，该表用于记录每个进来的连接及路由去向的信息（这个和 iptables 跟踪表类似）。连接的 Hash 表要容纳几百万个并发连接，任何一个报文到达都需要查找连接 Hash 表。Hash 表的查找复杂度为 O(n/m)，其中 n 为 Hash 表中对象的个数，m 为 Hash 表的桶个数。当对象在 Hash 表中均匀分布和 Hash 表的桶个数与对象个数一样多时，Hash 表的查找复杂度可以接近 O(1)&lt;/p>
&lt;p>连接跟踪表中，每行称为一个 hash bucket（hash 桶），桶的个数是一个固定的值 CONFIG_IP_VS_TAB_BITS，默认为 12（2 的 12 次方，4096）。这个值可以调整，该值的大小应该在 8 到 20 之间。&lt;/p>
&lt;p>LVS 的调优建议将 hash table 的值设置为不低于并发连接数。例如，并发连接数为 200，Persistent 时间为 200S，那么 hash 桶的个数应设置为尽可能接近 200x200=40000，2 的 15 次方为 32768 就可以了。当 ip_vs_conn_tab_bits=20 时，哈希表的的大小（条目）为 pow(2,20)，即 1048576。&lt;/p>
&lt;p>这里的 hash 桶的个数，并不是 LVS 最大连接数限制。LVS 使用哈希链表解决“哈希冲突”，当连接数大于这个值时，必然会出现哈稀冲突，会（稍微）降低性能，但是并不对在功能上对 LVS 造成影响。&lt;/p>
&lt;p>修改模块参数：echo &amp;ldquo;options ip_vs conn_tab_bits=22&amp;rdquo; &amp;gt; /etc/modprobe.d/ip_vs.conf，效果如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>IP Virtual Server version 1.2.1 &lt;span style="color:#f92672">(&lt;/span>size&lt;span style="color:#f92672">=&lt;/span>4194304&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Prot LocalAddress:Port Scheduler Flags
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -&amp;gt; RemoteAddress:Port Forward Weight ActiveConn InActConn
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>TCP 10.10.9.60:30000 rr persistent &lt;span style="color:#ae81ff">30&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -&amp;gt; 10.10.9.69:30000 Route &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -&amp;gt; 10.10.9.70:30000 Route &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: IPVS</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/3.%E9%9B%86%E7%BE%A4%E4%B8%8E%E5%88%86%E5%B8%83%E5%BC%8F/lvs/ipvs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/3.%E9%9B%86%E7%BE%A4%E4%B8%8E%E5%88%86%E5%B8%83%E5%BC%8F/lvs/ipvs/</guid><description/></item><item><title>Docs: LVS 配置示例</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/3.%E9%9B%86%E7%BE%A4%E4%B8%8E%E5%88%86%E5%B8%83%E5%BC%8F/lvs/lvs-%E9%85%8D%E7%BD%AE%E7%A4%BA%E4%BE%8B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/3.%E9%9B%86%E7%BE%A4%E4%B8%8E%E5%88%86%E5%B8%83%E5%BC%8F/lvs/lvs-%E9%85%8D%E7%BD%AE%E7%A4%BA%E4%BE%8B/</guid><description>
&lt;h1 id="dr-模型配置样例">DR 模型配置样例&lt;/h1>
&lt;p>Director 配置&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ipvsadm -A -t 10.10.100.107:80 -s rr
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ipvsadm -a -t 10.10.100.107:80 -r 10.10.100.111 -g
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ipvsadm -a -t 10.10.100.107:80 -r 10.10.100.112 -g
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>RS 的配置&lt;/p>
&lt;p>设置 arp 参数&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cat &amp;gt; /etc/sysctl.d/lvs-sysctl.conf &lt;span style="color:#e6db74">&amp;lt;&amp;lt; EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">net.ipv4.conf.all.arp_ignore = 1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">net.ipv4.conf.lo.arp_ignore = 1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">net.ipv4.conf.all.arp_announce = 2
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">net.ipv4.conf.lo.arp_announce = 2
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sysctl -p /etc/sysctl.d/*
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>配置 lo 网卡&lt;/p>
&lt;pre>&lt;code>cat &amp;gt; /etc/sysconfig/network-scripts/ifcfg-lo:0 &amp;lt;&amp;lt; EOF
DEVICE=lo:0
IPADDR=10.10.100.107
NETMASK=255.255.255.255
ONBOOT=yes
NAME=loopback
EOF
ifup ifcfg-lo\:0
&lt;/code>&lt;/pre>
&lt;h1 id="其他配置样例">其他配置样例&lt;/h1>
&lt;h2 id="配置一个-nat-类型2-台-rs的集群">配置一个 NAT 类型（2 台 RS）的集群&lt;/h2>
&lt;p>LVS(Thinkpad): if1=172.16.53.128/24(VIP) if2=10.1.1.77/16(DIP)&lt;/p>
&lt;p>RS1(ibm1): 10.1.1.78/16(RIP1)&lt;/p>
&lt;p>RS2(ibm2): 10.1.1.79/16(RIP2)&lt;/p>
&lt;p>RS1 与 RS2 主机使用同一个 vmnet 网卡&lt;/p>
&lt;p>如下图：
&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/rlona8/1616132564982-5b0ee7e2-e822-4976-8cf0-b10f9108d986.jpeg" alt="">&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/rlona8/1616132564990-81c808d9-696f-4cda-921e-1f3532fc2a6f.jpeg" alt="">&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/rlona8/1616132565016-ee9b26be-4fb0-4104-b1f8-73ccd019bc04.jpeg" alt="">&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/rlona8/1616132565003-365215ad-80a1-43c2-b7d0-2167171bbd4f.jpeg" alt="">&lt;/p>
&lt;p>分别在 ibm1、ibm2 上装上几个服务&lt;/p>
&lt;p>同步 ibm1 与 ibm2 的时间!这个在集群服务中很重要！！下面两步即同&lt;/p>
&lt;p>![1.编辑/etc/chrony.conf 配置文件](http://upload-images.jianshu.io/upload_images/2057465-&amp;gt;&lt;/p>
&lt;p>da3b895ab16765f0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/rlona8/1616132564982-ee55e0f5-4497-47b9-bb50-7c46bf1028ab.jpeg" alt="">&lt;/p>
&lt;p>2.重启 chronyd 服务&lt;/p>
&lt;p>打开 ibm1 与 ibm2 上的配置 httpd 服务如下图效果&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/rlona8/1616132564958-21036f72-e72e-4b9e-a7e6-c529ced28984.jpeg" alt="">&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/rlona8/1616132564984-b8b52892-fdaa-4068-9dee-a1eeb12c4694.jpeg" alt="">&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/rlona8/1616132564979-267630af-71bf-4a2c-9e9e-e068c6f1947e.jpeg" alt="">&lt;/p>
&lt;p>在 Thinkpad 主机上安装 ipvsadm&lt;/p>
&lt;p>将 RS1 RS2 的默认网关指向 Director 的 DIP&lt;/p>
&lt;p>route add default gw 10.1.1.77/16&lt;/p>
&lt;p>当主机及拓扑结构及 ip 与各种软件都设置好的时候，LVS 的设置是非常简单与快速的一件事&lt;/p>
&lt;p>ipvsadm -A -t 10.1.1.77:80 -s rr # 添加 LVS 集群与调度算法 ipvsadm -a -t 10.1.1.77:80 -r 10.1.1.78 -m -w 1 # 添加 LVS 集群主机与 LVS 调度模式及 RS 权重 ipvsadm -a -t 10.1.1.77:80 -r 10.1.1.79 -m -w 1 # 同上[root@Thinkpad ~]# echo 1 &amp;gt; /proc/sys/net/ipv4/ip_forward # 打开 Director 的转发功能&lt;/p>
&lt;p>至此,一个简单的根据 LVS rr 算法调度的负载均衡集群完成了.&lt;/p>
&lt;h2 id="配置一个-dr-类型2-台-rs的集群三台虚拟机都桥接到物理机上">配置一个 DR 类型（2 台 RS）的集群,三台虚拟机都桥接到物理机上.&lt;/h2>
&lt;p>Directory: DIP: 192.168.31.101/24 调度主机只需要一个网卡接口 VIP 用 DIP 的别名生成&lt;/p>
&lt;p>RS1: 192.168.31.194/24&lt;/p>
&lt;p>RS2: 192.168.31.220/24&lt;/p>
&lt;p>编写以下脚本文件并分别在各 RS 上执行.(setparam.sh)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vip&lt;span style="color:#f92672">=&lt;/span>192.168.10.21
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mask&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;255.255.255.255&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">case&lt;/span> $1 in
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>start&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#ae81ff">1&lt;/span> &amp;gt; /proc/sys/net/ipv4/conf/all/arp_ignore
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#ae81ff">1&lt;/span> &amp;gt; /proc/sys/net/ipv4/conf/lo/arp_ignore
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#ae81ff">2&lt;/span> &amp;gt; /proc/sys/net/ipv4/conf/all/arp_announce
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#ae81ff">2&lt;/span> &amp;gt; /proc/sys/net/ipv4/conf/lo/arp_announce
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> /sbin/ifconfig lo:0 $vip netmask $mask broadcast $vip up
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> route add -host $vip dev lo:0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>stop&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> /sbin/ifconfig lo:0 down
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#ae81ff">0&lt;/span> &amp;gt; /proc/sys/net/ipv4/conf/all/arp_ignore
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#ae81ff">0&lt;/span> &amp;gt; /proc/sys/net/ipv4/conf/lo/arp_ignore
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#ae81ff">0&lt;/span> &amp;gt; /proc/sys/net/ipv4/conf/all/arp_announce
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#ae81ff">0&lt;/span> &amp;gt; /proc/sys/net/ipv4/conf/lo/arp_announce
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> route del -host $vip dev lo:0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>status&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Status of LVS-DR real server.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> islothere&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">`&lt;/span>/sbin/ifconfig lo:0 | grep $vip&lt;span style="color:#e6db74">`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> isrothere&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">`&lt;/span>netstat -rn | grep &lt;span style="color:#e6db74">&amp;#34;lo:0&amp;#34;&lt;/span> | grep $vip&lt;span style="color:#e6db74">`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[&lt;/span> ! &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$islothere&lt;span style="color:#e6db74">&amp;#34;&lt;/span> -o ! &lt;span style="color:#e6db74">&amp;#34;isrothere&amp;#34;&lt;/span> &lt;span style="color:#f92672">]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Either the route or the lo:0 device&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># not found.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;LVS-DR real server Stopped.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;LVS-DR real server Running.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;Usage &lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>basename $0&lt;span style="color:#66d9ef">)&lt;/span>&lt;span style="color:#e6db74"> start|stop&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exit &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">esac&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>编写以下脚本在 Director(调度器)上添加 VIP 添加 LVS 规则等操作 (ipvs.sh)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vip&lt;span style="color:#f92672">=&lt;/span>192.168.10.21
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>iface&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;eth0:0&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mask&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;255.255.255.255&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>port&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;80&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rs1&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;192.168.10.22&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rs2&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;192.168.10.23&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>scheduler&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;rr&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">case&lt;/span> $1 in
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>start&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ifconfig $iface $vip netmask $mask broadcast $vip up
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> iptables -F
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ipvsadm -A -t &lt;span style="color:#e6db74">${&lt;/span>vip&lt;span style="color:#e6db74">}&lt;/span>:&lt;span style="color:#e6db74">${&lt;/span>port&lt;span style="color:#e6db74">}&lt;/span> -s $scheduler
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ipvsadm -a -t &lt;span style="color:#e6db74">${&lt;/span>vip&lt;span style="color:#e6db74">}&lt;/span>:&lt;span style="color:#e6db74">${&lt;/span>port&lt;span style="color:#e6db74">}&lt;/span> -r $rs1 -g
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ipvsadm -a -t &lt;span style="color:#e6db74">${&lt;/span>vip&lt;span style="color:#e6db74">}&lt;/span>:&lt;span style="color:#e6db74">${&lt;/span>port&lt;span style="color:#e6db74">}&lt;/span> -r $rs2 -g
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>stop&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ipvsadm -C
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ifconfig $iface down
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>Usage: &lt;span style="color:#66d9ef">$(&lt;/span>basename $0&lt;span style="color:#66d9ef">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>start|stop|status&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exit &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">esac&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/rlona8/1616132565011-7f0f7b82-c341-4628-ab9b-a729530ca1d5.jpeg" alt="">&lt;/p>
&lt;h2 id="fwmfirewall-mark借助于防火墙标记来分类报文而后基于标记定义集群服务可将多个不同的应用使用同一个集群服务进行调度">FWM(FireWall Mark)借助于防火墙标记来分类报文，而后基于标记定义集群服务，可将多个不同的应用使用同一个集群服务进行调度。&lt;/h2>
&lt;p>示例：&lt;/p>
&lt;pre>&lt;code>iptables -t mangle -A PREROUTING -d 10.1.0.5 -p tcp -m multiport --dports 80,443 -j MARK --set-mark 11
ipvsadm -A -f 11 -s rr
ipvsadm -a -t 192.168.31.100 -r 192.168.31.194 -g -w 1
ipvsadm -a -t 192.168.31.100 -r 192.168.31.220 -g -w 1
&lt;/code>&lt;/pre>
&lt;p>实现目标 2：firewallmark（fwm）&lt;/p>
&lt;p>fwm 是为指定的某一群体打标签，这一群体可以是某几个 ip 地址或者是几个端口，实现的作用是，可以将需要访问的几个目标地址或者端口定向到同一个标签，比如给 80,8080,443 端口打上同一个标签，那么就可以让用户访问这三个端口中的任意一个端口定向到同一个主机。&lt;/p>
&lt;p>在上面的基础上开始实现 fwm：&lt;/p>
&lt;p>1.host1 上面清理掉之前的规则：&lt;/p>
&lt;p>ipvsadm -C&lt;/p>
&lt;p>2.使用 mangle 在 PREROUTING 上面打上标签&lt;/p>
&lt;p>iptables -A PREROUTNG -t mangle -d 172.16.52.57 -p tcp &amp;ndash;dport 80 -j MARK &amp;ndash;set-mark 9&lt;/p>
&lt;p>ipvsadm -A -f 3 -s rr&lt;/p>
&lt;p>ipvsadm -a -f 3 -r 172.16.52.60 -g&lt;/p>
&lt;p>ipvsadm -a -f 3 -r 172.16.52.61 -g&lt;/p>
&lt;h2 id="lvs-的持久连接机制-persiistence-这个功能与-fwm-结合可实现端口姻亲关系">LVS 的持久连接机制 persiistence 这个功能与 FWM 结合可实现端口姻亲关系&lt;/h2>
&lt;p>LVS 基于其的持久连接模板，实现无论使用任何调度算法，在一段时间内，都能实现将来自同一个地址的请求始终发往同一个 RS。不同于 sh 算法在于其是可自定义的且没有超时时长。&lt;/p>
&lt;pre>&lt;code>ipvsadm -A -t 10.1.0.5:80 -s rr -p 60 # 持久连接定义成60秒，在这个时间之后 rr算法才会生效
ipvsadm -a -t 10.1.0.5:80 -r 10.1.0.7 -g -w 1
ipvsadm -a -t 10.1.0.5:80 -r 10.1.0.8 -g -w 1
&lt;/code>&lt;/pre>
&lt;p>port Affinity：端口姻亲关系&lt;/p>
&lt;p>每端口持久：每集群服务单独定义，并定义其持久性&lt;/p>
&lt;p>每防火墙标记持久：基于防火墙标记定义持久的集群服务，可实现将多个端口上的应用统一调度，即所谓的 port Affinity&lt;/p>
&lt;p>每客户端持久&lt;/p>
&lt;p>实现目标 3：持久连接&lt;/p>
&lt;p>eg1：&lt;/p>
&lt;p>[root@localhost scripts]# ipvsadm -A -t 172.16.52.57:80 -s rr -p&lt;/p>
&lt;p>[root@localhost scripts]# ipvsadm -a -t 172.16.52.57:80 -r 172.16.52.60 -g&lt;/p>
&lt;p>[root@localhost scripts]# ipvsadm -a -t 172.16.52.57:80 -r 172.16.52.61 -g&lt;/p>
&lt;p>说明：基于端口的持久连接，-p 是指定持久时长，默认是 360s，但是 man 手册里面说的 300s，常用方式是： -p timeout&lt;/p>
&lt;p>eg2：&lt;/p>
&lt;p>[root@localhost scripts]# ipvsadm -A -t 172.16.52.57:0 -s rr -p&lt;/p>
&lt;p>[root@localhost scripts]# ipvsadm -a -t 172.16.52.57:0 -r 172.16.52.60 -g&lt;/p>
&lt;p>[root@localhost scripts]# ipvsadm -a -t 172.16.52.57:0 -r 172.16.52.61 -g&lt;/p>
&lt;p>说明：基于客户端的持久连接，使用端口号 0，后面必须要跟-p ，不加可以试试看，会报错的。。。&lt;/p>
&lt;p>eg3：&lt;/p>
&lt;p>[root@localhost scripts]# iptables -A PREROUTING -t mangle -d 172.16.52.57 -p tcp &amp;ndash;dport 80 -j MARK &amp;ndash;set-mark 20&lt;/p>
&lt;p>[root@localhost scripts]# iptables -A PREROUTING -t mangle -d 172.16.52.57 -p tcp &amp;ndash;dport 443 -j MARK &amp;ndash;set-mark 20&lt;/p>
&lt;p>[root@localhost scripts]# ipvsadm -A -f 20 -s rr -p&lt;/p>
&lt;p>[root@localhost scripts]# ipvsadm -a -f 20 -r 172.16.52.60 -g -p&lt;/p>
&lt;p>[root@localhost scripts]# ipvsadm -a -f 20 -r 172.16.52.61 -g -p&lt;/p>
&lt;p>说明：通过防火墙标记的方式来进行的持久连接,可以 cat /proc/net/ip_vs_conn 查看连接状态&lt;/p>
&lt;p>总结：持久连接分为上面三种方式，但跟调度算法无关，调度算法无法保持持久连接&lt;/p>
&lt;h1 id="heading">&lt;/h1></description></item></channel></rss>