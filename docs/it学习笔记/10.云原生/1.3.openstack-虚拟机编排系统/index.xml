<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦 – 1.3.OpenStack 虚拟机编排系统</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/1.3.openstack-%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/</link><description>Recent content in 1.3.OpenStack 虚拟机编排系统 on 断念梦</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/1.3.openstack-%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Opensatck 介绍</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/1.3.openstack-%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/opensatck-%E4%BB%8B%E7%BB%8D/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/1.3.openstack-%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/opensatck-%E4%BB%8B%E7%BB%8D/</guid><description/></item><item><title>Docs: OpenStack 部署与清理</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/1.3.openstack-%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/openstack%E9%83%A8%E7%BD%B2%E4%B8%8E%E6%B8%85%E7%90%86/openstack-%E9%83%A8%E7%BD%B2%E4%B8%8E%E6%B8%85%E7%90%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/1.3.openstack-%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/openstack%E9%83%A8%E7%BD%B2%E4%B8%8E%E6%B8%85%E7%90%86/openstack-%E9%83%A8%E7%BD%B2%E4%B8%8E%E6%B8%85%E7%90%86/</guid><description>
&lt;h1 id="概述">概述&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;/blockquote>
&lt;p>&lt;a href="https://thoughts.teambition.com/workspaces/603b04c9f83f2a00428f7321/folders/5fa948644cc5830001751d72">https://thoughts.teambition.com/workspaces/603b04c9f83f2a00428f7321/folders/5fa948644cc5830001751d72&lt;/a>&lt;/p>
&lt;p>部署 OpenStack 有多种方式&lt;/p>
&lt;ul>
&lt;li>手动部署 OpenStack 中的每一个组件
&lt;ul>
&lt;li>&lt;a href="https://docs.openstack.org/xena/install/">https://docs.openstack.org/xena/install/&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>使用自动化部署工具，部署工具有多种类型可供选择
&lt;ul>
&lt;li>&lt;a href="https://docs.openstack.org/xena/deploy/">https://docs.openstack.org/xena/deploy/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.openstack.org/project-deploy-guide/charm-deployment-guide/latest/">OpenStack Charms&lt;/a> # 使用 MAAS 和 Juju 部署。
&lt;ul>
&lt;li>一种完善的部署方式，基于 Ubuntu 开发 MAAS。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://docs.openstack.org/project-deploy-guide/kolla-ansible/latest/">OpenStack Kolla&lt;/a> # 在容器中使用 Ansible 部署
&lt;ul>
&lt;li>非常简单高效得部署一个用来 生产、开发、测试 的 OpenStack。支持 all-in-one 和 multinode 两种模式(即所有组件都在一个节点或分散在多个节点)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>其他&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="支持的操作系统">支持的操作系统&lt;/h2>
&lt;p>Kolla Ansible 支持以下主机操作系统 (OS)：&lt;/p>
&lt;blockquote>
&lt;p>从 Ussuri 版本开始，OpenStack 不再支持 CentOS 7 作为主机操作系统。Train 版本同时支持 CentOS 7 和 8，并提供了迁移路径。有关迁移到 CentOS 8 的信息，请参阅 &lt;a href="https://docs.openstack.org/kolla-ansible/train/user/centos8.html">Kolla Ansible Train 文档&lt;/a>。
不再支持 CentOS Linux 8（相对于 CentOS Stream 8）作为主机操作系统。Victoria 版本将来会同时支持 CentOS Linux 8 和 CentOS Stream 8，并提供迁移途径。&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>CentOS Stream 8&lt;/li>
&lt;li>Debian Bullseye (11)&lt;/li>
&lt;li>RHEL 8（已弃用）&lt;/li>
&lt;li>Rocky Linux 8&lt;/li>
&lt;li>Ubuntu Focal (20.04)&lt;/li>
&lt;/ul>
&lt;h2 id="支持的容器镜像">支持的容器镜像&lt;/h2>
&lt;p>为获得最佳结果，基本容器映像分发应与主机操作系统分发匹配。支持以下值 kolla_base_distro：&lt;/p>
&lt;ul>
&lt;li>centos&lt;/li>
&lt;li>debian&lt;/li>
&lt;li>rhel（已弃用）&lt;/li>
&lt;li>ubuntu&lt;/li>
&lt;/ul>
&lt;p>有关哪些发行版支持哪些图像的详细信息，请参阅 &lt;a href="https://docs.openstack.org/kolla/latest/support_matrix">Kolla 支持矩阵&lt;/a>。&lt;/p>
&lt;h1 id="kolla-ansible">Kolla-ansible&lt;/h1>
&lt;p>注意：&lt;/p>
&lt;ul>
&lt;li>宿主机至少需要两个可用的网卡，在 &lt;code>/etc/kolla/globals.yml&lt;/code> 文件中，被描述为如下两个关键字
&lt;ul>
&lt;li>&lt;strong>network_interface&lt;/strong> # 管理网络、API 网络的网卡&lt;/li>
&lt;li>&lt;strong>neutron_external_interface&lt;/strong> # Neutron 外部接口就是指内网环境。该网络设备将会桥接到 &lt;code>ovs-switch&lt;/code> 这个桥设备上。虚拟机是通过这块网卡访问外网。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="安装依赖并使用虚拟环境">安装依赖并使用虚拟环境&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt install python3-dev libffi-dev gcc libssl-dev
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建一个虚拟环境以安装部署工具&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>export KOLLA_DIR&lt;span style="color:#f92672">=&lt;/span>/root/kolla
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir -p &lt;span style="color:#e6db74">${&lt;/span>KOLLA_DIR&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt install python3-venv
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>python3 -m venv &lt;span style="color:#e6db74">${&lt;/span>KOLLA_DIR&lt;span style="color:#e6db74">}&lt;/span>/venv
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>source &lt;span style="color:#e6db74">${&lt;/span>KOLLA_DIR&lt;span style="color:#e6db74">}&lt;/span>/venv/bin/activate
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pip install -U pip -i https://pypi.tuna.tsinghua.edu.cn/simple
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pip install &lt;span style="color:#e6db74">&amp;#39;ansible&amp;lt;5.0&amp;#39;&lt;/span> -i https://pypi.tuna.tsinghua.edu.cn/simple
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="安装-kolla-ansible">安装 Kolla-ansible&lt;/h2>
&lt;p>这里说的 Kolla-ansible 主要指的是用于部署 Openstack 的 Ansible Playbook~~~~&lt;/p>
&lt;p>确定要安装的版本。Kolla-ansible 的版本号与 Openstack 的版本号保持一致，这里以 Openstack 的 &lt;code>xena&lt;/code> 版本为例&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>export KOLLA_BRANCH_NAME&lt;span style="color:#f92672">=&lt;/span>xena
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用 pip 安装 kolla-ansible 及其依赖项。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pip install git+https://opendev.org/openstack/kolla-ansible@&lt;span style="color:#e6db74">${&lt;/span>KOLLA_BRANCH_NAME&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建配置目录&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo mkdir -p /etc/kolla
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo chown $USER:$USER /etc/kolla
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cp -r &lt;span style="color:#e6db74">${&lt;/span>KOLLA_DIR&lt;span style="color:#e6db74">}&lt;/span>/venv/share/kolla-ansible/etc_examples/kolla/* /etc/kolla
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>将 Ansible Playbook 所需的 Inventory 拷贝到当前目录&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cp &lt;span style="color:#e6db74">${&lt;/span>KOLLA_DIR&lt;span style="color:#e6db74">}&lt;/span>/venv/share/kolla-ansible/ansible/inventory/* .
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="配置-ansible">配置 Ansible&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>mkdir -p /etc/ansible
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tee /etc/ansible/ansible.cfg &amp;gt; /dev/null &lt;span style="color:#e6db74">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">[defaults]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">host_key_checking=False
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">pipelining=True
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">forks=100
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="all-in-one-部署-openstack">All-in-one 部署 OpenStack&lt;/h2>
&lt;h3 id="配置-kolla">配置 Kolla&lt;/h3>
&lt;p>为 &lt;code>/etc/kolla/passwords.yml&lt;/code> 文件生成密码&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>kolla-genpwd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>配置 &lt;code>/etc/kolla/globals.yml&lt;/code> 文件&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>kolla_base_distro: &lt;span style="color:#e6db74">&amp;#34;ubuntu&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kolla_install_type: &lt;span style="color:#e6db74">&amp;#34;source&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>network_interface: &lt;span style="color:#e6db74">&amp;#34;eno3&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># neutron 外部接口就是指内网环境。该网络设备将会桥街道 ovs-switch 这个桥设备上。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>neutron_external_interface: &lt;span style="color:#e6db74">&amp;#34;eno4&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kolla_internal_vip_address: &lt;span style="color:#e6db74">&amp;#34;192.168.88.236&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>enable_cinder: &lt;span style="color:#e6db74">&amp;#34;yes&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>openstack_release: &lt;span style="color:#e6db74">&amp;#34;xena&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>enable_haproxy: &lt;span style="color:#e6db74">&amp;#34;no&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="配置-inventory">配置 Inventory&lt;/h3>
&lt;p>略，直接使用 localhost 即可&lt;/p>
&lt;h3 id="部署依赖并检查环境">部署依赖并检查环境&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>kolla-ansible -i ./all-in-one bootstrap-servers
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kolla-ansible -i ./all-in-one prechecks
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="部署-openstack">部署 OpenStack&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>kolla-ansible -i ./all-in-one pull ？？？待验证
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kolla-ansible -i ./all-in-one deploy
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="multinode-部署-openstack">Multinode 部署 OpenStack&lt;/h2></description></item><item><title>Docs: Keystone</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/1.3.openstack-%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/keystone/keystone/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/1.3.openstack-%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/keystone/keystone/</guid><description/></item><item><title>Docs: Neutron</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/1.3.openstack-%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/neutron/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/1.3.openstack-%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/neutron/</guid><description/></item><item><title>Docs: Nova</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/1.3.openstack-%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/nova/nova/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/1.3.openstack-%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/nova/nova/</guid><description>
&lt;h1 id="nova-的子组件以及工作流程">Nova 的子组件以及工作流程&lt;/h1>
&lt;p>Nova 的子组件&lt;/p>
&lt;ol>
&lt;li>
&lt;p>API&lt;/p>
&lt;ol>
&lt;li>nova-api 接收和响应客户的 API 调用。 除了提供 OpenStack 自己的 API，nova-api 还支持 Amazon EC2 API。 也就是说，如果客户以前使用 Amazon EC2，并且用 EC2 的 API 开发了些工具来管理虚机，那么如果现在要换成 OpenStack，这些工具可以无缝迁移到 OpenStack，因为 nova-api 兼容 EC2 API，无需做任何修改。&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>Compute Core&lt;/p>
&lt;ol>
&lt;li>
&lt;p>nova-scheduler #虚机调度服务，负责决定在哪个计算节点上运行虚机&lt;/p>
&lt;/li>
&lt;li>
&lt;p>nova-compute #管理虚机的核心服务，通过调用 Hypervisor API 实现虚机生命周期管理&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Hypervisor #计算节点上跑的虚拟化管理程序，虚机管理最底层的程序。 不同虚拟化技术提供自己的 Hypervisor。 常用的 Hypervisor 有 KVM，Xen， VMWare 等&lt;/p>
&lt;/li>
&lt;li>
&lt;p>nova-conductor #nova-compute 经常需要更新数据库，比如更新虚机的状态。 出于安全性和伸缩性的考虑，nova-compute 并不会直接访问数据库，而是将这个任务委托给 nova-conductor，这个我们后面详细讨论。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>Console Interface&lt;/p>
&lt;ol>
&lt;li>
&lt;p>nova-console 用户可以通过多种方式访问虚机的控制台：nova-novncproxy，基于 Web 浏览器的 VNC 访问 nova-spicehtml5proxy，基于 HTML5 浏览器的 SPICE 访问 nova-xvpnvncproxy，基于 Java 客户端的 VNC 访问&lt;/p>
&lt;/li>
&lt;li>
&lt;p>nova-consoleauth 负责对访问虚机控制台请求提供 Token 认证&lt;/p>
&lt;/li>
&lt;li>
&lt;p>nova-cert 提供 x509 证书支持&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>Database Nova 会有一些数据需要存放到数据库中，一般使用 MySQL。数据库安装在控制节点上。 Nova 使用命名为 “nova” 的数据库。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Message Queue 在前面我们了解到 Nova 包含众多的子服务，这些子服务之间需要相互协调和通信。为解耦各个子服务，Nova 通过 Message Queue 作为子服务的信息中转站。 所以在架构图上我们看到了子服务之间没有直接的连线，是通过 Message Queue 联系的。OpenStack 默认是用 RabbitMQ 作为 Message Queue。 MQ 是 OpenStack 的核心基础组件。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/cu87t4/1616123186194-d43ec1f0-3506-4784-8c70-81fc866de03d.jpeg" alt="">&lt;/p>
&lt;ol>
&lt;li>
&lt;p>客户（可以是 OpenStack 最终用户，也可以是其他程序）向 API（nova-api）发送请求：“帮我创建一个虚机”&lt;/p>
&lt;/li>
&lt;li>
&lt;p>API 对请求做一些必要处理后，向 Messaging（RabbitMQ）发送了一条消息：“让 Scheduler 创建一个虚机”&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Scheduler（nova-scheduler）从 Messaging 获取到 API 发给它的消息，然后执行调度算法，从若干计算节点中选出节点 A&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Scheduler 向 Messaging 发送了一条消息：“在计算节点 A 上创建这个虚机”&lt;/p>
&lt;/li>
&lt;li>
&lt;p>计算节点 A 的 Compute（nova-compute）从 Messaging 中获取到 Scheduler 发给它的消息，然后在本节点的 Hypervisor 上启动虚机。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在虚机创建的过程中，Compute 如果需要查询或更新数据库信息，会通过 Messaging 向 Conductor（nova-conductor）发送消息，Conductor 负责数据库访问。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>以上是创建虚机最核心的步骤。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>程序之间的调用通常分两种：同步调用和异步调用。&lt;/p>
&lt;p>同步调用&lt;/p>
&lt;p>API 直接调用 Scheduler 的接口是同步调用。 其特点是 API 发出请求后需要一直等待，直到 Scheduler 完成对 Compute 的调度，将结果返回给 API 后 API 才能够继续做后面的工作。&lt;/p>
&lt;p>异步调用&lt;/p>
&lt;p>API 通过 Messaging 间接调用 Scheduler 就是异步调用。 其特点是 API 发出请求后不需要等待，直接返回，继续做后面的工作。 Scheduler 从 Messaging 接收到请求后执行调度操作，完成后将结果也通过 Messaging 发送给 API。在 OpenStack 这类分布式系统中，通常采用异步调用的方式，其好处是：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>解耦各子服务。 子服务不需要知道其他服务在哪里运行，只需要发送消息给 Messaging 就能完成调用。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>提高性能 异步调用使得调用者无需等待结果返回。这样可以继续执行更多的工作，提高系统总的吞吐量。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>提高伸缩性 子服务可以根据需要进行扩展，启动更多的实例处理更多的请求，在提高可用性的同时也提高了整个系统的伸缩性。而且这种变化不会影响到其他子服务，也就是说变化对别人是透明的。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>image 说明：创建 instance 时会使用一个从 glance 下载下来的 image(暂时称作 image base）作为 backing file，当 instance 创建完成后生成了一个新的 image(暂时称作 using image)，启动时候后对 image 进行的操作都是在 using image 中进行的，base image 不受影响，当使用相同 image 创建多个 instance 的时候，就不会下载新的 image，而是直接使用已经下载好的在_base 文件夹下的 base image 来直接创建。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>~/data/nova/instances/ 这是保存 using image 的路径，在该文件夹下的 image ID 是文件夹形式，可以进入该文件夹查看该 using image 的日志磁盘信息等附加信息，这些信息都是可变的。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>~/data/nova/instances/_base/ 这是从 glance 下载下来的 base image 的保存路径，这个基本镜像是不变的。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>注：VMware 中的快照就相当于这里的 base image(也可叫做模板)，基于这个快照使用的系统就是 using image。我们也可以把 using image 创建成一个新的 new base image，然后新的 image 发送给 glance，然后再从 glance 下载 new base image 作为 base image 2 来使用。&lt;/p></description></item><item><title>Docs: 命令行工具</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/1.3.openstack-%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/1.3.openstack-%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/</guid><description/></item><item><title>Docs: 配置详解</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/1.3.openstack-%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/1.3.openstack-%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/</guid><description>
&lt;h1 id="概述">概述&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.openstack.org/xena/configuration/">官方文档，配置指南&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;a href="https://docs.openstack.org/rocky/configuration/">https://docs.openstack.org/rocky/configuration/&lt;/a>&lt;/p></description></item></channel></rss>