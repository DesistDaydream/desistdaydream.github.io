<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦 – kubeadm 命令行工具</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/kubernetes-%E7%AE%A1%E7%90%86/kubeadm-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/</link><description>Recent content in kubeadm 命令行工具 on 断念梦</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/kubernetes-%E7%AE%A1%E7%90%86/kubeadm-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: kubeadm 命令详解</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/kubernetes-%E7%AE%A1%E7%90%86/kubeadm-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/kubeadm-%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/kubernetes-%E7%AE%A1%E7%90%86/kubeadm-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/kubeadm-%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</guid><description>
&lt;h1 id="概述">概述&lt;/h1>
&lt;h1 id="syntax语法">Syntax(语法)&lt;/h1>
&lt;p>&lt;strong>kubeadm [command]&lt;/strong>
Command 包括：&lt;/p>
&lt;ol>
&lt;li>alpha Kubeadm experimental sub-commands&lt;/li>
&lt;li>completion Output shell completion code for the specified shell (bash or zsh).&lt;/li>
&lt;li>config Manage configuration for a kubeadm cluster persisted in a ConfigMap in the cluster.&lt;/li>
&lt;li>help Help about any command&lt;/li>
&lt;li>init Run this command in order to set up the Kubernetes master.&lt;/li>
&lt;li>join Run this on any machine you wish to join an existing cluster&lt;/li>
&lt;li>reset Run this to revert any changes made to this host by &amp;lsquo;kubeadm init&amp;rsquo; or &amp;lsquo;kubeadm join&amp;rsquo;.&lt;/li>
&lt;li>token Manage bootstrap tokens.&lt;/li>
&lt;li>upgrade Upgrade your cluster smoothly to a newer version with this command.&lt;/li>
&lt;li>version Print the version of kubeadm&lt;/li>
&lt;/ol>
&lt;h2 id="kubeadm-alpha">kubeadm alpha&lt;/h2>
&lt;p>续订运行控制计划所需的所有已知证书。无论到期日期如何，都会无条件地续订续订。续订也可以单独运行以获得更多控制权。&lt;/p>
&lt;p>EXAMPLE&lt;/p>
&lt;ol>
&lt;li>kubeadm alpha certs renew all #更新集群中所有证书&lt;/li>
&lt;/ol>
&lt;h2 id="kubeadm-token-command">kubeadm token [COMMAND]&lt;/h2>
&lt;p>COMMAND 包括&lt;/p>
&lt;ol>
&lt;li>create Create bootstrap tokens on the server.&lt;/li>
&lt;li>delete Delete bootstrap tokens on the server.&lt;/li>
&lt;li>generate Generate and print a bootstrap token, but do not create it on the server.&lt;/li>
&lt;li>list List bootstrap tokens on the server.&lt;/li>
&lt;/ol>
&lt;p>kubeadm token create [token]&lt;/p>
&lt;p>EXAMPLE&lt;/p>
&lt;ul>
&lt;li>kubeadm token create &amp;ndash;print-join-command #创建 node 节点加入 master 命令&lt;/li>
&lt;li>kubeadm token list #列出所有可以引导的令牌（i.e.join 时所用的 token）
&lt;ul>
&lt;li>可以通过以下命令来获取 master 上 CA 证书的 hash 值(i.e.join 时所用的&amp;ndash;discovery-token-ca-cert-hash 的值)，然后根据 list 列出的 token，与 ca 的 hash 值合在一起，就可以得到 join 时所用的相关参数&lt;/li>
&lt;li>openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2&amp;gt;/dev/null | openssl dgst -sha256 -hex&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="kubeadm-config-command">kubeadm config [COMMAND]&lt;/h2>
&lt;p>COMMAND 包括：&lt;/p>
&lt;ul>
&lt;li>images Interact with container images used by kubeadm.&lt;/li>
&lt;li>migrate Read an older version of the kubeadm configuration API types from a file, and output the similar config object for the newer version.&lt;/li>
&lt;li>print-default Print the default values for a kubeadm configuration object.&lt;/li>
&lt;li>upload Upload configuration about the current state, so that &amp;lsquo;kubeadm upgrade&amp;rsquo; can later know how to configure the upgraded cluster.&lt;/li>
&lt;li>view View the kubeadm configuration stored inside the cluster.&lt;/li>
&lt;/ul>
&lt;p>kubeadm config images [list | pull] [flags]&lt;/p>
&lt;p>EXAMPLE&lt;/p>
&lt;ol>
&lt;li>kubeadm config images list &amp;ndash;kubernetes-version=1.12.1 #列出 k8s 的 1.12.1 版本所需的所有 images 以及版本号&lt;/li>
&lt;/ol>
&lt;h2 id="kubeadm-init-command-flags">kubeadm init [Command] [Flags]&lt;/h2>
&lt;p>Available Commands&lt;/p>
&lt;ol>
&lt;li>phase # 使用该子命令来执行 kubeadm 初始化流程的单个阶段&lt;/li>
&lt;/ol>
&lt;p>Flags&lt;/p>
&lt;ol>
&lt;li>--kub -network-cidr IP #用于指定分 Pod 分配使用的网络地址，它通常应该与要部署使用的网络插件（例如 flannel、calico 等）的默认设定保持一致，10.244.0.0/16 是 flannel 默认使用的网络&lt;/li>
&lt;li>--service-cidr IP #用于指定为 Service 分配使用的网络地址(i.e.cluster-ip)，它由 kubernetes 管理，默认即为 10.96.0.0/12&lt;/li>
&lt;li>--ignore-preflight-errors=Swap #仅应该在未禁用 Swap 设备的状态下使用。&lt;/li>
&lt;/ol>
&lt;p>Example&lt;/p>
&lt;ul>
&lt;li>kubeadm init &amp;ndash;config=kubeadm-config.yaml #使用 kubeadm-config.yaml 文件初始化 k8s 集群的 master
&lt;ul>
&lt;li>以下是个符合前述命令设定方式的使用示例，不过，它明确定义了 kubeProxy 的模式为 ipvs，并支持通过修改 imageRepository 的值修改获取系统镜像时使用的镜像仓库。需要建立 FileName.conf 文件,内容说明详见 k8s 官网&lt;a href="https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm-init/">https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm-init/&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>kubeadm init phase kubeconfig all #该命令可以生成所有 kubeconfig 文件。在误删除了 admin.conf 文件后，可以用该命令工薪生成&lt;/li>
&lt;/ul>
&lt;h2 id="kubeadm-join-command-flags">kubeadm join [Command] [Flags]&lt;/h2>
&lt;p>FLAGS&lt;/p>
&lt;ul>
&lt;li>--experimental-control-plane #在此节点上创建新的控制平面实例，等同于把该节点加入到 Cluster 后成为 master。&lt;/li>
&lt;li>--token #&lt;/li>
&lt;li>--discovery-token-ca-cert-hash #&lt;/li>
&lt;/ul>
&lt;p>EXAPMLE&lt;/p>
&lt;ul>
&lt;li>kubeadm join 192.168.10.10:6443 &amp;ndash;token j04n3m.octy8zely83cy2ts &amp;ndash;discovery-token-ca-cert-hash sha256:84938d2a22203a8e56a787ec0c6ddad7bc7dbd52ebabc62fd5f4dbea72b14d1f &amp;ndash;experimental-control-plane #等同于把该节点加入到 Cluster 后成为 master&lt;/li>
&lt;/ul></description></item><item><title>Docs: kubeadm 配置详解</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/kubernetes-%E7%AE%A1%E7%90%86/kubeadm-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/kubeadm-%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/kubernetes-%E7%AE%A1%E7%90%86/kubeadm-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/kubeadm-%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/</guid><description>
&lt;h1 id="概述">概述&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm-init/#config-file">官方文档,参考-安装工具-kubeadm-kubeadmin init-结合配置文件使用 kubeadm init&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/docs/reference/config-api/kubeadm-config.v1beta3/">官方文档,参考-配置 APIs-kubeadm 配置(v1beta3)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://pkg.go.dev/k8s.io/kubernetes/cmd/kubeadm/app/apis/kubeadm">kubeadm 库&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://pkg.go.dev/k8s.io/kubernetes/cmd/kubeadm/app/apis/kubeadm/v1beta2">v1beta2 版本的 kubeadm 包的配置文件字段详解&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>由于配置文件还在 beta 阶段，但是官方又推荐使用，所以很是纠结，我也不知道为啥。。。文档只有这种通过代码注释生成的内容~~~&lt;/p>
&lt;p>kubeadm 库中的 &lt;a href="https://pkg.go.dev/k8s.io/kubernetes/cmd/kubeadm/app/apis/kubeadm#pkg-types">&lt;strong>Type&lt;/strong>&lt;/a> 实际上就是配置文件中可用的字段，其实就是 Go 语言中 struct 与 yaml 的对应，配置文件都是 yaml 格式的，kind 中值，其实就是代码中的一个 struct。&lt;/p>
&lt;p>kubeadm init 命令初始化集群时，对集群配置的首选方法是使用 &lt;code>--config=FILE&lt;/code> 标志传递 YAML 格式的配置文件。&lt;/p>
&lt;blockquote>
&lt;p>kubeadm 配置文件中定义的某些配置选项在 kubeamd init 的命令行标志中也有对应标志，但是这些标志仅支持最常见/最简单的用例。&lt;/p>
&lt;/blockquote>
&lt;p>kubeadm 的配置文件可以看成是 kubeadm 几个资源的 Manifests 文件的集合。kubeadm 其中包括多种资源，一个文件中可以使用三个破折号 &lt;code>---&lt;/code> 分隔的多种资源(其实就是 yaml 的语法)。每个资源就是一种配置类型。现阶段支持以下配置类型：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>InitConfiguration&lt;/strong> # 初始化集群配置&lt;/li>
&lt;li>&lt;strong>ClusterConfiguration&lt;/strong> # 集群通用配置&lt;/li>
&lt;li>&lt;strong>KubeletConfiguration&lt;/strong> # 覆盖 kubelet 运行时配置文件&lt;/li>
&lt;li>&lt;strong>KubeProxyConfiguration&lt;/strong> # 覆盖 kube-proxy 运行时配置文件&lt;/li>
&lt;li>&lt;strong>JoinConfiguration&lt;/strong> # 加入集群配置&lt;/li>
&lt;/ul>
&lt;h1 id="initconfiguration-manifest-详解">InitConfiguration Manifest 详解&lt;/h1>
&lt;p>参考：&lt;a href="https://pkg.go.dev/k8s.io/kubernetes/cmd/kubeadm/app/apis/kubeadm/v1beta3#InitConfiguration">&lt;strong>v1beta3 版本&lt;/strong>&lt;/a>
应该使用 InitConfiguration 类型来配置运行时设置，在 kubeadm init 情况下，是 bootstrap Tokens 的配置以及所有特定于执行 kubeadm 的节点的设置，包括以下几个字段&lt;/p>
&lt;h2 id="apiversion-kubeadmk8siov1beta3">apiVersion: kubeadm.k8s.io/v1beta3&lt;/h2>
&lt;h2 id="kind-initconfiguration">kind: InitConfiguration&lt;/h2>
&lt;h2 id="bootstraptokens-object">bootstrapTokens: &lt;!-- raw HTML omitted -->&lt;/h2>
&lt;p>&lt;strong>groups: []STRING&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>system:bootstrappers:kubeadm:default-node-token&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>ttl: TIME # 该 Token 的存活时间。&lt;/strong>
0s 为永不过期。&lt;code>默认值: 24h&lt;/code>&lt;/p>
&lt;p>&lt;strong>usages: []STRING&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>signing&lt;/li>
&lt;li>authentication&lt;/li>
&lt;/ul>
&lt;h2 id="noderegistration-object">nodeRegistration: &lt;!-- raw HTML omitted -->&lt;/h2>
&lt;p>其中包含与将新节点注册到集群有关的字段；使用它来自定义节点名称，要使用的 CRI 套接字或仅应应用于该节点的任何其他设置（例如，节点 ip）。
&lt;strong>name: STRING&lt;/strong>
该字段的信息将会写入到 Node API 对象 的 .Metadata.Name 字段中。
此字段还用于 kubelet 到 API Server 的客户端证书的 CommonName 字段中。&lt;code>默认值：节点主机名&lt;/code>。&lt;/p>
&lt;p>&lt;strong>KubeletExtraArgs: map[string]string # 通过额外的参数传递给 kubelet。&lt;/strong>
此处的参数通过环境文件传递到 kubelet 命令行。kubeadm 在运行时将 kubelet 写入源。这将覆盖 kubelet-config-1.X ConfigMap 中的通用基本级别配置。解析时，标志具有更高的优先级。这些值是本地的，特定于正在执行 kubeadm 的节点。&lt;/p>
&lt;p>&lt;strong>criSocket: STRING # kubelet 要使用的 runtime 的 Socket 文件的绝对路径&lt;/strong>
CRISocket 用于检索容器运行时信息。此信息将注释到节点 API 对象，以便稍后重用&lt;/p>
&lt;h2 id="localapiendpoint-object--api-server-暴露的-ip-和-port">LocalAPIEndpoint: &lt;!-- raw HTML omitted --> # API Server 暴露的 IP 和 Port&lt;/h2>
&lt;p>该字段通常不用设置，直接设置 ClusterConfiguration 资源中的 controlPlaneEndpoint 字段即可。
&lt;strong>advertiseAddress: STRING&lt;/strong> # API Server 暴露的 IP 地址
&lt;strong>bindPort: INT32&lt;/strong> # API Server 暴露的安全端口。&lt;code>默认值：6443&lt;/code>。&lt;/p>
&lt;h1 id="clusterconfiguration-manifest-详解">ClusterConfiguration Manifest 详解&lt;/h1>
&lt;p>参考：&lt;a href="https://pkg.go.dev/k8s.io/kubernetes/cmd/kubeadm/app/apis/kubeadm/v1beta2#ClusterConfiguration">kubeadm 代码(v1beta2)&lt;/a>
ClusterConfiguration 类型应用于配置群集范围的设置，包括以下设置：&lt;/p>
&lt;ul>
&lt;li>网络，其中包含集群网络拓扑的配置；使用它例如定制节点子网或服务子网。&lt;/li>
&lt;li>Etcd 配置；使用它例如自定义本地 etcd 或配置 API 服务器以使用外部 etcd 集群。&lt;/li>
&lt;li>kube-apiserver，kube-scheduler，kube-controller-manager 程序的运行时配置；通过添加自定义设置或覆盖 kubeadm 默认设置，使用它来自定义控制平面组件。
&lt;ul>
&lt;li>官方文档：&lt;a href="https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/control-plane-flags/">https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/control-plane-flags/&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="apiversion-kubeadmk8siov1beta2">apiVersion: kubeadm.k8s.io/v1beta2&lt;/h2>
&lt;h2 id="kind-clusterconfiguration">kind: ClusterConfiguration&lt;/h2>
&lt;h2 id="etcd-object--集群中-etcd-配置">etcd: &lt;!-- raw HTML omitted --> # 集群中 etcd 配置&lt;/h2>
&lt;h2 id="networking-object--集群中网络拓扑的配置">networking: &lt;!-- raw HTML omitted --> # 集群中网络拓扑的配置&lt;/h2>
&lt;p>**dnsDomain: STRING # **&lt;code>默认值:cluster.local&lt;/code>。
**serviceSubnet: STRING # **&lt;code>默认值:10.96.0.0/12&lt;/code>。&lt;/p>
&lt;h2 id="controlplaneendpoint-string--为控制平面设置一个-ip-或域名">controlPlaneEndpoint: STRING # 为控制平面设置一个 IP 或域名&lt;/h2>
&lt;p>&lt;code>默认值：InitConfiguration 资源中 localAPIEndpoint.advertiseAddress + localAPIEndpoint.bindPort 两个字段的值&lt;/code>。
该字段就是设置访问 Kubernetes API 时，所要使用的端点，通过访问 Endpoint 就应该可以访问 &lt;a href="https://www.yuque.com/go/doc/33168516">Kubernetes 的 API Server 程序&lt;/a>。同时，各种与 API Server 交互时所用到的证书，其中也会包含该字段的值。&lt;/p>
&lt;h2 id="apiserver-object--配置-apiserver-程序">apiServer: &lt;!-- raw HTML omitted --> # 配置 apiserver 程序&lt;/h2>
&lt;p>&lt;strong>certSANs: &amp;lt;[]STRING&amp;gt;&lt;/strong> # 为 API Server 的证书中的 Subject Alternative Name 字段设置额外的名称。
&lt;strong>extraArgs: &lt;!-- raw HTML omitted -->&lt;/strong> # 设定 apiserver 程序的命令行标志
&lt;strong>extravolumes: &amp;lt;[]Object&amp;gt;&lt;/strong> # 设定 apiserver 程序的卷，以及挂载卷&lt;/p>
&lt;h2 id="controllermanager-object--配置-controller-manager-程序">controllerManager: &lt;!-- raw HTML omitted --> # 配置 controller-manager 程序&lt;/h2>
&lt;p>&lt;strong>extraArgs: &lt;!-- raw HTML omitted -->&lt;/strong> # 设定 controller-manager 程序的命令行标志
&lt;strong>extravolumes: &amp;lt;[]Object&amp;gt;&lt;/strong> # 设定 controller-manager 程序的卷，以及挂载卷&lt;/p>
&lt;h2 id="scheduler-object--配置-scheduler-程序">scheduler: &lt;!-- raw HTML omitted --> # 配置 scheduler 程序&lt;/h2>
&lt;p>&lt;strong>extraArgs: &lt;!-- raw HTML omitted -->&lt;/strong> # 设定 scheduler 程序的命令行标志
&lt;strong>extravolumes: &amp;lt;[]Object&amp;gt;&lt;/strong> # 设定 scheduler 程序的卷，以及挂载卷&lt;/p>
&lt;h2 id="dns-object--配置-dns-插件">dns: &lt;!-- raw HTML omitted --> # 配置 DNS 插件&lt;/h2>
&lt;h2 id="certificatedir-string--指定-kubeadm-生成和读取证书的路径默认值etckubernetespki">certificateDir: &lt;!-- raw HTML omitted --> # 指定 kubeadm 生成和读取证书的路径。&lt;code>默认值：/etc/kubernetes/pki&lt;/code>&lt;/h2>
&lt;h2 id="imagerepository-string--部署集群时拉取所需镜像的仓库默认值k8sgcrio">imageRepository: STRING # 部署集群时拉取所需镜像的仓库。&lt;code>默认值:k8s.gcr.io&lt;/code>。&lt;/h2>
&lt;h2 id="clustername-string--集群的名称默认值kubernetes">clusterName: STRING # 集群的名称。&lt;code>默认值:kubernetes&lt;/code>&lt;/h2>
&lt;h1 id="kubeletconfiguration-manifest-详解">KubeletConfiguration Manifest 详解&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/kubelet-integration/">官方文档,入门-生产环境-使用部署工具安装 Kubernetes-使用 kubeadm 配置集群中的每个 kubelet&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/docs/reference/config-api/kubelet-config.v1beta1/">官方文档,参考-配置 APIs-kubelet 配置(v1beta1)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://pkg.go.dev/k8s.io/kubelet/config/v1beta1#KubeletConfiguration">kubelet 代码中 struct 与 yaml 字段对应(v1beta1)&lt;/a>&lt;/li>
&lt;li>[kubelet 配置详解](/docs/IT学习笔记/10.云原生/2.3.Kubernetes%20 容器编排系统/2.Kubelet%20 节点代理/Kubelet%20 配置详解.md 节点代理/Kubelet 配置详解.md)&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>KubeletConfiguration 类型的配置中的字段，将会覆盖 kubelet 的配置文件(默认路径为 /var/lib/kubelet/config.yaml)中的字段&lt;/p>
&lt;p>说白了，这些配置其实就跟直接修改 kubelet 运行时使用 &amp;ndash;config 标志指定的文件是一样，就像下图一样：
&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/wm87kv/1618021089988-6fef9049-1249-4a85-b3f7-ce59968a35ec.png" alt="image.png">&lt;/p>
&lt;h1 id="kubeproxyconfiguration-manifest-详解">KubeProxyConfiguration Manifest 详解&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://pkg.go.dev/k8s.io/kube-proxy/config/v1alpha1#KubeProxyConfiguration">kube-proxy 代码(v1alpha1)&lt;/a>&lt;/li>
&lt;li>[kube-proxy 配置详解](/docs/IT学习笔记/10.云原生/2.3.Kubernetes%20 容器编排系统/8.Kubernetes%20 网络/kube-proxy(实现%20Service%20 功能的组件).md 网络/kube-proxy(实现 Service 功能的组件).md)&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>与 KubeletConfiguration 类型配置一样，将会覆盖 kubeproxy 的配置。可以根据 &lt;a href="https://kubernetes.io/docs/reference/command-line-tools-reference/kube-proxy/">&lt;strong>kube-proxy 命令行工具官方文档&lt;/strong>&lt;/a> 或 &lt;a href="https://pkg.go.dev/k8s.io/kube-proxy/config/v1alpha1#KubeProxyConfiguration">&lt;strong>kubeproxy 代码&lt;/strong>&lt;/a> 参考这个类型配置应如何配置&lt;/p>
&lt;h1 id="joinconfiguration-manifest-详解">JoinConfiguration Manifest 详解&lt;/h1>
&lt;h1 id="配置示例">配置示例&lt;/h1>
&lt;p>在&lt;a href="https://pkg.go.dev/k8s.io/kubernetes/cmd/kubeadm/app/apis/kubeadm/v1beta2#hdr-Basics">&lt;strong>这里&lt;/strong>&lt;/a>有 &lt;a href="https://pkg.go.dev/k8s.io/kubernetes@v1.19.4/cmd/kubeadm/app/apis/kubeadm/v1beta2">&lt;strong>v1beta2 版本的 kubeadm 包&lt;/strong>&lt;/a> 的 kubeadm-config.yaml 文件的完整配置，这个示例包含了所有可用字段。&lt;/p>
&lt;blockquote>
&lt;p>在 &lt;code>Here is a fully populated example of a single YAML file containing multiple configuration types to be used during a&lt;/code>kubeadm init&lt;code>run.&lt;/code> 这段描述中&lt;/p>
&lt;/blockquote>
&lt;h2 id="最简单的配置">最简单的配置&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">cat &amp;gt; kubeadm-config.yaml &amp;lt;&amp;lt; EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">kubeadm.k8s.io/v1beta2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">InitConfiguration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">bootstrapTokens&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">groups&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">system:bootstrappers:kubeadm:default-node-token&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ttl&lt;/span>: &lt;span style="color:#ae81ff">0s&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">usages&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">signing&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">authentication&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 可选，当使用其他 runtime 时，在此指定，这里使用了 containerd&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># nodeRegistration:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># criSocket: /run/containerd/containerd.sock&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">kubeadm.k8s.io/v1beta2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">ClusterConfiguration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kubernetesVersion&lt;/span>: &lt;span style="color:#ae81ff">v1.19.4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">controlPlaneEndpoint&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;X.X.X.X:6443&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">imageRepository&lt;/span>: &lt;span style="color:#ae81ff">registry.aliyuncs.com/k8sxio&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">networking&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">podSubnet&lt;/span>: &lt;span style="color:#ae81ff">10.244.0.0&lt;/span>&lt;span style="color:#ae81ff">/16&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">kubeproxy.config.k8s.io/v1alpha1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">KubeProxyConfiguration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">mode&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;ipvs&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">kubelet.config.k8s.io/v1beta1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">KubeletConfiguration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">cgroupDriver&lt;/span>: &lt;span style="color:#ae81ff">systemd&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="复杂配置">复杂配置&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">kubeadm.k8s.io/v1beta2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">InitConfiguration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">bootstrapTokens&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">groups&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">system:bootstrappers:kubeadm:default-node-token&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ttl&lt;/span>: &lt;span style="color:#ae81ff">0s&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">usages&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">signing&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">authentication&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">kubeadm.k8s.io/v1beta2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">ClusterConfiguration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kubernetesVersion&lt;/span>: &lt;span style="color:#ae81ff">v1.19.2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">controlPlaneEndpoint&lt;/span>: &lt;span style="color:#ae81ff">k8s-api.bj-test.desistdaydream.ltd:6443&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">imageRepository&lt;/span>: &lt;span style="color:#ae81ff">registry.aliyuncs.com/k8sxio&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">networking&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">podSubnet&lt;/span>: &lt;span style="color:#ae81ff">10.244.0.0&lt;/span>&lt;span style="color:#ae81ff">/16&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">serviceSubnet&lt;/span>: &lt;span style="color:#ae81ff">10.96.0.0&lt;/span>&lt;span style="color:#ae81ff">/12&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">etcd&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">local&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">extraArgs&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">listen-metrics-urls&lt;/span>: &lt;span style="color:#ae81ff">http://0.0.0.0:2381&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiServer&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">certSANs&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">localhost&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">127.0.0.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">k8s-api.bj-test.desistdaydream.ltd&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">172.19.42.234&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">master-3.bj-test&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">172.19.42.233&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">master-2.bj-test&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">172.19.42.232&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">master-1.bj-test&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">172.19.42.231&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">extraArgs&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">service-node-port-range&lt;/span>: &lt;span style="color:#ae81ff">30000-60000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">extraVolumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">host-time&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">hostPath&lt;/span>: &lt;span style="color:#ae81ff">/etc/localtime&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mountPath&lt;/span>: &lt;span style="color:#ae81ff">/etc/localtime&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">readOnly&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">controllerManager&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">extraArgs&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">bind-address&lt;/span>: &lt;span style="color:#ae81ff">0.0.0.0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">extraVolumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">host-time&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">hostPath&lt;/span>: &lt;span style="color:#ae81ff">/etc/localtime&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mountPath&lt;/span>: &lt;span style="color:#ae81ff">/etc/localtime&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">readOnly&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">scheduler&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">extraArgs&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">bind-address&lt;/span>: &lt;span style="color:#ae81ff">0.0.0.0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">extraVolumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">host-time&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">hostPath&lt;/span>: &lt;span style="color:#ae81ff">/etc/localtime&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mountPath&lt;/span>: &lt;span style="color:#ae81ff">/etc/localtime&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">readOnly&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">kubeproxy.config.k8s.io/v1alpha1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">KubeProxyConfiguration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">mode&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;ipvs&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">kubelet.config.k8s.io/v1beta1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">KubeletConfiguration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">cgroupDriver&lt;/span>: &lt;span style="color:#ae81ff">systemd&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kubeReserved&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">cpu&lt;/span>: &lt;span style="color:#ae81ff">200m&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">memory&lt;/span>: &lt;span style="color:#ae81ff">250Mi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">systemReserved&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">cpu&lt;/span>: &lt;span style="color:#ae81ff">200m&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">memory&lt;/span>: &lt;span style="color:#ae81ff">250Mi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">evictionHard&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">memory.available&lt;/span>: &lt;span style="color:#ae81ff">5&lt;/span>&lt;span style="color:#ae81ff">%&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">evictionSoft&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">memory.available&lt;/span>: &lt;span style="color:#ae81ff">10&lt;/span>&lt;span style="color:#ae81ff">%&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">evictionSoftGracePeriod&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">memory.available&lt;/span>: &lt;span style="color:#ae81ff">2m&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: kubeadm 实现细节详解</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/kubernetes-%E7%AE%A1%E7%90%86/kubeadm-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/kubeadm-%E5%AE%9E%E7%8E%B0%E7%BB%86%E8%8A%82%E8%AF%A6%E8%A7%A3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/kubernetes-%E7%AE%A1%E7%90%86/kubeadm-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/kubeadm-%E5%AE%9E%E7%8E%B0%E7%BB%86%E8%8A%82%E8%AF%A6%E8%A7%A3/</guid><description>
&lt;h1 id="kubeadm-核心设计原则">kubeadm 核心设计原则&lt;/h1>
&lt;p>参考：&lt;a href="https://kubernetes.io/docs/reference/setup-tools/kubeadm/implementation-details/">&lt;strong>官方文档&lt;/strong>&lt;/a>
&lt;code>kubeadm init&lt;/code> 和 &lt;code>kubeadm join&lt;/code> 结合在一起提供了良好的用户体验。&lt;code>kubeadm init&lt;/code> 和 &lt;code>kubeadm join&lt;/code> 设置的集群应为：&lt;/p>
&lt;ul>
&lt;li>Secure 安全——应采用最新的最佳做法
&lt;ul>
&lt;li>加强 RBAC&lt;/li>
&lt;li>使用节点授权器&lt;/li>
&lt;li>在控制平面组件之间使用安全通信&lt;/li>
&lt;li>在 API 服务器和 kubelet 之间使用安全通信&lt;/li>
&lt;li>锁定 kubelet API&lt;/li>
&lt;li>锁定对系统组件（例如 kube-proxy 和 CoreDNS）的 API 的访问&lt;/li>
&lt;li>锁定引导令牌可以访问的内容&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Easy to use 易于使用——用户只需要运行几个命令即可
&lt;ul>
&lt;li>kubeadm init&lt;/li>
&lt;li>export KUBECONFIG=/etc/kubernetes/admin.conf&lt;/li>
&lt;li>kubectl apply -f &amp;lt;network-of-choice.yaml&amp;gt;&lt;/li>
&lt;li>kubeadm join &amp;ndash;token  :&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Extendable 可扩展
&lt;ul>
&lt;li>它应该不偏袒任何特定的网络提供商。配置群集网络超出范围&lt;/li>
&lt;li>它应该提供使用配置文件来自定义各种参数的可能性&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="kubeadm-默认所需使用的值和目录">kubeadm 默认所需使用的值和目录&lt;/h2>
&lt;p>为了降低复杂性并简化基于 kubeadm 的高级工具的开发，它使用一组有限的常量值来存储众所周知的路径和文件名。&lt;/p>
&lt;p>Kubernetes 目录 /etc/kubernetes 在应用程序中是一个常量，因为在大多数情况下，它显然是给定的路径，并且是最直观的位置；其他常量路径和文件名是：&lt;/p>
&lt;p>/etc/kubernetes/manifests/* # 作为 kubelet 在其中查找静态 Pod 清单的路径。静态 Pod 清单的名称为：&lt;/p>
&lt;ul>
&lt;li>etcd.yaml&lt;/li>
&lt;li>kube-apiserver.yaml&lt;/li>
&lt;li>kube-controller-manager.yaml&lt;/li>
&lt;li>kube-scheduler.yaml&lt;/li>
&lt;/ul>
&lt;p>/etc/kubernetes/* # 作为存储带有控制平面组件标识的 kubeconfig 文件的路径。kubeconfig 文件的名称为：&lt;/p>
&lt;ul>
&lt;li>kubelet.conf（bootstrap-kubelet.conf 在 TLS 引导期间）&lt;/li>
&lt;li>controller-manager.conf&lt;/li>
&lt;li>scheduler.conf&lt;/li>
&lt;li>admin.conf 用于集群管理员和 kubeadm 本身&lt;/li>
&lt;/ul>
&lt;p>/etc/kubernetes/pki/* # 证书和密钥文件的名称：&lt;/p>
&lt;ul>
&lt;li>ca.crt，ca.key # 用于 Kubernetes 证书颁发机构&lt;/li>
&lt;li>apiserver.crt，apiserver.key # 用于 API 服务器证书&lt;/li>
&lt;li>apiserver-kubelet-client.crt，apiserver-kubelet-client.key # 用于 API 服务器用于安全连接到 kubelet 的客户端证书&lt;/li>
&lt;li>sa.pub，sa.key # 用于控制器管理员在签署 ServiceAccount 时使用的密钥&lt;/li>
&lt;li>front-proxy-ca.crt，front-proxy-ca.key # 用于前端代理证书颁发机构&lt;/li>
&lt;li>front-proxy-client.crt，front-proxy-client.key # 用于前端代理客户端&lt;/li>
&lt;/ul>
&lt;h1 id="kubeadm-init-工作流程内部设计">kubeadm init 工作流程内部设计&lt;/h1>
&lt;p>kubeadm init 的&lt;a href="https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm-init/#init-workflow">内部的工作流程&lt;/a>由一系列要执行工作任务组成&lt;/p>
&lt;p>&lt;a href="https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm-init-phase/">kubeadm init phase&lt;/a> 命令允许用户单独调用每个任务，并最终提供可重用和可组合的 API /工具箱，其他 Kubernetes 引导工具，任何 IT 自动化工具或高级用户都可以使用该 API /工具来创建自定义群集。&lt;/p>
&lt;h2 id="prefight-checks事前准备核对清单">Prefight checks(事前准备核对清单)&lt;/h2>
&lt;p>Kubeadm 在启动 init 之前执行一组 prefight checks(预检检查)，目的是验证先决条件并避免常见的集群启动问题。用户可以选择跳过特定的 prefight checks 或全部跳过&amp;ndash;ignore-preflight-errors。&lt;/p>
&lt;ul>
&lt;li>[警告]如果要使用的 Kubernetes 版本（带有&amp;ndash;kubernetes-version 标志指定）至少比 kubeadm CLI 版本高一个次要版本。&lt;/li>
&lt;li>Kubernetes 系统要求：
&lt;ul>
&lt;li>如果在 Linux 上运行：
&lt;ul>
&lt;li>[错误]如果内核早于最低要求的版本&lt;/li>
&lt;li>[错误]如果未设置所需的 cgroups 子系统&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>如果使用 docker：
&lt;ul>
&lt;li>[警告/错误]如果 Docker 服务不存在，则被禁用，如果它不处于活动状态。&lt;/li>
&lt;li>[错误]如果 Docker 端点不存在或不起作用&lt;/li>
&lt;li>[警告]如果 docker 版本不在经过验证的 docker 版本列表中&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>如果使用其他 cri 引擎：
&lt;ul>
&lt;li>[错误]如果 crictl 套接字未回答&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>[错误]如果用户不是 root 用户&lt;/li>
&lt;li>[错误]如果计算机主机名不是有效的 DNS 子域&lt;/li>
&lt;li>[警告]如果无法通过网络查找访问主机名&lt;/li>
&lt;li>[错误]如果 kubelet 版本低于 kubeadm 支持的最小 kubelet 版本（当前次要-1）&lt;/li>
&lt;li>[错误]如果 kubelet 版本比所需的控制面板版本至少高一个小（不支持的版本偏斜）&lt;/li>
&lt;li>[警告]如果 kubelet 服务不存在或已被禁用&lt;/li>
&lt;li>[警告]如果 firewalld 处于活动状态&lt;/li>
&lt;li>[错误]如果使用 API 服务器 bindPort 或端口 10250/10251/10252&lt;/li>
&lt;li>[错误]如果/etc/kubernetes/manifest 文件夹已经存在并且不为空&lt;/li>
&lt;li>[错误]如果/proc/sys/net/bridge/bridge-nf-call-iptables 文件不存在/不包含 1&lt;/li>
&lt;li>[错误]如果广告地址是 ipv6，/proc/sys/net/bridge/bridge-nf-call-ip6tables 并且不存在/不包含 1。&lt;/li>
&lt;li>[错误]如果启用了交换&lt;/li>
&lt;li>[错误]如果 conntrack，ip，iptables，mount，nsenter 的命令不存在于该命令路径&lt;/li>
&lt;li>[警告]如果 ebtables，ethtool，socat，tc，touch，crictl 的命令不存在于该命令路径&lt;/li>
&lt;li>[警告]如果 API 服务器，控制器管理器，调度程序的额外 arg 标志包含一些无效选项&lt;/li>
&lt;li>[警告]如果与 https：&lt;a href="//API.AdvertiseAddress">//API.AdvertiseAddress&lt;/a>：API.BindPort 的连接通过代理&lt;/li>
&lt;li>[警告]如果服务子网的连接通过代理进行（仅检查第一个地址）&lt;/li>
&lt;li>[警告]如果 Pods 子网的连接通过代理进行（仅检查第一个地址）&lt;/li>
&lt;li>如果提供了外部 etcd：
&lt;ul>
&lt;li>[错误]如果 etcd 版本早于最低要求版本&lt;/li>
&lt;li>[错误]如果指定了 etcd 证书或密钥，但未提供&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>如果未提供外部 etcd（因此将安装本地 etcd）：
&lt;ul>
&lt;li>[错误]如果使用端口 2379&lt;/li>
&lt;li>[错误]如果 Etcd.DataDir 文件夹已经存在并且不为空&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>如果授权方式为 ABAC：
&lt;ul>
&lt;li>[错误]如果 abac_policy.json 不存在&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>如果授权方式为 WebHook
&lt;ul>
&lt;li>[错误]如果 webhook_authz.conf 不存在&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>请注意：&lt;/p>
&lt;ol>
&lt;li>可以使用以下 &lt;a href="https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm-init-phase/#cmd-phase-preflight">kubeadm init phase preflight&lt;/a> 命令分别调用预检检查&lt;/li>
&lt;/ol>
&lt;h2 id="生成必要的证书">生成必要的证书&lt;/h2>
&lt;p>Kubeadm 为不同目的生成证书和私钥对：&lt;/p>
&lt;ul>
&lt;li>Kubernetes 集群的自签名证书颁发机构已保存到 ca.crt 文件和 ca.key 私钥文件中&lt;/li>
&lt;li>API 服务器的服务证书，使用 ca.crtCA 生成，并 apiserver.crt 使用其私钥保存到文件中 apiserver.key。该证书应包含以下备用名称：
&lt;ul>
&lt;li>Kubernetes 服务的内部 clusterIP（服务 CIDR 中的第一个地址，例如，10.96.0.1 如果服务子网为 10.96.0.0/12）&lt;/li>
&lt;li>Kubernetes DNS 名称，例如，kubernetes.default.svc.cluster.local 如果&amp;ndash;service-dns-domain 标志值 cluster.local，再加上默认的 DNS 名称 kubernetes.default.svc，kubernetes.default，kubernetes&lt;/li>
&lt;li>节点名称&lt;/li>
&lt;li>的 &amp;ndash;apiserver-advertise-address&lt;/li>
&lt;li>用户指定的其他备用名称&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>API 服务器安全连接到 kubelet 的客户端证书，使用 ca.crtCA 作为证书生成，并 apiserver-kubelet-client.crt 使用其私钥保存到 文件中 apiserver-kubelet-client.key。该证书应在 system:masters 组织中&lt;/li>
&lt;li>用于签名保存到 sa.key 文件中的 ServiceAccount 令牌的私钥及其公钥 sa.pub&lt;/li>
&lt;li>前代理的证书颁发机构 front-proxy-ca.crt 及其密钥保存在文件中 front-proxy-ca.key&lt;/li>
&lt;li>前代理客户端的客户端证书，使用 front-proxy-ca.crtCA 生成并 front-proxy-client.crt 使用其私钥保存到文件中 front-proxy-client.key&lt;/li>
&lt;/ul>
&lt;p>证书默认情况下存储在中/etc/kubernetes/pki，但是可以使用该&amp;ndash;cert-dir 标志配置该目录。&lt;/p>
&lt;p>请注意：&lt;/p>
&lt;ol>
&lt;li>如果给定证书和私钥对都存在，并且其内容经过评估符合上述规范，则将使用现有文件，并跳过给定证书的生成阶段。这意味着用户可以例如将现有的 CA 复制到 /etc/kubernetes/pki/ca.{crt,key}，然后 kubeadm 将使用这些文件对其余证书进行签名。另请参阅&lt;a href="https://kubernetes.io/docs/tasks/administer-cluster/kubeadm/kubeadm-certs#custom-certificates">使用自定义证书&lt;/a>&lt;/li>
&lt;li>仅对于 CA，如果所有其他证书和 kubeconfig 文件已经到位，则可以提供 ca.crt 文件，而不提供文件 ca.keykubeadm 可以识别这种情况并激活 ExternalCA，这也意味着 csrsignercontroller-manager 中的控制器不会开始了&lt;/li>
&lt;li>如果 kubeadm 在&lt;a href="https://kubernetes.io/docs/tasks/administer-cluster/kubeadm/kubeadm-certs#external-ca-mode">外部 CA 模式下运行&lt;/a> ; 所有证书必须由用户提供，因为 kubeadm 无法自行生成它们&lt;/li>
&lt;li>如果以该&amp;ndash;dry-run 模式执行 kubeadm ，则证书文件将写入一个临时文件夹中&lt;/li>
&lt;li>证书生成可以使用以下&lt;a href="https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm-init-phase/#cmd-phase-certs">kubeadm init phase certs all&lt;/a>命令单独调用&lt;/li>
&lt;/ol>
&lt;h2 id="为控制平面组件生成-kubeconfig-文件">为控制平面组件生成 kubeconfig 文件&lt;/h2>
&lt;p>Kubeadm 生成具有用于控制平面组件标识的 kubeconfig 文件：&lt;/p>
&lt;ul>
&lt;li>在 TLS 引导期间要使用的 kubelet 的 kubeconfig 文件-/etc/kubernetes/bootstrap-kubelet.conf。在此文件中，有一个引导令牌或嵌入式客户端证书，用于通过群集验证此节点。该客户证书应：
&lt;ul>
&lt;li>system:nodes 根据&lt;a href="https://kubernetes.io/docs/reference/access-authn-authz/node/">节点授权&lt;/a>模块的要求在组织中&lt;/li>
&lt;li>具有通用名称（CN） system:node:&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>控制器管理器的 kubeconfig 文件/etc/kubernetes/controller-manager.conf；在此文件中嵌入了具有控制器管理员身份的客户端证书。此客户端证书应具有 CN system:kube-controller-manager，如默认&lt;a href="https://kubernetes.io/docs/reference/access-authn-authz/rbac/#core-component-roles">RBAC 核心组件角色&lt;/a>所定义&lt;/li>
&lt;li>用于调度程序的 kubeconfig 文件/etc/kubernetes/scheduler.conf；在此文件中嵌入了具有调度程序标识的客户端证书。此客户端证书应具有 CN system:kube-scheduler，如默认&lt;a href="https://kubernetes.io/docs/reference/access-authn-authz/rbac/#core-component-roles">RBAC 核心组件角色&lt;/a>所定义&lt;/li>
&lt;/ul>
&lt;p>此外，还将生成 kubeadm 本身和 admin 的 kubeconfig 文件，并将其保存到该 /etc/kubernetes/admin.conf 文件中。此处的“管理员”定义为正在管理集群并希望对集群具有完全控制权（root）的实际人员。管理员的嵌入式客户端证书应位于 system:masters 组织中，这是默认的&lt;a href="https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles">RBAC 用户面对的角色绑定&lt;/a>定义的 。它还应包含一个 CN。Kubeadm 使用 kubernetes-adminCN。&lt;/p>
&lt;p>请注意：&lt;/p>
&lt;ol>
&lt;li>ca.crt 证书嵌入在所有 kubeconfig 文件中。&lt;/li>
&lt;li>如果存在给定的 kubeconfig 文件，并且其内容经过评估符合上述规范，则将使用现有文件，并跳过给定 kubeconfig 的生成阶段&lt;/li>
&lt;li>如果 kubeadm 在&lt;a href="https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm-init/#external-ca-mode">ExternalCA 模式下&lt;/a>运行，则所有必需的 kubeconfig 也必须由用户提供，因为 kubeadm 无法自行生成任何一个&lt;/li>
&lt;li>如果以该&amp;ndash;dry-run 模式执行 kubeadm ，则 kubeconfig 文件将写入一个临时文件夹中&lt;/li>
&lt;li>可以使用以下&lt;a href="https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm-init-phase/#cmd-phase-kubeconfig">kubeadm init phase kubeconfig all&lt;/a>命令分别调用 Kubeconfig 文件的生成&lt;/li>
&lt;/ol>
&lt;h2 id="生成控制平面组件的静态-pod-清单">生成控制平面组件的静态 Pod 清单&lt;/h2>
&lt;p>Kubeadm 将用于控制平面组件的静态 Pod 清单文件写入/etc/kubernetes/manifests。Kubelet 会在此目录中监视 Pods 在启动时创建的目录。&lt;/p>
&lt;p>静态 Pod 清单共享一组公共属性：&lt;/p>
&lt;ul>
&lt;li>所有静态 Pod 都部署在 kube-system 名称空间上&lt;/li>
&lt;li>所有静态 Pod 获取 tier:control-plane 并 component:{component-name}标记&lt;/li>
&lt;li>所有静态 Pod 使用 system-node-critical 优先级类别&lt;/li>
&lt;li>hostNetwork: true 在所有静态 Pod 上设置，以允许在配置网络之前启动控制平面；作为结果：
&lt;ul>
&lt;li>该 address 控制器经理和调度使用，指的 API 服务器 127.0.0.1&lt;/li>
&lt;li>如果使用本地 etcd 服务器，则 etcd-servers 地址将设置为 127.0.0.1:2379&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>同时为控制器管理器和调度程序启用了领导者选举&lt;/li>
&lt;li>控制器管理器和调度器将使用各自的唯一身份引用 kubeconfig 文件&lt;/li>
&lt;li>如&lt;a href="https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/control-plane-flags/">将自定义参数传递到控制平面组件中&lt;/a>所述，所有静态 Pod 都会获得用户指定的任何其他标志&lt;/li>
&lt;li>所有静态 Pod 都会获得用户指定的任何其他卷（主机路径）&lt;/li>
&lt;/ul>
&lt;p>请注意：&lt;/p>
&lt;ol>
&lt;li>默认情况下，将从 k8s.gcr.io 中提取所有图像。请参阅&lt;a href="https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm-init/#custom-images">使用自定义图像&lt;/a>自定义图像存储库&lt;/li>
&lt;li>如果以该&amp;ndash;dry-run 模式执行 kubeadm，则将静态 Pods 文件写入一个临时文件夹中&lt;/li>
&lt;li>可以使用以下&lt;a href="https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm-init-phase/#cmd-phase-control-plane">kubeadm init phase control-plane all&lt;/a>命令分别调用主组件的静态 Pod 清单生成&lt;/li>
&lt;/ol>
&lt;h3 id="api-server">API Server&lt;/h3>
&lt;p>API 服务器的静态 Pod 清单受用户提供的以下参数影响：&lt;/p>
&lt;ul>
&lt;li>的 apiserver-advertise-address 和 apiserver-bind-port，以结合; 如果未提供，则这些值默认为计算机和端口 6443 上默认网络接口的 IP 地址&lt;/li>
&lt;li>将 service-cluster-ip-range 用于服务&lt;/li>
&lt;li>如果指定的外部服务器 ETCD，所述 etcd-servers 地址和相关的 TLS 设置（etcd-cafile，etcd-certfile，etcd-keyfile）; 如果未提供外部 etcd 服务器，则将使用本地 etcd（通过主机网络）&lt;/li>
&lt;li>如果指定了云提供商，则将&amp;ndash;cloud-provider 配置相应的云提供商，以及&amp;ndash;cloud-config 路径（如果存在该文件的话）（这是实验性的 Alpha，将在以后的版本中删除）&lt;/li>
&lt;/ul>
&lt;p>其他无条件设置的 API 服务器标志是：&lt;/p>
&lt;ul>
&lt;li>--insecure-port=0 避免与 api 服务器的连接不安全&lt;/li>
&lt;li>--enable-bootstrap-token-auth=true 启用 BootstrapTokenAuthenticator 身份验证模块。有关更多详细信息，请参见&lt;a href="https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet-tls-bootstrapping/">TLS 引导&lt;/a>&lt;/li>
&lt;li>--allow-privileged 到 true（例如，kube 代理要求）&lt;/li>
&lt;li>--requestheader-client-ca-file 至 front-proxy-ca.crt&lt;/li>
&lt;li>--enable-admission-plugins 至：
&lt;ul>
&lt;li>&lt;a href="https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#namespacelifecycle">NamespaceLifecycle&lt;/a> 例如，避免删除系统保留的名称空间&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#limitranger">LimitRanger&lt;/a>并&lt;a href="https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#resourcequota">ResourceQuota&lt;/a>限制名称空间&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#serviceaccount">ServiceAccount&lt;/a> 强制执行服务帐户自动化&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#persistentvolumelabel">PersistentVolumeLabel&lt;/a>将区域或区域标签附加到由云提供程序定义的 PersistentVolumes（不推荐使用此准入控制器，并将在以后的版本中将其删除。默认情况下，不明确选择使用 gce 或 aws 作为云使用时，kubeadm 不会从 v1.9 开始部署该控件）提供者）&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#defaultstorageclass">DefaultStorageClass&lt;/a>对 PersistentVolumeClaim 对象实施默认存储类&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#defaulttolerationseconds">DefaultTolerationSeconds&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#noderestriction">NodeRestriction&lt;/a> 限制 kubelet 可以修改的内容（例如，仅此节点上的 pod）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>--kubelet-preferred-address-types 到 InternalIP,ExternalIP,Hostname;这使得 kubectl logs 在环境和其它 API 服务器 kubelet 沟通工作，其中节点的主机名不解析&lt;/li>
&lt;li>使用先前步骤中生成的证书的标志：
&lt;ul>
&lt;li>--client-ca-file 至 ca.crt&lt;/li>
&lt;li>--tls-cert-file 至 apiserver.crt&lt;/li>
&lt;li>--tls-private-key-file 至 apiserver.key&lt;/li>
&lt;li>--kubelet-client-certificate 至 apiserver-kubelet-client.crt&lt;/li>
&lt;li>--kubelet-client-key 至 apiserver-kubelet-client.key&lt;/li>
&lt;li>--service-account-key-file 至 sa.pub&lt;/li>
&lt;li>--requestheader-client-ca-file 至 front-proxy-ca.crt&lt;/li>
&lt;li>--proxy-client-cert-file 至 front-proxy-client.crt&lt;/li>
&lt;li>--proxy-client-key-file 至 front-proxy-client.key&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>用于保护前端代理（&lt;a href="https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/aggregated-api-servers.md">API Aggregation&lt;/a>）通信的其他标志：
&lt;ul>
&lt;li>--requestheader-username-headers=X-Remote-User&lt;/li>
&lt;li>--requestheader-group-headers=X-Remote-Group&lt;/li>
&lt;li>--requestheader-extra-headers-prefix=X-Remote-Extra-&lt;/li>
&lt;li>--requestheader-allowed-names=front-proxy-client&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="controller-manager">Controller manager&lt;/h3>
&lt;p>API 服务器的静态 Pod 清单受用户提供的以下参数影响：&lt;/p>
&lt;ul>
&lt;li>如果通过指定 a 调用 kubeadm &amp;ndash;pod-network-cidr，则可以通过以下设置启用某些 CNI 网络插件所需的子网管理器功能：
&lt;ul>
&lt;li>--allocate-node-cidrs=true&lt;/li>
&lt;li>--cluster-cidr 并&amp;ndash;node-cidr-mask-size 根据给定的 CIDR 进行标记&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>如果指定了云提供商，则将指定相应的云提供商，&amp;ndash;cloud-provider 并指定&amp;ndash;cloud-config 路径（如果存在此配置文件）（这是实验性的 Alpha，将在以后的版本中删除）&lt;/li>
&lt;/ul>
&lt;p>其他无条件设置的标志是：&lt;/p>
&lt;ul>
&lt;li>--controllers 为 TLS 引导启用所有默认控制器 plus BootstrapSigner 和 TokenCleanercontrollers。有关更多详细信息，请参见&lt;a href="https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet-tls-bootstrapping/">TLS 引导&lt;/a>&lt;/li>
&lt;li>--use-service-account-credentials 至 true&lt;/li>
&lt;li>使用先前步骤中生成的证书的标志：
&lt;ul>
&lt;li>--root-ca-file 至 ca.crt&lt;/li>
&lt;li>--cluster-signing-cert-file 到 ca.crt，如果外部 CA 模式被禁用，否则&amp;quot;&amp;quot;&lt;/li>
&lt;li>--cluster-signing-key-file 到 ca.key，如果外部 CA 模式被禁用，否则&amp;quot;&amp;quot;&lt;/li>
&lt;li>--service-account-private-key-file 至 sa.key&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="scheduler">Scheduler&lt;/h3>
&lt;p>调度程序的静态 Pod 清单不受用户提供的参数的影响。&lt;/p>
&lt;h3 id="为本地-etcd-生成静态-pod-清单">为本地 etcd 生成静态 Pod 清单&lt;/h3>
&lt;p>如果用户指定了外部 etcd，则将跳过此步骤，否则 kubeadm 会生成静态 Pod 清单文件，以创建在 Pod 中运行的具有以下属性的本地 etcd 实例：&lt;/p>
&lt;ul>
&lt;li>聆听 localhost:2379 和使用 HostNetwork=true&lt;/li>
&lt;li>使 hostPath 从坐骑 dataDir 到主机的文件系统&lt;/li>
&lt;li>用户指定的任何其他标志&lt;/li>
&lt;/ul>
&lt;p>请注意：&lt;/p>
&lt;ol>
&lt;li>k8s.gcr.io 默认情况下，etcd 图像将被拉出。请参阅&lt;a href="https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm-init/#custom-images">使用自定义图像&lt;/a>自定义图像存储库&lt;/li>
&lt;li>如果在该&amp;ndash;dry-run 模式下执行 kubeadm ，则将 etcd 静态 Pod 清单写入一个临时文件夹中&lt;/li>
&lt;li>可以使用以下&lt;a href="https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm-init-phase/#cmd-phase-etcd">kubeadm init phase etcd local&lt;/a>命令分别调用本地 etcd 的静态 Pod 清单生成&lt;/li>
&lt;/ol>
&lt;h3 id="可选的动态-kubelet-配置">可选的动态 Kubelet 配置&lt;/h3>
&lt;p>要使用此功能，请致电 kubeadm alpha kubelet config enable-dynamic。它将 kubelet 初始化配置写入/var/lib/kubelet/config/init/kubelet 文件。&lt;/p>
&lt;p>init 配置用于在此特定节点上启动 kubelet，从而为 kubelet 插入文件提供了一种替代方法。这样的配置将由 kubelet 基本配置代替，如以下步骤中所述。有关其他信息，请参见&lt;a href="https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file">通过配置文件设置 Kubelet 参数&lt;/a>。&lt;/p>
&lt;p>请注意：&lt;/p>
&lt;ol>
&lt;li>要使动态 kubelet 配置工作，&amp;ndash;dynamic-config-dir=/var/lib/kubelet/config/dynamic 应在以下位置指定标志/etc/systemd/system/kubelet.service.d/10-kubeadm.conf&lt;/li>
&lt;li>可以通过将 KubeletConfiguration 对象传递到配置文件 kubeadm init 或 kubeadm join 使用配置文件来更改 kubelet 配置&amp;ndash;config some-file.yaml。该 KubeletConfiguration 对象可以与其他对象分开，例如 InitConfiguration 使用&amp;mdash;分隔符。有关更多详细信息，请查看 kubeadm config print-default 命令。&lt;/li>
&lt;/ol>
&lt;h2 id="等待控制平面启动">等待控制平面启动&lt;/h2>
&lt;p>kubeadm 等待（最多 4 分钟）直到 localhost:6443/healthz（kube-apiserver liveness）返回 ok。但是，为了检测死锁条件，如果 localhost:10255/healthz（小方块活跃度）或 localhost:10255/healthz/syncloop（小方块就绪状态）ok 分别不在 40s 和 60s 之内返回，则 kubeadm 将快速失败。&lt;/p>
&lt;p>kubeadm 依靠 kubelet 提取控制平面图像并将其作为静态 Pod 正确运行。控制平面启动后，kubeadm 将完成以下段落中描述的任务。&lt;/p>
&lt;h2 id="可选编写基本的-kubelet-配置">(可选)编写基本的 kubelet 配置&lt;/h2>
&lt;p>功能状态： Kubernetes v1.9 [alpha]
如果使用以下命令调用 kubeadm &amp;ndash;feature-gates=DynamicKubeletConfig：&lt;/p>
&lt;ol>
&lt;li>将 kubelet 基本配置写入名称空间中的 kubelet-base-config-v1.9ConfigMap 中 kube-system&lt;/li>
&lt;li>创建 RBAC 规则，以授予对所有引导令牌和所有 kubelet 实例（即 system:bootstrappers:kubeadm:default-node-token 和 system:nodes 组）对该 ConfigMap 的读取访问权限&lt;/li>
&lt;li>通过指向 Node.spec.configSource 新创建的 ConfigMap 为初始控制平面节点启用动态 kubelet 配置功能&lt;/li>
&lt;/ol>
&lt;h2 id="将-kubeadm-clusterconfiguration-保存在-configmap-中以供以后参考">将 kubeadm ClusterConfiguration 保存在 ConfigMap 中以供以后参考&lt;/h2>
&lt;p>kubeadm 节约传递给配置 kubeadm init 在一个名为 ConfigMap kubeadm-config 下 kube-system 的命名空间。&lt;/p>
&lt;p>这将确保将来执行的 kubeadm 动作（例如 kubeadm upgrade）将能够确定实际/当前集群状态并基于该数据做出新的决策。&lt;/p>
&lt;p>请注意：&lt;/p>
&lt;ol>
&lt;li>在保存 ClusterConfiguration 之前，从配置中剥离了诸如令牌之类的敏感信息。&lt;/li>
&lt;li>可以使用以下&lt;a href="https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm-init-phase/#cmd-phase-upload-config">kubeadm init phase upload-config&lt;/a>命令分别调用主配置的上传&lt;/li>
&lt;/ol>
&lt;h2 id="将节点标记为控制平面">将节点标记为控制平面&lt;/h2>
&lt;p>一旦控制平面可用，kubeadm 将执行以下操作：&lt;/p>
&lt;ul>
&lt;li>使用以下命令将节点标记为控制平面 node-role.kubernetes.io/master=&amp;quot;&amp;quot;&lt;/li>
&lt;li>污染节点 node-role.kubernetes.io/master:NoSchedule&lt;/li>
&lt;/ul>
&lt;p>请注意：&lt;/p>
&lt;ol>
&lt;li>标记控制平面相位可以通过以下&lt;a href="https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm-init-phase/#cmd-phase-mark-master">kubeadm init phase mark-control-plane&lt;/a>命令单独调用&lt;/li>
&lt;/ol>
&lt;h2 id="为节点加入配置-tls-引导">为节点加入配置 TLS 引导&lt;/h2>
&lt;p>Kubeadm 使用&lt;a href="https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/">Bootstrap Token&lt;/a>进行&lt;a href="https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/">身份验证将&lt;/a>新节点加入现有集群；有关更多详细信息，请参见&lt;a href="https://github.com/kubernetes/community/blob/master/contributors/design-proposals/cluster-lifecycle/bootstrap-discovery.md">设计建议&lt;/a>。&lt;/p>
&lt;p>kubeadm init 确保为该过程正确配置所有内容，这包括以下步骤以及设置 API 服务器和控制器标志，如前几段所述。请注意：&lt;/p>
&lt;ol>
&lt;li>可以使用以下&lt;a href="https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm-init-phase/#cmd-phase-bootstrap-token">kubeadm init phase bootstrap-token&lt;/a> 命令配置用于节点的 TLS 引导，执行以下各段中描述的所有配置步骤；或者，每个步骤都可以单独调用&lt;/li>
&lt;/ol>
&lt;h3 id="创建一个引导令牌">创建一个引导令牌&lt;/h3>
&lt;p>kubeadm init 创建第一个引导令牌，该令牌是自动生成的或由用户提供的带有&amp;ndash;token 标志的；如引导令牌规范中所述，令牌应另存为名称空间 bootstrap-token-下的秘密 kube-system。请注意：&lt;/p>
&lt;ol>
&lt;li>创建的默认令牌 kubeadm init 将在 TLS 引导过程中用于验证临时用户；这些用户将成为该 system:bootstrappers:kubeadm:default-node-token 组的成员&lt;/li>
&lt;li>令牌的有效期有限，默认为 24 小时（该间隔可以用—token-ttl 标志更改）&lt;/li>
&lt;li>可以使用该&lt;a href="https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm-token/">kubeadm token&lt;/a>命令创建其他令牌，这些令牌还提供了其他有用的令牌管理功能&lt;/li>
&lt;/ol>
&lt;h3 id="允许加入节点调用-csr-api">允许加入节点调用 CSR API&lt;/h3>
&lt;p>Kubeadm 确保 system:bootstrappers:kubeadm:default-node-token 组中的用户能够访问证书签名 API。&lt;/p>
&lt;p>这是通过 kubeadm:kubelet-bootstrap 在上述组和默认 RBAC 角色之间创建一个 ClusterRoleBinding 来实现的 system:node-bootstrapper。&lt;/p>
&lt;h3 id="为新的引导令牌设置自动批准">为新的引导令牌设置自动批准&lt;/h3>
&lt;p>Kubeadm 确保引导令牌将获得 csrapprover 控制器自动批准的 CSR 请求。&lt;/p>
&lt;p>这是通过创建 kubeadm:node-autoapprove-bootstrap 在 system:bootstrappers:kubeadm:default-node-token 组和默认角色之间命名的 ClusterRoleBinding 来实现的 system:certificates.k8s.io:certificatesigningrequests:nodeclient。&lt;/p>
&lt;p>system:certificates.k8s.io:certificatesigningrequests:nodeclient 还应创建该角色，向授予 POST 权限/apis/certificates.k8s.io/certificatesigningrequests/nodeclient。&lt;/p>
&lt;h3 id="通过自动批准设置节点证书轮换">通过自动批准设置节点证书轮换&lt;/h3>
&lt;p>Kubeadm 确保为节点启用证书轮换，并且对节点的新证书请求将获得 csrapprover 控制器自动批准的 CSR 请求。&lt;/p>
&lt;p>这是通过创建 kubeadm:node-autoapprove-certificate-rotation 在 system:nodes 组和默认角色之间命名的 ClusterRoleBinding 来实现的 system:certificates.k8s.io:certificatesigningrequests:selfnodeclient。&lt;/p>
&lt;h3 id="创建公开的名为-cluster-info-的-configmap">创建公开的名为 cluster-info 的 ConfigMap&lt;/h3>
&lt;p>此阶段 cluster-info 在 kube-public 名称空间中创建 ConfigMap 。&lt;/p>
&lt;p>此外，它还创建了 Role 和 RoleBinding 来授予未经身份验证的用户（即 RBAC 组中的用户 system:unauthenticated）对 ConfigMap 的访问。&lt;/p>
&lt;p>注意：&lt;/p>
&lt;ol>
&lt;li>对 cluster-infoConfigMap 的访问没有速率限制。如果您将母版暴露在互联网上，则可能会或可能不会出现问题。最糟糕的情况是 DoS 攻击，攻击者使用 kube-apiserver 可以处理的所有运行中请求来为 cluster-info ConfigMap 提供服务&lt;/li>
&lt;/ol>
&lt;p>对 kube-public 存在的解释详见官方文档：&lt;a href="https://github.com/kubernetes/community/blob/master/contributors/design-proposals/cluster-lifecycle/bootstrap-discovery.md#new-kube-public-namespace">https://github.com/kubernetes/community/blob/master/contributors/design-proposals/cluster-lifecycle/bootstrap-discovery.md#new-kube-public-namespace&lt;/a>&lt;/p>
&lt;h2 id="安装插件">安装插件&lt;/h2>
&lt;p>Kubeadm 通过 API 服务器安装内部 DNS 服务器和 kube-proxy 附加组件。请注意：&lt;/p>
&lt;ol>
&lt;li>此阶段可以使用&lt;a href="https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm-init-phase/#cmd-phase-addon">kubeadm init phase addon all&lt;/a>命令单独调用。&lt;/li>
&lt;/ol>
&lt;h3 id="proxy">Proxy&lt;/h3>
&lt;p>kube-proxy 在 kube-system 名称空间中创建了一个 ServiceAccount ；然后将 kube-proxy 部署为 DaemonSet：&lt;/p>
&lt;ul>
&lt;li>母版的凭据（ca.crt 和 token）来自 ServiceAccount&lt;/li>
&lt;li>主服务器的位置来自 ConfigMap&lt;/li>
&lt;li>该 kube-proxyServiceAccount 被绑定到特权 system:node-proxierClusterRole&lt;/li>
&lt;/ul>
&lt;h3 id="dns">DNS&lt;/h3>
&lt;ul>
&lt;li>在 Kubernetes 版本 1.18 中，不赞成在 kubeadm 中使用 kube-dns，并将在以后的版本中将其删除&lt;/li>
&lt;li>CoreDNS 服务的名称为 kube-dns。这样做是为了防止当用户将群集 DNS 从 kube-dns 切换到 CoreDNS 或反之时，&lt;a href="https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm-init-phase/#cmd-phase-addon">此处&lt;/a>&amp;ndash;config 描述的方法引起的服务中断。&lt;/li>
&lt;li>在 kube-system 名称空间中创建了 CoreDNS / kube-dns 的 ServiceAccount 。&lt;/li>
&lt;li>该 kube-dnsServiceAccount 被绑定到特权 system:kube-dnsClusterRole&lt;/li>
&lt;/ul>
&lt;h1 id="kubeadm-join-阶段内部设计">kubeadm join 阶段内部设计&lt;/h1>
&lt;p>与相似 kubeadm init，kubeadm join 内部工作流程也包括一系列要执行的原子工作任务。&lt;/p>
&lt;p>这分为发现（使节点信任 Kubernetes 主节点）和 TLS 引导程序（使 Kubernetes 主节点信任节点）。&lt;/p>
&lt;p>请参阅&lt;a href="https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/">使用 Bootstrap 令牌进行身份验证&lt;/a>或相应的&lt;a href="https://github.com/kubernetes/community/blob/master/contributors/design-proposals/cluster-lifecycle/bootstrap-discovery.md">设计建议&lt;/a>。&lt;/p>
&lt;h2 id="飞行前检查">飞行前检查&lt;/h2>
&lt;p>kubeadm 在开始加入之前执行一组预检检查，以验证先决条件并避免常见的集群启动问题。&lt;/p>
&lt;p>请注意：&lt;/p>
&lt;ol>
&lt;li>kubeadm join 飞行前检查基本上是 kubeadm init 飞行前检查的子集&lt;/li>
&lt;li>从 1.9 开始，kubeadm 为 CRI 通用功能提供了更好的支持。在这种情况下，docker 特定的控件将被跳过或替换为 crictl 的类似控件。&lt;/li>
&lt;li>从 1.9 开始，kubeadm 支持加入在 Windows 上运行的节点。在这种情况下，将跳过 Linux 特定的控件。&lt;/li>
&lt;li>在任何情况下，用户都可以使用该&amp;ndash;ignore-preflight-errors 选项跳过特定的飞行前检查（或最终跳过所有飞行前检查）。&lt;/li>
&lt;/ol>
&lt;h2 id="发现集群信息">发现集群信息&lt;/h2>
&lt;p>有两种主要的发现方案。第一种是使用共享令牌以及 API 服务器的 IP 地址。第二个是提供一个文件（它是标准 kubeconfig 文件的子集）。&lt;/p>
&lt;h2 id="共享令牌发现">共享令牌发现&lt;/h2>
&lt;p>如果使用 kubeadm join 调用&amp;ndash;discovery-token，则使用令牌发现；否则，使用令牌发现。在这种情况下，节点基本上是从名称空间中的 cluster-infoConfigMap 检索群集 CA 证书 kube-public。&lt;/p>
&lt;p>为了防止“中间人”攻击，采取了以下步骤：&lt;/p>
&lt;ul>
&lt;li>首先，通过不安全的连接检索 CA 证书（这是可能的，因为已 kubeadm init 授予的 cluster-info 用户访问权限 system:unauthenticated）&lt;/li>
&lt;li>然后，CA 证书将通过以下验证步骤：
&lt;ul>
&lt;li>基本验证：针对 JWT 签名使用令牌 ID&lt;/li>
&lt;li>发布密钥验证：使用提供的&amp;ndash;discovery-token-ca-cert-hash。此值在 kubeadm init 标准工具的输出中可用，或可以使用标准工具计算（该哈希值是按 RFC7469 中的主题公共密钥信息（SPKI）对象的字节计算的）。该&amp;ndash;discovery-token-ca-cert-hash flag 可重复多次，以允许多于一个公钥。&lt;/li>
&lt;li>作为附加验证，通过安全连接检索 CA 证书，然后将其与最初检索的 CA 进行比较&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>请注意：&lt;/p>
&lt;ol>
&lt;li>可以通过发布&amp;ndash;discovery-token-unsafe-skip-ca-verification 标志跳过发布密钥验证；这会削弱 kubeadm 安全模型，因为其他人可能会冒充 Kubernetes Master。&lt;/li>
&lt;/ol>
&lt;h2 id="文件-https-发现">文件/ https 发现&lt;/h2>
&lt;p>如果用 kubeadm join 调用&amp;ndash;discovery-file，则使用文件发现；否则，使用文件发现。该文件可以是本地文件，也可以通过 HTTPS URL 下载；如果是 HTTPS，则使用主机安装的 CA 捆绑包来验证连接。&lt;/p>
&lt;p>通过文件发现，群集 CA 证书将提供到文件本身中。事实上，发现文件是一个文件 kubeconfig 只 server 和 certificate-authority-data 属性设置，如在&lt;a href="https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm-join/#file-or-https-based-discovery">kubeadm join&lt;/a>参考文档; 与群集建立连接后，kubeadm 尝试访问 cluster-infoConfigMap，并在可用时使用它。&lt;/p>
&lt;h2 id="tls-引导程序">TLS 引导程序&lt;/h2>
&lt;p>知道集群信息后，即 bootstrap-kubelet.conf 会写入文件，从而允许 kubelet 执行 TLS 引导（相反，直到由 kubeadm 管理 v.1.7 TLS 引导）。&lt;/p>
&lt;p>TLS 引导机制使用共享令牌对 Kubernetes Master 进行临时身份验证，以提交本地创建的密钥对的证书签名请求（CSR）。&lt;/p>
&lt;p>然后自动批准该请求，并且该操作完成了保存 ca.crt 文件以及 kubelet.confkubelet 用来加入集群的文件，而该文件 bootstrap-kubelet.conf 已被删除。&lt;/p>
&lt;p>请注意：&lt;/p>
&lt;ul>
&lt;li>相对于 kubeadm init 过程中保存的令牌（或使用创建的其他令牌 kubeadm token）对临时身份验证进行了验证&lt;/li>
&lt;li>临时身份验证解析为 system:bootstrappers:kubeadm:default-node-token 在该 kubeadm init 过程中被授予访问 CSR api 权限的组的用户成员&lt;/li>
&lt;li>自动 CSR 批准由 csrapprover 控制器管理，并根据配置完成 kubeadm init 流程&lt;/li>
&lt;/ul>
&lt;h2 id="可选编写-init-kubelet-配置">(可选)编写 init kubelet 配置&lt;/h2>
&lt;p>功能状态： Kubernetes v1.9 [alpha]
如果使用以下命令调用 kubeadm &amp;ndash;feature-gates=DynamicKubeletConfig：&lt;/p>
&lt;ol>
&lt;li>使用引导令牌令牌从命名空间中的 kubelet-base-config-v1.9ConfigMap 中读取 kubelet 基本配置 kube-system，并将其作为 kubelet 初始配置文件写入磁盘。/var/lib/kubelet/config/init/kubelet&lt;/li>
&lt;li>一旦 kubelet 以 Node 自己的凭据（/etc/kubernetes/kubelet.conf）开始，请更新当前节点配置，指定该节点/ kubelet 配置的源是上述 ConfigMap。&lt;/li>
&lt;/ol>
&lt;p>请注意：&lt;/p>
&lt;ol>
&lt;li>要使动态 kubelet 配置工作，&amp;ndash;dynamic-config-dir=/var/lib/kubelet/config/dynamic 应在以下位置指定标志/etc/systemd/system/kubelet.service.d/10-kubeadm.conf&lt;/li>
&lt;/ol></description></item><item><title>Docs: 编译 kubeadm 修改证书过期时间</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/kubernetes-%E7%AE%A1%E7%90%86/kubeadm-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/%E7%BC%96%E8%AF%91-kubeadm-%E4%BF%AE%E6%94%B9%E8%AF%81%E4%B9%A6%E8%BF%87%E6%9C%9F%E6%97%B6%E9%97%B4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/kubernetes-%E7%AE%A1%E7%90%86/kubeadm-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/%E7%BC%96%E8%AF%91-kubeadm-%E4%BF%AE%E6%94%B9%E8%AF%81%E4%B9%A6%E8%BF%87%E6%9C%9F%E6%97%B6%E9%97%B4/</guid><description>
&lt;p>Makefile 文件位置：&lt;a href="https://github.com/kubernetes/kubernetes/blob/master/build/root/Makefile">https://github.com/kubernetes/kubernetes/blob/master/build/root/Makefile&lt;/a>&lt;/p>
&lt;p>这里以 kubernetes 1.18.8 为例。&lt;/p>
&lt;p>安装golang, 这里使用v1.13.15&lt;/p>
&lt;p>根据上步版本下载源码，下列下载方式任选其一&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git clone --branch v1.19.2 https://github.com/kubernetes/kubernetes.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wget https://github.com/kubernetes/kubernetes/archive/v1.19.0.tar.gz
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>修改 ca 证书的有效期&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 将 const duration365d = time.Hour * 24 * 365 改为 const duration365d = time.Hour * 24 * 365 * 10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sed -i &lt;span style="color:#e6db74">&amp;#39;s/\(const duration365d.*365\)/\1* 10/&amp;#39;&lt;/span> staging/src/k8s.io/client-go/util/cert/cert.go
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>修改 ca 生成的其余证书的有效期&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cat cmd/kubeadm/app/util/pkiutil/pki_helpers.go
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 找到代码NotAfter: time.Now().Add(kubeadmconstants.CertificateValidity).UTC(),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 根据 import 部分找到调用该变量的文件&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">......&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">kubeadmconstants&lt;/span> &lt;span style="color:#e6db74">&amp;#34;k8s.io/kubernetes/cmd/kubeadm/app/constants&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">......&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>vim cmd/kubeadm/app/constants/constants.go
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 将 CertificateValidity = time.Hour * 24 * 365 改为 time.Hour * 24 * 365 * 100&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在项目根目录执行 make 命令编译 kubeadm&lt;/p>
&lt;pre>&lt;code>make WHAT=cmd/kubeadm GOFLAGS=-v
# 生成的二进制在 _output/bin/ 目录下
&lt;/code>&lt;/pre>
&lt;p>替换 kubeadm 文件
先备份&lt;/p>
&lt;pre>&lt;code>cp /usr/bin/kubeadm /usr/bin/kubeadm.backup
cp _output/bin/kubeadm /usr/bin/kubeadm
&lt;/code>&lt;/pre>
&lt;p>参考
&lt;a href="http://blog.sina.com.cn/s/blog_537517170102za73.html">http://blog.sina.com.cn/s/blog_537517170102za73.html&lt;/a>
&lt;a href="https://bbs.huaweicloud.com/blogs/168848">https://bbs.huaweicloud.com/blogs/168848&lt;/a>&lt;/p></description></item><item><title>Docs: 最佳实践</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/kubernetes-%E7%AE%A1%E7%90%86/kubeadm-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/kubernetes-%E7%AE%A1%E7%90%86/kubeadm-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</guid><description>
&lt;h1 id="bj-net">bj-net&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">kubeadm.k8s.io/v1beta2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">InitConfiguration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">bootstrapTokens&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">groups&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">system:bootstrappers:kubeadm:default-node-token&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ttl&lt;/span>: &lt;span style="color:#ae81ff">0s&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">usages&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">signing&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">authentication&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">kubeadm.k8s.io/v1beta2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">ClusterConfiguration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kubernetesVersion&lt;/span>: &lt;span style="color:#ae81ff">v1.19.2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">controlPlaneEndpoint&lt;/span>: &lt;span style="color:#ae81ff">k8s-api.bj-net.ehualu.local:6443&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">imageRepository&lt;/span>: &lt;span style="color:#ae81ff">registry.aliyuncs.com/k8sxio&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">networking&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">podSubnet&lt;/span>: &lt;span style="color:#ae81ff">10.244.0.0&lt;/span>&lt;span style="color:#ae81ff">/16&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">serviceSubnet&lt;/span>: &lt;span style="color:#ae81ff">10.96.0.0&lt;/span>&lt;span style="color:#ae81ff">/12&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">etcd&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">local&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">extraArgs&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">listen-metrics-urls&lt;/span>: &lt;span style="color:#ae81ff">http://0.0.0.0:2381&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiServer&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">certSANs&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">localhost&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">127.0.0.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">k8s-api.bj-net.ehualu.local&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">172.19.42.214&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">node-3.bj-net&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">172.19.42.223&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">node-2.bj-net&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">172.19.42.222&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">node-1.bj-net&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">172.19.42.221&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">master-3.bj-net&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">172.19.42.213&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">master-2.bj-net&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">172.19.42.212&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">master-1.bj-net&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">172.19.42.211&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">extraArgs&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">service-node-port-range&lt;/span>: &lt;span style="color:#ae81ff">30000-60000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">extraVolumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">host-time&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">hostPath&lt;/span>: &lt;span style="color:#ae81ff">/etc/localtime&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mountPath&lt;/span>: &lt;span style="color:#ae81ff">/etc/localtime&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">readOnly&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">controllerManager&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">extraArgs&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">bind-address&lt;/span>: &lt;span style="color:#ae81ff">0.0.0.0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">extraVolumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">host-time&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">hostPath&lt;/span>: &lt;span style="color:#ae81ff">/etc/localtime&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mountPath&lt;/span>: &lt;span style="color:#ae81ff">/etc/localtime&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">readOnly&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">scheduler&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">extraArgs&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">bind-address&lt;/span>: &lt;span style="color:#ae81ff">0.0.0.0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">extraVolumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">host-time&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">hostPath&lt;/span>: &lt;span style="color:#ae81ff">/etc/localtime&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mountPath&lt;/span>: &lt;span style="color:#ae81ff">/etc/localtime&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">readOnly&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">kubeproxy.config.k8s.io/v1alpha1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">KubeProxyConfiguration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">mode&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;ipvs&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">kubelet.config.k8s.io/v1beta1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">KubeletConfiguration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">cgroupDriver&lt;/span>: &lt;span style="color:#ae81ff">systemd&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kubeReserved&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">cpu&lt;/span>: &lt;span style="color:#ae81ff">200m&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">memory&lt;/span>: &lt;span style="color:#ae81ff">250Mi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">systemReserved&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">cpu&lt;/span>: &lt;span style="color:#ae81ff">200m&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">memory&lt;/span>: &lt;span style="color:#ae81ff">250Mi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">evictionHard&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">memory.available&lt;/span>: &lt;span style="color:#ae81ff">5&lt;/span>&lt;span style="color:#ae81ff">%&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">evictionSoft&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">memory.available&lt;/span>: &lt;span style="color:#ae81ff">10&lt;/span>&lt;span style="color:#ae81ff">%&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">evictionSoftGracePeriod&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">memory.available&lt;/span>: &lt;span style="color:#ae81ff">2m&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="bj-cs">bj-cs&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">kubeadm.k8s.io/v1beta2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">InitConfiguration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">bootstrapTokens&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">groups&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">system:bootstrappers:kubeadm:default-node-token&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ttl&lt;/span>: &lt;span style="color:#ae81ff">0s&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">usages&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">signing&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">authentication&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">kubeadm.k8s.io/v1beta2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">ClusterConfiguration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kubernetesVersion&lt;/span>: &lt;span style="color:#ae81ff">v1.19.2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">controlPlaneEndpoint&lt;/span>: &lt;span style="color:#ae81ff">k8s-api.bj-cs.desistdaydream.ltd:6443&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">imageRepository&lt;/span>: &lt;span style="color:#ae81ff">registry.aliyuncs.com/k8sxio&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">networking&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">podSubnet&lt;/span>: &lt;span style="color:#ae81ff">10.244.0.0&lt;/span>&lt;span style="color:#ae81ff">/16&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">serviceSubnet&lt;/span>: &lt;span style="color:#ae81ff">10.96.0.0&lt;/span>&lt;span style="color:#ae81ff">/12&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">etcd&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">local&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">extraArgs&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">listen-metrics-urls&lt;/span>: &lt;span style="color:#ae81ff">http://0.0.0.0:2381&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiServer&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">certSANs&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">localhost&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">127.0.0.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">k8s-api.bj-cs.desistdaydream.ltd&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">172.19.42.195&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">node-3.bj-cs&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">172.19.42.198&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">node-2.bj-cs&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">172.19.42.197&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">node-1.bj-cs&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">172.19.42.196&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">master-3.bj-cs&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">172.19.42.194&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">master-2.bj-cs&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">172.19.42.193&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">master-1.bj-cs&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">172.19.42.192&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">extraArgs&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">service-node-port-range&lt;/span>: &lt;span style="color:#ae81ff">30000-60000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">extraVolumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">host-time&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">hostPath&lt;/span>: &lt;span style="color:#ae81ff">/etc/localtime&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mountPath&lt;/span>: &lt;span style="color:#ae81ff">/etc/localtime&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">readOnly&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">controllerManager&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">extraArgs&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">bind-address&lt;/span>: &lt;span style="color:#ae81ff">0.0.0.0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">extraVolumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">host-time&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">hostPath&lt;/span>: &lt;span style="color:#ae81ff">/etc/localtime&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mountPath&lt;/span>: &lt;span style="color:#ae81ff">/etc/localtime&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">readOnly&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">scheduler&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">extraArgs&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">bind-address&lt;/span>: &lt;span style="color:#ae81ff">0.0.0.0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">extraVolumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">host-time&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">hostPath&lt;/span>: &lt;span style="color:#ae81ff">/etc/localtime&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mountPath&lt;/span>: &lt;span style="color:#ae81ff">/etc/localtime&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">readOnly&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">kubeproxy.config.k8s.io/v1alpha1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">KubeProxyConfiguration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">mode&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;ipvs&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">kubelet.config.k8s.io/v1beta1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">KubeletConfiguration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">cgroupDriver&lt;/span>: &lt;span style="color:#ae81ff">systemd&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kubeReserved&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">cpu&lt;/span>: &lt;span style="color:#ae81ff">200m&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">memory&lt;/span>: &lt;span style="color:#ae81ff">250Mi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">systemReserved&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">cpu&lt;/span>: &lt;span style="color:#ae81ff">200m&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">memory&lt;/span>: &lt;span style="color:#ae81ff">250Mi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">evictionHard&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">memory.available&lt;/span>: &lt;span style="color:#ae81ff">5&lt;/span>&lt;span style="color:#ae81ff">%&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">evictionSoft&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">memory.available&lt;/span>: &lt;span style="color:#ae81ff">10&lt;/span>&lt;span style="color:#ae81ff">%&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">evictionSoftGracePeriod&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">memory.available&lt;/span>: &lt;span style="color:#ae81ff">2m&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>