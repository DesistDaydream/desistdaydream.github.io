<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦 – Kubernetes 衍生品</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/kubernetes-%E8%A1%8D%E7%94%9F%E5%93%81/</link><description>Recent content in Kubernetes 衍生品 on 断念梦</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/kubernetes-%E8%A1%8D%E7%94%9F%E5%93%81/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: K3S</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/kubernetes-%E8%A1%8D%E7%94%9F%E5%93%81/k3s/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/kubernetes-%E8%A1%8D%E7%94%9F%E5%93%81/k3s/</guid><description>
&lt;h1 id="概述">概述&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://rancher.com/docs/k3s/latest/en/">官方文档&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://docs.rancher.cn/k3s/">中文官方文档&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://mp.weixin.qq.com/s/ARhxWGypG0wepMqwTLH0mQ">公众号-云原生实验室，K3S 工具进阶完全指南&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>K3S 是一个轻量的 Kubernetes，具有基本的 kubernetes 功能，将 kubernetes 的主要组件都集成在一个二进制文件中(apiserver、kubelet 等)，这个二进制文件只有不到 100m。内嵌 Containerd，可以通过 Containerd 来启动 coredns 等 kubernetes 的 addone。直接使用 k3s 的二进制文件，即可启动一个 kubernetes 的节点。&lt;/p>
&lt;p>Note：K3S 的 kubelet 不支持 systemd 作为 cgroup-driver，原因详见 &lt;a href="https://github.com/rancher/k3s/issues/797">https://github.com/rancher/k3s/issues/797&lt;/a>，说是 systemd 的类型无法放进二进制文件里。&lt;/p>
&lt;p>k3s 二进制文件包含 kubelet、api-server、kube-controller-manager、kube-scheduler，然后会通过 containerd 拉起 coredns 与 flannel。&lt;/p>
&lt;h1 id="k3s-关联文件与配置">k3s 关联文件与配置&lt;/h1>
&lt;p>&lt;strong>/etc/rancher/k3s/*&lt;/strong> #&lt;/p>
&lt;ul>
&lt;li>&lt;strong>./k3s.yaml&lt;/strong> #&lt;/li>
&lt;li>&lt;strong>./registries.yaml&lt;/strong> #&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>/var/lib/rancher/k3s/*&lt;/strong> # k3s 运行时数据存储保存路径&lt;/p>
&lt;ul>
&lt;li>**./agent/* **# 作为 k8s 的 node 节点所需要的信息保存路径
&lt;ul>
&lt;li>包括证书、containerd 数据目录、cni，containerd 的配置文件 等等都在此处&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>**./data/* **#&lt;/li>
&lt;li>**./server/* **# 作为 k8s 的 master 节点所需要的信息保存路径
&lt;ul>
&lt;li>包括证书、kube-system 名称空间中的 manifests 文件、etcd 数据 等等都在此处&lt;/li>
&lt;li>&lt;strong>./db/*&lt;/strong> # 内嵌 Etcd 数据保存路径&lt;/li>
&lt;li>**./manifests/* **# k3s 集群启动后，kube-system 名称空间中 pod 的 manifests 文件&lt;/li>
&lt;li>&lt;strong>./tls/*&lt;/strong> # Kubernetes 主要组件运行所需证书保存路径&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>/run/k3s&lt;/strong> #
&lt;strong>/run/flannel&lt;/strong> #
**/var/lib/kubelet **#&lt;/p></description></item><item><title>Docs: K3S</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/kubernetes-%E8%A1%8D%E7%94%9F%E5%93%81/k3s/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/kubernetes-%E8%A1%8D%E7%94%9F%E5%93%81/k3s/</guid><description/></item><item><title>Docs: kube-vip</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/kubernetes-%E8%A1%8D%E7%94%9F%E5%93%81/kube-vip/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/kubernetes-%E8%A1%8D%E7%94%9F%E5%93%81/kube-vip/</guid><description>
&lt;h1 id="概述">概述&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://kube-vip.io/">官网&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kube-vip.io/hybrid/static/">官方文档,使用静态 Pod 部署 kube-vip&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>kube-vip 是一个用于 Kubernetes 控制平面的 VIP 和 负载均衡器。他可以实现 Keepalived + HAProxy 的功能。&lt;/p>
&lt;p>Kube-VIP 最初是为 Kubernetes 控制平面提供 HA 解决方案而创建的，随着时间的推移，它已经发展为将相同的功能合并到 Kubernetes 的 load-banlancers 类型的 Service 资源。&lt;/p>
&lt;h1 id="配置">配置&lt;/h1>
&lt;p>Kube-VIP 通过命令行标志变更运行时行为&lt;/p>
&lt;h1 id="部署">部署&lt;/h1>
&lt;h2 id="使用静态-pod-部署-kube-vip">使用静态 Pod 部署 kube-vip&lt;/h2>
&lt;p>生成 Manifests&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker run --rm --net host docker.io/plndr/kube-vip:v0.3.5 &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>/kube-vip manifest pod &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>--interface &lt;span style="color:#e6db74">${&lt;/span>INTERFACE&lt;span style="color:#e6db74">}&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>--vip &lt;span style="color:#e6db74">${&lt;/span>VIP&lt;span style="color:#e6db74">}&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>--controlplane &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>--services &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>--arp &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>--leaderElection | tee /etc/kubernetes/manifests/kube-vip.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>等待 kubelet 将 pod 启动后，就会自动生成 VIP&lt;/p></description></item><item><title>Docs: Kubernetes 衍生品</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/kubernetes-%E8%A1%8D%E7%94%9F%E5%93%81/kubernetes-%E8%A1%8D%E7%94%9F%E5%93%81/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/kubernetes-%E8%A1%8D%E7%94%9F%E5%93%81/kubernetes-%E8%A1%8D%E7%94%9F%E5%93%81/</guid><description>
&lt;h1 id="clusterapi-概述">ClusterAPI 概述&lt;/h1>
&lt;p>参考：&lt;a href="https://cluster-api.sigs.k8s.io/">官方文档&lt;/a>&lt;/p>
&lt;h2 id="为什么要建立集群-api">为什么要建立集群 API？&lt;/h2>
&lt;p>Kubernetes 是一个复杂的系统，它依赖于正确配置的几个组件才能具有正常运行的集群。社区意识到这是用户的潜在绊脚石，因此专注于简化引导过程。如今，已经创建了&lt;a href="https://www.cncf.io/certification/software-conformance/">100 多个 Kubernetes 发行版和安装程序&lt;/a>，每个&lt;a href="https://www.cncf.io/certification/software-conformance/">发行版和安装程序&lt;/a>都为集群和受支持的基础架构提供程序提供了不同的默认配置。SIG 集群生命周期发现需要一种工具来解决一系列常见的重叠安装问题，因此开始使用 kubeadm。
&lt;a href="https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm/">Kubeadm&lt;/a>被设计为引导最佳实践 Kubernetes 集群的重点工具。kubeadm 项目背后的核心宗旨是创建其他安装程序可以利用的工具，并最终减轻单个安装程序需要维护的配置量。自开始以来，kubeadm 已成为其他多个应用程序（包括 Kubespray，Minikube，kind 等）的基础自举工具。
但是，尽管 kubeadm 和其他引导程序提供程序降低了安装复杂性，但它们并未解决如何长期管理日常群集或 Kubernetes 环境的问题。在设置生产环境时，您仍然面临几个问题，包括&lt;/p>
&lt;ul>
&lt;li>如何在多个基础架构提供商和位置之间一致地配置计算机，负载平衡器，VPC 等？&lt;/li>
&lt;li>如何实现集群生命周期管理的自动化，包括升级和集群删除等操作？&lt;/li>
&lt;li>如何扩展这些过程以管理任意数量的集群？&lt;/li>
&lt;/ul>
&lt;p>SIG 集群生命周期开始了 ClusterAPI 项目，以此作为通过构建声明性的 Kubernetes 风格的 API 来解决这些差距的方法，该 API 使集群的创建，配置和管理自动化。使用此模型，还可以扩展集群 API，以支持所需的任何基础结构提供程序（AWS，Azure，vSphere 等）或引导程序提供程序（默认为 kubeadm）。请参阅越来越多的&lt;a href="https://cluster-api.sigs.k8s.io/reference/providers.html">可用提供程序&lt;/a>列表。&lt;/p>
&lt;h1 id="cncf-的-software-conformance软件一致性">CNCF 的 Software conformance(软件一致性)&lt;/h1>
&lt;p>参考：&lt;a href="https://www.cncf.io/certification/software-conformance/">官方文档&lt;/a>
Certified Kubernetes(经过认证的 Kubernetes)
对于使用 Kubernetes 的组织，一致性可以实现从一个 Kubernetes 安装到下一个 Kubernetes 安装的互操作性。它使他们可以灵活地在供应商之间进行选择。&lt;/p>
&lt;p>CNCF 运行 Kubernetes 认证合格计划。大多数全球领先的企业软件供应商和云计算提供商都拥有 &lt;a href="https://www.cncf.io/certification/software-conformance/#logos">经过认证的 Kubernetes&lt;/a> 产品。&lt;/p>
&lt;p>**有超过 90 种经过认证的 Kubernetes 产品。**邀请所有供应商提交一致性测试结果，以供 CNCF 审核和认证。如果您的公司提供基于 Kubernetes 的软件，我们建议您立即获得认证。&lt;/p>
&lt;h1 id="kubernetes-管理工具">Kubernetes 管理工具&lt;/h1>
&lt;p>&lt;a href="https://www.yuque.com/go/doc/33161032">Rancher&lt;/a>
&lt;a href="https://github.com/eip-work/kuboard-press">Kuboard&lt;/a>&lt;/p>
&lt;h1 id="kubernetes-发行版">Kubernetes 发行版&lt;/h1>
&lt;p>K3S&lt;/p></description></item><item><title>Docs: Kubesphere</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/kubernetes-%E8%A1%8D%E7%94%9F%E5%93%81/kubesphere/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/kubernetes-%E8%A1%8D%E7%94%9F%E5%93%81/kubesphere/</guid><description>
&lt;p>kubekey 部署工具小问题
kubeadm 文件无法完全自定义，在 apis/kubekey/v1alpha1/kubernetes_types.go 中的 kubernetes 结构体只有很少的几个属性，pkg/kubernetes/tmpl/kubeadm.go 中的 kubeadm 模板文件很多都是写死的。&lt;/p>
&lt;h1 id="问题总结">问题总结&lt;/h1>
&lt;p>总结于 3.1&lt;/p>
&lt;p>该 产品定位是集群管理，应用管理功能非常弱。
企业空间下的项目=k8s 中的 namespace
应用仓库没法使用认证添加
&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/dsqwyp/1619746908417-ebf183bd-a231-4518-a5b9-62888673fc65.png" alt="image.png">&lt;/p>
&lt;p>应用信息加载不出来
&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/dsqwyp/1619746661900-84a85e25-d389-42d7-a11e-6c37506b0dcd.png" alt="image.png">&lt;/p>
&lt;p>监控套件输入内嵌，自定义非常弱，不太懂为啥要自己实现 Grafana
&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/dsqwyp/1619747100329-da9e8052-a3e9-4cdd-a1a3-54563abb58cd.png" alt="image.png">&lt;/p>
&lt;p>有的代理转发的头不支持
&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/dsqwyp/1619746684706-fddd0c38-e6b7-4138-b236-1ad455468715.png" alt="image.png">&lt;/p>
&lt;p>总结，用开源的东西，又想要实现生态闭环，抽象概念太多，用上的人就离不开，离开了也没法理解 k8s。
该产品目标猜测：面向企业，对企业的基础设施以上的设备及应用的全生命周期管理。&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/dsqwyp/1652019279389-df197850-1ba6-4c0a-aaba-ff4ea27ad936.png" alt="image.png">
&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/dsqwyp/1652019250255-d576b173-f392-46a7-b08d-6bf8da5b776f.png" alt="image.png">&lt;/p>
&lt;p>已经无人维护了~~~&lt;/p></description></item><item><title>Docs: Kubesphere</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/kubernetes-%E8%A1%8D%E7%94%9F%E5%93%81/kubesphere/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/kubernetes-%E8%A1%8D%E7%94%9F%E5%93%81/kubesphere/</guid><description/></item><item><title>Docs: Rancher</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/kubernetes-%E8%A1%8D%E7%94%9F%E5%93%81/rancher/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/kubernetes-%E8%A1%8D%E7%94%9F%E5%93%81/rancher/</guid><description/></item><item><title>Docs: Rancher</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/kubernetes-%E8%A1%8D%E7%94%9F%E5%93%81/rancher/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/kubernetes-%E8%A1%8D%E7%94%9F%E5%93%81/rancher/</guid><description/></item><item><title>Docs: Sealer</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/kubernetes-%E8%A1%8D%E7%94%9F%E5%93%81/sealer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/kubernetes-%E8%A1%8D%E7%94%9F%E5%93%81/sealer/</guid><description>
&lt;h1 id="概述">概述&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/sealerio/sealer">GitHub 项目，sealerio/sealer&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>由 &lt;a href="https://github.com/labring/sealos">sealos&lt;/a> 作者进入阿里后开源的一款工具，用于将应用程序的所以依赖和 Kubernetes 打包成 ClusterImage。然后通过 ClusterImage 将此应用程序分发到任何位置。&lt;/p>
&lt;h1 id="问题">问题&lt;/h1>
&lt;p>尴尬。。。快速开始都报错了。。。
&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/virv3w/1622037606609-84ee7ea6-d616-4ebe-ab7e-1defcc4905ce.png" alt="image.png">&lt;/p>
&lt;p>镜像目录结构&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── bin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── conntrack
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── containerd-rootless-setuptool.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── containerd-rootless.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── crictl
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── kubeadm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── kubectl
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── kubelet
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── nerdctl
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── seautil
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── cni
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── calico
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── calico.yaml.tmpl
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── cri
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── containerd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── containerd-shim
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── containerd-shim-runc-v2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── ctr
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── docker
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── dockerd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── docker-init
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── docker-proxy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── rootlesskit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── rootlesskit-docker-proxy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── runc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── vpnkit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── etc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── 10-kubeadm.conf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── Clusterfile &lt;span style="color:#75715e"># image default Clusterfile&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── daemon.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── docker.service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── kubeadm-config.yaml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── kubelet.service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── images
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── registry.tar &lt;span style="color:#75715e"># registry docker image, will load this image and run a local registry in cluster&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── Kubefile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── Metadata
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── README.md
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── registry &lt;span style="color:#75715e"># will mount this dir to local registry&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── docker
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── registry
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── scripts
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── clean.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── docker.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── init-kube.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── init-registry.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── init.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── kubelet-pre-start.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── statics &lt;span style="color:#75715e"># yaml files, sealer will render values in those files&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └── audit-policy.yml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>