<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦 – Vue</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2.%E7%BC%96%E7%A8%8B/%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/ecmascript/vue/</link><description>Recent content in Vue on 断念梦</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2.%E7%BC%96%E7%A8%8B/%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/ecmascript/vue/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Vue 环境安装与使用</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2.%E7%BC%96%E7%A8%8B/%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/ecmascript/vue/vue-%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2.%E7%BC%96%E7%A8%8B/%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/ecmascript/vue/vue-%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</guid><description>
&lt;h1 id="vue-命令行工具">Vue 命令行工具&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://cli.vuejs.org/">官网&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>安装&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>npm install -g @vue/cli
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># OR&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>yarn global add @vue/cli
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>配置环境变量&lt;/p>
&lt;h1 id="创建-vue-项目">创建 Vue 项目&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://cn.vuejs.org/guide/quick-start.html#creating-a-vue-application">官方文档，快速上手-创建一个 Vue 应用&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/vitejs/awesome-vite">GitHub 项目，vitejs/awesome-vite&lt;/a>（一些使用 vite 创建的应用模板，可以直接拿来用）
&lt;ul>
&lt;li>&lt;a href="https://github.com/zclzone/vue-naive-admin">Vue Naive&lt;/a> - 管理模板，基于 Vue 3 + Pinia + Naive UI。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>可以通过两种方式创建一个 Vue3 的项目&lt;/p>
&lt;ul>
&lt;li>&lt;strong>vue 工具&lt;/strong> # &lt;code>vue create NAME&lt;/code> 基于 webpack。不推荐使用。&lt;/li>
&lt;li>&lt;strong>vite 工具&lt;/strong> # 通过 &lt;a href="https://github.com/vuejs/create-vue">vuejs/create-vue&lt;/a> 项目，基于 vite 创建 Vue 项目。强烈推荐&lt;/li>
&lt;/ul>
&lt;h2 id="基于-vite-创建-vue-项目">基于 Vite 创建 Vue 项目&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>npm init vue@latest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>该指令会安装并执行 &lt;a href="https://github.com/vuejs/create-vue">create-vue&lt;/a>(这是 Vue 官方的项目脚手架工具)。我们会看到如下的可选功能：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>✔ Project name: … &amp;lt;your-project-name&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>✔ Add TypeScript? … No / Yes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>✔ Add JSX Support? … No / Yes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>✔ Add Vue Router &lt;span style="color:#66d9ef">for&lt;/span> Single Page Application development? … No / Yes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>✔ Add Pinia &lt;span style="color:#66d9ef">for&lt;/span> state management? … No / Yes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>✔ Add Vitest &lt;span style="color:#66d9ef">for&lt;/span> Unit testing? … No / Yes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>✔ Add Cypress &lt;span style="color:#66d9ef">for&lt;/span> both Unit and End-to-End testing? … No / Yes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>✔ Add ESLint &lt;span style="color:#66d9ef">for&lt;/span> code quality? … No / Yes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>✔ Add Prettier &lt;span style="color:#66d9ef">for&lt;/span> code formatting? … No / Yes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Scaffolding project in ./&amp;lt;your-project-name&amp;gt;...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Done.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果不确定是否要开启某个功能，你可以直接按下回车键选择 No。在项目被创建后，通过以下步骤安装依赖并启动开发服务器：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&amp;gt; cd &amp;lt;your-project-name&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt; npm install
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt; npm run dev
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>npm install&lt;/code> 用以安装本项目的依赖，&lt;code>npm run dev&lt;/code> 则是执行 &lt;code>vite&lt;/code> 命令，此时 Vite 将会启动一个监听程序用以响应 html 文件。&lt;/p>
&lt;h1 id="ide-插件">IDE 插件&lt;/h1>
&lt;h2 id="volar">Volar&lt;/h2>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/bvqpem/1667541398977-a8c81df3-0834-4a86-9179-c50e3c9c9c20.png" alt="image.png">&lt;/p></description></item><item><title>Docs: Vue 响应式</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2.%E7%BC%96%E7%A8%8B/%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/ecmascript/vue/vue-%E5%93%8D%E5%BA%94%E5%BC%8F/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2.%E7%BC%96%E7%A8%8B/%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/ecmascript/vue/vue-%E5%93%8D%E5%BA%94%E5%BC%8F/</guid><description>
&lt;h1 id="概述">概述&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://cn.vuejs.org/api/">官方文档，API 参考&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cn.vuejs.org/api/reactivity-core.html">官方文档，API 参考-组合式 API-响应式：核心&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>ref 与 reactive 是响应式的基础&lt;/p>
&lt;h1 id="响应式-核心">响应式: 核心&lt;/h1>
&lt;h2 id="refhttpscnvuejsorgapireactivity-corehtmlref">&lt;a href="https://cn.vuejs.org/api/reactivity-core.html#ref">ref()&lt;/a>&lt;/h2>
&lt;p>&lt;code>ref()&lt;/code> 函数返回一个 &lt;code>Ref&amp;lt;T = any&amp;gt;&lt;/code> 接口类型的对象，该接口中只有一个名为 &lt;code>value&lt;/code> 的属性，用以指向该对象的值。
&lt;code>Ref&amp;lt;T&amp;gt;&lt;/code> 接口对象是 &lt;strong>响应式&lt;/strong>、&lt;strong>可更改&lt;/strong> 的。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#a6e22e">number&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">ref&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#a6e22e">number&lt;/span> &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>number 是 &lt;code>Ref&amp;lt;number&amp;gt;&lt;/code> 类型的实例，Ref.value 则是该实例的值，即 &lt;code>0&lt;/code>。
Ref 对象是可更改的，也就是说你可以为 .value 赋予新的值。它也是响应式的，即所有对 .value 的操作都将被追踪，并且写操作会触发与之相关的副作用。
如果将一个对象赋值给 ref，那么这个对象将通过 &lt;a href="https://cn.vuejs.org/api/reactivity-core.html#reactive">reactive()&lt;/a> 转为具有深层次响应式的对象。这也意味着如果对象中包含了嵌套的 ref，它们将被深层地解包。
若要避免这种深层次的转换，使用 &lt;a href="https://cn.vuejs.org/api/reactivity-advanced.html#shallowref">shallowRef()&lt;/a> 来替代。&lt;/p>
&lt;h2 id="computed-httpscnvuejsorgapireactivity-corehtmlcomputed">&lt;a href="https://cn.vuejs.org/api/reactivity-core.html#computed">computed ()&lt;/a>&lt;/h2>
&lt;h2 id="reactivehttpscnvuejsorgapireactivity-corehtmlreactive">&lt;a href="https://cn.vuejs.org/api/reactivity-core.html#reactive">reactive()&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://cn.vuejs.org/api/reactivity-core.html#readonly">readonly()&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cn.vuejs.org/api/reactivity-core.html#watcheffect">watchEffect()&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cn.vuejs.org/api/reactivity-core.html#watchposteffect">watchPostEffect()&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cn.vuejs.org/api/reactivity-core.html#watchsynceffect">watchSyncEffect()&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cn.vuejs.org/api/reactivity-core.html#watch">watch()&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="响应式-工具">响应式: 工具&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://cn.vuejs.org/api/reactivity-utilities.html#isref">isRef()&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cn.vuejs.org/api/reactivity-utilities.html#unref">unref()&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cn.vuejs.org/api/reactivity-utilities.html#toref">toRef()&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cn.vuejs.org/api/reactivity-utilities.html#torefs">toRefs()&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cn.vuejs.org/api/reactivity-utilities.html#isproxy">isProxy()&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cn.vuejs.org/api/reactivity-utilities.html#isreactive">isReactive()&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cn.vuejs.org/api/reactivity-utilities.html#isreadonly">isReadonly()&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="响应式-进阶">响应式: 进阶&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://cn.vuejs.org/api/reactivity-advanced.html#shallowref">shallowRef()&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cn.vuejs.org/api/reactivity-advanced.html#triggerref">triggerRef()&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cn.vuejs.org/api/reactivity-advanced.html#customref">customRef()&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cn.vuejs.org/api/reactivity-advanced.html#shallowreactive">shallowReactive()&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cn.vuejs.org/api/reactivity-advanced.html#shallowreadonly">shallowReadonly()&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cn.vuejs.org/api/reactivity-advanced.html#toraw">toRaw()&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cn.vuejs.org/api/reactivity-advanced.html#markraw">markRaw()&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cn.vuejs.org/api/reactivity-advanced.html#effectscope">effectScope()&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cn.vuejs.org/api/reactivity-advanced.html#getcurrentscope">getCurrentScope()&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cn.vuejs.org/api/reactivity-advanced.html#onscopedispose">onScopeDispose()&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="生命周期钩子">生命周期钩子&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://cn.vuejs.org/api/composition-api-lifecycle.html#onmounted">onMounted()&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cn.vuejs.org/api/composition-api-lifecycle.html#onupdated">onUpdated()&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cn.vuejs.org/api/composition-api-lifecycle.html#onunmounted">onUnmounted()&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cn.vuejs.org/api/composition-api-lifecycle.html#onbeforemount">onBeforeMount()&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cn.vuejs.org/api/composition-api-lifecycle.html#onbeforeupdate">onBeforeUpdate()&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cn.vuejs.org/api/composition-api-lifecycle.html#onbeforeunmount">onBeforeUnmount()&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cn.vuejs.org/api/composition-api-lifecycle.html#onerrorcaptured">onErrorCaptured()&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cn.vuejs.org/api/composition-api-lifecycle.html#onrendertracked">onRenderTracked()&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cn.vuejs.org/api/composition-api-lifecycle.html#onrendertriggered">onRenderTriggered()&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cn.vuejs.org/api/composition-api-lifecycle.html#onactivated">onActivated()&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cn.vuejs.org/api/composition-api-lifecycle.html#ondeactivated">onDeactivated()&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cn.vuejs.org/api/composition-api-lifecycle.html#onserverprefetch">onServerPrefetch()&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Docs: Vue 组件</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2.%E7%BC%96%E7%A8%8B/%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/ecmascript/vue/vue-%E7%BB%84%E4%BB%B6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2.%E7%BC%96%E7%A8%8B/%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/ecmascript/vue/vue-%E7%BB%84%E4%BB%B6/</guid><description>
&lt;h1 id="概述">概述&lt;/h1>
&lt;blockquote>
&lt;/blockquote>
&lt;h1 id="组件间数据传递">组件间数据传递&lt;/h1>
&lt;p>在 Vue 中，组件之间可以传递多种类型的数据&lt;/p>
&lt;ul>
&lt;li>变量，通过 Props。
&lt;ul>
&lt;li>关键字：v-bind&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>模板，通过 Slots
&lt;ul>
&lt;li>关键字：&lt;!-- raw HTML omitted -->、v-slot&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>事件，通过 Event
&lt;ul>
&lt;li>关键字：v-model、v-on、emit&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="props">Props&lt;/h2>
&lt;h2 id="slots">Slots&lt;/h2>
&lt;p>&lt;strong>Slot Content(插槽内容)&lt;/strong> 与 &lt;strong>Slot Outlet(插槽出口)&lt;/strong>
&lt;code>&amp;lt;slot&amp;gt;&lt;/code> 元素是一个 &lt;strong>Slot Outlet(插槽出口)&lt;/strong>，标示了父元素提供的 **Slot Content(插槽内容) **将在哪里被渲染。
&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/bigg4rx374wdctrg/1669263120268-c5d8e233-599c-4779-b9b0-3bcb15e9ff2a.png" alt="image.png">&lt;/p>
&lt;h2 id="event">Event&lt;/h2></description></item></channel></rss>