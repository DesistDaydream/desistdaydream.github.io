<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦 – ECMAScript 工具</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2.%E7%BC%96%E7%A8%8B/%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/ecmascript/ecmascript-%E5%B7%A5%E5%85%B7/</link><description>Recent content in ECMAScript 工具 on 断念梦</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2.%E7%BC%96%E7%A8%8B/%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/ecmascript/ecmascript-%E5%B7%A5%E5%85%B7/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Vite</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2.%E7%BC%96%E7%A8%8B/%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/ecmascript/ecmascript-%E5%B7%A5%E5%85%B7/vite/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2.%E7%BC%96%E7%A8%8B/%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/ecmascript/ecmascript-%E5%B7%A5%E5%85%B7/vite/</guid><description>
&lt;h1 id="概述">概述&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/vitejs">GitHub 组织，vite&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/vitejs/vite">GitHub 项目，vitejs/vite&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>Vue 作者主导的打包与编译工具，启动项目开发模式速度非常快、下载依赖非常快、编译非常快。&lt;/p>
&lt;p>在 &lt;a href="https://github.com/vitejs/awesome-vite">GitHub 项目，vitejs/awesom-vite&lt;/a> 这里有很多使用 Vite 打包的很棒的项目示例&lt;/p>
&lt;h1 id="安装-vite">安装 Vite&lt;/h1>
&lt;h1 id="vite-关联文件与配置">Vite 关联文件与配置&lt;/h1>
&lt;p>&lt;strong>vite.config.js&lt;/strong> # 每个项目的根目录通常都会有一个 vite.config.js 文件，以定义打包项目代码时的行为&lt;/p>
&lt;h3 id="vite-配置详解">Vite 配置详解&lt;/h3>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://cn.vitejs.dev/config/">官方文档，配置&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h1 id="常见问题">常见问题&lt;/h1>
&lt;h2 id="解决-vite-打包项目代码后使用的是绝对路径">解决 Vite 打包项目代码后，使用的是绝对路径&lt;/h2>
&lt;p>在 vite.config.js 文件中设置 base&lt;/p>
&lt;h2 id="解决-vite-在-wsl-环境下热更新失效问题">解决 vite 在 WSL 环境下热更新失效问题&lt;/h2>
&lt;p>使用 vite 的好处很多，最明显的就是热更新很快。但是在 wsl 环境的时候，由于&lt;a href="https://github.com/microsoft/WSL/issues/4739">WSL2 的限制&lt;/a>，vite 默认配置是无法监控 windows 文件系统中文件的变化的。这就导致了 vite 的热更新失效。
解决热更新失效的方法主要有两种： 1.文件存储到 WSL 系统环境中 2.配置 vite.config.js 的 &lt;a href="https://cn.vitejs.dev/config/#server-watch">server.watch&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">export&lt;/span> &lt;span style="color:#66d9ef">default&lt;/span> &lt;span style="color:#a6e22e">defineConfig&lt;/span>({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">server&lt;/span>&lt;span style="color:#f92672">:&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">watch&lt;/span>&lt;span style="color:#f92672">:&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> { &lt;span style="color:#a6e22e">usePolling&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="vite-syntax语法">vite Syntax(语法)&lt;/h1>
&lt;p>vite 将会启动一个开发服务器，默认响应当前目录的 index.html 文件。&lt;/p>
&lt;p>COMMAND:&lt;/p>
&lt;ul>
&lt;li>build [root] # 构建项目(生产可用)&lt;/li>
&lt;li>optimize [root] # pre-bundle dependencies&lt;/li>
&lt;li>preview [root] # locally preview production build&lt;/li>
&lt;/ul>
&lt;h2 id="build">build&lt;/h2>
&lt;h2 id="preview">preview&lt;/h2>
&lt;p>在本地预览已经通过 &lt;code>vite build&lt;/code> 构建后的项目。注意：执行该命令前，需要先通过 &lt;code>vite build&lt;/code> 打包项目，以便生成 &lt;code>dist/&lt;/code> 目录
启动监听当前目录下的 &lt;code>dist/&lt;/code> 目录。&lt;/p></description></item></channel></rss>