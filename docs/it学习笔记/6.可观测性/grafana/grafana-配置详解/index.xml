<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦 – Grafana 配置详解</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/grafana/grafana-%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/</link><description>Recent content in Grafana 配置详解 on 断念梦</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/grafana/grafana-%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Provisioning 配置</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/grafana/grafana-%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/provisioning-%E9%85%8D%E7%BD%AE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/grafana/grafana-%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/provisioning-%E9%85%8D%E7%BD%AE/</guid><description>
&lt;h1 id="概述">概述&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://grafana.com/docs/grafana/latest/administration/provisioning/">官方文档，管理-Provisioning&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>Grafana 在一开始，只能通过 Web 页面(也就是 API)来配置 DataSources(数据源) 和 Dashboard(仪表盘)。这样做有一个缺点，就是无法提前加载数据源和仪表盘。&lt;/p>
&lt;p>比如现在有这么一种场景：我想新搭建一个 Grafana，并且包含一些数据源和仪表盘，正常情况是启动服务后，在 Web 页面导入和创建。&lt;/p>
&lt;p>此时就会有个问题：如果数据源和仪表盘有几十个，逐一导入和创建势必会消耗大量人力，也无法实现自动话。&lt;/p>
&lt;p>所以：有没有一种办法，可以在启动 Grafana 之前，就能直接加载这些数据呢？&lt;/p>
&lt;p>Grafana 从 v5.0 版本中，决定通过一个 &lt;strong>Provisioning(配置供应系统)&lt;/strong> 来解决上述问题。这个系统可以通过一系列的配置文件，让 Grafana 启动时加载他们，可以瞬间让启动好的 Grafana 就具有一定数量的数据源和仪表盘。这种行为使得 GitOps 更自然。这种思路除了可以用在数据源和仪表盘上以外，还可以扩展，比如提前配好用户信息、告警信息等等&lt;/p>
&lt;h1 id="data-sources">Data sources&lt;/h1>
&lt;p>该目录下的配置文件可以配置数据源的信息，当 Grafana 启动时，加载该目录下的 .yaml 文件，就会将数据源加载到 Grafana 中。&lt;/p>
&lt;h2 id="配置文件示例">配置文件示例&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">datasources&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Prometheus&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">type&lt;/span>: &lt;span style="color:#ae81ff">prometheus&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">url&lt;/span>: &lt;span style="color:#ae81ff">http://monitor-bj-cs-k8s-prometheus:9090/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">access&lt;/span>: &lt;span style="color:#ae81ff">proxy&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">isDefault&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">jsonData&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">timeInterval&lt;/span>: &lt;span style="color:#ae81ff">30s&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">user&lt;/span>: &lt;span style="color:#ae81ff">访问 Prometheus 所使用的用户名&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">secureJsonData&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">password&lt;/span>: &lt;span style="color:#ae81ff">访问 Prometheus 所使用的密码&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="plugins">Plugins&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://grafana.com/docs/grafana/latest/administration/provisioning/#example-plugin-configuration-file">插件配置文件样例&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>注意：该功能只是可以配置插件的配置，而不是配置插件本身。使用此配置的前提是插件已经被安装在 Grafana 中。&lt;/p>
&lt;h1 id="dashboards">Dashboards&lt;/h1>
&lt;p>该目录下的配置文件将会指定一个&lt;strong>路径&lt;/strong>，Grafana 启动时，会读取&lt;strong>该路径&lt;/strong>下的所有 &lt;code>*.json&lt;/code> 文件，并作为 Dashboard 加载到 Grafana 中。并且每隔一段时间就会检查路径下的文件，当文件有更新时，会同步更新加载到 Grafana 中的 Dashboard。&lt;/p>
&lt;blockquote>
&lt;p>注意：目录下的 .json 文件就是在 Web 页面导出的 Dashboard。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>apiVersion: &lt;!-- raw HTML omitted -->&lt;/strong> # &lt;code>默认值：1&lt;/code>
&lt;strong>providers: &amp;lt;[]Object&amp;gt;&lt;/strong> #&lt;/p>
&lt;ul>
&lt;li>&lt;strong>name: &lt;!-- raw HTML omitted -->&lt;/strong> # an unique provider name. Required&lt;/li>
&lt;li>&lt;strong>orgId: 1&lt;/strong> # Org 的 ID 号，&lt;code>默认值：1&lt;/code>。通常 Grafana 启动后会自动创建一个名为 Main Org. 的 Org，该 Org 的 ID 为 1&lt;/li>
&lt;li>&lt;strong>folder: &lt;!-- raw HTML omitted -->&lt;/strong> # 从目录读取到的所有仪表盘应该存放的文件夹。文件夹指的是 Grafana Web UI 上用于存放仪表盘的地方。若该值为空，则加载到的仪表盘存放在 General 文件夹中。
&lt;ul>
&lt;li>注意：文件夹的名称与仪表盘的名称不能相同，否则将会报错并且无法自动生成仪表盘&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>folderUid: &lt;!-- raw HTML omitted -->&lt;/strong> # 上面 folder 文件夹的 UID folder UID. will be automatically generated if not specified&lt;/li>
&lt;li>&lt;strong>type: &lt;!-- raw HTML omitted -->&lt;/strong> # 提供者类型。默认值：file&lt;/li>
&lt;li>&lt;strong>disableDeletion: &lt;!-- raw HTML omitted -->&lt;/strong> # 是否允许通过 Web UI 删除目录下的仪表盘&lt;/li>
&lt;li>&lt;strong>updateIntervalSeconds: 10&lt;/strong> # &lt;!-- raw HTML omitted --> Grafana 检查该目录下仪表盘是否有更新的间隔时间(单位：秒)。&lt;/li>
&lt;li>&lt;strong>allowUiUpdates: &lt;!-- raw HTML omitted -->&lt;/strong> # 是否允许通过 Web UI 更新目录下仪表盘&lt;/li>
&lt;li>&lt;strong>options: &lt;!-- raw HTML omitted -->&lt;/strong>
&lt;ul>
&lt;li>&lt;strong>path: &lt;!-- raw HTML omitted -->&lt;/strong> # 必须的。要加载仪表盘的目录。该目录下的所有 .json 文件都会被 Grafana 加载为仪表盘&lt;/li>
&lt;li>&lt;strong>foldersFromFilesStructure: &lt;!-- raw HTML omitted -->&lt;/strong> # 使用文件系统中的文件夹名称作为 Grafana Web UI 中的文件夹名。&lt;code>默认值：false&lt;/code>。具体用法详见《[文件系统结构映射到 WebUI 中的文件夹](✏IT 学习笔记/👀6.可观测性/Grafana/Grafana%20 配置详解/Provisioning%20 配置.md 配置.md)》
&lt;ul>
&lt;li>注意：该字段与 &lt;code>folder&lt;/code> 和 &lt;code>folderUid&lt;/code> 冲突。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="配置文件示例-1">配置文件示例&lt;/h2>
&lt;p>加载 /etc/grafana/provisioning/dashboards/test 目录下所有 .json 文件为 Dashboard。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">providers&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;sidecarProvider&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">orgId&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">folder&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">type&lt;/span>: &lt;span style="color:#ae81ff">file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">disableDeletion&lt;/span>: &lt;span style="color:#66d9ef">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">allowUiUpdates&lt;/span>: &lt;span style="color:#66d9ef">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">updateIntervalSeconds&lt;/span>: &lt;span style="color:#ae81ff">30&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">options&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">foldersFromFilesStructure&lt;/span>: &lt;span style="color:#66d9ef">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">path&lt;/span>: &lt;span style="color:#ae81ff">/etc/grafana/provisioning/dashboards/custom&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="文件系统结构映射到-webui-中的文件夹">文件系统结构映射到 WebUI 中的文件夹&lt;/h3>
&lt;p>如果我们通过类似 git 或文件系统中的文件夹存储仪表盘的 JSON 文件，并且希望在 Grafana 的 Web UI 具有相同名称的文件夹，则可以使用这个字段。
比如我们有将仪表盘的 JSON 文件以如下结构保存：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>/etc/dashboards
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── /server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── /common_dashboard.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── /network_dashboard.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── /application
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── /requests_dashboard.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └── /resources_dashboard.json
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>当我们使用如下配置文件时&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">providers&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">dashboards&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">type&lt;/span>: &lt;span style="color:#ae81ff">file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">updateIntervalSeconds&lt;/span>: &lt;span style="color:#ae81ff">30&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">options&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">path&lt;/span>: &lt;span style="color:#ae81ff">/etc/dashboards&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">foldersFromFilesStructure&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Grafana 的 Web UI 中将会创建 &lt;code>server&lt;/code> 与 &lt;code>application&lt;/code> 两个文件夹，并将对应的仪表盘放在其中。&lt;/p>
&lt;h1 id="alert-notification-channels">Alert Notification Channels&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://grafana.com/docs/grafana/latest/administration/provisioning/#example-alert-notification-channels-config-file">Example Alert Notification Channels Config File&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://grafana.com/docs/grafana/latest/administration/provisioning/#supported-settings">Supported Settings&lt;/a>&lt;/li>
&lt;/ul></description></item></channel></rss>