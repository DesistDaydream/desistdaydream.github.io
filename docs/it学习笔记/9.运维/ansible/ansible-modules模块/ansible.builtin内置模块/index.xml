<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦 – ansible.builtin(内置模块)</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/9.%E8%BF%90%E7%BB%B4/ansible/ansible-modules%E6%A8%A1%E5%9D%97/ansible.builtin%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/</link><description>Recent content in ansible.builtin(内置模块) on 断念梦</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/9.%E8%BF%90%E7%BB%B4/ansible/ansible-modules%E6%A8%A1%E5%9D%97/ansible.builtin%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Files 类模块</title><link>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/9.%E8%BF%90%E7%BB%B4/ansible/ansible-modules%E6%A8%A1%E5%9D%97/ansible.builtin%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/files-%E7%B1%BB%E6%A8%A1%E5%9D%97/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/it%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/9.%E8%BF%90%E7%BB%B4/ansible/ansible-modules%E6%A8%A1%E5%9D%97/ansible.builtin%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/files-%E7%B1%BB%E6%A8%A1%E5%9D%97/</guid><description>
&lt;h1 id="概述">概述&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.ansible.com/ansible/2.9/modules/list_of_files_modules.html">官方文档 2.9，用户指南-使用模块-模块索引-文件模块&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>Files 类别模块用来处理文件、文本&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.ansible.com/ansible/2.9/modules/acl_module.html#acl-module">acl – Set and retrieve file ACL information&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.ansible.com/ansible/2.9/modules/archive_module.html#archive-module">archive – Creates a compressed archive of one or more files or trees&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.ansible.com/ansible/2.9/modules/assemble_module.html#assemble-module">assemble – Assemble configuration files from fragments&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.ansible.com/ansible/2.9/modules/blockinfile_module.html#blockinfile-module">blockinfile # 添加、更新、删除指定的多行文本。Insert/update/remove a text block surrounded by marker lines&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.ansible.com/ansible/2.9/modules/copy_module.html#copy-module">copy # 用于将文件从本地或远程设备上复制到远程设备上的某个位置。Copy files to remote locations&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.ansible.com/ansible/2.9/modules/fetch_module.html#fetch-module">fetch – Fetch files from remote nodes&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.ansible.com/ansible/2.9/modules/file_module.html#file-module">file # 管理文件和文件熟悉，用于创建文件、目录等。Manage files and file properties&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.ansible.com/ansible/2.9/modules/find_module.html#find-module">find – Return a list of files based on specific criteria&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.ansible.com/ansible/2.9/modules/ini_file_module.html#ini-file-module">ini_file – Tweak settings in INI files&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.ansible.com/ansible/2.9/modules/iso_extract_module.html#iso-extract-module">iso_extract – Extract files from an ISO image&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.ansible.com/ansible/2.9/modules/lineinfile_module.html#lineinfile-module">lineinfile # 与 sed 命令类似，修改指定文件中匹配到的行或添加行。Manage lines in text files&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.ansible.com/ansible/2.9/modules/patch_module.html#patch-module">patch – Apply patch files using the GNU patch tool&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.ansible.com/ansible/2.9/modules/read_csv_module.html#read-csv-module">read_csv – Read a CSV file&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.ansible.com/ansible/2.9/modules/replace_module.html#replace-module">replace – Replace all instances of a particular string in a file using a back-referenced regular expression&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.ansible.com/ansible/2.9/modules/stat_module.html#stat-module">stat # 获取文件或文件系统状态 Retrieve file or file system status&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.ansible.com/ansible/2.9/modules/synchronize_module.html#synchronize-module">synchronize – A wrapper around rsync to make common tasks in your playbooks quick and easy&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.ansible.com/ansible/2.9/modules/tempfile_module.html#tempfile-module">tempfile – Creates temporary files and directories&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.ansible.com/ansible/2.9/modules/template_module.html#template-module">template # 根据文件模板，在远程主机上生成新文件。Template a file out to a remote server&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.ansible.com/ansible/2.9/modules/unarchive_module.html#unarchive-module">unarchive # 解压缩一个归档文件。就是 tar 命。Unpacks an archive after (optionally) copying it from the local machine&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.ansible.com/ansible/2.9/modules/xattr_module.html#xattr-module">xattr – Manage user defined extended attributes&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.ansible.com/ansible/2.9/modules/xml_module.html#xml-module">xml – Manage bits and pieces of XML files or strings&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="blockinfilehttpsdocsansiblecomansiblelatestcollectionsansiblebuiltinblockinfile_modulehtml--添加更新删除指定的多行文本">&lt;a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/blockinfile_module.html">blockinfile&lt;/a> # 添加、更新、删除指定的多行文本&lt;/h1>
&lt;p>blockinfile 模块使用示例：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#ae81ff">name:写入多行文本&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">blockinfile&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">path&lt;/span>: &lt;span style="color:#ae81ff">/etc/hosts&lt;/span> &lt;span style="color:#75715e">#指定要添加文本的文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">block&lt;/span>: &lt;span style="color:#ae81ff">|&lt;/span> &lt;span style="color:#75715e"># 注意要使用 | 符号，否则将没有换行。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">10.0.13.77&lt;/span> &lt;span style="color:#ae81ff">iptv-k8s-master-1.tjiptv.net&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">10.0.13.82&lt;/span> &lt;span style="color:#ae81ff">iptv-k8s-master-2.tjiptv.net&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>添加结果&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>root@lichenhao ~&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#75715e"># cat /etc/hosts&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>::1 localhost localhost.localdomain localhost6 localhost6.localdomain6
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># BEGIN ANSIBLE MANAGED BLOCK&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10.0.13.77 iptv-k8s-master-1.tjiptv.net
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10.0.13.82 iptv-k8s-master-2.tjiptv.net
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># END ANSIBLE MANAGED BLOCK&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Note：&lt;/p>
&lt;ul>
&lt;li>blockinfile 模块会将 block 字段下面的所有内容当做一个文本块来看，将这一块内容全部添加到指定文件中 block 位置
&lt;ul>
&lt;li>block 位置是由 # BEGIN ANSIBLE MANAGED BLOCK 与 # END ANSIBLE MANAGED BLOCK 两行夹在中间的所有位置。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>如果再次执行该任务，则会将 block 下指定的文本块覆盖到目标文件 ANSIBLE 所表示的那几行，而不会添加到文件末尾&lt;/li>
&lt;/ul>
&lt;h1 id="copyhttpsdocsansiblecomansiblelatestcollectionsansiblebuiltincopy_modulehtml--用于将文件拷贝到被管理设备上的某个位置">&lt;a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/copy_module.html">copy&lt;/a> # 用于将文件拷贝到被管理设备上的某个位置&lt;/h1>
&lt;h2 id="参数">参数&lt;/h2>
&lt;ul>
&lt;li>必选参数
&lt;ul>
&lt;li>&lt;strong>src: &lt;!-- raw HTML omitted -->&lt;/strong> # 待拷贝的源文件路径。默认从 Ansible 控制节点搜索路径，搜索逻辑可以被 remote_src 参数修改&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>可选参数
&lt;ul>
&lt;li>&lt;strong>remote_src: &lt;!-- raw HTML omitted -->&lt;/strong> # 若开启 remote_src 参数，则 src 参数将会从被管理节点搜索待拷贝的源文件。&lt;code>默认值:false&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="应用示例">应用示例&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#f92672">]&lt;/span>$ ansible all -m copy -a &lt;span style="color:#e6db74">&amp;#34;src=https://desistdaydream.github.io/etc/hosts dest=/tmp/hosts&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#f92672">]&lt;/span>$ ansible all -m file -a &lt;span style="color:#e6db74">&amp;#34;dest=/tmp/hosts mode=755 owner=lichenhao group=lichenhao state=directory&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">拷贝文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.copy&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">src&lt;/span>: &lt;span style="color:#ae81ff">/etc/hosts&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">dest&lt;/span>: &lt;span style="color:#ae81ff">/tmp/hosts&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">创建目录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">copy&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">dest&lt;/span>: &lt;span style="color:#ae81ff">/tmp/hosts&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mode&lt;/span>: &lt;span style="color:#ae81ff">0755&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">owner&lt;/span>: &lt;span style="color:#ae81ff">lichenhao&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">group&lt;/span>: &lt;span style="color:#ae81ff">lichenhao&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">state&lt;/span>: &lt;span style="color:#ae81ff">directory&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="filehttpsdocsansiblecomansiblelatestcollectionsansiblebuiltinfile_modulehtmlfile-module--用于创建文件目录等">&lt;a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/file_module.html#file-module">file&lt;/a> # 用于创建文件、目录等&lt;/h1>
&lt;p>file 模块示例：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">创建名为k8s的目录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">file&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">path&lt;/span>: &lt;span style="color:#ae81ff">/etc/ssl/k8s&lt;/span> &lt;span style="color:#75715e"># 指定要创建的路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">owner&lt;/span>: &lt;span style="color:#ae81ff">k8s&lt;/span> &lt;span style="color:#75715e">#可省。默认所属用户为root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">group&lt;/span>: &lt;span style="color:#ae81ff">k8s&lt;/span> &lt;span style="color:#75715e">#可省。默认所属组为k8s&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">state&lt;/span>: &lt;span style="color:#ae81ff">directory&lt;/span> &lt;span style="color:#75715e">#指定要创建的类型为目录&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Note: state 还可以使用 link 用来创建软链接&lt;/p>
&lt;h1 id="文本替换">文本替换&lt;/h1>
&lt;p>lineinfile、replace、blockinfile 这三个模块可以实现文本编辑功能，类似于 sed。&lt;/p>
&lt;ul>
&lt;li>replace 模块可以对多行中的文本执行操作。&lt;/li>
&lt;li>lineinfile 模块对一行全部内容执行操作。&lt;/li>
&lt;li>blockinfile 模块可以在文件中插入、更新、删除一行&lt;/li>
&lt;/ul>
&lt;p>对于其他情况的文本编辑，则需要使用 copy、template 等模块直接生成文件，而不是编辑文件。&lt;/p>
&lt;p>虽然都是行匹配，但是 replace 只会替换匹配到行的字符串，而 lineinfile 则会替换匹配到整行。&lt;/p>
&lt;h2 id="lineinfilehttpsdocsansiblecomansiblelatestcollectionsansiblebuiltinlineinfile_modulehtml--行替换">&lt;a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/lineinfile_module.html">lineinfile&lt;/a> # 行替换&lt;/h2>
&lt;ul>
&lt;li>此模块确保文件中包含特定行，或使用向后引用的正则表达式替换现有行。&lt;/li>
&lt;li>当我们只想更改文件中的单行时，这主要有用。如果匹配到多行，那么只会对最后一行进行操作&lt;/li>
&lt;/ul>
&lt;h3 id="参数-1">参数&lt;/h3>
&lt;p>必填参数：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>path&lt;/strong> # 要修改的文件&lt;/li>
&lt;/ul>
&lt;p>其他参数：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>regexp&lt;/strong> # 正则表达式，用以匹配需要修改的行&lt;/li>
&lt;/ul>
&lt;p>注意&lt;/p>
&lt;ul>
&lt;li>如果 regexp 和 insertbefore 同时存在，则仅在找不到与 regexp 匹配的情况下才使用 insertbefore。不可与 backref 一起使用。&lt;/li>
&lt;li>insertafter EOF 与 insertbefore BOF 分别表示在文件末尾以及文件开头插入指定的行&lt;/li>
&lt;/ul>
&lt;h3 id="应用示例-1">应用示例&lt;/h3>
&lt;p>取消 UseDNS no 行前的 # 号&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">修改指定行的内容&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">lineinfile&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">dest&lt;/span>: &lt;span style="color:#ae81ff">/etc/ssh/sshd_config&lt;/span> &lt;span style="color:#75715e"># 指定要修改的文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">regexp&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;#(UseDNS\\s*no)&amp;#34;&lt;/span> &lt;span style="color:#75715e"># 使用正则表达式进行内容匹配&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">line&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;\1&amp;#39;&lt;/span> &lt;span style="color:#75715e"># 引用正则表达式中()匹配的内容&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">backrefs&lt;/span>: &lt;span style="color:#66d9ef">yes&lt;/span> &lt;span style="color:#75715e"># 指定是否可以进行引用，如果不指定，则匹配到的行会变成\1而不是通过\1引用的内容。&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在指定匹配到的最后一行之前或者之后添加行&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">在指定行之前或者之后添加行&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">lineinfile&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">dest&lt;/span>: &lt;span style="color:#ae81ff">/usr/lib/systemd/system/docker.service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">regexp&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;^ExecStartPost=&amp;#34;&lt;/span> &lt;span style="color:#75715e"># (可省略)如果未匹配到regexp中的内容，则执行insertabefore。如果匹配到了，则不再匹配insertbefore，直接将匹配到的行替换成line指定的行。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">insertbefore&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;^ExecReload=&amp;#34;&lt;/span> &lt;span style="color:#75715e"># 在该字段指定的行之前添加line指定的内容。如果想再指定的行之后添加，则使用insertafter关键字&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">line&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;ExecStartPost=/usr/sbin/iptables -P FORWARD ACCEPT&amp;#34;&lt;/span> &lt;span style="color:#75715e"># 要添加的行&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>配置 Docker 启动参数&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">配置docker启动参数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">block&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">lineinfile&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">dest&lt;/span>: &lt;span style="color:#ae81ff">/usr/lib/systemd/system/docker.service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">regexp&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;^ExecStartPost=&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">insertbefore&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;^ExecReload=&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">line&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;ExecStartPost=/usr/sbin/iptables -P FORWARD ACCEPT&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">lineinfile&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">dest&lt;/span>: &lt;span style="color:#ae81ff">/usr/lib/systemd/system/docker.service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">regexp&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;(ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">line&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;\1 {{docker.options}}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">backrefs&lt;/span>: &lt;span style="color:#66d9ef">yes&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="replacehttpsdocsansiblecomansiblelatestcollectionsansiblebuiltinreplace_modulehtml--字符替换">&lt;a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/replace_module.html">replace&lt;/a> # 字符替换&lt;/h2>
&lt;h3 id="参数-2">参数&lt;/h3>
&lt;p>必填参数：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>path&lt;/strong> # 要修改的文件。&lt;/li>
&lt;li>&lt;strong>regexp&lt;/strong> # 正则表达式，匹配到需要修改的字符串&lt;/li>
&lt;li>&lt;strong>replace&lt;/strong> # 替换 regexp 参数匹配到的字符串。若不指定该参数，则会删除 regexp 参数匹配到的字符串。&lt;/li>
&lt;/ul>
&lt;p>其他参数：&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;h3 id="应用示例-2">应用示例&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">replace&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">path&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;/etc/apt/apt.conf.d/10periodic&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">regexp&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">replace&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="stathttpsdocsansiblecomansiblelatestcollectionsansiblebuiltinstat_modulehtmlstat-module--获取文件或文件系统状态">&lt;a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/stat_module.html#stat-module">stat&lt;/a> # 获取文件或文件系统状态&lt;/h1>
&lt;p>stat 模块类似于 Linux 中的 &lt;code>stat&lt;/code> 命令。常用来在改变文件之间，获取某些文件状态，并注册为变量，以便为后续任务进行判断。&lt;/p>
&lt;h2 id="应用示例-3">应用示例&lt;/h2>
&lt;h1 id="templatehttpsdocsansiblecomansiblelatestcollectionsansiblebuiltintemplate_modulehtml--根据文件模板在远程主机上生成新文件">&lt;a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/template_module.html">template&lt;/a> # 根据文件模板，在远程主机上生成新文件&lt;/h1>
&lt;p>template 模块使用 Jinja2 模板语言处理文件，并将渲染后的文件传送到目标主机上。&lt;/p>
&lt;h2 id="包含变量">包含变量&lt;/h2>
&lt;ul>
&lt;li>ansible_managed # (configurable via the defaults section of ansible.cfg) contains a string which can be used to describe the template name, host, modification time of the template file and the owner uid.&lt;/li>
&lt;li>template_host # contains the node name of the template’s machine.&lt;/li>
&lt;li>template_uid # is the numeric user id of the owner.&lt;/li>
&lt;li>template_path # is the path of the template.&lt;/li>
&lt;li>template_fullpath # is the absolute path of the template.&lt;/li>
&lt;li>template_destpath # is the path of the template on the remote system (added in 2.8).&lt;/li>
&lt;li>template_run_date # is the date that the template was rendered.&lt;/li>
&lt;/ul>
&lt;h2 id="参数-3">参数&lt;/h2>
&lt;p>必选参数&lt;/p>
&lt;ul>
&lt;li>&lt;strong>dest&lt;/strong> # 渲染后的模板文件被发送到目标主机的位置&lt;/li>
&lt;li>&lt;strong>src&lt;/strong> # Ansible 控制节点上 Jinja2 格式的模板文件路径。&lt;/li>
&lt;/ul>
&lt;p>Jinja 行为控制&lt;/p>
&lt;ul>
&lt;li>**lstrip_blocks **# 是否移除前导空白符和制表符。&lt;code>默认值：no&lt;/code>&lt;/li>
&lt;li>&lt;strong>trim_blocks&lt;/strong> # 是否移除换行符。&lt;code>默认值：yes&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>其他参数&lt;/p>
&lt;ul>
&lt;li>&lt;strong>backup: &lt;!-- raw HTML omitted -->&lt;/strong> # 是否创建一个包含时间戳信息的备份文件。&lt;code>默认值：no&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="返回值">返回值&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;msg&amp;#34;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;changed&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;checksum&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;d176c556a237d7d62f8e1a95ffcec7c06c1e6851&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;dest&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;/tmp/template_variables.conf&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;diff&amp;#34;&lt;/span>: [],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;failed&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">false&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;gid&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">0&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;group&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;root&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;md5sum&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;2f549414973ec5b547e40d0f49357ce5&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;mode&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;0644&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;owner&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;root&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;size&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">329&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;src&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;/home/lichenhao/.ansible/tmp/ansible-tmp-1634401131.4389606-251148042480663/source&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;state&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;file&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;uid&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="应用示例-4">应用示例&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">ansible -m template -a &amp;#39;src=https://desistdaydream.github.io/mytemplates/foo.j2 dest=/tmp/foo.conf lstrip_blocks=yes&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>模板文件示例：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{&lt;/span>% &lt;span style="color:#66d9ef">if&lt;/span> docker.registryMirrors is defined %&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e">#如果docker.registryMirrors变量存在，则执行最后一行之前的语句&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;registry-mirrors&amp;#34;&lt;/span>: &lt;span style="color:#f92672">[{&lt;/span>% &lt;span style="color:#66d9ef">for&lt;/span> mirror in docker.registryMirrors %&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e">#输出 &amp;#34;registry-mirrors&amp;#34;: 后执行for循环，将docker.registryMirrors变量的多个值逐一传递给mirror变量，直到docker.registryMirros变量里的值全部引用完成&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;{{ mirror}}&amp;#34;&lt;/span>&lt;span style="color:#f92672">{&lt;/span>% &lt;span style="color:#66d9ef">if&lt;/span> not loop.last %&lt;span style="color:#f92672">}&lt;/span>,&lt;span style="color:#f92672">{&lt;/span>% endif %&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e">#输出 mirror 变量的值。如果循环没有结束，则输出一个逗号&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">{&lt;/span>%- endfor %&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e">#结束for循环&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{&lt;/span>% endif %&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e">#结束if结构&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>输出结果示例：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;registry-mirrors&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;https://ac1rmo5p.mirror.aliyuncs.com&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;https://123.123.123&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>更多 template 模块原理及应用，详见 [Playbook 章节中的 Templates](/docs/IT学习笔记/9.运维/Ansible/Playbook/Templates%20 模板(Jinja2).md 模板(Jinja2).md)&lt;/p>
&lt;h1 id="unarchivehttpsdocsansiblecomansiblelatestcollectionsansiblebuiltinunarchive_modulehtml--解压缩一个归档文件就是-tar-命令">&lt;a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/unarchive_module.html">unarchive&lt;/a> # 解压缩一个归档文件。就是 tar 命令。&lt;/h1>
&lt;h2 id="参数-4">参数&lt;/h2>
&lt;h2 id="应用示例-5">应用示例&lt;/h2></description></item></channel></rss>