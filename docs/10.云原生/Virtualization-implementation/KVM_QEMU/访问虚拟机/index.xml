<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦 – 访问虚拟机</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Virtualization-implementation/KVM_QEMU/%E8%AE%BF%E9%97%AE%E8%99%9A%E6%8B%9F%E6%9C%BA/</link><description>Recent content in 访问虚拟机 on 断念梦</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Virtualization-implementation/KVM_QEMU/%E8%AE%BF%E9%97%AE%E8%99%9A%E6%8B%9F%E6%9C%BA/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: 访问虚拟机</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Virtualization-implementation/KVM_QEMU/%E8%AE%BF%E9%97%AE%E8%99%9A%E6%8B%9F%E6%9C%BA/%E8%AE%BF%E9%97%AE%E8%99%9A%E6%8B%9F%E6%9C%BA/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Virtualization-implementation/KVM_QEMU/%E8%AE%BF%E9%97%AE%E8%99%9A%E6%8B%9F%E6%9C%BA/%E8%AE%BF%E9%97%AE%E8%99%9A%E6%8B%9F%E6%9C%BA/</guid><description>
&lt;h1 id="概述">概述&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_and_managing_virtualization/getting-started-with-virtualization-in-rhel-8_configuring-and-managing-virtualization#assembly_connecting-to-virtual-machines_virt-getting-started">RedHat 官方文档，8-配置和管理虚拟化-2.4 章.连接到虚拟机&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>我们可以通过多种方式与虚拟机进行交互：&lt;/p>
&lt;ul>
&lt;li>Cockpit # 基于 Web 的控制台&lt;/li>
&lt;li>Virt Manager 程序 # GUI 程序&lt;/li>
&lt;li>Virt Viewer 程序 # GUI 程序&lt;/li>
&lt;li>virsh console 子命令 # CLI 程序&lt;/li>
&lt;li>众所周知的 ssh&lt;/li>
&lt;/ul>
&lt;h1 id="cockpit">Cockpit&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/cockpit-project">GitHub 项目，cockpit-project&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cockpit-project.org/">官网&lt;/a>&lt;/li>
&lt;li>注意：
&lt;ul>
&lt;li>RHEL 8 仍支持虚拟机管理器（virt-manager）应用程序，但已弃用。Web 控制台打算在后续版本中替代它。因此，建议您熟悉用于在 GUI 中管理虚拟化的 Web 控制台。详见：&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_virtualization/index#overview-of-virtual-machine-management-using-the-web-console_using-the-rhel-8-web-console-for-managing-vms">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_virtualization/index#overview-of-virtual-machine-management-using-the-web-console_using-the-rhel-8-web-console-for-managing-vms&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>Cockpit 是一个基于 Web 的用于管理服务器的图形界面&lt;/p>
&lt;h2 id="安装-cockpit">安装 Cockpit&lt;/h2>
&lt;p>CentOS&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>yum install cockpit -y &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> yum install cockpit-machines -y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>systemctl start cockpit &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> systemctl enable cockpit
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ubuntu&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apt install -y cockpit cockpit-machines
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中 cockpit-machines 是 cockpit 的插件，用于为 cockpit 添加虚拟机管理功能。&lt;/p>
&lt;h2 id="使用-cockpit">使用 Cockpit&lt;/h2>
&lt;p>Cockpit 开箱即用，安装完成后直接访问 http://IP:9090，打开 web 界面，使用系统的用户和密码登陆即可。web 页面管理虚拟机，效果如图&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/pn75i9/1616123978493-8d5e61ed-edc9-4962-8cb1-391f17c883ff.jpeg" alt="">
&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_virtualization/index#overview-of-virtual-machine-management-using-the-web-console_using-the-rhel-8-web-console-for-managing-vms">
&lt;/a>&lt;/p>
&lt;h1 id="使用虚拟机的串行控制台">使用虚拟机的串行控制台&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_and_managing_virtualization/getting-started-with-virtualization-in-rhel-8_configuring-and-managing-virtualization#proc_opening-a-virtual-machine-serial-console_assembly_connecting-to-virtual-machines">红帽官方文档，8-2.配置和管理虚拟化-2.4.4.打开虚拟机串行控制台&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>使用 virsh console 命令，可以连接到虚拟机的串行控制台。&lt;/p>
&lt;p>有两种方法可以开启虚拟机内的串行控制台&lt;/p>
&lt;p>方法一：修改 grub 参数&lt;/p>
&lt;p>在虚拟机上，编辑 &lt;code>/etc/default/grub&lt;/code> 文件并将 &lt;strong>console=ttyS0&lt;/strong> 添加到以 &lt;strong>GRUB_CMDLINE_LINUX&lt;/strong> 开头的行中。&lt;/p>
&lt;p>清除可能会阻止您更改生效的内核选项。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># grub2-editenv - unset kernelopts&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>重新载入 Grub 配置：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># grub2-mkconfig -o /boot/grub2/grub.cfg&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Generating grub configuration file ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Found linux image: /boot/vmlinuz-3.10.0-948.el7.x86_64
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Found initrd image: /boot/initramfs-3.10.0-948.el7.x86_64.img
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>...&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">done&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>重启虚拟机。&lt;/p>
&lt;p>方法二：启动 serial-getty 服务&lt;/p>
&lt;p>在虚拟机上启动 serial-getty@.service 服务并在开启服务的时候指定一个终端。执行如下命令即可：&lt;code>systemctl enable serial-getty@ttyS0.service --now&lt;/code>&lt;/p>
&lt;h1 id="访问远程虚拟化主机">访问远程虚拟化主机&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_and_managing_virtualization/getting-started-with-virtualization-in-rhel-8_configuring-and-managing-virtualization#setting-up-easy-access-to-remote-virtualization-hosts_assembly_connecting-to-virtual-machines">红帽官方文档，8-配置和管理虚拟化-第二章.虚拟化入门-2.4.5.设置对远程虚拟化主机的轻松访问&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>当我们想要使用 libvirt 程序管理远程主机上的 VM 时，可以使用 &lt;code>-c qemu+ssh://root@HOST/system&lt;/code> 语法管理远程宿主机上的虚拟机。效果如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#75715e"># virsh -c qemu+ssh://root@172.19.42.201/system list&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>root@172.19.42.201&lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span>s password:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Id Name State
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>----------------------------------------------------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">1&lt;/span> node-1.bj-net running
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_and_managing_virtualization/getting-started-with-virtualization-in-rhel-8_configuring-and-managing-virtualization#setting-up-easy-access-to-remote-virtualization-hosts_assembly_connecting-to-virtual-machines">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_and_managing_virtualization/getting-started-with-virtualization-in-rhel-8_configuring-and-managing-virtualization#setting-up-easy-access-to-remote-virtualization-hosts_assembly_connecting-to-virtual-machines&lt;/a>&lt;/p></description></item><item><title>Docs: 使用 VNC 访问虚拟机</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Virtualization-implementation/KVM_QEMU/%E8%AE%BF%E9%97%AE%E8%99%9A%E6%8B%9F%E6%9C%BA/%E4%BD%BF%E7%94%A8-VNC-%E8%AE%BF%E9%97%AE%E8%99%9A%E6%8B%9F%E6%9C%BA/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Virtualization-implementation/KVM_QEMU/%E8%AE%BF%E9%97%AE%E8%99%9A%E6%8B%9F%E6%9C%BA/%E4%BD%BF%E7%94%A8-VNC-%E8%AE%BF%E9%97%AE%E8%99%9A%E6%8B%9F%E6%9C%BA/</guid><description>
&lt;h1 id="概述">概述&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;/blockquote>
&lt;p>在 &lt;a href="https://github.com/rfbproto/rfbproto/issues/18">rfbproto/rfbproto 的 #18 issue&lt;/a> 中，表示 QEMU 中内置了 VNC/RFB，并对该协议进行了一些修改以支持一些额外的功能。所以，我们可以使用 VNC 客户端，使用 QEMU/KVM 为虚拟机暴露的 VNC 端口，连接到虚拟机(不管是 图形界面的虚拟机 还是 命令行界面的虚拟机)。&lt;/p>
&lt;h2 id="配置-vnc-监听地址">配置 VNC 监听地址&lt;/h2>
&lt;p>修改 qemu.conf 配置文件&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># VNC is configured to listen on 127.0.0.1 by default.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># To make it listen on all public interfaces, uncomment&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># this next option.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># NB, strong recommendation to enable TLS + x509 certificate&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># verification when allowing public access&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vnc_listen &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;0.0.0.0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>说明 1：VNC 默认绑定 127.0.0.1，在配置文件里指定 VNC  绑定 0.0.0.0 IP,就不用在创建虚拟机时修改 vnclisten 参数了。
说明 2：在虚拟主机上有很多个虚拟机的时候，需要指定每个虚拟机的端口。&lt;/p>
&lt;p>若虚拟机已存在，则修改虚拟机的 xml 配置文件的如下部分**          **&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;graphics&lt;/span> &lt;span style="color:#a6e22e">type=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;vnc&amp;#39;&lt;/span> &lt;span style="color:#a6e22e">port=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;-1&amp;#39;&lt;/span> &lt;span style="color:#a6e22e">autoport=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;yes&amp;#39;&lt;/span> &lt;span style="color:#a6e22e">listen=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;0.0.0.0&amp;#39;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;listen&lt;/span> &lt;span style="color:#a6e22e">type=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;address&amp;#39;&lt;/span> &lt;span style="color:#a6e22e">address=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;0.0.0.0&amp;#39;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/graphics&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>port 为 -1 表示自动分配端口，可以指定具体的端口，并将 autoport 设置为 no&lt;/p>
&lt;p>启动并测试 VNC，查看 VNC 端口&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#75715e"># ss -ntlp | grep 590&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LISTEN &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> 127.0.0.1:5900 *:* users:&lt;span style="color:#f92672">((&lt;/span>&lt;span style="color:#e6db74">&amp;#34;qemu-kvm&amp;#34;&lt;/span>,pid&lt;span style="color:#f92672">=&lt;/span>24077,fd&lt;span style="color:#f92672">=&lt;/span>69&lt;span style="color:#f92672">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LISTEN &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> 127.0.0.1:5901 *:* users:&lt;span style="color:#f92672">((&lt;/span>&lt;span style="color:#e6db74">&amp;#34;qemu-kvm&amp;#34;&lt;/span>,pid&lt;span style="color:#f92672">=&lt;/span>24190,fd&lt;span style="color:#f92672">=&lt;/span>69&lt;span style="color:#f92672">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LISTEN &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> 127.0.0.1:5902 *:* users:&lt;span style="color:#f92672">((&lt;/span>&lt;span style="color:#e6db74">&amp;#34;qemu-kvm&amp;#34;&lt;/span>,pid&lt;span style="color:#f92672">=&lt;/span>27027,fd&lt;span style="color:#f92672">=&lt;/span>61&lt;span style="color:#f92672">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LISTEN &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> 127.0.0.1:5903 *:* users:&lt;span style="color:#f92672">((&lt;/span>&lt;span style="color:#e6db74">&amp;#34;qemu-kvm&amp;#34;&lt;/span>,pid&lt;span style="color:#f92672">=&lt;/span>27124,fd&lt;span style="color:#f92672">=&lt;/span>61&lt;span style="color:#f92672">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LISTEN &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> 127.0.0.1:5904 *:* users:&lt;span style="color:#f92672">((&lt;/span>&lt;span style="color:#e6db74">&amp;#34;qemu-kvm&amp;#34;&lt;/span>,pid&lt;span style="color:#f92672">=&lt;/span>26750,fd&lt;span style="color:#f92672">=&lt;/span>57&lt;span style="color:#f92672">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LISTEN &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> 127.0.0.1:5905 *:* users:&lt;span style="color:#f92672">((&lt;/span>&lt;span style="color:#e6db74">&amp;#34;qemu-kvm&amp;#34;&lt;/span>,pid&lt;span style="color:#f92672">=&lt;/span>50127,fd&lt;span style="color:#f92672">=&lt;/span>57&lt;span style="color:#f92672">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LISTEN &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span> *:5906 *:* users:&lt;span style="color:#f92672">((&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Xvnc&amp;#34;&lt;/span>,pid&lt;span style="color:#f92672">=&lt;/span>45939,fd&lt;span style="color:#f92672">=&lt;/span>9&lt;span style="color:#f92672">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LISTEN &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> *:5907 *:* users:&lt;span style="color:#f92672">((&lt;/span>&lt;span style="color:#e6db74">&amp;#34;qemu-kvm&amp;#34;&lt;/span>,pid&lt;span style="color:#f92672">=&lt;/span>46148,fd&lt;span style="color:#f92672">=&lt;/span>23&lt;span style="color:#f92672">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LISTEN &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span> &lt;span style="color:#f92672">[&lt;/span>::&lt;span style="color:#f92672">]&lt;/span>:5906 &lt;span style="color:#f92672">[&lt;/span>::&lt;span style="color:#f92672">]&lt;/span>:* users:&lt;span style="color:#f92672">((&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Xvnc&amp;#34;&lt;/span>,pid&lt;span style="color:#f92672">=&lt;/span>45939,fd&lt;span style="color:#f92672">=&lt;/span>10&lt;span style="color:#f92672">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用 vnc 进行登录&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/vbc6tk/1653399424256-1aebe374-71df-4b7e-adc6-7a75259d03a0.png" alt="image.png">&lt;/p>
&lt;p>在 virt-manager 里 VNC 的修改方式&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/vbc6tk/1616123512562-2e6de574-d197-4b52-a26d-40b0c09db446.jpeg" alt="image.jpeg">&lt;/p>
&lt;p>可以通过如下命令设置 vnc&lt;/p>
&lt;p>virt-install &amp;ndash;import &amp;ndash;name test &amp;ndash;memory 2048 &amp;ndash;vcpus 2 &amp;ndash;os-variant centos7.0 &amp;ndash;disk /var/lib/libvirt/images/test.qcow2,size=20 &amp;ndash;network bridge=br0,model=virtio &amp;ndash;graphics vnc,listen=0.0.0.0,port=5910&lt;/p>
&lt;p>备注：第一次在使用 vnc 访问虚拟机的时候会出现一闪就不见了的问题？具体的解决方法如下：&lt;/p>
&lt;p>依次打开 vnc 客户端&amp;mdash;&amp;gt;依次点击 option&amp;mdash;&amp;gt;Advanced&amp;mdash;&amp;gt;Expert&amp;mdash;&amp;gt;找到 ColourLevel,默认的值是 pal8，修改为 rgb222 或 full.,见下图一图二:1,2,3&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/vbc6tk/1616123512600-5a0611f4-2ac1-4cf8-b02f-bf100cda25da.jpeg" alt="image.jpeg">&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/vbc6tk/1616123512705-58b3ebe2-934c-4b6f-90fd-2c5749dbac8c.jpeg" alt="image.jpeg">&lt;/p>
&lt;h1 id="常见问题">常见问题&lt;/h1>
&lt;h2 id="protocol-error-invalid-message-type-">Protocol error: invalid message type &amp;hellip;&lt;/h2>
&lt;p>若连接的目标是 Windows，可能会出现如下报错：&lt;code>Protocol error: invalid message type ...&lt;/code>
&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/vbc6tk/1653399468846-b581842e-f3d2-4712-a320-58fd1117011b.png" alt="image.png">
正常来说，RFB 协议会根据网络质量自动调整画面质量。但如果 KVM 服务器的 VNC 服务不能提供该功能或者无法根据网络质量适配画面质量，就会出现以上错误提示。&lt;/p>
&lt;p>此时需要修改设置中的 Picture quality 为 High 或 Medium 即可
&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/vbc6tk/1653399522688-ecf9beda-c5c3-4407-967d-d7cf2807a241.png" alt="image.png">&lt;/p>
&lt;h2 id="the-connection-closed-unexpectedly">The connection closed unexpectedly&lt;/h2>
&lt;p>若通过 virt-manager 已经打开了 VNC 显示模式的虚拟机，则通过 VNC 客户端连接时将会出现如下提示
&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/vbc6tk/1653399960014-7c39aed9-6b52-4c49-a66f-7eab9f27e3f3.png" alt="image.png">
此时只需要关闭 virt-manager 打开的虚拟机即可&lt;/p></description></item></channel></rss>