<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>访问虚拟机 on 断念梦的站点</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Virtualization-implementation/KVM_QEMU/%E8%AE%BF%E9%97%AE%E8%99%9A%E6%8B%9F%E6%9C%BA/</link><description>Recent content in 访问虚拟机 on 断念梦的站点</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Virtualization-implementation/KVM_QEMU/%E8%AE%BF%E9%97%AE%E8%99%9A%E6%8B%9F%E6%9C%BA/index.xml" rel="self" type="application/rss+xml"/><item><title>访问虚拟机</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Virtualization-implementation/KVM_QEMU/%E8%AE%BF%E9%97%AE%E8%99%9A%E6%8B%9F%E6%9C%BA/%E8%AE%BF%E9%97%AE%E8%99%9A%E6%8B%9F%E6%9C%BA/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Virtualization-implementation/KVM_QEMU/%E8%AE%BF%E9%97%AE%E8%99%9A%E6%8B%9F%E6%9C%BA/%E8%AE%BF%E9%97%AE%E8%99%9A%E6%8B%9F%E6%9C%BA/</guid><description>概述 参考：
RedHat 官方文档，8-配置和管理虚拟化-2.4 章.连接到虚拟机 我们可以通过多种方式与虚拟机进行交互：
Cockpit # 基于 Web 的控制台 Virt Manager 程序 # GUI 程序 Virt Viewer 程序 # GUI 程序 virsh console 子命令 # CLI 程序 众所周知的 ssh Cockpit 参考：
GitHub 项目，cockpit-project 官网 注意： RHEL 8 仍支持虚拟机管理器（virt-manager）应用程序，但已弃用。Web 控制台打算在后续版本中替代它。因此，建议您熟悉用于在 GUI 中管理虚拟化的 Web 控制台。详见：https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/configuring_and_managing_virtualization/index#overview-of-virtual-machine-management-using-the-web-console_using-the-rhel-8-web-console-for-managing-vms Cockpit 是一个基于 Web 的用于管理服务器的图形界面
安装 Cockpit CentOS
yum install cockpit -y &amp;amp;&amp;amp; yum install cockpit-machines -y systemctl start cockpit &amp;amp;&amp;amp; systemctl enable cockpit Ubuntu
apt update apt install -y cockpit cockpit-machines 其中 cockpit-machines 是 cockpit 的插件，用于为 cockpit 添加虚拟机管理功能。</description></item><item><title>使用 VNC 访问虚拟机</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Virtualization-implementation/KVM_QEMU/%E8%AE%BF%E9%97%AE%E8%99%9A%E6%8B%9F%E6%9C%BA/%E4%BD%BF%E7%94%A8-VNC-%E8%AE%BF%E9%97%AE%E8%99%9A%E6%8B%9F%E6%9C%BA/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Virtualization-implementation/KVM_QEMU/%E8%AE%BF%E9%97%AE%E8%99%9A%E6%8B%9F%E6%9C%BA/%E4%BD%BF%E7%94%A8-VNC-%E8%AE%BF%E9%97%AE%E8%99%9A%E6%8B%9F%E6%9C%BA/</guid><description>概述 参考：
在 rfbproto/rfbproto 的 #18 issue 中，表示 QEMU 中内置了 VNC/RFB，并对该协议进行了一些修改以支持一些额外的功能。所以，我们可以使用 VNC 客户端，使用 QEMU/KVM 为虚拟机暴露的 VNC 端口，连接到虚拟机(不管是 图形界面的虚拟机 还是 命令行界面的虚拟机)。
配置 VNC 监听地址 修改 qemu.conf 配置文件
# VNC is configured to listen on 127.0.0.1 by default. # To make it listen on all public interfaces, uncomment # this next option. # # NB, strong recommendation to enable TLS + x509 certificate # verification when allowing public access # vnc_listen = &amp;#34;0.</description></item></channel></rss>