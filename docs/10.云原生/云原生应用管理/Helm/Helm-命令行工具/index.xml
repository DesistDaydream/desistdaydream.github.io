<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦的站点 – Helm 命令行工具</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/%E4%BA%91%E5%8E%9F%E7%94%9F%E5%BA%94%E7%94%A8%E7%AE%A1%E7%90%86/Helm/Helm-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/</link><description>Recent content in Helm 命令行工具 on 断念梦的站点</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/%E4%BA%91%E5%8E%9F%E7%94%9F%E5%BA%94%E7%94%A8%E7%AE%A1%E7%90%86/Helm/Helm-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Helm 命令行工具</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/%E4%BA%91%E5%8E%9F%E7%94%9F%E5%BA%94%E7%94%A8%E7%AE%A1%E7%90%86/Helm/Helm-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/Helm-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/%E4%BA%91%E5%8E%9F%E7%94%9F%E5%BA%94%E7%94%A8%E7%AE%A1%E7%90%86/Helm/Helm-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/Helm-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h1 id="syntax语法">Syntax(语法)&lt;a class="td-heading-self-link" href="#syntax%e8%af%ad%e6%b3%95" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;strong>helm COMMANDS [FLAGS]&lt;/strong>&lt;/p>
&lt;p>Flags 与 Options 一样，是标志、标记的意思，就是指该命令的各个选项&lt;/p>
&lt;h2 id="flags">FLAGS&lt;a class="td-heading-self-link" href="#flags" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>全局 Flags&lt;/p>
&lt;ul>
&lt;li>&amp;ndash;add-dir-header                   If true, adds the file directory to the header&lt;/li>
&lt;li>&amp;ndash;alsologtostderr                  log to standard error as well as files&lt;/li>
&lt;li>&lt;strong>&amp;ndash;debug&lt;/strong> # 开启详细的输出信息&lt;/li>
&lt;li>-h, &amp;ndash;help                             help for helm&lt;/li>
&lt;li>&amp;ndash;kube-context string              name of the kubeconfig context to use&lt;/li>
&lt;li>&amp;ndash;kubeconfig STRING # 指定 helm 运行所需的 kubeconfig 文件路径为 STRING。默认为 /root/.kube/config&lt;/li>
&lt;li>&amp;ndash;log-backtrace-at traceLocation   when logging hits line file:N, emit a stack trace (default :0)&lt;/li>
&lt;li>&amp;ndash;log-dir string                   If non-empty, write log files in this directory&lt;/li>
&lt;li>&amp;ndash;log-file string                  If non-empty, use this log file&lt;/li>
&lt;li>&amp;ndash;log-file-max-size uint           Defines the maximum size a log file can grow to. Unit is megabytes. If the value is 0, the maximum file size is unlimited. (default 1800)&lt;/li>
&lt;li>&amp;ndash;logtostderr                      log to standard error instead of files (default true)&lt;/li>
&lt;li>&lt;strong>-n, &amp;ndash;namespace string&lt;/strong> # 指定当前命令要在哪个 namespace 下执行&lt;/li>
&lt;li>&amp;ndash;registry-config string           path to the registry config file (default &amp;ldquo;/root/.config/helm/registry.json&amp;rdquo;)&lt;/li>
&lt;li>&amp;ndash;repository-cache string          path to the file containing cached repository indexes (default &amp;ldquo;/root/.cache/helm/repository&amp;rdquo;)&lt;/li>
&lt;li>&amp;ndash;repository-config string         path to the file containing repository names and URLs (default &amp;ldquo;/root/.config/helm/repositories.yaml&amp;rdquo;)&lt;/li>
&lt;li>&amp;ndash;skip-headers                     If true, avoid header prefixes in the log messages&lt;/li>
&lt;li>&amp;ndash;skip-log-headers                 If true, avoid headers when opening log files&lt;/li>
&lt;li>&amp;ndash;stderrthreshold severity         logs at or above this threshold go to stderr (default 2)&lt;/li>
&lt;li>-v, &amp;ndash;v Level                          number for the log level verbosity&lt;/li>
&lt;li>&amp;ndash;vmodule moduleSpec               comma-separated list of pattern=N settings for file-filtered logging&lt;/li>
&lt;/ul>
&lt;h1 id="子命令">子命令&lt;a class="td-heading-self-link" href="#%e5%ad%90%e5%91%bd%e4%bb%a4" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h2 id="completion---为指定的-shellbash-或-zsh生成命令自动补全脚本">completion - 为指定的 shell（bash 或 zsh）生成命令自动补全脚本&lt;a class="td-heading-self-link" href="#completion---%e4%b8%ba%e6%8c%87%e5%ae%9a%e7%9a%84-shellbash-%e6%88%96-zsh%e7%94%9f%e6%88%90%e5%91%bd%e4%bb%a4%e8%87%aa%e5%8a%a8%e8%a1%a5%e5%85%a8%e8%84%9a%e6%9c%ac" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>helm completion SHELL [FLAGS]&lt;/p>
&lt;p>EXAMPLE&lt;/p>
&lt;p>为 bash shell 生成命令补全脚本，有多种方式，任选其一即可&lt;/p>
&lt;ul>
&lt;li>echo &amp;lsquo;source &amp;lt;(helm completion bash)&amp;rsquo; &amp;raquo; ~/.bashrc&lt;/li>
&lt;li>helm completion bash | sudo tee /etc/bash_completion.d/helm &amp;gt; /dev/null&lt;/li>
&lt;/ul>
&lt;h2 id="create---用给定的名字创建一个新的-chart">create - 用给定的名字创建一个新的 chart&lt;a class="td-heading-self-link" href="#create---%e7%94%a8%e7%bb%99%e5%ae%9a%e7%9a%84%e5%90%8d%e5%ad%97%e5%88%9b%e5%bb%ba%e4%b8%80%e4%b8%aa%e6%96%b0%e7%9a%84-chart" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>创建完成后会创建一个 chart 目录，该目录包含基本的可用文件，然后自己可以自定义其中内容&lt;/p>
&lt;h2 id="dependency---管理一个-chart-的依赖性">dependency - 管理一个 chart 的依赖性&lt;a class="td-heading-self-link" href="#dependency---%e7%ae%a1%e7%90%86%e4%b8%80%e4%b8%aa-chart-%e7%9a%84%e4%be%9d%e8%b5%96%e6%80%a7" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>env # Helm client environment information&lt;/p>
&lt;h2 id="get---获取指定-release-的扩展信息">get - 获取指定 release 的扩展信息&lt;a class="td-heading-self-link" href="#get---%e8%8e%b7%e5%8f%96%e6%8c%87%e5%ae%9a-release-%e7%9a%84%e6%89%a9%e5%b1%95%e4%bf%a1%e6%81%af" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>详见：&lt;a href="https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/%E4%BA%91%E5%8E%9F%E7%94%9F%E5%BA%94%E7%94%A8%E7%AE%A1%E7%90%86/Helm/Helm%20%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/helm%20%E6%9F%A5%E8%AF%A2%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4.md">helm 查询相关命令&lt;/a>&lt;/p>
&lt;h2 id="history---获取-release-的历史版本">history - 获取 release 的历史版本&lt;a class="td-heading-self-link" href="#history---%e8%8e%b7%e5%8f%96-release-%e7%9a%84%e5%8e%86%e5%8f%b2%e7%89%88%e6%9c%ac" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;h2 id="install---安装一个-chart-archive可以创建出来一个-release">install - 安装一个 chart archive(可以创建出来一个 release)&lt;a class="td-heading-self-link" href="#install---%e5%ae%89%e8%a3%85%e4%b8%80%e4%b8%aa-chart-archive%e5%8f%af%e4%bb%a5%e5%88%9b%e5%bb%ba%e5%87%ba%e6%9d%a5%e4%b8%80%e4%b8%aa-release" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>详见：&lt;a href="https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/%E4%BA%91%E5%8E%9F%E7%94%9F%E5%BA%94%E7%94%A8%E7%AE%A1%E7%90%86/Helm/Helm%20%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/install%E3%80%81upgrade%20%E5%AD%90%E5%91%BD%E4%BB%A4.md">install、upgrade 子命令&lt;/a>&lt;/p>
&lt;h2 id="lint---检查一个-chart看看可能出现的问题examines-a-chart-for-possible-issues">lint - 检查一个 chart，看看可能出现的问题。examines a chart for possible issues&lt;a class="td-heading-self-link" href="#lint---%e6%a3%80%e6%9f%a5%e4%b8%80%e4%b8%aa-chart%e7%9c%8b%e7%9c%8b%e5%8f%af%e8%83%bd%e5%87%ba%e7%8e%b0%e7%9a%84%e9%97%ae%e9%a2%98examines-a-chart-for-possible-issues" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;h2 id="list---列出所有-release">list - 列出所有 release&lt;a class="td-heading-self-link" href="#list---%e5%88%97%e5%87%ba%e6%89%80%e6%9c%89-release" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>helm list [FLAGS] [FILTER]&lt;/p>
&lt;p>FLAGS&lt;/p>
&lt;ul>
&lt;li>&lt;strong>-a&lt;/strong> # 列出所有状态的的 release&lt;/li>
&lt;/ul>
&lt;p>EXAMPLE&lt;/p>
&lt;ul>
&lt;li>helm list -A # 列出所有名称空间下已经部署的或者失败的所有 release&lt;/li>
&lt;/ul>
&lt;h2 id="package---打包一个-chart-到定好版本的-chart-archive-文件中">package - 打包一个 chart 到定好版本的 chart archive 文件中&lt;a class="td-heading-self-link" href="#package---%e6%89%93%e5%8c%85%e4%b8%80%e4%b8%aa-chart-%e5%88%b0%e5%ae%9a%e5%a5%bd%e7%89%88%e6%9c%ac%e7%9a%84-chart-archive-%e6%96%87%e4%bb%b6%e4%b8%ad" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>该命令会查找指定路径下的 Chart.yaml 文件，然后打包该目录，如果目录中没有 Chart.yaml 文件则无法打包&lt;/p>
&lt;p>helm package [CHART_PATH] [&amp;hellip;] [FALGS]&lt;/p>
&lt;p>EXAMPLE&lt;/p>
&lt;ul>
&lt;li>helm package myapp/ # 将 myapp 目录下的内容打包成一个 charts archive&lt;/li>
&lt;/ul>
&lt;h2 id="plugin---安装显示卸载-helm-的插件">plugin - 安装、显示、卸载 helm 的插件&lt;a class="td-heading-self-link" href="#plugin---%e5%ae%89%e8%a3%85%e6%98%be%e7%a4%ba%e5%8d%b8%e8%bd%bd-helm-%e7%9a%84%e6%8f%92%e4%bb%b6" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;h2 id="pull---从-repository-中下载指定的-chartnote下载的是压缩包可以解压修改其中内容">pull - 从 repository 中下载指定的 chart。Note：下载的是压缩包，可以解压修改其中内容&lt;a class="td-heading-self-link" href="#pull---%e4%bb%8e-repository-%e4%b8%ad%e4%b8%8b%e8%bd%bd%e6%8c%87%e5%ae%9a%e7%9a%84-chartnote%e4%b8%8b%e8%bd%bd%e7%9a%84%e6%98%af%e5%8e%8b%e7%bc%a9%e5%8c%85%e5%8f%af%e4%bb%a5%e8%a7%a3%e5%8e%8b%e4%bf%ae%e6%94%b9%e5%85%b6%e4%b8%ad%e5%86%85%e5%ae%b9" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;h2 id="repo---创建列出移除更新索引-chart-的所有仓库">repo - 创建、列出、移除、更新、索引 chart 的所有仓库&lt;a class="td-heading-self-link" href="#repo---%e5%88%9b%e5%bb%ba%e5%88%97%e5%87%ba%e7%a7%bb%e9%99%a4%e6%9b%b4%e6%96%b0%e7%b4%a2%e5%bc%95-chart-%e7%9a%84%e6%89%80%e6%9c%89%e4%bb%93%e5%ba%93" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>helm repo [SubCommand]&lt;/p>
&lt;p>SubCommand&lt;/p>
&lt;ul>
&lt;li>add # 添加一个 charts 仓库
&lt;ul>
&lt;li>helm repo add [FLAGS] NAME URL # 添加一个名为 Name,url 为 URL 的仓库&lt;/li>
&lt;li>EXAMPLE
&lt;ul>
&lt;li>helm repo add desistdaydream &lt;a href="https://www.desistdaydream.com">https://www.desistdaydream.com&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>index       generate an index file given a directory containing packaged charts&lt;/li>
&lt;li>list        list chart repositories
&lt;ul>
&lt;li>EXAMPLE
&lt;ul>
&lt;li>helm repo list&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>remove      remove a chart repository&lt;/li>
&lt;li>update      update information of available charts locally from chart repositories&lt;/li>
&lt;/ul>
&lt;h2 id="rollback--回滚一个-release-到以前的版本">rollback # 回滚一个 release 到以前的版本&lt;a class="td-heading-self-link" href="#rollback--%e5%9b%9e%e6%bb%9a%e4%b8%80%e4%b8%aa-release-%e5%88%b0%e4%bb%a5%e5%89%8d%e7%9a%84%e7%89%88%e6%9c%ac" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;h2 id="search--在可以存储-helm-图表的各种地方进行搜索以显示可用的-helm-charts">search # 在可以存储 Helm 图表的各种地方进行搜索，以显示可用的 helm charts&lt;a class="td-heading-self-link" href="#search--%e5%9c%a8%e5%8f%af%e4%bb%a5%e5%ad%98%e5%82%a8-helm-%e5%9b%be%e8%a1%a8%e7%9a%84%e5%90%84%e7%a7%8d%e5%9c%b0%e6%96%b9%e8%bf%9b%e8%a1%8c%e6%90%9c%e7%b4%a2%e4%bb%a5%e6%98%be%e7%a4%ba%e5%8f%af%e7%94%a8%e7%9a%84-helm-charts" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;strong>helm search [COMMAND]&lt;/strong>&lt;/p>
&lt;h3 id="hub--在-helm-hub-或-monocular-实例中搜索-charts">hub # 在 helm hub 或 Monocular 实例中搜索 charts&lt;a class="td-heading-self-link" href="#hub--%e5%9c%a8-helm-hub-%e6%88%96-monocular-%e5%ae%9e%e4%be%8b%e4%b8%ad%e6%90%9c%e7%b4%a2-charts" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>FLAGS&lt;/p>
&lt;ul>
&lt;li>&amp;ndash;endpoint string      monocular instance to query for charts (default &amp;ldquo;&lt;a href="https://hub.helm.sh">https://hub.helm.sh&lt;/a>&amp;rdquo;)&lt;/li>
&lt;li>&amp;ndash;max-col-width uint   maximum column width for output table (default 50)&lt;/li>
&lt;li>-o, &amp;ndash;output format        prints the output in the specified format. Allowed values: table, json, yaml (default table)&lt;/li>
&lt;/ul>
&lt;h3 id="repo--在已添加的所有-repoistories-中搜索-charts">repo # 在已添加的所有 repoistories 中搜索 charts&lt;a class="td-heading-self-link" href="#repo--%e5%9c%a8%e5%b7%b2%e6%b7%bb%e5%8a%a0%e7%9a%84%e6%89%80%e6%9c%89-repoistories-%e4%b8%ad%e6%90%9c%e7%b4%a2-charts" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>&lt;strong>helm search repo [KEYWORD] [FLAGS]&lt;/strong>&lt;/p>
&lt;p>KEYWORD 可以指定 &lt;code>仓库名/图表名&lt;/code> 以搜索指定 仓库或 Chart&lt;/p>
&lt;p>FLAGS&lt;/p>
&lt;ul>
&lt;li>&lt;strong>&amp;ndash;devel&lt;/strong> # 搜索结果包含开发版等效于 &amp;ndash;version 标志的值&amp;rsquo;&amp;gt;0.0.0-0&amp;rsquo;。如果设置了 &amp;ndash;version 标志，则忽略该标志。&lt;/li>
&lt;li>&lt;strong>&amp;ndash;max-col-width UINT&lt;/strong> # 输出表的每列的最大宽度为 UINT。(默认为 50)&lt;/li>
&lt;li>&lt;strong>-o, &amp;ndash;output FORMAT&lt;/strong> # 以指定的格式打印输出。 允许的值：table，json，yaml（默认表）&lt;/li>
&lt;li>-r, &amp;ndash;regexp               use regular expressions for searching repositories you have added&lt;/li>
&lt;li>&lt;strong>&amp;ndash;version STRING&lt;/strong> #       search using semantic versioning constraints on repositories you have added&lt;/li>
&lt;li>&lt;strong>-l, &amp;ndash;versions&lt;/strong> # 显示 Chart 的所有版本，而不仅仅显示最后一个版本。&lt;/li>
&lt;/ul>
&lt;h2 id="show--显示一个-chart-的信息多种信息可以使用子命令来控制要输出的-chart-信息">show # 显示一个 chart 的信息多种信息，可以使用子命令来控制要输出的 chart 信息&lt;a class="td-heading-self-link" href="#show--%e6%98%be%e7%a4%ba%e4%b8%80%e4%b8%aa-chart-%e7%9a%84%e4%bf%a1%e6%81%af%e5%a4%9a%e7%a7%8d%e4%bf%a1%e6%81%af%e5%8f%af%e4%bb%a5%e4%bd%bf%e7%94%a8%e5%ad%90%e5%91%bd%e4%bb%a4%e6%9d%a5%e6%8e%a7%e5%88%b6%e8%a6%81%e8%be%93%e5%87%ba%e7%9a%84-chart-%e4%bf%a1%e6%81%af" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;h2 id="status--显示指定名字的-release-状态信息">status # 显示指定名字的 release 状态信息&lt;a class="td-heading-self-link" href="#status--%e6%98%be%e7%a4%ba%e6%8c%87%e5%ae%9a%e5%90%8d%e5%ad%97%e7%9a%84-release-%e7%8a%b6%e6%80%81%e4%bf%a1%e6%81%af" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;strong>helm status ReleaseName [FLAGS]&lt;/strong>&lt;/p>
&lt;p>FLAGS&lt;/p>
&lt;ul>
&lt;li>-o, &amp;ndash;output FORMAT # 以指定的格式输出内容。&lt;code>默认值：table&lt;/code>。可用的值有 table、json、yaml
&lt;ul>
&lt;li>注意：yaml 格式可以显示该 release 的所有资源&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&amp;ndash;revision INT # 显示指定历史版本的信息&lt;/li>
&lt;/ul>
&lt;h2 id="template--在本地渲染-chart-模板并展示输出">template # 在本地渲染 chart 模板，并展示输出&lt;a class="td-heading-self-link" href="#template--%e5%9c%a8%e6%9c%ac%e5%9c%b0%e6%b8%b2%e6%9f%93-chart-%e6%a8%a1%e6%9d%bf%e5%b9%b6%e5%b1%95%e7%a4%ba%e8%be%93%e5%87%ba" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>详见：&lt;a href="https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/%E4%BA%91%E5%8E%9F%E7%94%9F%E5%BA%94%E7%94%A8%E7%AE%A1%E7%90%86/Helm/Helm%20%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/helm%20template%20%E6%A8%A1%E6%9D%BF%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4.md">helm template 模板相关命令&lt;/a>&lt;/p>
&lt;h2 id="test--test-a-release">test # test a release&lt;a class="td-heading-self-link" href="#test--test-a-release" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;h2 id="uninstall--卸载指定的-release">uninstall # 卸载指定的 release&lt;a class="td-heading-self-link" href="#uninstall--%e5%8d%b8%e8%bd%bd%e6%8c%87%e5%ae%9a%e7%9a%84-release" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>helm uninstall [FLAGS] RELEASE_NAME [&amp;hellip;]&lt;/p>
&lt;p>FLAGS&lt;/p>
&lt;ul>
&lt;li>&amp;ndash;purge # 从 store 移除 release 以便让 release 的名字空出来为以后使用。&lt;/li>
&lt;/ul>
&lt;p>EXAMPLE&lt;/p>
&lt;h2 id="upgrade--升级一个-release">upgrade # 升级一个 release&lt;a class="td-heading-self-link" href="#upgrade--%e5%8d%87%e7%ba%a7%e4%b8%80%e4%b8%aa-release" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;h2 id="verify--verify-that-a-chart-at-the-given-path-has-been-signed-and-is-valid">verify # verify that a chart at the given path has been signed and is valid&lt;a class="td-heading-self-link" href="#verify--verify-that-a-chart-at-the-given-path-has-been-signed-and-is-valid" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;h2 id="version--打印-helm-的客户端和服务端的版本信息">version # 打印 helm 的客户端和服务端的版本信息&lt;a class="td-heading-self-link" href="#version--%e6%89%93%e5%8d%b0-helm-%e7%9a%84%e5%ae%a2%e6%88%b7%e7%ab%af%e5%92%8c%e6%9c%8d%e5%8a%a1%e7%ab%af%e7%9a%84%e7%89%88%e6%9c%ac%e4%bf%a1%e6%81%af" aria-label="Heading self-link">&lt;/a>&lt;/h2></description></item><item><title>Docs: helm template 模板相关命令</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/%E4%BA%91%E5%8E%9F%E7%94%9F%E5%BA%94%E7%94%A8%E7%AE%A1%E7%90%86/Helm/Helm-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/helm-template-%E6%A8%A1%E6%9D%BF%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/%E4%BA%91%E5%8E%9F%E7%94%9F%E5%BA%94%E7%94%A8%E7%AE%A1%E7%90%86/Helm/Helm-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/helm-template-%E6%A8%A1%E6%9D%BF%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4/</guid><description>
&lt;h1 id="template--在本地渲染-chart-模板并展示输出">template # 在本地渲染 chart 模板，并展示输出&lt;a class="td-heading-self-link" href="#template--%e5%9c%a8%e6%9c%ac%e5%9c%b0%e6%b8%b2%e6%9f%93-chart-%e6%a8%a1%e6%9d%bf%e5%b9%b6%e5%b1%95%e7%a4%ba%e8%be%93%e5%87%ba" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;strong>helm template [NAME] [CHART] [FLAGS]&lt;/strong>&lt;/p>
&lt;h2 id="flags">FLAGS&lt;a class="td-heading-self-link" href="#flags" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>-a, &amp;ndash;api-versions stringArray     Kubernetes api versions used for Capabilities.APIVersions&lt;/li>
&lt;li>&amp;ndash;atomic                       if set, the installation process deletes the installation on failure. The &amp;ndash;wait flag will be set automatically if &amp;ndash;atomic is used&lt;/li>
&lt;li>&amp;ndash;ca-file string               verify certificates of HTTPS-enabled servers using this CA bundle&lt;/li>
&lt;li>&amp;ndash;cert-file string             identify HTTPS client using this SSL certificate file&lt;/li>
&lt;li>&amp;ndash;create-namespace             create the release namespace if not present&lt;/li>
&lt;li>&amp;ndash;dependency-update            run helm dependency update before installing the chart&lt;/li>
&lt;li>&amp;ndash;description string           add a custom description&lt;/li>
&lt;li>&amp;ndash;devel                        use development versions, too. Equivalent to version &amp;lsquo;&amp;gt;0.0.0-0&amp;rsquo;. If &amp;ndash;version is set, this is ignored&lt;/li>
&lt;li>&amp;ndash;disable-openapi-validation   if set, the installation process will not validate rendered templates against the Kubernetes OpenAPI Schema&lt;/li>
&lt;li>&amp;ndash;dry-run                      simulate an install&lt;/li>
&lt;li>-g, &amp;ndash;generate-name                generate the name (and omit the NAME parameter)&lt;/li>
&lt;li>-h, &amp;ndash;help                         help for template&lt;/li>
&lt;li>&amp;ndash;include-crds                 include CRDs in the templated output&lt;/li>
&lt;li>&amp;ndash;is-upgrade                   set .Release.IsUpgrade instead of .Release.IsInstall&lt;/li>
&lt;li>&amp;ndash;key-file string              identify HTTPS client using this SSL key file&lt;/li>
&lt;li>&amp;ndash;keyring string               location of public keys used for verification (default &amp;ldquo;/root/.gnupg/pubring.gpg&amp;rdquo;)&lt;/li>
&lt;li>&amp;ndash;name-template string         specify template used to name the release&lt;/li>
&lt;li>&amp;ndash;no-hooks                     prevent hooks from running during install&lt;/li>
&lt;li>&lt;strong>&amp;ndash;output-dir&lt;/strong> # 将输出的内容写入指定的文件中，默认是输出到标准输出&lt;/li>
&lt;li>&amp;ndash;password string              chart repository password where to locate the requested chart&lt;/li>
&lt;li>&amp;ndash;post-renderer postrenderer   the path to an executable to be used for post rendering. If it exists in $PATH, the binary will be used, otherwise it will try to look for the executable at the given path (default exec)&lt;/li>
&lt;li>&amp;ndash;release-name                 use release name in the output-dir path.&lt;/li>
&lt;li>&amp;ndash;render-subchart-notes        if set, render subchart notes along with the parent&lt;/li>
&lt;li>&amp;ndash;replace                      re-use the given name, only if that name is a deleted release which remains in the history. This is unsafe in production&lt;/li>
&lt;li>&amp;ndash;repo string                  chart repository url where to locate the requested chart&lt;/li>
&lt;li>&amp;ndash;set stringArray              set values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2)&lt;/li>
&lt;li>&amp;ndash;set-file stringArray         set values from respective files specified via the command line (can specify multiple or separate values with commas: key1=path1,key2=path2)&lt;/li>
&lt;li>&amp;ndash;set-string stringArray       set STRING values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2)&lt;/li>
&lt;li>&lt;strong>-s, &amp;ndash;show-only PATH/TO/TEMP&lt;/strong># 只显示指定的模板进行渲染出来的 manifest 文件&lt;/li>
&lt;li>&amp;ndash;skip-crds                    if set, no CRDs will be installed. By default, CRDs are installed if not already present&lt;/li>
&lt;li>&amp;ndash;timeout duration             time to wait for any individual Kubernetes operation (like Jobs for hooks) (default 5m0s)&lt;/li>
&lt;li>&amp;ndash;username string              chart repository username where to locate the requested chart&lt;/li>
&lt;li>&amp;ndash;validate                     validate your manifests against the Kubernetes cluster you are currently pointing at. This is the same validation performed on an install&lt;/li>
&lt;li>-f, &amp;ndash;values strings               specify values in a YAML file or a URL (can specify multiple)&lt;/li>
&lt;li>&amp;ndash;verify                       verify the package before installing it&lt;/li>
&lt;li>&amp;ndash;version string               specify the exact chart version to install. If this is not specified, the latest version is installed&lt;/li>
&lt;li>&amp;ndash;wait                         if set, will wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful. It will wait for as long as &amp;ndash;timeout&lt;/li>
&lt;/ul>
&lt;h2 id="example">EXAMPLE&lt;a class="td-heading-self-link" href="#example" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ol>
&lt;li>helm template rancher ./rancher-2.4.5.tgz &amp;ndash;output-dir . #&lt;/li>
&lt;li>helm template test ./platform/ &amp;ndash;output-dir ./test #&lt;/li>
&lt;/ol></description></item><item><title>Docs: helm 查询相关命令</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/%E4%BA%91%E5%8E%9F%E7%94%9F%E5%BA%94%E7%94%A8%E7%AE%A1%E7%90%86/Helm/Helm-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/helm-%E6%9F%A5%E8%AF%A2%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/%E4%BA%91%E5%8E%9F%E7%94%9F%E5%BA%94%E7%94%A8%E7%AE%A1%E7%90%86/Helm/Helm-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/helm-%E6%9F%A5%E8%AF%A2%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4/</guid><description>
&lt;h1 id="helm-get---获取指定-release-的信息">helm get - 获取指定 release 的信息&lt;a class="td-heading-self-link" href="#helm-get---%e8%8e%b7%e5%8f%96%e6%8c%87%e5%ae%9a-release-%e7%9a%84%e4%bf%a1%e6%81%af" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>该命令由多个子命令组成，这些子命令可用于获取有关 release 的扩展信息，包括：&lt;/p>
&lt;ul>
&lt;li>用于生成 release 的值&lt;/li>
&lt;li>生成 release 的 manifest 文件&lt;/li>
&lt;li>生成 release 的 chart 的注释信息&lt;/li>
&lt;li>与 release 相关的 hooks。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>helm get [COMMAND]&lt;/strong>&lt;/p>
&lt;p>该命令与 kubectl get XXX XXX -o yaml 效果类似，可用的 COMMAND 为二级标题&lt;/p>
&lt;h2 id="all---download-all-information-for-a-named-release">all - download all information for a named release&lt;a class="td-heading-self-link" href="#all---download-all-information-for-a-named-release" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;h2 id="hooks---获取指定-release-的所有-hooks">hooks - 获取指定 release 的所有 hooks&lt;a class="td-heading-self-link" href="#hooks---%e8%8e%b7%e5%8f%96%e6%8c%87%e5%ae%9a-release-%e7%9a%84%e6%89%80%e6%9c%89-hooks" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;strong>helm get hooks RELEASE_NAME [FLAGS]&lt;/strong>&lt;/p>
&lt;h2 id="manifest---获取指定-release-的-manifest-文件">manifest - 获取指定 release 的 manifest 文件&lt;a class="td-heading-self-link" href="#manifest---%e8%8e%b7%e5%8f%96%e6%8c%87%e5%ae%9a-release-%e7%9a%84-manifest-%e6%96%87%e4%bb%b6" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;strong>helm get manifest RELEASE_NAME [FLAGS]&lt;/strong>&lt;/p>
&lt;p>FLAGS&lt;/p>
&lt;ul>
&lt;li>&amp;ndash;revision INT # 指定一个 release 的版本&lt;/li>
&lt;/ul>
&lt;p>EXAMPLE&lt;/p>
&lt;ul>
&lt;li>helm get manifest myapp # 获取 myapp 这个 release 的所有 manifest 文件。&lt;/li>
&lt;/ul>
&lt;h2 id="notes---download-the-notes-for-a-named-release">notes - download the notes for a named release&lt;a class="td-heading-self-link" href="#notes---download-the-notes-for-a-named-release" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;h2 id="values---download-the-values-file-for-a-named-release">values - download the values file for a named release&lt;a class="td-heading-self-link" href="#values---download-the-values-file-for-a-named-release" aria-label="Heading self-link">&lt;/a>&lt;/h2></description></item><item><title>Docs: install、upgrade 子命令</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/%E4%BA%91%E5%8E%9F%E7%94%9F%E5%BA%94%E7%94%A8%E7%AE%A1%E7%90%86/Helm/Helm-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/installupgrade-%E5%AD%90%E5%91%BD%E4%BB%A4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/%E4%BA%91%E5%8E%9F%E7%94%9F%E5%BA%94%E7%94%A8%E7%AE%A1%E7%90%86/Helm/Helm-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/installupgrade-%E5%AD%90%E5%91%BD%E4%BB%A4/</guid><description>
&lt;h1 id="syntax语法">Syntax(语法)&lt;a class="td-heading-self-link" href="#syntax%e8%af%ad%e6%b3%95" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;strong>helm install [NAME] [CHART] [FLAGS]&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>CHART 可以是 chart(格式是 repo_name/chart)、已经打包的 chart 文件、未打包的 chart 目录、可用的 URL。&lt;/li>
&lt;/ul>
&lt;p>要覆盖图表中的值，请使用&amp;rsquo;&amp;ndash;values&amp;rsquo;标志并传递文件，或者使用&amp;rsquo;&amp;ndash;set&amp;rsquo;标志并通过命令行传递配置，以强制使用&amp;rsquo;&amp;ndash;set-string &amp;lsquo;。 如果值很大，因此不想使用“ &amp;ndash;values”或“ &amp;ndash;set”，请使用“ &amp;ndash;set-file”从文件中读取单个大值。&lt;/p>
&lt;h1 id="flags">FLAGS&lt;a class="td-heading-self-link" href="#flags" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;ul>
&lt;li>&amp;ndash;atomic                       if set, the installation process deletes the installation on failure. The &amp;ndash;wait flag will be set automatically if &amp;ndash;atomic is used&lt;/li>
&lt;li>&amp;ndash;ca-file string               verify certificates of HTTPS-enabled servers using this CA bundle&lt;/li>
&lt;li>&amp;ndash;cert-file string             identify HTTPS client using this SSL certificate file&lt;/li>
&lt;li>&amp;ndash;create-namespace             create the release namespace if not present&lt;/li>
&lt;li>&amp;ndash;dependency-update            run helm dependency update before installing the chart&lt;/li>
&lt;li>&amp;ndash;description string           add a custom description&lt;/li>
&lt;li>&amp;ndash;devel # use development versions, too. Equivalent to version &amp;lsquo;&amp;gt;0.0.0-0&amp;rsquo;. If &amp;ndash;version is set, this is ignored&lt;/li>
&lt;li>&amp;ndash;disable-openapi-validation   if set, the installation process will not validate rendered templates against the Kubernetes OpenAPI Schema&lt;/li>
&lt;li>&lt;strong>&amp;ndash;dry-run&lt;/strong> # 模拟安装&lt;/li>
&lt;li>-g, &amp;ndash;generate-name                generate the name (and omit the NAME parameter)&lt;/li>
&lt;li>-h, &amp;ndash;help                         help for install&lt;/li>
&lt;li>&amp;ndash;insecure-skip-tls-verify     skip tls certificate checks for the chart download&lt;/li>
&lt;li>&amp;ndash;key-file string              identify HTTPS client using this SSL key file&lt;/li>
&lt;li>&amp;ndash;keyring string               location of public keys used for verification (default &amp;ldquo;/root/.gnupg/pubring.gpg&amp;rdquo;)&lt;/li>
&lt;li>&amp;ndash;name-template string         specify template used to name the release&lt;/li>
&lt;li>&amp;ndash;no-hooks                     prevent hooks from running during install&lt;/li>
&lt;li>-o, &amp;ndash;output format                prints the output in the specified format. Allowed values: table, json, yaml (default table)&lt;/li>
&lt;li>&amp;ndash;password string              chart repository password where to locate the requested chart&lt;/li>
&lt;li>&amp;ndash;post-renderer postrenderer   the path to an executable to be used for post rendering. If it exists in $PATH, the binary will be used, otherwise it will try to look for the executable at the given path (default exec)&lt;/li>
&lt;li>&amp;ndash;render-subchart-notes        if set, render subchart notes along with the parent&lt;/li>
&lt;li>&amp;ndash;replace                      re-use the given name, only if that name is a deleted release which remains in the history. This is unsafe in production&lt;/li>
&lt;li>&amp;ndash;repo string                  chart repository url where to locate the requested chart&lt;/li>
&lt;li>&lt;strong>&amp;ndash;set&lt;/strong> # 在命令行设置 values(可以使用逗号指定多个值，例如：KEY1=VAL1,KEY2=VAL2)。
&lt;ul>
&lt;li>Note：通过 &amp;ndash;set 可以设置 values.yaml 文件中不存在的 k/v 对。&lt;/li>
&lt;li>如果键是多级下的，则每个层级以点分隔，比如 &lt;code>alertmanager.config.global.smtp_auth_password=mypassword&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&amp;ndash;set-file  # set values from respective files specified via the command line (can specify multiple or separate values with commas: key1=path1,key2=path2)&lt;/li>
&lt;li>&amp;ndash;set-string  # set STRING values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2)&lt;/li>
&lt;li>&amp;ndash;skip-crds                    if set, no CRDs will be installed. By default, CRDs are installed if not already present&lt;/li>
&lt;li>&amp;ndash;timeout duration             time to wait for any individual Kubernetes operation (like Jobs for hooks) (default 5m0s)&lt;/li>
&lt;li>&amp;ndash;username string              chart repository username where to locate the requested chart&lt;/li>
&lt;li>&lt;strong>-f, &amp;ndash;values&lt;/strong> # 使用 yaml 文件或者 一个 URL 来指定 values。(可以指定多个 yaml 文件或 URL，最右边的内容具有最高优先级)
&lt;ul>
&lt;li>参考：&lt;a href="https://helm.sh/docs/intro/using_helm/#customizing-the-chart-before-installing">&lt;strong>官方文档 在安装前自定义 chart&lt;/strong>&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&amp;ndash;verify # verify the package before using it&lt;/li>
&lt;li>&amp;ndash;version string # specify the exact chart version to use. If this is not specified, the latest version is used&lt;/li>
&lt;li>&amp;ndash;wait # if set, will wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful. It will wait for as long as &amp;ndash;timeout&lt;/li>
&lt;/ul>
&lt;h1 id="example">EXAMPLE&lt;a class="td-heading-self-link" href="#example" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;ul>
&lt;li>使用当前目录的 redis-4.2.8.tgz 文件安装 chart，release 名为 redis
&lt;ul>
&lt;li>&lt;strong>helm install redis redis-4.2.8.tgz&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>使用当前目录下的 mychart 目录中的文件安装 chart。并且只显示模板信息，不部署
&lt;ul>
&lt;li>&lt;strong>helm install &amp;ndash;debug &amp;ndash;dry-run mychart ./mychart&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>通过自定义的文件和命令行指定的指，来安装 chart
&lt;ul>
&lt;li>&lt;strong>helm install -n monitoring monitor-bj-net -f custom-values-bj-net.yaml &amp;ndash;set alertmanager.config.global.smtp_auth_password=Ehl@1234 ./&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item></channel></rss>