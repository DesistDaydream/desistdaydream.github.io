<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦的站点 – Helm</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/%E4%BA%91%E5%8E%9F%E7%94%9F%E5%BA%94%E7%94%A8%E7%AE%A1%E7%90%86/Helm/</link><description>Recent content in Helm on 断念梦的站点</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/%E4%BA%91%E5%8E%9F%E7%94%9F%E5%BA%94%E7%94%A8%E7%AE%A1%E7%90%86/Helm/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Charts</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/%E4%BA%91%E5%8E%9F%E7%94%9F%E5%BA%94%E7%94%A8%E7%AE%A1%E7%90%86/Helm/Charts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/%E4%BA%91%E5%8E%9F%E7%94%9F%E5%BA%94%E7%94%A8%E7%AE%A1%E7%90%86/Helm/Charts/</guid><description/></item><item><title>Docs: Helm</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/%E4%BA%91%E5%8E%9F%E7%94%9F%E5%BA%94%E7%94%A8%E7%AE%A1%E7%90%86/Helm/Helm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/%E4%BA%91%E5%8E%9F%E7%94%9F%E5%BA%94%E7%94%A8%E7%AE%A1%E7%90%86/Helm/Helm/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/helm/helm">GitHub 项目，helm/helm&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://helm.sh/docs/">官方文档&lt;/a>&lt;/li>
&lt;li>其他后期发现的文章
&lt;ul>
&lt;li>&lt;a href="https://www.cnblogs.com/liugp/p/16659802.html">https://www.cnblogs.com/liugp/p/16659802.html&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;strong>Helm&lt;/strong> 是 Kubernetes 的 &lt;strong>Package Manager(包管理器)&lt;/strong>。Kubernetes 在希腊语中，意为舵手或飞行员，是一个蓝色的舵轮图标。所以 Helm 就以类似的概念命名，Helm 称为舵柄，图标与 Kubernetes 类似，寓意把握着 Kubernetes 航行的方向。&lt;/p>
&lt;h2 id="主要概念">主要概念&lt;a class="td-heading-self-link" href="#%e4%b8%bb%e8%a6%81%e6%a6%82%e5%bf%b5" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://helm.sh/docs/intro/using_helm/">官方文档，介绍-使用 Helm&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>Helm 与 Kubernetes 的关系，就好比 yum 与 RedHat，apt 与 Ubuntu 一样，是一个 Kubernetes 专用的包管理器，安装专用于 k8s 集群之上的软件包。Helm 使用 Chart 帮助我们管理应用，Chart 就像 RPM 一样，里面描述了应用及其依赖关系。&lt;/p>
&lt;p>&lt;strong>Chart(图表)&lt;/strong> 是由 Helm 管理的应用部署包。Chart 是在一个结构相对固定的目录中，包含用于描述一个应用的一组 manifests 文件。&lt;/p>
&lt;ol>
&lt;li>Chart Archive(图标归档) # 是一个将 Chart 打包成 .tgz 格式的压缩文件。&lt;/li>
&lt;li>实际上，Chart 就是很多 &lt;a href="https://kubernetes.io/docs/reference/glossary/?all=true#term-manifest">&lt;strong>manifests&lt;/strong>&lt;/a> 的集合，里面有一个应用程序所需的 yaml 文件。而对于 kubernetes 来说，所谓的应用程序(软件包)也就是一堆 manifests，每个 manifest 代表一种资源(比如 deployment、service、ingress、configmap 等等)，这些 manifests 组合起来，就构成了一个应用。&lt;/li>
&lt;li>&lt;strong>Chart 包&lt;/strong> 就像 &lt;strong>RPM 包&lt;/strong>一样。这不过没有类似 rpm 的命令，而是直接使用类似 yum 的 helm 命令来管理这些包。并且，Chart 包 也和 RPM 包一样，具有依赖关系。&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>Release(发布)&lt;/strong> 是将 Chart 部署到 Kubernets 集群中运行的实例，每一次 helm install CHART 就会生成一个 Release&lt;/p>
&lt;ol>
&lt;li>Chart 是基础包，通过 config 赋值，生成 release。一般 config 来自于 chart archive 包中的 values.yaml 文件&lt;/li>
&lt;/ol>
&lt;p>chart 与 release 的关系就像 windows 中的 .exe 的安装文件与安装完成后在添加删除程序中看到的应用程序。chart 就是安装文件，release 就是程序。只不过 chart 可以是压缩包或者文件夹或者 url；helm list 命令就相当于打开了添加删除程序，可以看到已经安装好的 release。&lt;/p>
&lt;p>&lt;strong>Repository(仓库)&lt;/strong> 是存放 Charts 的地方，就是类似于 yum 源的概念。Helm 添加一个仓库 URL，就可以查看或安装该仓库下的 Charts。&lt;/p>
&lt;p>基于上述概念，可以这么描述他们：Helm 安装 Charts 到 kubernetes 中，并为每个安装创建一个新的 Release。如果想要找到新的 Charts，可以使用 Helm 搜索 Repository&lt;/p>
&lt;h3 id="在安装前自定义-charthttpshelmshdocsintrousing_helmcustomizing-the-chart-before-installing">&lt;a href="https://helm.sh/docs/intro/using_helm/#customizing-the-chart-before-installing">&lt;strong>在安装前自定义 Chart&lt;/strong>&lt;/a>&lt;a class="td-heading-self-link" href="#%e5%9c%a8%e5%ae%89%e8%a3%85%e5%89%8d%e8%87%aa%e5%ae%9a%e4%b9%89-charthttpshelmshdocsintrousing_helmcustomizing-the-chart-before-installing" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>在我们使用 yum 安装应用时，一般都是安装完成后，再对配置文件进行编辑，以改变应用的运行行为。&lt;/p>
&lt;p>但是使用 Helm 则不能这么做，因为 Helm 直接将应用部署到 Kubernetes 集群中，部署完成后，再改变运行行为的方式是不优雅，且不方便的。所以，我们需要 &lt;strong>Customizing the Chart Before Installing(在安装前自定义图表)&lt;/strong>。&lt;/p>
&lt;p>要查看图表上可配置的选项，使用&lt;code>helm show values&lt;/code>命令。&lt;/p>
&lt;h2 id="charts-repository图表仓库">Charts Repository(图表仓库)&lt;a class="td-heading-self-link" href="#charts-repository%e5%9b%be%e8%a1%a8%e4%bb%93%e5%ba%93" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>通常来说，我们可以直接使用别人已经做好的 Chart，就跟使用 Docker 镜像，或者使用 yum 安装一样。并且，Helm 社区在早期已经维护了一个 &lt;a href="https://github.com/helm/charts">&lt;strong>Helm Charts Hub&lt;/strong>&lt;/a>，这个 Hub 里包含丰富的 Charts。随着云原生应用的发展，这个仓库需要处理的 PR 越来越多，维护非常困难，所以 Helm 逐步把 Charts Hub 中的内容移动到 &lt;a href="https://artifacthub.io/">Artifact Hub&lt;/a> 中(Charts Hub 维护期持续 1 年)。&lt;a href="https://artifacthub.io/">&lt;strong>Arifact Hub&lt;/strong>&lt;/a> 是一个基于 Web 的应用程序，可用于查找，安装和发布 CNCF 项目的软件包和配置。例如，这可能包括 Helm 图表，Falco 配置，开放策略代理（OPA）策略和 OLM 运算符。&lt;/p>
&lt;p>Artifact Hub 中，除了包含 Helm Charts Hub 中的各种资源外，还有各种开源软件官方维护的 Charts，以及 &lt;a href="https://bitnami.com/stacks/helm">&lt;strong>Bitnami 中适用于 kubernetes 的 Charts&lt;/strong>&lt;/a>。&lt;/p>
&lt;p>&lt;a href="https://bitnami.com/">&lt;strong>Bitnami&lt;/strong>&lt;/a> 使我们可以轻松地在任何平台上启动并运行您我们喜爱的开源软件，包括笔记本电脑，Kubernetes 和所有主要云。除了流行的社区产品之外，Bitnami 现在是 VMware 的一部分，它为 IT 组织提供安全，合规，连续维护和可根据组织策略自定义的企业产品。&lt;/p>
&lt;h1 id="helm-的安装">Helm 的安装&lt;a class="td-heading-self-link" href="#helm-%e7%9a%84%e5%ae%89%e8%a3%85" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>注意：Helm 使用时，会读取 /root/.kube/config 文件来连接 Kubernetes 集群。&lt;/p>
&lt;ul>
&lt;li>下载 &lt;a href="https://github.com/helm/helm/releases">helm 的 linux 压缩文件&lt;/a>，解压后把 helm 的二进制文件移动到 /usr/bin 目录下，即可直接使用 helm 命令&lt;/li>
&lt;li>配置命令补全
&lt;ul>
&lt;li>echo &amp;ldquo;source &amp;lt;(helm completion bash)&amp;rdquo; &amp;raquo; /root/.bashrc&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>安装 push 插件
&lt;ul>
&lt;li>helm plugin install &lt;a href="https://github.com/chartmuseum/helm-push.git">https://github.com/chartmuseum/helm-push.git&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>当创建一个 Release 的时候，会先把 Chart 的数据存档(.tgz 格式)文件下载到 Helm 配置目录的 archive 目录下，然后再安装&lt;/li>
&lt;/ul>
&lt;h1 id="helm-关联文件与配置">Helm 关联文件与配置&lt;a class="td-heading-self-link" href="#helm-%e5%85%b3%e8%81%94%e6%96%87%e4%bb%b6%e4%b8%8e%e9%85%8d%e7%bd%ae" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;strong>~/.cache/helm/&lt;/strong> # helm 缓存路径&lt;/p>
&lt;ul>
&lt;li>&lt;strong>./plugin/&lt;/strong> # helm 插件安装路径&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>/root/.local/share/helm/plugins/&lt;/strong> #&lt;/p>
&lt;h1 id="helm-安装资源的顺序">Helm 安装资源的顺序&lt;a class="td-heading-self-link" href="#helm-%e5%ae%89%e8%a3%85%e8%b5%84%e6%ba%90%e7%9a%84%e9%a1%ba%e5%ba%8f" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;ul>
&lt;li>Namespace&lt;/li>
&lt;li>NetworkPolicy&lt;/li>
&lt;li>ResourceQuota&lt;/li>
&lt;li>LimitRange&lt;/li>
&lt;li>PodSecurityPolicy&lt;/li>
&lt;li>PodDisruptionBudget&lt;/li>
&lt;li>ServiceAccount&lt;/li>
&lt;li>Secret&lt;/li>
&lt;li>SecretList&lt;/li>
&lt;li>ConfigMap&lt;/li>
&lt;li>StorageClass&lt;/li>
&lt;li>PersistentVolume&lt;/li>
&lt;li>PersistentVolumeClaim&lt;/li>
&lt;li>CustomResourceDefinition&lt;/li>
&lt;li>ClusterRole&lt;/li>
&lt;li>ClusterRoleList&lt;/li>
&lt;li>ClusterRoleBinding&lt;/li>
&lt;li>ClusterRoleBindingList&lt;/li>
&lt;li>Role&lt;/li>
&lt;li>RoleList&lt;/li>
&lt;li>RoleBinding&lt;/li>
&lt;li>RoleBindingList&lt;/li>
&lt;li>Service&lt;/li>
&lt;li>DaemonSet&lt;/li>
&lt;li>Pod&lt;/li>
&lt;li>ReplicationController&lt;/li>
&lt;li>ReplicaSet&lt;/li>
&lt;li>Deployment&lt;/li>
&lt;li>HorizontalPodAutoscaler&lt;/li>
&lt;li>StatefulSet&lt;/li>
&lt;li>Job&lt;/li>
&lt;li>CronJob&lt;/li>
&lt;li>Ingress&lt;/li>
&lt;li>APIService&lt;/li>
&lt;/ul></description></item><item><title>Docs: Helm Template</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/%E4%BA%91%E5%8E%9F%E7%94%9F%E5%BA%94%E7%94%A8%E7%AE%A1%E7%90%86/Helm/Helm-Template/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/%E4%BA%91%E5%8E%9F%E7%94%9F%E5%BA%94%E7%94%A8%E7%AE%A1%E7%90%86/Helm/Helm-Template/</guid><description/></item><item><title>Docs: Helm 命令行工具</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/%E4%BA%91%E5%8E%9F%E7%94%9F%E5%BA%94%E7%94%A8%E7%AE%A1%E7%90%86/Helm/Helm-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/%E4%BA%91%E5%8E%9F%E7%94%9F%E5%BA%94%E7%94%A8%E7%AE%A1%E7%90%86/Helm/Helm-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/</guid><description/></item></channel></rss>