<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦的站点 – Object 管理</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.Kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/1.API-Resource-%E4%B8%8E-Object/Object-%E7%AE%A1%E7%90%86/</link><description>Recent content in Object 管理 on 断念梦的站点</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.Kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/1.API-Resource-%E4%B8%8E-Object/Object-%E7%AE%A1%E7%90%86/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Object 管理</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.Kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/1.API-Resource-%E4%B8%8E-Object/Object-%E7%AE%A1%E7%90%86/Object-%E7%AE%A1%E7%90%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.Kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/1.API-Resource-%E4%B8%8E-Object/Object-%E7%AE%A1%E7%90%86/Object-%E7%AE%A1%E7%90%86/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://kubernetes.io/docs/concepts/overview/working-with-objects/object-management/">官方文档，概念-概述-使用 Kubernetes 对象-Kubernetes 对象管理&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kubernetes.io/docs/tasks/manage-kubernetes-objects/">官方文档，任务-管理 Kubernetes 对象&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://mp.weixin.qq.com/s/EYtMO9KGRK_lHS2IW-mZug">公众号-k8s 技术圈，理解 K8s 中的 Client-Side Apply 和 Server-Side Apply&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://juejin.cn/post/7173328614644006942">原文：掘金&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>使用 kubectl 等是传统的 &lt;strong>Client-Side Apply(简称 CSA)&lt;/strong>，添加 &amp;ndash;server-side 标志后，为 &lt;strong>Server-Side Apply(简称 SSA)。&lt;/strong>&lt;/p>
&lt;p>如果你经常与 kubectl 打交道，那相信你一定见过 kubectl.kubernetes.io/last-applied-configuration annotation，以及那神烦的 managedFields，像这样：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">$ kubectl get pods hello -oyaml&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">v1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Pod&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">annotations&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">kubectl.kubernetes.io/last-applied-configuration&lt;/span>: |&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> {&amp;#34;apiVersion&amp;#34;:&amp;#34;v1&amp;#34;,&amp;#34;kind&amp;#34;:&amp;#34;Pod&amp;#34;,&amp;#34;metadata&amp;#34;:{&amp;#34;annotations&amp;#34;:{},&amp;#34;creationTimestamp&amp;#34;:null,&amp;#34;labels&amp;#34;:{&amp;#34;run&amp;#34;:&amp;#34;hello&amp;#34;},&amp;#34;name&amp;#34;:&amp;#34;hello&amp;#34;,&amp;#34;namespace&amp;#34;:&amp;#34;default&amp;#34;},&amp;#34;spec&amp;#34;:{&amp;#34;containers&amp;#34;:[{&amp;#34;image&amp;#34;:&amp;#34;nginx&amp;#34;,&amp;#34;name&amp;#34;:&amp;#34;hello&amp;#34;,&amp;#34;resources&amp;#34;:{}}],&amp;#34;dnsPolicy&amp;#34;:&amp;#34;ClusterFirst&amp;#34;,&amp;#34;restartPolicy&amp;#34;:&amp;#34;Always&amp;#34;},&amp;#34;status&amp;#34;:{}}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">creationTimestamp&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;2022-05-28T07:28:51Z&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">labels&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">run&lt;/span>: &lt;span style="color:#ae81ff">hello&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">managedFields&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">v1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">fieldsType&lt;/span>: &lt;span style="color:#ae81ff">FieldsV1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">fieldsV1&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">f:metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">f:annotations&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">.&lt;/span>: {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">f:kubectl.kubernetes.io/last-applied-configuration&lt;/span>: {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">f:labels&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">.&lt;/span>: {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">f:run&lt;/span>: {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...&lt;span style="color:#ae81ff">.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">manager&lt;/span>: &lt;span style="color:#ae81ff">kubectl&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">operation&lt;/span>: &lt;span style="color:#ae81ff">Update&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">time&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;2022-05-28T07:28:51Z&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...&lt;span style="color:#ae81ff">.&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>由这两个字段，引出本文的两位主角，Client-Side Apply（以下简称&lt;strong>CSA&lt;/strong>）和 Server-Side Apply（以下简称&lt;strong>SSA&lt;/strong>）&lt;/p>
&lt;ul>
&lt;li>kubectl.kubernetes.io/last-applied-configuration 是使用 kubectl apply 进行 Client-Side Apply 时，由 kubectl 自行填充的。&lt;/li>
&lt;li>managedFields 则是由 kubectl apply 的增强功能—— Server-Side Apply 的引入而添加。&lt;/li>
&lt;/ul>
&lt;h2 id="client-side-apply客户端应用">Client-Side Apply(客户端应用)&lt;a class="td-heading-self-link" href="#client-side-apply%e5%ae%a2%e6%88%b7%e7%ab%af%e5%ba%94%e7%94%a8" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>CSA 是 &lt;code>kubectl apply&lt;/code> 早期(v1.14 版本之前)唯一的对象管理手段。&lt;/p>
&lt;p>需要特别指出的是，&lt;code>kubectl apply&lt;/code> 声明的仅仅是它关心的字段的状态，而不是整个对象的真实状态。apply 表达的意思是：“我”管理的字段应该和我 apply 的配置文件一致(但我不关心其他字段)。&lt;/p>
&lt;p>什么是“我”管理的字段，什么又是其他的字段呢？举个例子，当我们希望使用 HPA 管理应用副本数时，&lt;a href="https://link.juejin.cn?target=https%3A%2F%2Fkubernetes.io%2Fdocs%2Ftasks%2Frun-application%2Fhorizontal-pod-autoscale%2F%23migrating-deployments-and-statefulsets-to-horizontal-autoscaling">Kubernetes 推荐的做法&lt;/a>是在 apply 的配置文中不指定具体 replicas 副本数。首次部署时，K8S 会将 replicas 值设置为默认 1，随后由 HPA 控制器扩容到合适的副本数。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">apps/v1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Deployment&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">creationTimestamp&lt;/span>: &lt;span style="color:#66d9ef">null&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">labels&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">app&lt;/span>: &lt;span style="color:#ae81ff">nginx&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">nginx&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">spec&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># replicas: 1 不要设置replicas&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">selector&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">matchLabels&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">app&lt;/span>: &lt;span style="color:#ae81ff">nginx&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">strategy&lt;/span>: {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">template&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">creationTimestamp&lt;/span>: &lt;span style="color:#66d9ef">null&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">labels&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">app&lt;/span>: &lt;span style="color:#ae81ff">nginx&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">spec&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">containers&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">image&lt;/span>: &lt;span style="color:#ae81ff">nginx:latest&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">nginx&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">resources&lt;/span>: {}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>当升级应用时（修改镜像版本），修改配置文件中的 image 字段，再次执行 kubectl apply。此时 kubectl apply 只会影响镜像版本(因为他是“我”管理的字段)，而不会影响 HPA 控制器设置的副本数。在这个例子中，replicas 字段不是 kubectl apply 管理的字段，因此更新镜像时不会被删除，避免了每次应用升级时，副本数都会被重置。
在上述例子中，为了能识别出 replicas 不是 kubectl 管理的字段，kubectl 需要一个标识，用来追踪对象中哪些字段是由 kubectl apply 管理的，而这个标识就是 last-applied-configuration。 该 annotation 是在 kubectl apply 时，由 kubectl 客户端自行填充——每次执行 kubectl apply 时（未启用 SSA），kubectl 会将本次 apply 的配置文件全量的记录在 last-applied-configurationannotation 中，用于追踪哪些字段由 kubectl apply 管理。
CSA 的工作工作机制大致如下：当 apply 一个对象，如果该对象不存在，则创建它（同时写入 last-applied-configuration）。如果对象已经存在，则 kubectl 需要根据以下三个状态：&lt;/p>
&lt;ul>
&lt;li>当前配置文件所表示的对象在集群中的真实状态。（修改对象前先 Get 一次）&lt;/li>
&lt;li>当前 apply 的配置。&lt;/li>
&lt;li>以及上次 apply 的配置。 （在 last-applied-configuration 里）&lt;/li>
&lt;/ul>
&lt;p>计算出 patch 报文，通过 patch 方式进行更新（而不是将配置文件全量的发送到服务端）。 patch 报文的计算方法如下：&lt;/p>
&lt;ul>
&lt;li>计算需要被删除的字段。如果字段存在在 last-applied-configuration 中，但配置文件中没有，将删除它们。&lt;/li>
&lt;li>计算需要修改或添加的字段。如果配置文件中的字段与真实状态不一致，则添加或修改它们。&lt;/li>
&lt;li>特别的，对于那些 last-applied-configuration 中不存在的字段，不要修改它们（例如上述示例中的 replicas 字段）&lt;/li>
&lt;/ul>
&lt;p>详细的 patch 计算示例可参考 &lt;a href="https://link.juejin.cn?target=https%3A%2F%2Fkubernetes.io%2Fzh-cn%2Fdocs%2Ftasks%2Fmanage-kubernetes-objects%2Fdeclarative-config%2F%23apply-%25E6%2593%258D%25E4%25BD%259C%25E6%2598%25AF%25E5%25A6%2582%25E4%25BD%2595%25E8%25AE%25A1%25E7%25AE%2597%25E9%2585%258D%25E7%25BD%25AE%25E5%25B7%25AE%25E5%25BC%2582%25E5%25B9%25B6%25E5%2590%2588%25E5%25B9%25B6%25E5%258F%2598%25E6%259B%25B4%25E7%259A%2584">K8S 文档中给出的详细示例&lt;/a>。
由此可见，last-applied-configuration 体现的是一种 ownership 的关系，表示哪些字段是由 kubectl 管理，它是 kubectl apply 时，计算 patch 报文的依据。&lt;/p>
&lt;h2 id="server-side-apply服务端应用">Server-Side Apply(服务端应用)&lt;a class="td-heading-self-link" href="#server-side-apply%e6%9c%8d%e5%8a%a1%e7%ab%af%e5%ba%94%e7%94%a8" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://kubernetes.io/zh-cn/docs/reference/using-api/server-side-apply/">官方文档，参考-API 概述-服务端 Apply&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cloud.tencent.com/developer/article/1610073">https://cloud.tencent.com/developer/article/1610073&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://yanhang.me/post/2021-ssa/">https://yanhang.me/post/2021-ssa/&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;strong>SSA 是另一种声明式的对象管理方式，和 CSA 的作用是基本一致的&lt;/strong>。SSA 始于从 1.14 开始发布 alpha 版本，到 1.16 beta，到 1.18 beta2，终于在 1.22 升级为 GA。&lt;/p>
&lt;p>从 Kubernetes 1.18 开始可以看到一个明显的变化就是资源的 YAML 在 metadata 字段多了很多一个 &lt;code>managedFields&lt;/code> 字段，该字段用来声明一个资源的各个字段的具体的管理者是谁。&lt;/p>
&lt;h3 id="字段管理">字段管理&lt;a class="td-heading-self-link" href="#%e5%ad%97%e6%ae%b5%e7%ae%a1%e7%90%86" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://kubernetes.io/docs/reference/using-api/server-side-apply/#field-management">官方文档，参考-API 概述-服务端 Apply-字段管理&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h1 id="管理对象的方式">管理对象的方式&lt;a class="td-heading-self-link" href="#%e7%ae%a1%e7%90%86%e5%af%b9%e8%b1%a1%e7%9a%84%e6%96%b9%e5%bc%8f" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h2 id="使用配置文件对-kubernetes-对象进行声明式管理">使用配置文件对 Kubernetes 对象进行声明式管理&lt;a class="td-heading-self-link" href="#%e4%bd%bf%e7%94%a8%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6%e5%af%b9-kubernetes-%e5%af%b9%e8%b1%a1%e8%bf%9b%e8%a1%8c%e5%a3%b0%e6%98%8e%e5%bc%8f%e7%ae%a1%e7%90%86" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;a href="https://kubernetes.io/zh-cn/docs/tasks/manage-kubernetes-objects/declarative-config/">https://kubernetes.io/zh-cn/docs/tasks/manage-kubernetes-objects/declarative-config/&lt;/a>&lt;/p>
&lt;h2 id="使用-kustomize-对-kubernetes-对象进行声明式管理">使用 Kustomize 对 Kubernetes 对象进行声明式管理&lt;a class="td-heading-self-link" href="#%e4%bd%bf%e7%94%a8-kustomize-%e5%af%b9-kubernetes-%e5%af%b9%e8%b1%a1%e8%bf%9b%e8%a1%8c%e5%a3%b0%e6%98%8e%e5%bc%8f%e7%ae%a1%e7%90%86" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;a href="https://kubernetes.io/zh-cn/docs/tasks/manage-kubernetes-objects/kustomization/">https://kubernetes.io/zh-cn/docs/tasks/manage-kubernetes-objects/kustomization/&lt;/a>&lt;/p>
&lt;h2 id="使用指令式命令管理-kubernetes-对象">使用指令式命令管理 Kubernetes 对象&lt;a class="td-heading-self-link" href="#%e4%bd%bf%e7%94%a8%e6%8c%87%e4%bb%a4%e5%bc%8f%e5%91%bd%e4%bb%a4%e7%ae%a1%e7%90%86-kubernetes-%e5%af%b9%e8%b1%a1" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;a href="https://kubernetes.io/zh-cn/docs/tasks/manage-kubernetes-objects/imperative-command/">https://kubernetes.io/zh-cn/docs/tasks/manage-kubernetes-objects/imperative-command/&lt;/a>&lt;/p>
&lt;h2 id="使用配置文件对-kubernetes-对象进行命令式管理">使用配置文件对 Kubernetes 对象进行命令式管理&lt;a class="td-heading-self-link" href="#%e4%bd%bf%e7%94%a8%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6%e5%af%b9-kubernetes-%e5%af%b9%e8%b1%a1%e8%bf%9b%e8%a1%8c%e5%91%bd%e4%bb%a4%e5%bc%8f%e7%ae%a1%e7%90%86" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;a href="https://kubernetes.io/zh-cn/docs/tasks/manage-kubernetes-objects/imperative-config/">https://kubernetes.io/zh-cn/docs/tasks/manage-kubernetes-objects/imperative-config/&lt;/a>&lt;/p>
&lt;h2 id="使用-kubectl-patch-更新-api-对象">使用 kubectl patch 更新 API 对象&lt;a class="td-heading-self-link" href="#%e4%bd%bf%e7%94%a8-kubectl-patch-%e6%9b%b4%e6%96%b0-api-%e5%af%b9%e8%b1%a1" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;a href="https://kubernetes.io/zh-cn/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/">https://kubernetes.io/zh-cn/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/&lt;/a>&lt;/p>
&lt;p>使用 kubectl patch 更新 Kubernetes API 对象。做一个策略性的合并 patch 或 JSON 合并 patch。&lt;/p></description></item><item><title>Docs: Label and Selector(标签和选择器)</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.Kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/1.API-Resource-%E4%B8%8E-Object/Object-%E7%AE%A1%E7%90%86/Label-and-Selector%E6%A0%87%E7%AD%BE%E5%92%8C%E9%80%89%E6%8B%A9%E5%99%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.Kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/1.API-Resource-%E4%B8%8E-Object/Object-%E7%AE%A1%E7%90%86/Label-and-Selector%E6%A0%87%E7%AD%BE%E5%92%8C%E9%80%89%E6%8B%A9%E5%99%A8/</guid><description/></item><item><title>Docs: 字段选择器</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.Kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/1.API-Resource-%E4%B8%8E-Object/Object-%E7%AE%A1%E7%90%86/%E5%AD%97%E6%AE%B5%E9%80%89%E6%8B%A9%E5%99%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.Kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/1.API-Resource-%E4%B8%8E-Object/Object-%E7%AE%A1%E7%90%86/%E5%AD%97%E6%AE%B5%E9%80%89%E6%8B%A9%E5%99%A8/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://kubernetes.io/docs/concepts/overview/working-with-objects/field-selectors/">官方文档，概念-概述-使用对象-字段选择器&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;strong>Field selectors(字段选择器)&lt;/strong> 允许你根据一个或多个资源字段的值 &lt;a href="https://kubernetes.io/zh-cn/docs/concepts/overview/working-with-objects/kubernetes-objects">筛选 Kubernetes 资源&lt;/a>。 下面是一些使用字段选择器查询的例子：&lt;/p>
&lt;ul>
&lt;li>&lt;code>metadata.name=my-service&lt;/code>&lt;/li>
&lt;li>&lt;code>metadata.namespace!=default&lt;/code>&lt;/li>
&lt;li>&lt;code>status.phase=Pending&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>下面这个 &lt;code>kubectl&lt;/code> 命令将筛选出 &lt;a href="https://kubernetes.io/zh-cn/docs/concepts/workloads/pods/pod-lifecycle/#pod-phase">&lt;code>status.phase&lt;/code>&lt;/a> 字段值为 &lt;code>Running&lt;/code> 的所有 Pod：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl get pods --field-selector status.phase&lt;span style="color:#f92672">=&lt;/span>Running
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>说明：&lt;/strong>&lt;/p>
&lt;p>字段选择器本质上是资源“过滤器（Filters）”。默认情况下，字段选择器/过滤器是未被应用的， 这意味着指定类型的所有资源都会被筛选出来。 这使得 &lt;code>kubectl get pods&lt;/code> 和 &lt;code>kubectl get pods --field-selector &amp;quot;&amp;quot;&lt;/code> 这两个 &lt;code>kubectl&lt;/code> 查询是等价的。&lt;/p>
&lt;h2 id="支持的字段">支持的字段&lt;a class="td-heading-self-link" href="#%e6%94%af%e6%8c%81%e7%9a%84%e5%ad%97%e6%ae%b5" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>不同的 Kubernetes 资源类型支持不同的字段选择器。 所有资源类型都支持 &lt;code>metadata.name&lt;/code> 和 &lt;code>metadata.namespace&lt;/code> 字段。 使用不被支持的字段选择器会产生错误。例如：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl get ingress --field-selector foo.bar&lt;span style="color:#f92672">=&lt;/span>baz
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>Error from server (BadRequest): Unable to find &amp;#34;ingresses&amp;#34; that match label selector &amp;#34;&amp;#34;, field selector &amp;#34;foo.bar=baz&amp;#34;: &amp;#34;foo.bar&amp;#34; is not a known field selector: only &amp;#34;metadata.name&amp;#34;, &amp;#34;metadata.namespace&amp;#34;
&lt;/code>&lt;/pre>&lt;h2 id="支持的操作符">支持的操作符&lt;a class="td-heading-self-link" href="#%e6%94%af%e6%8c%81%e7%9a%84%e6%93%8d%e4%bd%9c%e7%ac%a6" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>你可在字段选择器中使用 &lt;code>=&lt;/code>、&lt;code>==&lt;/code> 和 &lt;code>!=&lt;/code> （&lt;code>=&lt;/code> 和 &lt;code>==&lt;/code> 的意义是相同的）操作符。 例如，下面这个 &lt;code>kubectl&lt;/code> 命令将筛选所有不属于 &lt;code>default&lt;/code> 命名空间的 Kubernetes 服务：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl get services --all-namespaces --field-selector metadata.namespace!&lt;span style="color:#f92672">=&lt;/span>default
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="链式选择器">链式选择器&lt;a class="td-heading-self-link" href="#%e9%93%be%e5%bc%8f%e9%80%89%e6%8b%a9%e5%99%a8" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>同&lt;a href="https://kubernetes.io/zh-cn/docs/concepts/overview/working-with-objects/labels/">标签&lt;/a>和其他选择器一样， 字段选择器可以通过使用逗号分隔的列表组成一个选择链。 下面这个 &lt;code>kubectl&lt;/code> 命令将筛选 &lt;code>status.phase&lt;/code> 字段不等于 &lt;code>Running&lt;/code> 同时 &lt;code>spec.restartPolicy&lt;/code> 字段等于 &lt;code>Always&lt;/code> 的所有 Pod：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl get pods --field-selector&lt;span style="color:#f92672">=&lt;/span>status.phase!&lt;span style="color:#f92672">=&lt;/span>Running,spec.restartPolicy&lt;span style="color:#f92672">=&lt;/span>Always
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="多种资源类型">多种资源类型&lt;a class="td-heading-self-link" href="#%e5%a4%9a%e7%a7%8d%e8%b5%84%e6%ba%90%e7%b1%bb%e5%9e%8b" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>你能够跨多种资源类型来使用字段选择器。 下面这个 &lt;code>kubectl&lt;/code> 命令将筛选出所有不在 &lt;code>default&lt;/code> 命名空间中的 StatefulSet 和 Service：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl get statefulsets,services --all-namespaces --field-selector metadata.namespace!&lt;span style="color:#f92672">=&lt;/span>default
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>