<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦 – Kubernetes 1.22 版本发布2021年8月5日</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.Kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/Kubernetes-%E7%AE%A1%E7%90%86/%E9%87%8D%E5%A4%A7%E5%8F%98%E5%8C%96/Kubernetes-1.22-%E7%89%88%E6%9C%AC%E5%8F%91%E5%B8%832021%E5%B9%B48%E6%9C%885%E6%97%A5/</link><description>Recent content in Kubernetes 1.22 版本发布2021年8月5日 on 断念梦</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.Kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/Kubernetes-%E7%AE%A1%E7%90%86/%E9%87%8D%E5%A4%A7%E5%8F%98%E5%8C%96/Kubernetes-1.22-%E7%89%88%E6%9C%AC%E5%8F%91%E5%B8%832021%E5%B9%B48%E6%9C%885%E6%97%A5/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Kubernetes 1.22 版本发布2021年8月5日</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.Kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/Kubernetes-%E7%AE%A1%E7%90%86/%E9%87%8D%E5%A4%A7%E5%8F%98%E5%8C%96/Kubernetes-1.22-%E7%89%88%E6%9C%AC%E5%8F%91%E5%B8%832021%E5%B9%B48%E6%9C%885%E6%97%A5/Kubernetes-1.22-%E7%89%88%E6%9C%AC%E5%8F%91%E5%B8%832021%E5%B9%B48%E6%9C%885%E6%97%A5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.Kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/Kubernetes-%E7%AE%A1%E7%90%86/%E9%87%8D%E5%A4%A7%E5%8F%98%E5%8C%96/Kubernetes-1.22-%E7%89%88%E6%9C%AC%E5%8F%91%E5%B8%832021%E5%B9%B48%E6%9C%885%E6%97%A5/Kubernetes-1.22-%E7%89%88%E6%9C%AC%E5%8F%91%E5%B8%832021%E5%B9%B48%E6%9C%885%E6%97%A5/</guid><description>
&lt;p>&lt;a href="https://mp.weixin.qq.com/s/TQoyU3S2q4Q-yCK0zGHo9g">https://mp.weixin.qq.com/s/TQoyU3S2q4Q-yCK0zGHo9g&lt;/a>
来源：CNCF
作者：&lt;strong>Kubernetes 1.22 发布团队[1]&lt;/strong>
我们很高兴地宣布 Kubernetes 1.22 的发布，这是 2021 年的第二个版本！
这个版本包含 53 个增强功能：13 个增强功能已经升级到稳定版，24 个增强功能正在进入 beta 版，16 个增强功能正在进入 alpha 版。另外，有三个特性已被弃用。
今年 4 月，Kubernetes 的发布节奏正式从每年 4 个版本改为 3 个版本。这是第一个与该变更相关的长周期版本。随着 Kubernetes 项目的成熟，每个周期的增强数量也在增长。对于贡献者社区和版本工程团队来说，这意味着从一个版本到另一个版本要做更多的工作，这也会给最终用户社区带来压力，要求他们不断更新包含越来越多特性的版本。
将发布周期从每年 4 个版本更改为 3 个版本平衡了项目的许多方面，包括如何管理贡献和发布，以及社区计划升级和保持最新的能力。
你可以在 Kubernetes 官方博客&lt;a href="https://mp.weixin.qq.com/s?__biz=MzI5ODk5ODI4Nw==&amp;amp;mid=2247504376&amp;amp;idx=1&amp;amp;sn=28157c22be9ff28d6af4498fe73b8fdd&amp;amp;scene=21#wechat_redirect">Kubernetes 发布节奏改变：这是你需要知道的&lt;/a>阅读更多信息。&lt;/p>
&lt;h2 id="主题">主题&lt;/h2>
&lt;h3 id="服务器端应用毕业到-ga">服务器端应用毕业到 GA&lt;/h3>
&lt;p>服务器端应用（Server-side Apply）是 Kubernetes API 服务器上运行的一个新的字段所有权和对象合并算法。服务器端应用程序通过声明性配置帮助用户和控制器管理其资源。它允许他们通过声明的方式创建和/或修改他们的对象，只需要发送他们完全指定的意图。经过几个测试版本后，服务器端应用程序现在普遍可用。&lt;/p>
&lt;h3 id="外部凭据提供者现在稳定了">外部凭据提供者现在稳定了&lt;/h3>
&lt;p>对 Kubernetes 客户端证书插件的支持从 1.11 开始就处于测试阶段，随着 Kubernetes 1.22 的发布，现在已经稳定下来了。GA 特性集包括对提供交互式登录流的插件的改进支持，以及一些 bug 修复。有兴趣的插件作者可以看看**sample-exec-plugin[2]**入门。&lt;/p>
&lt;h3 id="etcd-移到-350">etcd 移到 3.5.0&lt;/h3>
&lt;p>Kubernetes 的默认后端存储 etcd 有了新的版本：3.5.0。新版本对安全性、性能、监控和开发人员体验进行了改进。有许多 bug 修复和一些关键的新特性，比如迁移到结构化日志记录和内置日志旋转。该版本附带了一个详细的未来路线图，以实现解决交通超载问题的解决方案。你可以在**3.5.0 发布公告[3]**中阅读完整而详细的更改列表。&lt;/p>
&lt;h3 id="内存资源的服务质量">内存资源的服务质量&lt;/h3>
&lt;p>最初，Kubernetes 使用的是 v1 cgroups API。通过这种设计，Pod 的 QoS 类只应用于 CPU 资源（如 cpu_shares）。作为一个 alpha 特性，Kubernetes v1.22 现在可以使用 cgroups v2 API 来控制内存分配和隔离。此特性旨在在存在内存资源争用时提高工作负载和节点可用性，并提高容器生命周期的可预测性。&lt;/p>
&lt;h3 id="节点系统-swap-支持">节点系统 swap 支持&lt;/h3>
&lt;p>在设置和使用 Kubernetes 时，每个系统管理员或 Kubernetes 用户的处境都是一样的：禁用 swap 空间。随着 Kubernetes 1.22 的发布，alpha 支持可用来运行带有 swap 内存的节点。此更改允许管理员选择在 Linux 节点上配置 swap，将块存储的一部分作为额外的虚拟内存处理。&lt;/p>
&lt;h3 id="windows-增强和功能">Windows 增强和功能&lt;/h3>
&lt;p>为了继续支持不断增长的开发人员社区，SIG Windows 发布了他们的&lt;strong>开发环境[4]&lt;/strong>。这些新工具支持多个 CNI 提供程序，可以在多个平台上运行。还有一种新的方法可以从头开始运行最新的 Windows 特性，即编译 Windows kubelet 和 kube-proxy，然后将它们与其他 Kubernetes 组件的日常构建一起使用。
CSI 对 Windows 节点的支持在 1.22 版本中转移到了 GA。在 Kubernetes v1.22 中，Windows 特权容器是一个 alpha 特性。为了允许在 Windows 节点上使用 CSI 存储，**CSIProxy[5]**支持将 CSI 节点插件部署为非特权 pod，使用代理在节点上执行特权存储操作。&lt;/p>
&lt;h3 id="seccomp-的默认配置文件">seccomp 的默认配置文件&lt;/h3>
&lt;p>kubelet 中增加了默认 seccomp 配置文件的 alpha 特性，以及新的命令行标志和配置。在使用时，这个新特性提供了集群范围的 seccomp 缺省值，默认情况下使用 RuntimeDefault seccomp 配置文件而不是 Unconfined。这增强了 Kubernetes 部署的默认安全性。安全管理员知道工作负载在默认情况下更安全，现在可以睡得更好。要了解更多的特性，请参考官方&lt;strong>seccomp 教程[6]&lt;/strong>。&lt;/p>
&lt;h3 id="使用-kubeadm-更安全的控制平面">使用 kubeadm 更安全的控制平面&lt;/h3>
&lt;p>一个新的 alpha 特性允许以非 root 用户的身份运行 kubeadm 控制平面组件。这是 kubeadm 长期以来要求的安全措施。要尝试它，你必须启用 kubeadm 特定的 RootlessControlPlane 功能门。当你使用这个 alpha 特性部署集群时，你的控制平面以较低的权限运行。
Kubernetes 1.22 还给 kubeadm 带来了新的&lt;strong>v1beta3 配置 API[7]&lt;/strong>。这个迭代添加了一些长期要求的特性，并弃用了一些现有的特性。v1beta3 版本现在是首选的 API 版本；v1beta2 API 仍然可用，尚未被弃用。&lt;/p>
&lt;h2 id="重大变化">重大变化&lt;/h2>
&lt;h3 id="移除几个已弃用的-beta-api">移除几个已弃用的 beta api&lt;/h3>
&lt;p>一些被弃用的 beta API 已经在 1.22 中被移除，以支持这些 API 的 GA 版本。所有现有对象都可以通过稳定的 API 进行交互。该移除包括 Ingress、IngressClass、Lease、APIService、ValidatingWebhookConfiguration、MutatingWebhookConfiguration、CustomResourceDefinition、TokenReview、SubjectAccessReview 和 CertificateSigningRequest API 的 beta 版本。
要了解完整的列表，请查看&lt;strong>已弃用 API 迁移指南[8]&lt;strong>以及博文&lt;/strong>Kubernetes 1.22 版本将删除的 API 和特性：这里是你需要知道的[9]&lt;/strong>。&lt;/p>
&lt;h3 id="临时容器的-api-更改和改进">临时容器的 API 更改和改进&lt;/h3>
&lt;p>用于创建&lt;strong>临时容器[10]&lt;strong>的 API 在 1.22 中有更改。临时容器特性是 alpha 特性，默认情况下是禁用的，并且新 API 不能与试图使用旧 API 的客户端一起工作。
对于稳定特性，kubectl 工具遵循 Kubernetes&lt;/strong>版本倾斜策略[11]&lt;/strong>；然而，kubectl v1.21 及更早版本不支持临时容器的新 API。如果你计划使用 kubectl debug 来创建临时容器，并且你的集群正在运行 Kubernetes v1.22，那么你不能使用 kubectl v1.21 或更早的版本来这样做。请将 kubectl 升级到 1.22，如果你希望将 kubectl 调试与集群版本混合使用。&lt;/p>
&lt;h2 id="其他的更新">其他的更新&lt;/h2>
&lt;h3 id="毕业到稳定">毕业到稳定&lt;/h3>
&lt;ul>
&lt;li>Bound Service Account Token Volumes&lt;/li>
&lt;li>CSI Service Account Token&lt;/li>
&lt;li>Windows Support for CSI Plugins&lt;/li>
&lt;li>Warning mechanism for deprecated API use&lt;/li>
&lt;li>PodDisruptionBudget Eviction&lt;/li>
&lt;/ul>
&lt;h3 id="显著特点更新">显著特点更新&lt;/h3>
&lt;ul>
&lt;li>引入了一个新的 PodSecurity 准入 alpha 特性，旨在替代 PodSecurityPolicy&lt;/li>
&lt;li>内存管理器进入测试版&lt;/li>
&lt;li>启用 API Server Tracing 的新 alpha 特性&lt;/li>
&lt;li>kubeadm 配置格式的一个新的 v1beta3 版本&lt;/li>
&lt;li>用于 PersistentVolumes 的通用数据填充器现在在 alpha 版本中可用&lt;/li>
&lt;li>Kubernetes 控制平面现在将始终使用 CronJobs v2 控制器&lt;/li>
&lt;li>作为 alpha 特性，所有 Kubernetes 节点组件（包括 kubelet、kube-proxy 和容器运行时）都可以作为非 root 用户运行&lt;/li>
&lt;/ul>
&lt;h2 id="版本说明">版本说明&lt;/h2>
&lt;p>你可以在**版本说明[12]**中查看 1.22 发布的完整细节。&lt;/p>
&lt;h2 id="下载">下载&lt;/h2>
&lt;p>Kubernetes 1.22 可供&lt;strong>下载[13]&lt;/strong>，也可以在&lt;strong>GitHub[14]&lt;strong>项目中获得。
有一些很好的资源可以帮助你开始使用 Kubernetes。你可以在 Kubernetes 主站点上查看一些&lt;/strong>交互式教程[15]&lt;/strong>，或者通过**kind[16]&lt;strong>使用 Docker 容器在你的机器上运行一个本地集群。如果你想尝试从头开始构建集群，请参阅 Kelsey Hightower 编写的&lt;/strong>Kubernetes the Hard Way[17]**教程。&lt;/p>
&lt;h2 id="发布团队">发布团队&lt;/h2>
&lt;p>这个发行版是由一群非常敬业的个人组成的，他们组成了一个团队，交付 Kubernetes 发行版中的技术内容、文档、代码和许多其他组件。
非常感谢发行负责人 Savitha Raghunathan 带领我们度过了一个成功的发行周期，也感谢发行团队中所有人的相互支持，以及为向社区发布 1.22 版本所付出的努力。
我们也想借此机会纪念 Peeyush Gupta，他是我们今年早些时候失去的团队成员。Peeyush 积极参与 SIG ContribEx 和 Kubernetes 发布团队，最近担任 1.22 通信负责人。他的贡献和努力将继续反映在他帮助建立的社区中。已经创建了一个&lt;strong>CNCF 纪念页面[18]&lt;/strong>，社区可以在这里分享想法和记忆。&lt;/p>
&lt;h2 id="版本标志">版本标志&lt;/h2>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/om7q43/1628135795073-ad4f9a51-8a78-4918-9d08-f169af41606d.png" alt="image.png">
在持续的流行病、自然灾害和始终存在的倦怠阴影中，Kubernetes 1.22 版本包括 53 个增强。这是迄今为止最大的版本。这一成就的实现要归功于努力工作、充满激情的发布团队成员以及 Kubernetes 生态系统中令人惊叹的贡献者。版本标志是我们不断达到新的里程碑和创造新的记录的提醒。它是献给所有的发行团队成员，徒步旅行者和天文爱好者的！
该标志由**Boris Zotkin[19]**设计。Boris 是 MathWorks 的 Mac/Linux 管理员。他喜欢生活中简单的事情，喜欢和家人在一起。这个精通技术的人总是准备好迎接挑战，并乐于帮助朋友！&lt;/p>
&lt;h2 id="用户亮点">用户亮点&lt;/h2>
&lt;ul>
&lt;li>今年 5 月，CNCF 在全球欢迎了 27 个新组织，成为多样的云原生生态系统的成员。这些新成员将参加 CNCF 的活动，包括即将于 2021 年 10 月 12 日至 15 日在洛杉矶举行的北美 KubeCon + CloudNativeCon。&lt;/li>
&lt;li>CNCF 在 2021 年欧洲 KubeCon + CloudNativeCon 虚拟大会上授予 Spotify 最高最终用户奖。&lt;/li>
&lt;/ul>
&lt;h2 id="项目速度">项目速度&lt;/h2>
&lt;p>**CNCF K8s DevStats 项目[20]**聚集了许多与 Kubernetes 的开发速度和各种子项目相关的有趣数据点。这包括从个人贡献到贡献的公司数量的所有内容，并说明了这个生态系统的发展所付出的努力的深度和广度。
在运行了 15 周（4 月 26 日至 8 月 4 日）的 v1.22 发布周期中，我们看到了来自 1063 家公司和 2054 个人的贡献。&lt;/p>
&lt;h2 id="生态系统更新">生态系统更新&lt;/h2>
&lt;ul>
&lt;li>**2021 年欧洲 KubeCon + CloudNativeCon 虚拟大会[21]&lt;strong>已于 5 月举行，这是第三次虚拟活动。所有的讲座现在都可以&lt;/strong>按需提供[22]**给任何想赶上进度的人！&lt;/li>
&lt;li>&lt;a href="https://mp.weixin.qq.com/s?__biz=MzI5ODk5ODI4Nw==&amp;amp;mid=2247504107&amp;amp;idx=2&amp;amp;sn=4789ee5a0d156af0fefc4165f4434435&amp;amp;scene=21#wechat_redirect">春季 LFX 项目&lt;/a>拥有最大的毕业班，有 28 名成功的 CNCF 实习生！&lt;/li>
&lt;li>CNCF 在今年年初在 Twitch 上推出了直播，目标是为任何想要在云原生社区学习、成长和与他人合作的人提供明确的互动媒体体验。&lt;/li>
&lt;/ul>
&lt;h2 id="活动更新">活动更新&lt;/h2>
&lt;ul>
&lt;li>**2021 年北美 KubeCon + CloudNativeCon 大会[23]**将于 2021 年 10 月 12 日至 15 日在洛杉矶举行！你可以在活动网站上找到关于会议和注册的更多信息。&lt;/li>
&lt;li>**Kubernetes 社区日[24]**即将在意大利、英国和华盛顿特区举行活动。&lt;/li>
&lt;/ul>
&lt;h2 id="122-版本网络研讨会">1.22 版本网络研讨会&lt;/h2>
&lt;p>请于 2021 年 9 月 7 日加入 Kubernetes 1.22 发布团队，了解该版本的主要特性，以及弃用和删除，以帮助制定升级计划。更多信息和注册请访问 CNCF 在线项目网站的&lt;strong>活动页面[25]&lt;/strong>。&lt;/p>
&lt;h2 id="加入参与">加入参与&lt;/h2>
&lt;p>如果你有兴趣为 Kubernetes 社区做出贡献，那么特殊兴趣小组（SIG）是一个很好的起点。他们中的许多人可能与你的兴趣一致！如果你有什么想与社区分享的东西，你可以参加每周社区会议，或使用以下任何渠道：&lt;/p>
&lt;ul>
&lt;li>在**Kubernetes Contributor[26]**网站了解更多关于为 Kubernetes 做贡献的信息。&lt;/li>
&lt;li>关注我们的推特[]@Kubernetesio](https://twitter.com/kubernetesio &amp;ldquo;]@Kubernetesio&amp;rdquo;)获取最新消息&lt;/li>
&lt;li>加入**Discuss[27]**社区的讨论&lt;/li>
&lt;li>加入**Slack[28]**社区&lt;/li>
&lt;li>分享你的 Kubernetes&lt;strong>故事[29]&lt;/strong>&lt;/li>
&lt;li>在**博客[30]**上阅读更多关于 Kubernetes 的情况&lt;/li>
&lt;li>了解更多关于**Kubernetes 发布团队[31]**的信息&lt;/li>
&lt;/ul>
&lt;h3 id="参考资料">参考资料&lt;/h3>
&lt;p>[1][2][3][4][5][6][7][8][9][10][11][12][13][14][15][16][17][18][19][20][21][22][23][24][25][26][27][28][29][30][31]
Kubernetes 1.22 发布团队: &lt;em>&lt;a href="https://github.com/kubernetes/sig-release/blob/master/releases/release-1.22/release-team.md">https://github.com/kubernetes/sig-release/blob/master/releases/release-1.22/release-team.md&lt;/a>&lt;/em>
sample-exec-plugin: &lt;em>&lt;a href="https://github.com/ankeesler/sample-exec-plugin">https://github.com/ankeesler/sample-exec-plugin&lt;/a>&lt;/em>
3.5.0 发布公告: &lt;em>&lt;a href="https://etcd.io/blog/2021/announcing-etcd-3.5/">https://etcd.io/blog/2021/announcing-etcd-3.5/&lt;/a>&lt;/em>
开发环境: &lt;em>&lt;a href="https://github.com/kubernetes-sigs/sig-windows-dev-tools/">https://github.com/kubernetes-sigs/sig-windows-dev-tools/&lt;/a>&lt;/em>
CSIProxy: &lt;em>&lt;a href="https://github.com/kubernetes-csi/csi-proxy">https://github.com/kubernetes-csi/csi-proxy&lt;/a>&lt;/em>
seccomp 教程: &lt;em>&lt;a href="https://kubernetes.io/docs/tutorials/clusters/seccomp/#enable-the-use-of-runtimedefault-as-the-default-seccomp-profile-for-all-workloads">https://kubernetes.io/docs/tutorials/clusters/seccomp/#enable-the-use-of-runtimedefault-as-the-default-seccomp-profile-for-all-workloads&lt;/a>&lt;/em>
v1beta3 配置 API: &lt;em>&lt;a href="https://kubernetes.io/docs/reference/config-api/kubeadm-config.v1beta3/">https://kubernetes.io/docs/reference/config-api/kubeadm-config.v1beta3/&lt;/a>&lt;/em>
已弃用 API 迁移指南: &lt;em>&lt;a href="https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22">https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22&lt;/a>&lt;/em>
Kubernetes 1.22 版本将删除的 API 和特性：这里是你需要知道的: &lt;em>&lt;a href="https://blog.k8s.io/2021/07/14/upcoming-changes-in-kubernetes-1-22/">https://blog.k8s.io/2021/07/14/upcoming-changes-in-kubernetes-1-22/&lt;/a>&lt;/em>
临时容器: &lt;em>&lt;a href="https://kubernetes.io/docs/concepts/workloads/pods/ephemeral-containers/">https://kubernetes.io/docs/concepts/workloads/pods/ephemeral-containers/&lt;/a>&lt;/em>
版本倾斜策略: &lt;em>&lt;a href="https://kubernetes.io/releases/version-skew-policy/">https://kubernetes.io/releases/version-skew-policy/&lt;/a>&lt;/em>
版本说明: &lt;em>&lt;a href="https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG/CHANGELOG-1.22.md">https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG/CHANGELOG-1.22.md&lt;/a>&lt;/em>
下载: &lt;em>&lt;a href="https://kubernetes.io/releases/download/">https://kubernetes.io/releases/download/&lt;/a>&lt;/em>
GitHub: &lt;em>&lt;a href="https://github.com/kubernetes/kubernetes/releases/tag/v1.22.0">https://github.com/kubernetes/kubernetes/releases/tag/v1.22.0&lt;/a>&lt;/em>
交互式教程: &lt;em>&lt;a href="https://kubernetes.io/docs/tutorials/">https://kubernetes.io/docs/tutorials/&lt;/a>&lt;/em>
kind: &lt;em>&lt;a href="https://kind.sigs.k8s.io/">https://kind.sigs.k8s.io/&lt;/a>&lt;/em>
Kubernetes the Hard Way: &lt;em>&lt;a href="https://github.com/kelseyhightower/kubernetes-the-hard-way">https://github.com/kelseyhightower/kubernetes-the-hard-way&lt;/a>&lt;/em>
CNCF 纪念页面: &lt;em>&lt;a href="https://github.com/cncf/memorials/blob/main/peeyush-gupta.md">https://github.com/cncf/memorials/blob/main/peeyush-gupta.md&lt;/a>&lt;/em>
Boris Zotkin: &lt;em>&lt;a href="https://www.instagram.com/boris.z.man/">https://www.instagram.com/boris.z.man/&lt;/a>&lt;/em>
CNCF K8s DevStats 项目: &lt;em>&lt;a href="https://k8s.devstats.cncf.io/">https://k8s.devstats.cncf.io/&lt;/a>&lt;/em>
2021 年欧洲 KubeCon + CloudNativeCon 虚拟大会: &lt;em>&lt;a href="https://events.linuxfoundation.org/kubecon-cloudnativecon-europe/">https://events.linuxfoundation.org/kubecon-cloudnativecon-europe/&lt;/a>&lt;/em>
按需提供: &lt;em>&lt;a href="https://www.youtube.com/playlist?list=PLj6h78yzYM2MqBm19mRz9SYLsw4kfQBrC">https://www.youtube.com/playlist?list=PLj6h78yzYM2MqBm19mRz9SYLsw4kfQBrC&lt;/a>&lt;/em>
2021 年北美 KubeCon + CloudNativeCon 大会: &lt;em>&lt;a href="https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/">https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/&lt;/a>&lt;/em>
Kubernetes 社区日: &lt;em>&lt;a href="https://community.cncf.io/kubernetes-community-days/about-kcd/">https://community.cncf.io/kubernetes-community-days/about-kcd/&lt;/a>&lt;/em>
活动页面: &lt;em>&lt;a href="https://community.cncf.io/events/details/cncf-cncf-online-programs-presents-cncf-live-webinar-kubernetes-122-release/">https://community.cncf.io/events/details/cncf-cncf-online-programs-presents-cncf-live-webinar-kubernetes-122-release/&lt;/a>&lt;/em>
Kubernetes Contributor: &lt;em>&lt;a href="https://www.kubernetes.dev/">https://www.kubernetes.dev/&lt;/a>&lt;/em>
Discuss: &lt;em>&lt;a href="https://discuss.kubernetes.io/">https://discuss.kubernetes.io/&lt;/a>&lt;/em>
Slack: &lt;em>&lt;a href="http://slack.k8s.io/">http://slack.k8s.io/&lt;/a>&lt;/em>
故事: &lt;em>&lt;a href="https://docs.google.com/a/linuxfoundation.org/forms/d/e/1FAIpQLScuI7Ye3VQHQTwBASrgkjQDSS5TP0g3AXfFhwSM9YpHgxRKFA/viewform">https://docs.google.com/a/linuxfoundation.org/forms/d/e/1FAIpQLScuI7Ye3VQHQTwBASrgkjQDSS5TP0g3AXfFhwSM9YpHgxRKFA/viewform&lt;/a>&lt;/em>
博客: &lt;em>&lt;a href="https://kubernetes.io/blog/">https://kubernetes.io/blog/&lt;/a>&lt;/em>
Kubernetes 发布团队: &lt;em>&lt;a href="https://github.com/kubernetes/sig-release/tree/master/release-team">https://github.com/kubernetes/sig-release/tree/master/release-team&lt;/a>&lt;/em>&lt;/p></description></item><item><title>Docs: Kubernetes 1.22版本将删除的API和特性</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.Kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/Kubernetes-%E7%AE%A1%E7%90%86/%E9%87%8D%E5%A4%A7%E5%8F%98%E5%8C%96/Kubernetes-1.22-%E7%89%88%E6%9C%AC%E5%8F%91%E5%B8%832021%E5%B9%B48%E6%9C%885%E6%97%A5/Kubernetes-1.22%E7%89%88%E6%9C%AC%E5%B0%86%E5%88%A0%E9%99%A4%E7%9A%84API%E5%92%8C%E7%89%B9%E6%80%A7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/2.3.Kubernetes-%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E7%B3%BB%E7%BB%9F/Kubernetes-%E7%AE%A1%E7%90%86/%E9%87%8D%E5%A4%A7%E5%8F%98%E5%8C%96/Kubernetes-1.22-%E7%89%88%E6%9C%AC%E5%8F%91%E5%B8%832021%E5%B9%B48%E6%9C%885%E6%97%A5/Kubernetes-1.22%E7%89%88%E6%9C%AC%E5%B0%86%E5%88%A0%E9%99%A4%E7%9A%84API%E5%92%8C%E7%89%B9%E6%80%A7/</guid><description>
&lt;p>&lt;a href="https://mp.weixin.qq.com/s/PTPTmR6Dprqsyd6E-hBvlw">https://mp.weixin.qq.com/s/PTPTmR6Dprqsyd6E-hBvlw&lt;/a>
&lt;a href="https://kubernetes.io/blog/2021/07/14/upcoming-changes-in-kubernetes-1-22/">https://kubernetes.io/blog/2021/07/14/upcoming-changes-in-kubernetes-1-22/&lt;/a>&lt;/p>
&lt;p>作者：Krishna Kilari（AWS），Tim Bannister（The Scale Factory）
随着 Kubernetes API 的发展，API 会周期性地重新组织或升级。当 API 演进时，它们所取代的旧 API 将被弃用，并最终被移除。请参阅**Kubernetes API removals[1]**阅读更多关于 Kubernetes 移除 API 的政策。
我们想确保你知道一些即将的删除。这些是测试版（beta）的 API，你可以在当前受支持的 Kubernetes 版本中使用，它们已经被弃用了。所有这些删除的原因是它们已经被一个更新的、稳定的（“GA”）API 所取代。
Kubernetes 1.22 将于 2021 年 8 月发布，它将移除一些已经弃用的 API。**Kubernetes 1.22 发布信息[2]**详细介绍了 v1.22 的发布时间表。&lt;/p>
&lt;h2 id="kubernetes-v122-移除的-api">Kubernetes v1.22 移除的 API&lt;/h2>
&lt;p>v1.22 版本将停止提供下面列出的 API 版本。这些都是 beta 版本的 API，之前为了支持更新和更稳定的 API 版本而被弃用。&lt;/p>
&lt;ul>
&lt;li>Beta versions of the ValidatingWebhookConfiguration and MutatingWebhookConfiguration API (the admissionregistration.k8s.io/v1beta1 API versions)&lt;/li>
&lt;li>The beta CustomResourceDefinition API (apiextensions.k8s.io/v1beta1)&lt;/li>
&lt;li>The beta APIService API (apiregistration.k8s.io/v1beta1)&lt;/li>
&lt;li>The beta TokenReview API (authentication.k8s.io/v1beta1)&lt;/li>
&lt;li>Beta API versions of SubjectAccessReview, LocalSubjectAccessReview, SelfSubjectAccessReview (API versions from authorization.k8s.io/v1beta1)&lt;/li>
&lt;li>The beta CertificateSigningRequest API (certificates.k8s.io/v1beta1)&lt;/li>
&lt;li>The beta Lease API (coordination.k8s.io/v1beta1)&lt;/li>
&lt;li>All beta Ingress APIs (the extensions/v1beta1 and networking.k8s.io/v1beta1 API versions)&lt;/li>
&lt;/ul>
&lt;p>Kubernetes 文档涵盖了这些&lt;strong>1.22 版本中删除的 API[3]&lt;/strong>，并解释了这些 API 在 beta 和稳定版本之间是如何变化的。&lt;/p>
&lt;h2 id="要做什么">要做什么&lt;/h2>
&lt;p>我们将浏览每一种受这些删除影响的资源，并解释你需要采取的步骤。&lt;/p>
&lt;h3 id="ingress">Ingress&lt;/h3>
&lt;p>迁移至使用 networking.k8s.io/v1 Ingress API，从 v1.19 开始可用。相关的 API IngressClass 是为了补充 Ingress 概念而设计的，允许你在一个集群中配置多种 Ingress。如果你目前正在使用已弃用的 kubernetes.io/ingress.class 注释，请计划改用.spec.ingressClassName 字段。
在任何运行 Kubernetes v1.19 或更高版本的集群上，你都可以使用 v1 API 来检索或更新现有的 Ingress 对象，即使它们是使用较旧的 API 版本创建的。
当你将一个 Ingress 转换为 v1 API 时，你应该检查该 Ingress 中的每个规则。较老版本的 Ingress 使用遗留的 ImplementationSpecific 路径类型。切换路径匹配 Prefix 或 Exact，而不是 ImplementationSpecific。迁移到这些替代路径类型的好处之一是，在不同的 Ingress 类之间迁移变得更加容易。
除了作为客户端升级自己对 Ingress API 的使用之外，还要确保你使用的每个 Ingress 控制器都与 v1 Ingress API 兼容。阅读**Ingress 先决条件[4]**了解更多关于 Ingress 和 Ingress 控制器的上下文。&lt;/p>
&lt;h4 id="更新-nginx-ingress-以使用稳定的-ingress-api">更新 NGINX-Ingress 以使用稳定的 Ingress API&lt;/h4>
&lt;p>&lt;a href="https://mp.weixin.qq.com/s/hVTWlfrqmjZRrb0KTsDrZA">https://mp.weixin.qq.com/s/hVTWlfrqmjZRrb0KTsDrZA&lt;/a>
作者：James Strong、Ricardo Katz
对于所有 Kubernetes API，都有一个创建、维护和最终弃用它们的过程。networking.k8s.io API 组没有不同。即将发布的 Kubernetes 1.22 版本将删除几个与网络相关的弃用 API：&lt;/p>
&lt;ul>
&lt;li>**IngressClass[1]**的 networking.k8s.io/v1beta1 API 版本&lt;/li>
&lt;li>**Ingress[2]**的所有测试版本：extensions/v1beta1 和 networking.k8s.io/v1beta1&lt;/li>
&lt;/ul>
&lt;p>在 v1.22 Kubernetes 集群中，你可以通过稳定的（v1）API 访问 Ingress 和 IngressClass 对象，但无法通过 beta API 访问它们。自&lt;strong>2017 年[3]&lt;/strong>、**2019 年[4]**1.16 Kubernetes API 弃用以来，以及最近的是 KEP-1453：&lt;strong>从 Ingress API 毕业到 GA[5]&lt;/strong>，一直在讨论中这种变化。
在社区会议上，SIG Network 决定使用 Ingress-NGINX 版本 0.47.0，继续支持 Kubernetes 1.22 之前的版本。Kubernetes 1.22 发布后，对 Ingress-NGINX 的支持将持续 6 个月。对于 Ingress-NGINX 的任何额外的 bug 修复和 CVE 都将根据需要进行处理。
Ingress-NGINX 将有独立的分支和 Ingress-NGINX 版本来支持这个模型，这反映了 Kubernetes 项目过程。Ingress-NGINX 项目的未来版本将跟踪并支持 Kubernetes 的最新版本。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Kubernetes version&lt;/th>
&lt;th>Ingress-NGINX version&lt;/th>
&lt;th>Notes&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>v1.22&lt;/td>
&lt;td>v1.0.0-alpha.2&lt;/td>
&lt;td>New features, plus bug fixes.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>v1.21&lt;/td>
&lt;td>v0.47.x&lt;/td>
&lt;td>Bugfixes only, and just for security issues or crashes. No end-of-support date announced.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>v1.20&lt;/td>
&lt;td>v0.47.x&lt;/td>
&lt;td>Bugfixes only, and just for security issues or crashes. No end-of-support date announced.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>v1.19&lt;/td>
&lt;td>v0.47.x&lt;/td>
&lt;td>Bugfixes only, and just for security issues or crashes. Fixes only provided until 6 months after Kubernetes v1.22.0 is released.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>由于 Kubernetes 1.22 中的更新，v0.47.0 将不能与 Kubernetes 1.22 一起工作。&lt;/p>
&lt;h4 id="你需要做什么">你需要做什么&lt;/h4>
&lt;p>团队目前正在升级 ingress-nginx 以支持 v1 迁移，你可以在这里&lt;strong>跟踪进度[6]&lt;/strong>。
在完成对 Ingress v1 的支持之前，我们不会对 ingress-nginx 进行特性改进。
同时，确保没有兼容性问题：&lt;/p>
&lt;ul>
&lt;li>更新到最新版本的 Ingress-NGINX；目前是&lt;strong>v0.47.0[7]&lt;/strong>&lt;/li>
&lt;li>Kubernetes 1.22 发布后，确保你使用的是最新版本的 Ingress-NGINX，支持 Ingress 和 IngressClass 的稳定 API。&lt;/li>
&lt;li>在集群版本&amp;gt;=1.19 的环境测试 Ingress-NGINX 版本 v1.0.0-alpha.2，并报告任何问题到项目 Github 页面。&lt;/li>
&lt;/ul>
&lt;p>欢迎社区对这项工作的反馈和支持。Ingress-NGINX 子项目定期举行社区会议，讨论这个项目面临的问题和其他问题。有关子项目的更多信息，请参阅&lt;strong>SIG Network[8]&lt;/strong>。&lt;/p>
&lt;h3 id="参考资料">参考资料&lt;/h3>
&lt;p>[1][2][3][4][5][6][7][8]
IngressClass: &lt;em>&lt;a href="https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-class">https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-class&lt;/a>&lt;/em>
Ingress: &lt;em>&lt;a href="https://kubernetes.io/docs/concepts/services-networking/ingress/">https://kubernetes.io/docs/concepts/services-networking/ingress/&lt;/a>&lt;/em>
2017 年: &lt;em>&lt;a href="https://github.com/kubernetes/kubernetes/issues/43214">https://github.com/kubernetes/kubernetes/issues/43214&lt;/a>&lt;/em>
2019 年: &lt;em>&lt;a href="https://kubernetes.io/blog/2019/07/18/api-deprecations-in-1-16/">https://kubernetes.io/blog/2019/07/18/api-deprecations-in-1-16/&lt;/a>&lt;/em>
从 Ingress API 毕业到 GA: &lt;em>&lt;a href="https://github.com/kubernetes/enhancements/tree/master/keps/sig-network/1453-ingress-api#122">https://github.com/kubernetes/enhancements/tree/master/keps/sig-network/1453-ingress-api#122&lt;/a>&lt;/em>
跟踪进度: &lt;em>&lt;a href="https://github.com/kubernetes/ingress-nginx/pull/7156">https://github.com/kubernetes/ingress-nginx/pull/7156&lt;/a>&lt;/em>
v0.47.0: &lt;em>&lt;a href="https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v0.47.0">https://github.com/kubernetes/ingress-nginx/releases/tag/controller-v0.47.0&lt;/a>&lt;/em>
SIG Network: &lt;em>&lt;a href="https://github.com/kubernetes/community/tree/master/sig-network">https://github.com/kubernetes/community/tree/master/sig-network&lt;/a>&lt;/em>&lt;/p>
&lt;h3 id="validatingwebhookconfiguration-和-mutatingwebhookconfiguration">ValidatingWebhookConfiguration 和 MutatingWebhookConfiguration&lt;/h3>
&lt;p>迁移以使用 admissionregistration.k8s.io/v1 API 的 ValidatingWebhookConfiguration 和 MutatingWebhookConfiguration，从 v1.16 开始提供。你可以使用 v1 API 来检索或更新现有对象，即使它们是使用较旧的 API 版本创建的。&lt;/p>
&lt;h3 id="customresourcedefinition">CustomResourceDefinition&lt;/h3>
&lt;p>迁移以使用 CustomResourceDefinition apiextensions.k8s.io/v1 API，从 v1.16 开始可用。你可以使用 v1 API 来检索或更新现有对象，即使它们是使用较旧的 API 版本创建的。如果你在集群中定义了任何自定义资源，那么在升级之后这些资源仍然会被使用。
如果你正在使用外部 CustomResourceDefinitions，则可以使用 kubectl convert 将现有清单转换为使用较新的 API。因为在 beta 版和稳定版 CustomResourceDefinitions 之间存在一些功能差异，所以我们的建议是对每一个进行测试，以确保它在升级后按照你期望的方式工作。&lt;/p>
&lt;h3 id="apiservice">APIService&lt;/h3>
&lt;p>迁移到使用 apiregistration.k8s.io/v1 APIService API，从 v1.10 开始可用。你可以使用 v1 API 来检索或更新现有对象，即使它们是使用较旧的 API 版本创建的。如果你已经有了使用 APIService 对象的 API 聚合，那么这个聚合在升级之后将继续工作。&lt;/p>
&lt;h3 id="tokenreview">TokenReview&lt;/h3>
&lt;p>迁移以使用 authentication.k8s.io/v1 TokenReview API，从 v1.10 开始可用。除了通过 HTTP 提供这个 API 之外，Kubernetes API 服务器也使用相同的格式将 TokenReviews 发送到 webhook。v1.22 版本继续使用 v1beta1 API 发送 TokenReviews 给 webhook。关于切换到稳定 API 的一些具体技巧，请参阅展望未来。&lt;/p>
&lt;h3 id="subjectaccessreviewselfsubjectaccessreview-和-localsubjectaccessreview">SubjectAccessReview、SelfSubjectAccessReview 和 LocalSubjectAccessReview&lt;/h3>
&lt;p>迁移以使用 authorization.k8s.io/v1 版本的 API，从 v1.6 开始提供。&lt;/p>
&lt;h3 id="certificatesigningrequest">CertificateSigningRequest&lt;/h3>
&lt;p>迁移到使用 certificates.k8s.io/v1 CertificateSigningRequest API，从 v1.19 开始可用。你可以使用 v1 API 来检索或更新现有对象，即使它们是使用较旧的 API 版本创建的。现有颁发的证书在升级时保留其有效性。&lt;/p>
&lt;h3 id="lease">Lease&lt;/h3>
&lt;p>迁移以使用 coordination.k8s.io/v1 Lease API，从 v1.14 开始可用。你可以使用 v1 API 来检索或更新现有对象，即使它们是使用较旧的 API 版本创建的。&lt;/p>
&lt;h3 id="kubectl-convert">kubectl convert&lt;/h3>
&lt;p>kubectl 有一个插件，提供 kubectl convert 子命令。这是一个官方插件，你可以下载作为 Kubernetes 的一部分。有关更多细节，请参阅&lt;strong>Download Kubernetes[5]&lt;/strong>。
你可以使用 kubectl convert 来更新清单文件，以使用不同的 API 版本。例如，如果你在源代码控制中有一个使用 beta Ingress API 的清单，你可以 check out 这个定义，并运行 kubectl convert -f&amp;ndash;output-version/。你可以使用 kubectl convert 命令自动转换现有清单。
例如，将旧的 Ingress 定义转换为 networking.k8s.io/v1，可以运行：
kubectl convert -f ./legacy-ingress.yaml &amp;ndash;output-version networking.k8s.io/v1
自动转换使用了一种类似于 Kubernetes 控制平面更新对象的技术，这些对象最初是使用旧 API 版本创建的。因为这是一个机械转换，你可能需要进去改变清单来调整默认值等等。&lt;/p>
&lt;h3 id="为升级进行排练">为升级进行排练&lt;/h3>
&lt;p>如果你管理集群的 API 服务器组件，那么你可以在升级到 Kubernetes v1.22 之前尝试删除这些 API。
为此，将以下内容添加到 kube-apiserver 命令行参数中：
&amp;ndash;runtime-config=admissionregistration.k8s.io/v1beta1=false,apiextensions.k8s.io/v1beta1=false,apiregistration.k8s.io/v1beta1=false,authentication.k8s.io/v1beta1=false,authorization.k9s.io/v1=false,certificates.k8s.io/v1beta=false,coordination.k8s.io/v1beta1=false,extensions/v1beta1/ingresses=false,networking.k8s.io/v1beta1=false
（作为一个副作用，这也关闭了 EndpointSlice 的 v1beta1——在测试时要注意。）
一旦你将集群中的所有 kube-apiserver 切换为使用该设置，这些 beta API 就会被删除。你可以测试 API 客户端（kubectl，部署工具，自定义控制器等）是否仍然按照你期望的方式工作，如果你需要，你可以恢复，而不必计划一个更具破坏性的降级。&lt;/p>
&lt;h3 id="给软件作者的建议">给软件作者的建议&lt;/h3>
&lt;p>也许你读这篇文章是因为你是一个插件或其他集成 Kubernetes 组件的开发者？
如果你开发了 Ingress 控制器，webhook 验证器，API 聚合，或任何其他依赖于这些废弃 API 的工具，你应该已经开始转换你的软件了。
你可以使用预演中的升级技巧来运行你自己的只使用新 API 的 Kubernetes 集群，并确保你的代码工作正常。对于你的文档，请确保读者了解 Kubernetes v1.22 升级应该采取的任何步骤。
在可能的情况下，尽早帮助你的用户采用新的 API——也许是在测试环境中——这样他们就可以就任何问题向你提供反馈。
在 Kubernetes v1.25 中还会有更多的弃用之处，所以也计划将其囊括在内。&lt;/p>
&lt;h2 id="kubernetes-api-的移除">Kubernetes API 的移除&lt;/h2>
&lt;p>以下是 Kubernetes 为什么删除一些 API 的背景信息，以及 Kubernetes 对稳定 API 的承诺。
Kubernetes 对其特性遵循一个已定义的&lt;strong>弃用策略[6]&lt;/strong>，包括 Kubernetes API。该策略允许替换 Kubernetes 的稳定（“GA”）API。重要的是，这个策略意味着只有当一个稳定的 API 有新的稳定版本可用时，才会弃用该 API。
这种稳定性保证很重要：如果你使用的是稳定的 Kubernetes API，就不会有新版本的发布迫使你切换到 alpha 或 beta 特性。
早期阶段是不同的。Alpha 特性还在测试中，可能不完整。alpha 特性在默认情况下几乎总是禁用的。Kubernetes 发布的版本可以并且确实删除了 alpha 版本中那些没有发挥作用的特性。
alpha 后面是 beta。这些特性通常是默认启用的；如果测试成功，该特性可以逐步趋于稳定。如果没有，可能需要重新设计。
去年，Kubernetes 正式对已经进入测试阶段的 API**采取[7]**了一项政策：
对于 Kubernetes REST API 来说，当一个新特性的 API 达到测试版时，就开始倒计时了。beta 质量的 API 现在有三个版本：&lt;/p>
&lt;ul>
&lt;li>到达 GA，弃用测试版，或者&lt;/li>
&lt;li>拥有一个新的测试版（并弃用之前的测试版）。&lt;/li>
&lt;/ul>
&lt;p>&lt;em>在写那篇文章的时候，Kubernetes 发布三次大约相当于 9 个日历月。同月晚些时候，Kubernetes 采用了新的发布节奏，即每日历年发布 3 个版本，所以现在的倒计时时间大约是 12 个日历月。&lt;/em>
不管 API 的删除是因为测试版特性已经趋于稳定，还是因为该 API 没有被证明是成功的，Kubernetes 将继续通过遵循其弃用策略并确保迁移选项被记录下来来删除 API。&lt;/p>
&lt;h3 id="展望未来">展望未来&lt;/h3>
&lt;p>如果你使用 webhook 认证检查，有一个相关的设置。将来的 Kubernetes 版本将使用默认将 TokenReview 对象发送到 authentication.k8s.io/v1 API。目前，默认是发送 authentication.k8s.io/v1beta1 TokenReviews 到 webhooks，这仍然是 Kubernetes v1.22 版本的默认方式。不过，如果你想，现在可以切换到稳定的 API：在 kube-apiserver 的命令行选项中添加&amp;ndash;authentication-token-webhook-version=v1，并检查用于身份验证的 webhook 是否仍按你期望的方式工作。
一旦你满意了，你就可以在控制平面上设置&amp;ndash;authentication-token-webhook-version=v1 选项。
计划于明年发布的 v1.25 版本将停止提供几个 Kubernetes API 的 beta 版本，这些 API 目前已经稳定了一段时间。相同的 v1.25 版本将删除 PodSecurityPolicy，它已被弃用，不会升级到稳定状态。有关更多信息，请参阅&lt;strong>PodSecurityPolicy Deprecation: Past, Present, and Future[8]&lt;/strong>。
Kubernetes **1.25 计划移除的 API[9]**的官方列表如下：&lt;/p>
&lt;ul>
&lt;li>The beta CronJob API (batch/v1beta1)&lt;/li>
&lt;li>The beta EndpointSlice API (networking.k8s.io/v1beta1)&lt;/li>
&lt;li>The beta PodDisruptionBudget API (policy/v1beta1)&lt;/li>
&lt;li>The beta PodSecurityPolicy API (policy/v1beta1)&lt;/li>
&lt;/ul>
&lt;h2 id="想了解更多吗">想了解更多吗？&lt;/h2>
&lt;p>Kubernetes 发布说明中宣布了弃用的内容。你可以在&lt;strong>1.19[10]&lt;/strong>、**1.20[11]&lt;strong>和&lt;/strong>1.21[12]&lt;strong>的发布说明中看到弃用声明。
有关弃用和移除过程的信息，请查看 Kubernetes 官方&lt;/strong>弃用策略[13]**文档。&lt;/p>
&lt;h3 id="参考资料-1">参考资料&lt;/h3>
&lt;p>[1][2][3][4][5][6][7][8][9][10][11][12][13]
Kubernetes API removals: &lt;em>&lt;a href="https://kubernetes.io/blog/2021/07/14/upcoming-changes-in-kubernetes-1-22/#kubernetes-api-removals">https://kubernetes.io/blog/2021/07/14/upcoming-changes-in-kubernetes-1-22/#kubernetes-api-removals&lt;/a>&lt;/em>
Kubernetes 1.22 发布信息: &lt;em>&lt;a href="https://www.kubernetes.dev/resources/release/">https://www.kubernetes.dev/resources/release/&lt;/a>&lt;/em>
1.22 版本中删除的 API: &lt;em>这些&lt;/em>
Ingress 先决条件: &lt;em>&lt;a href="https://kubernetes.io/docs/concepts/services-networking/ingress/#prerequisites">https://kubernetes.io/docs/concepts/services-networking/ingress/#prerequisites&lt;/a>&lt;/em>
Download Kubernetes: &lt;em>&lt;a href="https://kubernetes.io/releases/download/">https://kubernetes.io/releases/download/&lt;/a>&lt;/em>
弃用策略: &lt;em>&lt;a href="https://kubernetes.io/docs/reference/using-api/deprecation-policy/">https://kubernetes.io/docs/reference/using-api/deprecation-policy/&lt;/a>&lt;/em>
采取: &lt;em>&lt;a href="https://kubernetes.io/blog/2020/08/21/moving-forward-from-beta/#avoiding-permanent-beta">https://kubernetes.io/blog/2020/08/21/moving-forward-from-beta/#avoiding-permanent-beta&lt;/a>&lt;/em>
PodSecurityPolicy Deprecation: Past, Present, and Future: &lt;em>&lt;a href="https://kubernetes.io/blog/2021/04/06/podsecuritypolicy-deprecation-past-present-and-future/">https://kubernetes.io/blog/2021/04/06/podsecuritypolicy-deprecation-past-present-and-future/&lt;/a>&lt;/em>
1.25 计划移除的 API: &lt;em>&lt;a href="https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-25">https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-25&lt;/a>&lt;/em>
1.19: &lt;em>&lt;a href="https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG/CHANGELOG-1.19.md#deprecations">https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG/CHANGELOG-1.19.md#deprecations&lt;/a>&lt;/em>
1.20: &lt;em>&lt;a href="https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG/CHANGELOG-1.20.md#deprecation">https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG/CHANGELOG-1.20.md#deprecation&lt;/a>&lt;/em>
1.21: &lt;em>&lt;a href="https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG/CHANGELOG-1.21.md#deprecation">https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG/CHANGELOG-1.21.md#deprecation&lt;/a>&lt;/em>
弃用策略: &lt;em>&lt;a href="https://kubernetes.io/docs/reference/using-api/deprecation-policy/#deprecating-parts-of-the-api">https://kubernetes.io/docs/reference/using-api/deprecation-policy/#deprecating-parts-of-the-api&lt;/a>&lt;/em>&lt;/p>
&lt;p>点击【阅读原文】阅读网站原文。&lt;/p></description></item></channel></rss>