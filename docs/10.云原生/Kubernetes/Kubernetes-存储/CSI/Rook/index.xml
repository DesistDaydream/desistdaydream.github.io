<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Rook on 断念梦的站点</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/Kubernetes-%E5%AD%98%E5%82%A8/CSI/Rook/</link><description>Recent content in Rook on 断念梦的站点</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/Kubernetes-%E5%AD%98%E5%82%A8/CSI/Rook/index.xml" rel="self" type="application/rss+xml"/><item><title>Rook</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/Kubernetes-%E5%AD%98%E5%82%A8/CSI/Rook/Rook/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/Kubernetes-%E5%AD%98%E5%82%A8/CSI/Rook/Rook/</guid><description>概述 参考：
官方文档：https://rook.github.io/docs/rook/master/ Rook 是一个开源的 cloud-native storage orchestrator(云原生存储协调器), 提供平台和框架；为各种存储解决方案提供平台、框架和支持，以便与云原生环境本地集成。Rook 作为云原生存储的编排系统，可以直接帮助维护人员管理有状态的存储程序。可以说是一个 SAAS，Storage as a service。
Rook 将存储软件转变为自我管理、自我扩展和自我修复的存储服务，它通过自动化部署、引导、配置、置备、扩展、升级、迁移、灾难恢复、监控和资源管理来实现此目的。
Rook 目前支持 Ceph、NFS、Minio Object Store、CockroachDB 等。这些存储的作用其中之一就是为各个业务提供存储空间，以便统一管理。e.g.使用 Rook 创建一个分布式的 ceph 集群，然后作为 k8s 集群的 storageClass，在某 Pod 需要使用卷的时候，可以直接从 ceph 集群中，拿去存储空间来使用。
Rook 使用底层云本机容器管理、调度和编排平台提供的工具来实现它自身的功能。
Rook 使用 Kubernetes 原语使 Ceph 存储系统能够在 Kubernetes 上运行。下图说明了 Ceph Rook 如何与 Kubernetes 集成：
随着 Rook 在 Kubernetes 集群中运行，Kubernetes 应用程序可以挂载由 Rook 管理的块设备和文件系统，或者可以使用 S3 / Swift API 提供对象存储。Rook oprerator 自动配置存储组件并监控群集，以确保存储处于可用和健康状态。
Rook oprerator 是一个简单的容器，具有引导和监视存储集群所需的全部功能。oprerator 将启动并监控 ceph monitor pods 和 OSDs 的守护进程，它提供基本的 RADOS 存储。oprerator 通过初始化运行服务所需的 pod 和其他组件来管理池，对象存储（S3 / Swift）和文件系统的 CRD。</description></item><item><title>Rook+Ceph 部署与清理</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/Kubernetes-%E5%AD%98%E5%82%A8/CSI/Rook/Rook+Ceph-%E9%83%A8%E7%BD%B2%E4%B8%8E%E6%B8%85%E7%90%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/Kubernetes-%E5%AD%98%E5%82%A8/CSI/Rook/Rook+Ceph-%E9%83%A8%E7%BD%B2%E4%B8%8E%E6%B8%85%E7%90%86/</guid><description>Rook+Ceph 部署 官方文档：https://rook.github.io/docs/rook/master/ceph-quickstart.html
部署环境准备 kubernetes 集群准备
在集群中至少有三个节点可用，满足 ceph 高可用要求，这里已配置 master 节点使其支持运行 pod。
rook 使用存储方式
rook 默认使用所有节点的所有资源，rook operator 自动在所有节点上启动 OSD 设备，Rook 会用如下标准监控并发现可用设备：
设备没有分区
设备没有格式化的文件系统
Rook 不会使用不满足以上标准的设备。另外也可以通过修改配置文件，指定哪些节点或者设备会被使用。
添加新磁盘
这里在所有节点添加 1 块 50GB 的新磁盘：/dev/sdb，作为 OSD 盘，提供存储空间，添加完成后扫描磁盘，确保主机能够正常识别到：
#扫描 SCSI 总线并添加 SCSI 设备
for host in $(ls /sys/class/scsi_host) ; do echo &amp;ldquo;- - -&amp;rdquo; &amp;gt; /sys/class/scsi_host/$host/scan; done
#重新扫描 SCSI 总线
for scsi_device in $(ls /sys/class/scsi_device/); do echo 1 &amp;gt; /sys/class/scsi_device/$scsi_device/device/rescan; done
#查看已添加的磁盘，能够看到 sdb 说明添加成功</description></item><item><title>Rook+Ceph 的 osd 管理</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/Kubernetes-%E5%AD%98%E5%82%A8/CSI/Rook/Rook+Ceph-%E7%9A%84-osd-%E7%AE%A1%E7%90%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/Kubernetes-%E5%AD%98%E5%82%A8/CSI/Rook/Rook+Ceph-%E7%9A%84-osd-%E7%AE%A1%E7%90%86/</guid><description>官方文档：https://rook.github.io/docs/rook/master/ceph-osd-mgmt.html</description></item><item><title>Rook+Ceph 现存问题</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/Kubernetes-%E5%AD%98%E5%82%A8/CSI/Rook/Rook+Ceph-%E7%8E%B0%E5%AD%98%E9%97%AE%E9%A2%98/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/Kubernetes-%E5%AD%98%E5%82%A8/CSI/Rook/Rook+Ceph-%E7%8E%B0%E5%AD%98%E9%97%AE%E9%A2%98/</guid><description>k8s 版本：1.18.8
rook-ceph 的问题 使用 pvc 后出现 Failed to list *v1beta1.VolumeSnapshotContent: the server could not find the requested resource (get volumesnapshotcontents.snapshot.storage.k8s.io)
解决方式：暂无
清理 rook-ceph 后出现 Operation for &amp;ldquo;/var/lib/kubelet/plugins/rbd.csi.ceph.com/csi.sock&amp;rdquo; failed.&amp;quot;
问题跟踪：https://github.com/rook/rook/issues/4359
Failed to list *v1.PartialObjectMetadata: the server could not find the requested resource 问题跟踪：https://github.com/kubernetes/kubernetes/issues/79610
CRD 删除后，controller-manager 依然会持续跟踪，并报告错误
解决方式：
暂无</description></item></channel></rss>