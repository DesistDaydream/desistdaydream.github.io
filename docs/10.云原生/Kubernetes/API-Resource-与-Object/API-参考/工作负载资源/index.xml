<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>工作负载资源 on 断念梦的站点</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/API-Resource-%E4%B8%8E-Object/API-%E5%8F%82%E8%80%83/%E5%B7%A5%E4%BD%9C%E8%B4%9F%E8%BD%BD%E8%B5%84%E6%BA%90/</link><description>Recent content in 工作负载资源 on 断念梦的站点</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/API-Resource-%E4%B8%8E-Object/API-%E5%8F%82%E8%80%83/%E5%B7%A5%E4%BD%9C%E8%B4%9F%E8%BD%BD%E8%B5%84%E6%BA%90/index.xml" rel="self" type="application/rss+xml"/><item><title>CronJab Manifests</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/API-Resource-%E4%B8%8E-Object/API-%E5%8F%82%E8%80%83/%E5%B7%A5%E4%BD%9C%E8%B4%9F%E8%BD%BD%E8%B5%84%E6%BA%90/CronJab-Manifests/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/API-Resource-%E4%B8%8E-Object/API-%E5%8F%82%E8%80%83/%E5%B7%A5%E4%BD%9C%E8%B4%9F%E8%BD%BD%E8%B5%84%E6%BA%90/CronJab-Manifests/</guid><description>概述 参考：
官方文档，参考-KubernetesAPI-工作负载资源-CronJob</description></item><item><title>Deployment Manifest</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/API-Resource-%E4%B8%8E-Object/API-%E5%8F%82%E8%80%83/%E5%B7%A5%E4%BD%9C%E8%B4%9F%E8%BD%BD%E8%B5%84%E6%BA%90/Deployment-Manifest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/API-Resource-%E4%B8%8E-Object/API-%E5%8F%82%E8%80%83/%E5%B7%A5%E4%BD%9C%E8%B4%9F%E8%BD%BD%E8%B5%84%E6%BA%90/Deployment-Manifest/</guid><description>概述 参考：
API 文档，单页 官方文档，参考-Kubernetes API-工作负载资源-Deployment Manifest 中的顶层字段 apiVersion: apps/v1 kind: Deployment metadata(metadata) spec:(spec) status(status) metadata Deployment 对象的元数据，该字段内容详见通用定义的 [ObjectMeta](/docs/10.云原生/2.3.Kubernetes%20 容器编排系统/1.API、Resource(资源)、Object(对象)/API%20 参考/Common%20Definitions(通用定义)/ObjectMeta.md Definitions(通用定义)/ObjectMeta.md)
spec spec 用来描述一个 Deployment 应该具有的属性。也就是用来定义 Deployment 的行为规范。一共分为如下几类
描述 Deployment 类型的控制器的行为 描述 Deployment 控制器所关联的 Pod 的属性。 控制器行为 minReadySeconds(INT) # 新创建的 Pod 在启动后，经过 minReadySeconds 秒后一直没有崩溃，之后，将该 Pod 视为可用。默认值：0。
默认值 0 表示 Pod 准备就绪后即被视为可用。 progressDeadlineSeconds(INT) # 本 Deployment 对象被视为失败之前的等待时间，单位 秒。默认值：600
replicas(INT) # 该控制器运行的 Pod 数量，默认值：1。
revisionHistoryLimit(INT)# 可以保留的允许回滚的旧 ReplicaSet 对象的数量。默认值：10。控制器的历史可以通过 kubectl rollout 命令控制</description></item><item><title>Pod Manifest</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/API-Resource-%E4%B8%8E-Object/API-%E5%8F%82%E8%80%83/%E5%B7%A5%E4%BD%9C%E8%B4%9F%E8%BD%BD%E8%B5%84%E6%BA%90/Pod-Manifest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/API-Resource-%E4%B8%8E-Object/API-%E5%8F%82%E8%80%83/%E5%B7%A5%E4%BD%9C%E8%B4%9F%E8%BD%BD%E8%B5%84%E6%BA%90/Pod-Manifest/</guid><description>概述 参考：
API 文档，单页 官方文档，参考 - Kubernetes API - 工作负载资源 - Pod GitHub 项目，kubernetes/api - 1.31 - core/v1/types.go Pod 是可以在主机上运行的容器的集合。此资源由客户端创建并调度到主机上。
Manifest 中的顶层字段 apiVersion: v1 kind: Pod metadata(metadata) spec(spec) status(status) metadata metadata 字段用来描述一个 Pod 的元数据信息。该字段内容详见通用定义的 ObjectMeta
annotations(STRING) # Pod 注释，不同于 label，仅用于为资源提供元数据 labels(map[STRING]STRING) # Pod 的标签，通过“键值对”的方式定义，可以添加多个标签 KEY: VAL # 比如该键值可以是 run: httpd，标签名是 run，run 的值是 httpd，key 与 val 使用字母，数字，_，-，.这几个字符且以字母或数字开头；val 可以为空。 name(STRING) # Pod 对象名称。必须名称空间唯一。 ownerReferences([]Object) # 该对象所依赖的对象列表，一般由控制器自动生成。也可以手动指定。 spec spec 字段用来描述一个 Pod 应该具有的属性。Pod 中的 spec 字段大体分为如下几类</description></item><item><title>Statefulset Manifest</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/API-Resource-%E4%B8%8E-Object/API-%E5%8F%82%E8%80%83/%E5%B7%A5%E4%BD%9C%E8%B4%9F%E8%BD%BD%E8%B5%84%E6%BA%90/Statefulset-Manifest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/API-Resource-%E4%B8%8E-Object/API-%E5%8F%82%E8%80%83/%E5%B7%A5%E4%BD%9C%E8%B4%9F%E8%BD%BD%E8%B5%84%E6%BA%90/Statefulset-Manifest/</guid><description>概述 参考：
API 文档单页 官方文档，参考-KubernetesAPI-工作负载资源-StatefulSet Manifest 中的顶层字段 apiVersion: apps/v1 kind: StatefulSet metadata(metadata) spec(spec) # 指明该 StatefulSet 的规格 status(status) metadata Statefulset 对象的元数据，该字段内容详见通用定义的 [ObjectMeta](/docs/10.云原生/2.3.Kubernetes%20 容器编排系统/1.API、Resource(资源)、Object(对象)/API%20 参考/Common%20Definitions(通用定义).md Definitions(通用定义).md)
spec spec 用来描述一个 Statefulset 应该具有的属性。也就是用来定义 Statefulset 的行为规范。一共分为如下几类
描述 Statefulset 类型的控制器的行为 描述 Statefulset 控制器所关联的 Pod 的属性。 控制器行为 podManagementPolicy(STRING) # Pod 管理策略。默认值：OrderedReady 此配置只影响扩、缩 Pod 的行为，更新 Pod 不受此配置控制。可用的值有以下两个：
OrderedReady # 按照 Pod 的次序依次创建每个 Pod 并等待 Ready 之后才创建后面的 Pod Parallel # 并行创建或删除 Pod（不等待前面的 Pod Ready 就开始创建所有的 Pod） replicas(INT) # 该控制器运行的 Pod 数量，默认值：1。 selector(Object) # 必须的。Pod 的选择器，根据标签匹配要控制的 Pod。必须与 template.</description></item><item><title>工作负载资源</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/API-Resource-%E4%B8%8E-Object/API-%E5%8F%82%E8%80%83/%E5%B7%A5%E4%BD%9C%E8%B4%9F%E8%BD%BD%E8%B5%84%E6%BA%90/%E5%B7%A5%E4%BD%9C%E8%B4%9F%E8%BD%BD%E8%B5%84%E6%BA%90/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/API-Resource-%E4%B8%8E-Object/API-%E5%8F%82%E8%80%83/%E5%B7%A5%E4%BD%9C%E8%B4%9F%E8%BD%BD%E8%B5%84%E6%BA%90/%E5%B7%A5%E4%BD%9C%E8%B4%9F%E8%BD%BD%E8%B5%84%E6%BA%90/</guid><description>概述 参考：
官方文档，参考-KubernetesAPI-工作负载资源 Workloads Resources(工作负载资源)
Pod Pod 是在服务器上运行的容器的集合
EphemeralContainers A list of ephemeral containers used with the Pod ephemeralcontainers subresource.
PodTemplate PodTemplate describes a template for creating copies of a predefined pod.
ReplicationController ReplicationController represents the configuration of a replication controller.
ReplicaSet ReplicaSet ensures that a specified number of pod replicas are running at any given time.
Deployment Deployment enables declarative updates for Pods and ReplicaSets.
StatefulSet StatefulSet represents a set of pods with consistent identities.</description></item></channel></rss>