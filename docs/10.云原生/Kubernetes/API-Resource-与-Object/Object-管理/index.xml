<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Object 管理 on 断念梦的站点</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/API-Resource-%E4%B8%8E-Object/Object-%E7%AE%A1%E7%90%86/</link><description>Recent content in Object 管理 on 断念梦的站点</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/API-Resource-%E4%B8%8E-Object/Object-%E7%AE%A1%E7%90%86/index.xml" rel="self" type="application/rss+xml"/><item><title>Object 管理</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/API-Resource-%E4%B8%8E-Object/Object-%E7%AE%A1%E7%90%86/Object-%E7%AE%A1%E7%90%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/API-Resource-%E4%B8%8E-Object/Object-%E7%AE%A1%E7%90%86/Object-%E7%AE%A1%E7%90%86/</guid><description>概述 参考：
官方文档，概念-概述-使用 Kubernetes 对象-Kubernetes 对象管理 官方文档，任务-管理 Kubernetes 对象 公众号-k8s 技术圈，理解 K8s 中的 Client-Side Apply 和 Server-Side Apply 原文：掘金 使用 kubectl 等是传统的 Client-Side Apply(简称 CSA)，添加 &amp;ndash;server-side 标志后，为 Server-Side Apply(简称 SSA)。
如果你经常与 kubectl 打交道，那相信你一定见过 kubectl.kubernetes.io/last-applied-configuration annotation，以及那神烦的 managedFields，像这样：
$ kubectl get pods hello -oyaml apiVersion: v1 kind: Pod metadata: annotations: kubectl.kubernetes.io/last-applied-configuration: | {&amp;#34;apiVersion&amp;#34;:&amp;#34;v1&amp;#34;,&amp;#34;kind&amp;#34;:&amp;#34;Pod&amp;#34;,&amp;#34;metadata&amp;#34;:{&amp;#34;annotations&amp;#34;:{},&amp;#34;creationTimestamp&amp;#34;:null,&amp;#34;labels&amp;#34;:{&amp;#34;run&amp;#34;:&amp;#34;hello&amp;#34;},&amp;#34;name&amp;#34;:&amp;#34;hello&amp;#34;,&amp;#34;namespace&amp;#34;:&amp;#34;default&amp;#34;},&amp;#34;spec&amp;#34;:{&amp;#34;containers&amp;#34;:[{&amp;#34;image&amp;#34;:&amp;#34;nginx&amp;#34;,&amp;#34;name&amp;#34;:&amp;#34;hello&amp;#34;,&amp;#34;resources&amp;#34;:{}}],&amp;#34;dnsPolicy&amp;#34;:&amp;#34;ClusterFirst&amp;#34;,&amp;#34;restartPolicy&amp;#34;:&amp;#34;Always&amp;#34;},&amp;#34;status&amp;#34;:{}} creationTimestamp: &amp;#34;2022-05-28T07:28:51Z&amp;#34; labels: run: hello managedFields: - apiVersion: v1 fieldsType: FieldsV1 fieldsV1: f:metadata: f:annotations: .: {} f:kubectl.kubernetes.io/last-applied-configuration: {} f:labels: .</description></item><item><title>字段选择器</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/API-Resource-%E4%B8%8E-Object/Object-%E7%AE%A1%E7%90%86/%E5%AD%97%E6%AE%B5%E9%80%89%E6%8B%A9%E5%99%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/API-Resource-%E4%B8%8E-Object/Object-%E7%AE%A1%E7%90%86/%E5%AD%97%E6%AE%B5%E9%80%89%E6%8B%A9%E5%99%A8/</guid><description>概述 参考：
官方文档，概念-概述-使用对象-字段选择器 Field selectors(字段选择器) 允许你根据一个或多个资源字段的值 筛选 Kubernetes 的 Object(对象)。 下面是一些使用字段选择器查询的例子：
metadata.name=my-service metadata.namespace!=default status.phase=Pending 下面这个 kubectl 命令将筛选出 status.phase 字段值为 Running 的所有 Pod：
kubectl get pods --field-selector status.phase=Running 说明：
字段选择器本质上是资源“过滤器（Filters）”。默认情况下，字段选择器/过滤器是未被应用的， 这意味着指定类型的所有资源都会被筛选出来。 这使得 kubectl get pods 和 kubectl get pods --field-selector &amp;quot;&amp;quot; 这两个 kubectl 查询是等价的。
支持的字段 不同的 Kubernetes 资源类型支持不同的字段选择器。 所有资源类型都支持 metadata.name 和 metadata.namespace 字段。 使用不被支持的字段选择器会产生错误。例如：
kubectl get ingress --field-selector foo.bar=baz Error from server (BadRequest): Unable to find &amp;#34;ingresses&amp;#34; that match label selector &amp;#34;&amp;#34;, field selector &amp;#34;foo.</description></item></channel></rss>