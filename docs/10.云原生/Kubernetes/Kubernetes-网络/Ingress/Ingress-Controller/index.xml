<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ingress Controller on 断念梦的站点</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/Kubernetes-%E7%BD%91%E7%BB%9C/Ingress/Ingress-Controller/</link><description>Recent content in Ingress Controller on 断念梦的站点</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/Kubernetes-%E7%BD%91%E7%BB%9C/Ingress/Ingress-Controller/index.xml" rel="self" type="application/rss+xml"/><item><title>Istio</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/Kubernetes-%E7%BD%91%E7%BB%9C/Ingress/Ingress-Controller/Istio/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/Kubernetes-%E7%BD%91%E7%BB%9C/Ingress/Ingress-Controller/Istio/</guid><description>Istio 提供的 Ingress Controller 功能详见 Isito 介绍.note 中的 《Istio Ingress 入口流量路由功能介绍》 章节</description></item><item><title>Traefik</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/Kubernetes-%E7%BD%91%E7%BB%9C/Ingress/Ingress-Controller/Traefik/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/Kubernetes-%E7%BD%91%E7%BB%9C/Ingress/Ingress-Controller/Traefik/</guid><description>Traefik 介绍 traefik 在 2.0 之后的版本，不再使用 ingress 资源作为入口，而是一个名为 IngressRoute 的 CRD 资源来作为入口
Traefik 安装 k8s 的 yaml 文件：https://docs.traefik.io/user-guides/crd-acme/
Yaml 样例 apiVersion: traefik.containo.us/v1alpha1 kind: IngressRoute metadata: name: simpleingressroute spec: entryPoints: - web routes: - match: Host(`your.example.com`) &amp;amp;&amp;amp; PathPrefix(`/notls`) # Host可省略，这样就跟ingress的host字段省略、istio的VirtualService资源的hosts字段写*，是一个效果 kind: Rule services: - name: whoami port: 80 https 的 yaml 配置
apiVersion: traefik.containo.us/v1alpha1 kind: IngressRoute metadata: name: ingressroutetls spec: entryPoints: - websecure routes: - match: Host(`your.example.com`) &amp;amp;&amp;amp; PathPrefix(`/tls`) kind: Rule services: - name: whoami port: 80 tls: certResolver: myresolver</description></item></channel></rss>