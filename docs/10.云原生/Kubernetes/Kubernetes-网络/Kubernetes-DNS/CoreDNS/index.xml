<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CoreDNS on 断念梦的站点</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/Kubernetes-%E7%BD%91%E7%BB%9C/Kubernetes-DNS/CoreDNS/</link><description>Recent content in CoreDNS on 断念梦的站点</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/Kubernetes-%E7%BD%91%E7%BB%9C/Kubernetes-DNS/CoreDNS/index.xml" rel="self" type="application/rss+xml"/><item><title>CoreDNS Plugins</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/Kubernetes-%E7%BD%91%E7%BB%9C/Kubernetes-DNS/CoreDNS/CoreDNS-Plugins/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/Kubernetes-%E7%BD%91%E7%BB%9C/Kubernetes-DNS/CoreDNS/CoreDNS-Plugins/</guid><description>概述 参考：</description></item><item><title/><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/Kubernetes-%E7%BD%91%E7%BB%9C/Kubernetes-DNS/CoreDNS/%E6%9C%AA%E5%91%BD%E5%90%8D/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/Kubernetes-%E7%BD%91%E7%BB%9C/Kubernetes-DNS/CoreDNS/%E6%9C%AA%E5%91%BD%E5%90%8D/</guid><description/></item><item><title>CoreDNS</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/Kubernetes-%E7%BD%91%E7%BB%9C/Kubernetes-DNS/CoreDNS/CoreDNS/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/Kubernetes-%E7%BD%91%E7%BB%9C/Kubernetes-DNS/CoreDNS/CoreDNS/</guid><description>概述 参考：
官网 官方手册 CoreDNS 所有插件详解 k8s 中的 CoreDNS 的配置示例 CoreDNS 是一个用 Go 编写的 DNS 服务器，目标是要称为云原生环境下的 DNS 服务器和服务发现解决方案。
CoreDNS 与 BIND 这类 DNS 服务器不同，CoreDNS 非常灵活，几乎所有功能都由插件来实现
插件可以独立或者一起运行，以便执行一个 **DNS Function(DNS 功能)。**可以说 CoreDNS 是由插件驱动的
那么什么是“ DNS 功能”？ 出于 CoreDNS 的目标，我们将其定义为实现 CoreDNS Plugin API 的软件。 实现的功能可能会大相径庭。 有些插件本身并不会创建响应，例如指标或缓存，但会添加功能。 然后有一些插件确实会产生响应。 这些也可以做任何事情：有一些与 Kubernetes 通信以提供服务发现的插件，有一些从文件或数据库中读取数据的插件。
So what’s a “DNS function”? For the purpose of CoreDNS, we define it as a piece of software that implements the CoreDNS Plugin API.</description></item><item><title>CoreDNS 配置详解</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/Kubernetes-%E7%BD%91%E7%BB%9C/Kubernetes-DNS/CoreDNS/CoreDNS-%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/Kubernetes-%E7%BD%91%E7%BB%9C/Kubernetes-DNS/CoreDNS/CoreDNS-%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/</guid><description>概述 参考：
官方配置文档 CoreDNS 的配置文件为 Corefile。
Corefile 源于 Caddy 框架的的配置文件 Caddyfile。Corefile 将会定义如下 CoreDNS 的行为：
CoreDNS 的运行逻辑很像 Nginx，会抽象出 server 的概念并运行。可以同时定义多个 Server 以实现不同功能，每个 Server 主要定义下面几种行为： Server 以什么协议监听在哪个端口 Server 负责哪个 zone 的权威 DNS 解析 Server 将会加载哪些插件 一个典型的最基础的 Corefile 格式如下所示：
ZONE[:PORT] { [PLUGIN]... } ZONE# 定义 Server 的 zone。默认值： . PORT# 定义 Server 监听的端口。默认值：53。即 -dns.port 标志的值。 PLUGIN# 定义 Server 要加载的插件。这是可选的，但是如果不加载任何插件，那么 coredns 将为所有查询返回 SERVFAIL 。 并且，不同的 Plugins 还可以定义不同的参数以改变其运行行为。 比如：
. {} 上述配置文件表达的是：server 负责根域 . 的解析，监听在 53 端口，并且不使用任何插件。</description></item></channel></rss>