<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>示例 on 断念梦的站点</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/Kubernetes-%E5%BC%80%E5%8F%91/Client-Libraries%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%BA%93/%E7%A4%BA%E4%BE%8B/</link><description>Recent content in 示例 on 断念梦的站点</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/Kubernetes-%E5%BC%80%E5%8F%91/Client-Libraries%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%BA%93/%E7%A4%BA%E4%BE%8B/index.xml" rel="self" type="application/rss+xml"/><item><title>使用 Go 构建 Kubernetes 应用</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/Kubernetes-%E5%BC%80%E5%8F%91/Client-Libraries%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%BA%93/%E7%A4%BA%E4%BE%8B/%E4%BD%BF%E7%94%A8-Go-%E6%9E%84%E5%BB%BA-Kubernetes-%E5%BA%94%E7%94%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/Kubernetes-%E5%BC%80%E5%8F%91/Client-Libraries%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%BA%93/%E7%A4%BA%E4%BE%8B/%E4%BD%BF%E7%94%A8-Go-%E6%9E%84%E5%BB%BA-Kubernetes-%E5%BA%94%E7%94%A8/</guid><description>使用 Go 构建 Kubernetes 应用
Kubernetes 项目使用 Go 语言编写，对 Go api 原生支持非常便捷。本篇文章介绍了如何使用 kubernetes client-go 实践一个简单的与 K8s 交互过程。
kubernetes 的 Go Client 项目（client-go） go client 是 k8s client 中最古老的一个，具有很多特性。Client-go 没有使用 Swagger 生成器，它使用的是源于 k8s 项目中的源代码生成工具，这个工具的目的是要生成 k8s 风格的对象和序列化程序。
该项目是一组包的集合，该包能够满足从 REST 风格的原语到复杂 client 的不同的编程需求。
RESTClient 是一个基础包，它使用api-machinery库中的类型作为一组 REST 原语提供对 API 的访问。作为对RESTClient之上的抽象，_clientset_将是你创建 k8s client 工具的起点。它暴露了公开化的 API 资源及其对应的序列化。
注意：在 client-go 中还包含了如 discovery, dynamic, 和 scale 这样的包，虽然本次不介绍这些包，但是了解它们的能力还是很重要的。
一个简单的 k8s client 工具 让我们再次回顾我们将要构建的工具，来说明 go client 的用法。pvcwatch是一个简单的命令行工具，它可以监听集群中声明的 PVC 容量。当总数到达一个阈值的时候，他会采取一个 action（在这个例子中是在屏幕上通知显示）</description></item><item><title>在不生成 crd client 代码的情况下通过 client-go 增删改查 k8s crd 资源</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/Kubernetes-%E5%BC%80%E5%8F%91/Client-Libraries%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%BA%93/%E7%A4%BA%E4%BE%8B/%E5%9C%A8%E4%B8%8D%E7%94%9F%E6%88%90-crd-client-%E4%BB%A3%E7%A0%81%E7%9A%84%E6%83%85%E5%86%B5%E4%B8%8B%E9%80%9A%E8%BF%87-client-go-%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5-k8s-crd-%E8%B5%84%E6%BA%90/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/Kubernetes-%E5%BC%80%E5%8F%91/Client-Libraries%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%BA%93/%E7%A4%BA%E4%BE%8B/%E5%9C%A8%E4%B8%8D%E7%94%9F%E6%88%90-crd-client-%E4%BB%A3%E7%A0%81%E7%9A%84%E6%83%85%E5%86%B5%E4%B8%8B%E9%80%9A%E8%BF%87-client-go-%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5-k8s-crd-%E8%B5%84%E6%BA%90/</guid><description>原文链接：https://mozillazg.com/2020/07/k8s-kubernetes-client-go-list-get-create-update-patch-delete-crd-resource-without-generate-client-code-update-or-create-via-yaml.html 2020-07-19
k8s k8s / kubernetes / crd / client-go
前言¶ 示例 CRD¶ list 资源¶ get 资源¶ create 资源¶ update 资源¶ patch 资源¶ delete 资源¶ 总结¶ 参考资料¶ 前言 一般情况下管理 crd 资源都是通过由 code-generator 生成的 crd client 来操作，但是有时也会有只想简单的操作一下资源不想去导入或生成 crd client 相关代码的需求，这里简单的记录一下在不生成 crd client 代码的情况下通过 client-go 增删改查 k8s crd 资源的方法。
示例 CRD 先来定义一个测试用的 CRD （其实已有的 Pod 之类的也是可以的，没啥特别的不一定要自定义 CRD，这里只是展示这个能力，因为一般如果是内置的资源的话，直接用内置的 client 和内置的资源 struct 就可以了）（这个 crd 来自 官方文档 ）：
apiVersion: apiextensions.k8s.io/v1 kind: CustomResourceDefinition metadata: # name must match the spec fields below, and be in the form: &amp;lt;plural&amp;gt;.</description></item></channel></rss>