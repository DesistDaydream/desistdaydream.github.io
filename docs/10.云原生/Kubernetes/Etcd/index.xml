<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦的站点 – Etcd</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/Etcd/</link><description>Recent content in Etcd on 断念梦的站点</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/Etcd/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Etcd</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/Etcd/Etcd/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/Etcd/Etcd/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;/blockquote>
&lt;p>&lt;a href="https://desistdaydream.github.io/docs/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/%E6%95%B0%E6%8D%AE%E5%BA%93/%E9%94%AE%E5%80%BC%E6%95%B0%E6%8D%AE/Etcd/Etcd.md">Etcd&lt;/a> 作为 kubernetes 集群的存储系统使用(也可以算是集群的&lt;strong>注册中心&lt;/strong>)，保存了集群的所有配置信息，需要高可用，如果需要在生产环境下使用，则需要在单独部署&lt;/p>
&lt;p>Note：Etcd 只接收 &lt;a href="https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/API%20Resource%20%E4%B8%8E%20Object/API%20Server/API%20Server.md">API Server&lt;/a> 的请求&lt;/p>
&lt;p>每个 etcd 一般使用两个端口进行工作，一个端口面向客户端提供服务(port/2379)，另一个端口集群内部通信(port/2380)&lt;/p>
&lt;p>想要正常运行 ETCD，需要注意以下几点：&lt;/p>
&lt;ol>
&lt;li>配置 etcd 的证书，如果不使用证书，则不法分子有可能直接去修改 etcd 数据&lt;/li>
&lt;li>ca.crt(证书 CN：etcd-ca) # 给 apiserver 发客户端证书，给 etcd 发服务端证书以及对等证书&lt;/li>
&lt;li>peer.crt(证书 CN：HostName) # etcd 集群各节点属于对等节点，使用 peer 类型证书(一般分为 server 证书和 client 证书，但是 etcd 集群之间不存在服务端和客户端的区别)&lt;/li>
&lt;li>apiserver-etcd-client.crt(证书 CN：kube-apiserver-etcd-client) # 与 server.crt 证书对应。apiserver 作为 etcd 的客户端所用的证书&lt;/li>
&lt;li>server.crt(证书 CN：HostName) # 与 apiserver-etcd-client.crt 证书对应。etcd 作为 apiserver 的服务端所用的证书&lt;/li>
&lt;li>修改 etcd 的配置文件&lt;/li>
&lt;/ol>
&lt;h1 id="etcd-metrics">Etcd Metrics&lt;a class="td-heading-self-link" href="#etcd-metrics" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>详见：k8s 主要组件 metrics 获取指南&lt;/p>
&lt;h1 id="etcdctl-命令行工具使用说明">etcdctl 命令行工具使用说明&lt;a class="td-heading-self-link" href="#etcdctl-%e5%91%bd%e4%bb%a4%e8%a1%8c%e5%b7%a5%e5%85%b7%e4%bd%bf%e7%94%a8%e8%af%b4%e6%98%8e" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>详见：etcdctl 命令行工具&lt;/p>
&lt;p>k8s 集群中使用 etcdctl 的技巧：可以创建一个别名，以便后续使用 etcdctl 命令的时候，可以使用别名来自动加载证书，比如下面&lt;/p>
&lt;p>测试环境&lt;/p>
&lt;ol>
&lt;li>echo &amp;lsquo;alias etcdctl=&amp;ldquo;kubectl exec -it -n kube-system etcd-master-1.tj-test &amp;ndash; etcdctl &amp;ndash;key=/etc/kubernetes/pki/etcd/peer.key &amp;ndash;cert=/etc/kubernetes/pki/etcd/peer.crt &amp;ndash;cacert=/etc/kubernetes/pki/etcd/ca.crt &amp;ndash;endpoints=172.38.40.212:2379,172.38.40.213:2379,172.38.40.214:2379&amp;rdquo;&amp;rsquo; &amp;raquo; /etc/bashrc&lt;/li>
&lt;/ol>
&lt;p>测试环境外部 etcd&lt;/p>
&lt;ol>
&lt;li>echo &amp;lsquo;alias etcdctl=&amp;ldquo;export ETCDCTL_API=3; etcdctl &amp;ndash;key=/etc/ssl/etcd/ssl/admin-master-1.tj-test-key.pem &amp;ndash;cert=/etc/ssl/etcd/ssl/admin-master-1.tj-test.pem &amp;ndash;cacert=/etc/ssl/etcd/ssl/ca.pem &amp;ndash;endpoints=172.38.40.212:2379,172.38.40.213:2379,172.38.40.214:2379&amp;rdquo;&amp;rsquo; &amp;raquo; /etc/bashrc&lt;/li>
&lt;/ol>
&lt;p>无锡环境&lt;/p>
&lt;ol>
&lt;li>echo &amp;lsquo;alias etcdctl=&amp;ldquo;kubectl exec -it -n kube-system etcd-master-1.wx &amp;ndash; etcdctl &amp;ndash;key=/etc/kubernetes/pki/etcd/peer.key &amp;ndash;cert=/etc/kubernetes/pki/etcd/peer.crt &amp;ndash;cacert=/etc/kubernetes/pki/etcd/ca.crt &amp;ndash;endpoints=172.40.0.3:2379,172.40.0.4:2379,172.40.0.5:2379&amp;rdquo;&amp;rsquo; &amp;raquo; /root/.bashrc&lt;/li>
&lt;/ol>
&lt;p>etcdctl 工具也可以直接从 etcd 容器的目录 /usr/local/bin 下，直接拷贝到宿主机上使用。这样使用起来也更方便&lt;/p>
&lt;ol>
&lt;li>echo &amp;lsquo;alias etcdctl=&amp;ldquo;export ETCDCTL_API=3; etcdctl &amp;ndash;key=/etc/kubernetes/pki/etcd/peer.key &amp;ndash;cert=/etc/kubernetes/pki/etcd/peer.crt &amp;ndash;cacert=/etc/kubernetes/pki/etcd/ca.crt &amp;ndash;endpoints=172.38.40.212:2379,172.38.40.213:2379,172.38.40.214:2379&amp;rdquo;&amp;rsquo; &amp;raquo; /root/.bashrc&lt;/li>
&lt;/ol>
&lt;h1 id="etcd-参数详解">Etcd 参数详解&lt;a class="td-heading-self-link" href="#etcd-%e5%8f%82%e6%95%b0%e8%af%a6%e8%a7%a3" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>参考：Etcd 命令行 flag 详解&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">v1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Pod&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">creationTimestamp&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">labels&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">component&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">etcd&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">tier&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">control-plane&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">etcd&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">namespace&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">kube-system&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">containers&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">command&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">etcd&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- --&lt;span style="color:#000">advertise-client-urls=https://10.10.100.101:2379&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- --&lt;span style="color:#000">cert-file=/etc/kubernetes/pki/etcd/server.crt&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- --&lt;span style="color:#000">client-cert-auth=true&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- --&lt;span style="color:#000">data-dir=/var/lib/etcd&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- --&lt;span style="color:#000">initial-advertise-peer-urls=https://10.10.100.101:2380&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- --&lt;span style="color:#000">initial-cluster=master-1.test.tjiptv.net=https://10.10.100.101:2380&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- --&lt;span style="color:#000">key-file=/etc/kubernetes/pki/etcd/server.key&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- --&lt;span style="color:#000">listen-client-urls=https://127.0.0.1:2379,https://10.10.100.101:2379&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- --&lt;span style="color:#000">listen-metrics-urls=http://127.0.0.1:2381&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- --&lt;span style="color:#000">listen-peer-urls=https://10.10.100.101:2380&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- --&lt;span style="color:#000">name=master-1.test.tjiptv.net&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- --&lt;span style="color:#000">peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- --&lt;span style="color:#000">peer-client-cert-auth=true&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- --&lt;span style="color:#000">peer-key-file=/etc/kubernetes/pki/etcd/peer.key&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- --&lt;span style="color:#000">peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- --&lt;span style="color:#000">snapshot-count=10000&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- --&lt;span style="color:#000">trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">image&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">k8s.gcr.io/etcd:3.3.15-0&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">imagePullPolicy&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">IfNotPresent&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">livenessProbe&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">failureThreshold&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">8&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">httpGet&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">host&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">127.0.0.1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">path&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">/health&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">port&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">2381&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">scheme&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">HTTP&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">initialDelaySeconds&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">15&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">timeoutSeconds&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">15&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">etcd&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">resources&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>{}&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">volumeMounts&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">mountPath&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">/var/lib/etcd&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">etcd-data&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">mountPath&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">/etc/kubernetes/pki/etcd&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">etcd-certs&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">hostNetwork&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">priorityClassName&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">system-cluster-critical&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">volumes&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">hostPath&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">path&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">/etc/kubernetes/pki/etcd&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">DirectoryOrCreate&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">etcd-certs&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">hostPath&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">path&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">/var/lib/etcd&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">DirectoryOrCreate&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">etcd-data&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: Etcd 中存储的数据之探究</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/Etcd/Etcd-%E4%B8%AD%E5%AD%98%E5%82%A8%E7%9A%84%E6%95%B0%E6%8D%AE%E4%B9%8B%E6%8E%A2%E7%A9%B6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/Etcd/Etcd-%E4%B8%AD%E5%AD%98%E5%82%A8%E7%9A%84%E6%95%B0%E6%8D%AE%E4%B9%8B%E6%8E%A2%E7%A9%B6/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>原文: &lt;a href="https://jingwei.link/2018/11/25/kubernetes-etcd-data-save-specification.html#default%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4%E4%B8%ADendpoint%E5%AE%9E%E4%BE%8Bkubernetes%E7%9A%84%E5%80%BC">https://jingwei.link/2018/11/25/kubernetes-etcd-data-save-specification.html#default%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4%E4%B8%ADendpoint%E5%AE%9E%E4%BE%8Bkubernetes%E7%9A%84%E5%80%BC&lt;/a>&lt;/p>
&lt;p>K8s 的架构复杂，涉及到概念非常多，其基础组件包含 ETCD、kube-apiserver、kube-controller-manager、kube-scheduler、kubelet、kube-proxy 等，其运行时环境为 docker 或 Rkt，当然还包含很多插件。在我看来，k8s 是 DevOps 的未来，因此不禁想写一些它的故事。&lt;/p>
&lt;p>ETCD 在 k8s 技术栈的地位，就仿佛数据库（Mysql、Postgresql 或 oracle 等）在 Web 应用中的地位，它存储了 k8s 集群中所有的元数据（以 key-value 的方式）。那么很现实的一个问题是：这些元数据是如何组织并保存的呢？本文就对此问题探究一番。&lt;/p>
&lt;p>相关环境&lt;/p>
&lt;ul>
&lt;li>两台 2 个核 4G 内存（2C4G）的虚拟机，ip 分别为 192.168.205.137 和 192.168.205.139&lt;/li>
&lt;li>k8s 相关控件-1.8.6&lt;/li>
&lt;li>etcd-3.3.10&lt;/li>
&lt;li>docker-18.06.1-ce&lt;/li>
&lt;/ul>
&lt;h1 id="k8s-中-etcd-数据的增删改查">k8s 中 ETCD 数据的增删改查&lt;a class="td-heading-self-link" href="#k8s-%e4%b8%ad-etcd-%e6%95%b0%e6%8d%ae%e7%9a%84%e5%a2%9e%e5%88%a0%e6%94%b9%e6%9f%a5" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>首先应该明确，K8s 中所有元数据的增删改查都是由 kube-apiserver 来执行的，那么这些数据在 ETCD 中必然有一套存储规范，这样才能保证在集群中部署成千上万的应用时不会出差错。在此基础上可以认为，只要掌握了 k8s 在 ETCD 中存储数据的规范，便可以像 k8s 一样手动来操作 ETCD 了（虽然不建议这么做）。不过更大的价值是能对 k8s 的理解更进一步，便于以后 debug 或者二次开发 k8s 的某些功能时更有底气。&lt;/p>
&lt;h1 id="初探-etcd-中的数据">初探 ETCD 中的数据&lt;a class="td-heading-self-link" href="#%e5%88%9d%e6%8e%a2-etcd-%e4%b8%ad%e7%9a%84%e6%95%b0%e6%8d%ae" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>本文对 ETCD 的操作主要使用了其官方客户端工具 etcdctl，这里不对 etcdctl 进行详解了（需要用一整篇博客来介绍它才行），只就用到的一些命令进行阐释。&lt;/p>
&lt;h2 id="获取-etcd-中的所有的-key-值">获取 ETCD 中的所有的 key 值&lt;a class="td-heading-self-link" href="#%e8%8e%b7%e5%8f%96-etcd-%e4%b8%ad%e7%9a%84%e6%89%80%e6%9c%89%e7%9a%84-key-%e5%80%bc" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>下面的命令可以获取 ETCD 中的所有的 key 值：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># 获取ETCD中的所有数据&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># --prefix 表示获取所有key值头为某个字符串的数据， 由于传入的是&amp;#34;&amp;#34;，所以会匹配所有的值&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># --keys-only 表示只返回key而不返回value&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># 对输出的结果使用grep过滤掉空行&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/$ &lt;span style="color:#000">ETCDCTL_API&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">3&lt;/span> etcdctl get &lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span> --prefix --keys-only &lt;span style="color:#000;font-weight:bold">|&lt;/span>grep -Ev &lt;span style="color:#4e9a06">&amp;#34;^&lt;/span>$&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># 输出结果如下所示，实际数据会非常整齐&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/registry/apiextensions.k8s.io/customresourcedefinitions/globalbgpconfigs.crd.projectcalico.org
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/registry/apiextensions.k8s.io/customresourcedefinitions/globalfelixconfigs.crd.projectcalico.org
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/registry/apiextensions.k8s.io/customresourcedefinitions/globalnetworkpolicies.crd.projectcalico.org
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># ... 略过很多条目&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/registry/namespaces/default/registry/namespaces/kube-public
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/registry/namespaces/kube-system/registry/pods/kube-system/canal-mljsv
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/registry/pods/kube-system/canal-qlvh6
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># ... 略过很多条目&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/registry/services/endpoints/kube-system/kube-scheduler
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/registry/services/specs/default/kubernetes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/registry/services/specs/kube-system/kube-dnscompact_rev_key
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># 总共有240条记录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/$ etcdctl get &lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span> --prefix --keys-only &lt;span style="color:#000;font-weight:bold">|&lt;/span>grep -Ev &lt;span style="color:#4e9a06">&amp;#34;^&lt;/span>$&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">|&lt;/span>wc -l240
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="etcd-中-key-值的规律">ETCD 中 key 值的规律&lt;a class="td-heading-self-link" href="#etcd-%e4%b8%ad-key-%e5%80%bc%e7%9a%84%e8%a7%84%e5%be%8b" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>通过观察可以简单得出下面几个规律：&lt;/p>
&lt;ul>
&lt;li>k8s 主要把自己的数据注册在/registry/前缀下面（在 ETCD-v3 版本后没有了目录的概念，只能一切皆前缀了）。&lt;/li>
&lt;li>通过观察 k8s 中 deployment、namespace、pod 等在 ETCD 中的表示，可以知道这部分资源的 key 的格式为/registry/#{k8s 对象}/#{命名空间}/#{具体实例名}。&lt;/li>
&lt;li>存在一个与众不同的 key 值 compact_rev_key，搜索可以知道这是 apiserver/compact.go 中用来记录无效数据版本使用的；运行 etcdctl get compact_rev_key 可以发现，输出的是一个整形数值。&lt;/li>
&lt;li>在查看 ETCD 时，k8s 中除了必要的网络插件 canal，未部署其他的应用，此时 ETCD 中只有 240 条数据。&lt;/li>
&lt;/ul>
&lt;p>有了上面的规律，可以初步得出一个结论：在研究 k8s 时重点关注/registry/前缀的 key 及其 value 即可。&lt;/p>
&lt;h2 id="etcd-中的-value-值">ETCD 中的 value 值&lt;a class="td-heading-self-link" href="#etcd-%e4%b8%ad%e7%9a%84-value-%e5%80%bc" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>通过上面的内容知道，k8s 在 ETCD 中保存数据时 key 的取值非常讲究，规律非常容易概括出来。那么这些 key 值所对应的值是什么样子呢？我试着输出了/registry/ranges/serviceips 和/registry/services/endpoints/default/kubernetes 这两个 key 所对应的值，效果见下面编码展示区。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># 获取&amp;#34;/registry/ranges/serviceips&amp;#34;所对应的值&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># 发现这里有很多奇怪的字符=。=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># 可以大体推断出来，集群所有service的ip范围为10.96.0.0/12， 与api-server的yaml文件中配置的一致&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/$ etcdctl get /registry/ranges/serviceips
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/registry/ranges/serviceips
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>k8s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>v1RangeAllocation&lt;span style="color:#000;font-weight:bold">&amp;amp;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&amp;#34;*28Bz
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">10.96.0.0/12&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># 获取&amp;#34;/registry/services/endpoints/default/kubernetes&amp;#34;所对应的值&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># 发现这里有很多奇怪的字符=。=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># 在default命名空间的kubernetes这个service所对应的endpoint有两个ip&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># 分别为192.168.205.137和192.168.205.139&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/$ etcdctl get /registry/services/endpoints/default/kubernetes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/registry/services/endpoints/default/kubernetes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>k8s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>v1 Endpoints�
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>O
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kubernetesdefault&lt;span style="color:#4e9a06">&amp;#34;*&lt;/span>&lt;span style="color:#000">$0&lt;/span>&lt;span style="color:#4e9a06">b6bb724-f066-11e8-be14-000c29d2cb3a2ں��z;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">192.168.205.137
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">192.168.205.139
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">https�2TCP&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以很明显看出来，ETCD 中保存的并不是输出友好的数据（比如 json 或 xml 等就是输出友好型数据）。当然，如果进一步研究可以知道，ETCD 保存的是 Protocol Buffers 序列化后的值。如果大家对 Protobuf 有研究，可以知道这个协议也是个 key-value 的协议，只不过会把其 key-value 值按照特定的算法进行压缩，不过并没有压缩的很厉害，显式输出这些值多少也能获取到一些信息；比如 /registry/services/endpoints/default/kubernetes 对应的 192.168.205.137、192.168.205.139 等值。&lt;/p>
&lt;h1 id="etcd-中其他的-key-及其-value">ETCD 中其他的 key 及其 value&lt;a class="td-heading-self-link" href="#etcd-%e4%b8%ad%e5%85%b6%e4%bb%96%e7%9a%84-key-%e5%8f%8a%e5%85%b6-value" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>通过上面的探索，对 ETCD 中存储的数据有了大体的了解，接下来就可以开始更加刺激的冒险了。&lt;/p>
&lt;h2 id="据说-flannel-需要使用-etcd-保存网络元数据">据说 flannel 需要使用 ETCD 保存网络元数据&lt;a class="td-heading-self-link" href="#%e6%8d%ae%e8%af%b4-flannel-%e9%9c%80%e8%a6%81%e4%bd%bf%e7%94%a8-etcd-%e4%bf%9d%e5%ad%98%e7%bd%91%e7%bb%9c%e5%85%83%e6%95%b0%e6%8d%ae" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>那么，flannel 在 ETCD 中保存的数据是什么，保存在哪个 key 中了呢？下面把所有网关相关的几个关键词 canal|flannel|calico 输出可以知道，里面只有一个可能包含 flannel 所需数据的 key，即/registry/configmaps/kube-system/canal-config，输出内容后对比关于 flannel 的 etcd 配置这篇文章，很大程度可以认为就是它了（需要进一步去 canal 项目的源码中去确认）。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>/$ etcdctl get &lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span> --prefix --keys-only &lt;span style="color:#000;font-weight:bold">|&lt;/span>grep -Ev &lt;span style="color:#4e9a06">&amp;#34;^&lt;/span>$&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">|&lt;/span>grep&lt;span style="color:#4e9a06">&amp;#34;canal|flannel|calico&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># ... 忽略很多条/registry/configmaps/kube-system/canal-config&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># ... 忽略很多条&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># 可以看到里面有一个配置项 net-conf， 对比flannel的配置，可以认为这个地方很可能就是canal项目中flannel在etcd中需要的值。这里设置了网段为&amp;#34;10.244.0.0/16&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/$ etcdctl get /registry/configmaps/kube-system/canal-config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># ... 省略很多 net-conf.jsonI{&amp;#34;Network&amp;#34;:&amp;#34;10.244.0.0/16&amp;#34;, &amp;#34;Backend&amp;#34;:{&amp;#34;Type&amp;#34;:&amp;#34;vxlan&amp;#34;}}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="default命名空间中endpoint实例kubernetes的值">default命名空间中endpoint实例kubernetes的值&lt;a class="td-heading-self-link" href="#default%e5%91%bd%e5%90%8d%e7%a9%ba%e9%97%b4%e4%b8%adendpoint%e5%ae%9e%e4%be%8bkubernetes%e7%9a%84%e5%80%bc" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;pre tabindex="0">&lt;code> /$ kubectl describe svc kubernetes
Name: kubernetes
Namespace: default
Labels: component=apiserver
provider=kubernetes
Annotations: &amp;lt;none&amp;gt;
Selector: &amp;lt;none&amp;gt;
Type: ClusterIP
IP: 10.96.0.1
Port: https 443/TCP
TargetPort: 6443/TCP
Endpoints: 192.168.205.137:6443,192.168.205.139:6443
Session Affinity: ClientIP
Events: &amp;lt;none&amp;gt;
/$ etcdctl get &amp;#34;&amp;#34; --prefix --keys-only |grep -Ev &amp;#34;^$&amp;#34; |grep &amp;#34;default&amp;#34; |grep &amp;#34;kubernetes&amp;#34;
/registry/services/endpoints/default/kubernetes
/registry/services/specs/default/kubernetes
&lt;/code>&lt;/pre>&lt;p>我把&lt;code>/registry/services/endpoints/default/kubernetes&lt;/code>输入到搜索引擎搜索了一下，发现&lt;a href="https://github.com/kubernetes/kubernetes/issues/19989">有人&lt;/a>在github上抛出类似的问题，从其&lt;code>The three apiservers (Ip Adresses .31,.32,.33) are constantly overwriting the etcd-key /registry/services/endpoints/default/kubernetes&lt;/code>可以推测出来，这个值是api-server这个控件主动去写入的。&lt;/p>
&lt;p>这能得出一个结论：在部署高可用集群时，如果想把多个api-server注册到集群，那么所有的api-server的服务都将会出现在default命名空间的kubernetes这个endpoints上；这也就意味着难以把集群中的一个api-server单独隔离出来而不让它对外提供服务（我当前想debug的一个问题需要这么操作，得出这个结论表示很无奈）。&lt;/p>
&lt;h1 id="小结">小结&lt;a class="td-heading-self-link" href="#%e5%b0%8f%e7%bb%93" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>文本对 k8s 数据仓库 ETCD 进行了探究，总结了 ETCD 保存 k8s 数据时 key 值的规范，并尝试查看了 value 值的内容。最后对几个感兴趣的 key 值及其 value 值进行了探索。通过探究可以知道，k8s 把集群的信息非常有条理地保存在 ETCD 中，key 值定义有章可循，比较方便 debug；同时，虽然 ETCD 中的 value 值是 protobuf 序列化后的数据，不适合展示，不过输出到文本后依然有一定的参考价值。&lt;/p>
&lt;h1 id="参考">参考&lt;a class="td-heading-self-link" href="#%e5%8f%82%e8%80%83" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://kubernetes.io/">Production-Grade Container Orchestration - Kubernetes&lt;/a> Kubernetes官网&lt;/li>
&lt;li>&lt;a href="http://docs.kubernetes.org.cn/227.html">Kubernetes是什么 _ Kubernetes(K8S)中文文档_Kubernetes中文社区&lt;/a> k8s中文文档&lt;/li>
&lt;li>&lt;a href="https://github.com/cookeem/kubeadm-ha/">GitHub - cookeem/kubeadm-ha: Kubernetes high availiability deploy based on kubeadm (English/中文 for v1.11.x/v1.9.x/v1.7.x/v1.6.x)&lt;/a> k8s高可用部署方案&lt;/li>
&lt;li>&lt;a href="https://docs.projectcalico.org/v3.3/getting-started/kubernetes/installation/flannel">Installing Calico for policy and flannel for networking&lt;/a> 网络插件的安装&lt;/li>
&lt;li>&lt;a href="https://coreos.com/flannel/docs/latest/flannel-config.html">flannel Container Networking | Configuring flannel Networking&lt;/a> 描述了flannel配置etcd作为datastore的做法，可以推敲出etcd中保存的值可能的样子&lt;/li>
&lt;li>&lt;a href="https://github.com/coreos/flannel/blob/master/Documentation/configuration.md">flannel/configuration.md at master · coreos/flannel · GitHub&lt;/a> flannel配置etcd作为datastore的文档&lt;/li>
&lt;li>&lt;a href="https://github.com/kubernetes/kubernetes/issues/19989">Kubernetes service multiple apiserver endpoints · Issue #19989 · kubernetes/kubernetes · GitHub&lt;/a> 从这里的描述可以看出api-server本身主动向ETCD写数据&lt;/li>
&lt;/ul></description></item></channel></rss>