<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kubernetes 证书管理 on 断念梦的站点</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/API-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/Kubernetes-%E8%AF%81%E4%B9%A6%E7%AE%A1%E7%90%86/</link><description>Recent content in Kubernetes 证书管理 on 断念梦的站点</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/API-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/Kubernetes-%E8%AF%81%E4%B9%A6%E7%AE%A1%E7%90%86/index.xml" rel="self" type="application/rss+xml"/><item><title>Kubernetes 证书管理</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/API-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/Kubernetes-%E8%AF%81%E4%B9%A6%E7%AE%A1%E7%90%86/Kubernetes-%E8%AF%81%E4%B9%A6%E7%AE%A1%E7%90%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/API-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/Kubernetes-%E8%AF%81%E4%B9%A6%E7%AE%A1%E7%90%86/Kubernetes-%E8%AF%81%E4%B9%A6%E7%AE%A1%E7%90%86/</guid><description>概述 参考：
PKI 证书和要求 参考：
官方文档，入门-最佳实践-PKI 证书和要求 Kubernetes 需要 PKI 证书才能进行基于 TLS 的身份验证。如果你是使用 kubeadm 安装的 Kubernetes， 则会自动生成集群所需的证书。你还可以生成自己的证书。 例如，不将私钥存储在 API 服务器上，可以让私钥更加安全。此页面说明了集群必需的证书。
集群是如何使用证书的 Kubernetes 需要 PKI 才能执行以下操作：
Kubelet 的客户端证书，用于 API 服务器身份验证 API 服务器端点的证书 集群管理员的客户端证书，用于 API 服务器身份认证 API 服务器的客户端证书，用于和 Kubelet 的会话 API 服务器的客户端证书，用于和 etcd 的会话 控制器管理器的客户端证书/kubeconfig，用于和 API 服务器的会话 调度器的客户端证书/kubeconfig，用于和 API 服务器的会话 前端代理 的客户端及服务端证书 说明： 只有当你运行 kube-proxy 并要支持 扩展 API 服务器 时，才需要 front-proxy 证书
etcd 还实现了双向 TLS 来对客户端和对其他对等节点进行身份验证。
证书存放的位置 如果你是通过 kubeadm 安装的 Kubernetes，所有证书都存放在 /etc/kubernetes/pki 目录下。本文所有相关的路径都是基于该路径的相对路径。</description></item><item><title>手动管理 Kubernetes 证书</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/API-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/Kubernetes-%E8%AF%81%E4%B9%A6%E7%AE%A1%E7%90%86/%E6%89%8B%E5%8A%A8%E7%AE%A1%E7%90%86-Kubernetes-%E8%AF%81%E4%B9%A6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/API-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/Kubernetes-%E8%AF%81%E4%B9%A6%E7%AE%A1%E7%90%86/%E6%89%8B%E5%8A%A8%E7%AE%A1%E7%90%86-Kubernetes-%E8%AF%81%E4%B9%A6/</guid><description>概述 参考：
官方文档，任务-管理集群-证书 在使用客户端证书认证的场景下，你可以通过 easyrsa、openssl 或 cfssl 等工具以手工方式生成证书。
easyrsa easyrsa 支持以手工方式为你的集群生成证书。
下载、解压、初始化打过补丁的 easyrsa3。 curl -LO https://storage.googleapis.com/kubernetes-release/easy-rsa/easy-rsa.tar.gz tar xzf easy-rsa.tar.gz cd easy-rsa-master/easyrsa3 ./easyrsa init-pki 生成新的证书颁发机构（CA）。参数 --batch 用于设置自动模式； 参数 --req-cn 用于设置新的根证书的通用名称（CN）。
./easyrsa &amp;ndash;batch &amp;ldquo;&amp;ndash;req-cn=${MASTER_IP}@date +%s&amp;rdquo; build-ca nopass
生成服务器证书和秘钥。 参数 --subject-alt-name 设置 API 服务器的 IP 和 DNS 名称。 MASTER_CLUSTER_IP 用于 API 服务器和控制管理器，通常取 CIDR 的第一个 IP，由 --service-cluster-ip-range 的参数提供。 参数 --days 用于设置证书的过期时间。 下面的示例假定你的默认 DNS 域名为 cluster.local。
./easyrsa --subject-alt-name=&amp;#34;IP:${MASTER_IP},&amp;#34;\ &amp;#34;IP:${MASTER_CLUSTER_IP},&amp;#34;\ &amp;#34;DNS:kubernetes,&amp;#34;\ &amp;#34;DNS:kubernetes.default,&amp;#34;\ &amp;#34;DNS:kubernetes.default.svc,&amp;#34;\ &amp;#34;DNS:kubernetes.default.svc.cluster,&amp;#34;\ &amp;#34;DNS:kubernetes.default.svc.cluster.local&amp;#34; \ --days=10000 \ build-server-full server nopass 拷贝文件 pki/ca.</description></item></channel></rss>