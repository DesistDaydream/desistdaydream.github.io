<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Garbage Collection(垃圾收集) on 断念梦的站点</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/Controller/Garbage-Collection%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86/</link><description>Recent content in Garbage Collection(垃圾收集) on 断念梦的站点</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/Controller/Garbage-Collection%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86/index.xml" rel="self" type="application/rss+xml"/><item><title>Garbage Collection(垃圾收集)</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/Controller/Garbage-Collection%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86/Garbage-Collection%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/Controller/Garbage-Collection%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86/Garbage-Collection%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86/</guid><description>概述 参考：
官方文档，概念-Kubernetes 架构-垃圾收集 宋净超-云原生资料库-Kubernetes 基础教程，集群资源管理-垃圾收集 Garbage Collection(垃圾收集) 功能用来删除曾经拥有 owner(拥有者) 但不再拥有 owner 的某些对象。
比如张三拥有 100 块钱，则张三就是这 100 块钱的 owner，当张三死亡后，那么这 100 块钱则不再具有 owner。
注意：垃圾收集是 beta 特性，在 Kubernetes 1.4 及以上版本默认启用。
Garbage Collector 垃圾收集器 Garbage Collector 是 k8s 垃圾收集功能的具体实现。Garbage Collector 属于 Kubernetes Controller 的一部分。kube-controller-manager 的 --controllers 命令行标志的值中包含 garbagecollector，用以控制是否启用该控制器。
垃圾收集器在 kubernetes 的代码中的位置在这里：pkg/controller/garbagecollector。
Owner 和 Dependent 参考：
官方文档，概念-概述-使用 Kubernetes 对象-属主与从属 在 Kubernetes 中
Owner(拥有者/属主) # 一些 Kubernetes 对象是其它对象的 Owner。例如，一个 Deployment 是一组 Pod 的 Owner(i.e.deployment 拥有这些 pod)。 Dependent(依赖他人者/从属) # 被 Owner 拥有的对象被称 Dependent(从属) 对象，该 Dependent 属于该 Owner。 每个 Dependent 对象具有一个指向其 owner 对象的 metadata.</description></item><item><title>Finalizers</title><link>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/Controller/Garbage-Collection%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86/Finalizers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/10.%E4%BA%91%E5%8E%9F%E7%94%9F/Kubernetes/Controller/Garbage-Collection%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86/Finalizers/</guid><description>概述 参考：
官方文档，概念-概述-使用 Kubernetes 对象-Finalizers 公众号-云原生之路，熟悉又陌生的 k8s 字段：finalizers Kubernetes 博客，使用 Finalizers 控制删除 公众号-云原生实验室，使用 Finalizers 来删除那些死活删不掉的 K8S 资源 Finalizer(终结器) 是一个存放键的列表，不具有任何实际意义，类似于 annotations 字段的功能。它告诉 Kubernetes 在完全删除标记为删除的资源之前等待满足特定条件。终结器提醒控制器清理已删除对象拥有的资源。只有一个对象的 metadata.finalizers 字段的值为空，该对象才可以被删除。
带有 finalizers 字段的对象无法删除的原因大致如下：
对象存在 finalizers，关联的控制器故障未能执行或执行 finalizer 函数 hang 住 : 比如 namespace 控制器无法删除完空间内所有的对象， 特别是在使用 aggregated apiserver 时，第三方 apiserver 服务故障导致无法删除其对象。 此时，需要会恢复第三方 apiserver 服务或移除该 apiserver 的聚合，具体选择哪种方案需根据实际情况而定。 集群内安装的控制器给一些对象增加了自定义 finalizers，未删除完 fianlizers 就下线了该控制器，导致这些 fianlizers 没有控制器来移除他们。此时，有两种方式可以正常删除这些对象，其一，恢复该控制器，控制器会移除 finalizers 字段，其二，手动移除 finalizers 字段(多出现于自定义 operator)，具体选择哪种方案根据实际情况而定。 RabbitMQ Operator 就是这种情况，但是 Prometheus Operator 就没这问题。。。。o(╯□╰)o~~~ 熟悉又陌生的 k8s 字段：finalizers 经常操作 Kubernetes 集群的同学肯定对 finalizers 字段不陌生，每当删除 namespace 或 pod 等一些 Kubernetes 资源时，有时资源状态会卡在 Terminating，很长时间无法删除，甚至有时增加 &amp;ndash;force flag 之后还是无法正常删除。这时就需要 edit 该资源，将 finalizers 字段设置为 []，之后 Kubernetes 资源就正常删除了。</description></item></channel></rss>