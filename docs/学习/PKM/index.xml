<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦的站点 – PKM</title><link>https://desistdaydream.github.io/docs/%E5%AD%A6%E4%B9%A0/PKM/</link><description>Recent content in PKM on 断念梦的站点</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/%E5%AD%A6%E4%B9%A0/PKM/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: PKM</title><link>https://desistdaydream.github.io/docs/%E5%AD%A6%E4%B9%A0/PKM/PKM/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/%E5%AD%A6%E4%B9%A0/PKM/PKM/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Personal_knowledge_management">Wiki，Personal knowledge management&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;strong>Personal knowledge management(个人知识管理，简称 PKM)&lt;/strong> 是一个收集信息的过程&lt;/p>
&lt;h1 id="个人知识记录规律">个人知识记录规律&lt;a class="td-heading-self-link" href="#%e4%b8%aa%e4%ba%ba%e7%9f%a5%e8%af%86%e8%ae%b0%e5%bd%95%e8%a7%84%e5%be%8b" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h2 id="配置文件与命令行参数的记录方式">配置文件与命令行参数的记录方式&lt;a class="td-heading-self-link" href="#%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6%e4%b8%8e%e5%91%bd%e4%bb%a4%e8%a1%8c%e5%8f%82%e6%95%b0%e7%9a%84%e8%ae%b0%e5%bd%95%e6%96%b9%e5%bc%8f" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>与 &lt;a href="https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/%E6%97%A0%E6%B3%95%E5%88%86%E7%B1%BB%E7%9A%84%E8%AF%AD%E8%A8%80/YAML.md">YAML&lt;/a> 文章中的“各种产品官方文档中对 YAML 格式的配置文件的描述”段落类似，各种类型的配置文件（包括 INI、JSON、等等）、命令行参数是类似 Key/Value 的结构。&lt;/p>
&lt;p>在我得笔记中，记录格式一般都是这样的：&lt;/p>
&lt;p>&lt;code>键的名称(值的类型)&lt;/code>&lt;/p>
&lt;p>&lt;code>--命令行参数名称(参数值类型)&lt;/code>&lt;/p>
&lt;p>对于配置文件来说，有的值的类型比较复杂（比如是一个 object 类型），可以再创建一个自定义的名称以在单独的章节下记录。&lt;/p>
&lt;h1 id="知识管理工具">知识管理工具&lt;a class="td-heading-self-link" href="#%e7%9f%a5%e8%af%86%e7%ae%a1%e7%90%86%e5%b7%a5%e5%85%b7" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;a href="https://www.notion.so/">Notion&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://github.com/AppFlowy-IO/AppFlowy">AppFlowy&lt;/a> # 开源版 Notion&lt;/p>
&lt;ul>
&lt;li>现阶段(0.0.4)只是一个本地应用程序，无法通过浏览器使用&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://www.yuque.com/">语雀&lt;/a>&lt;/p>
&lt;ul>
&lt;li>如何看待语雀付费策略？&lt;a href="https://www.zhihu.com/question/562238887">https://www.zhihu.com/question/562238887&lt;/a>&lt;/li>
&lt;li>文档导出：&lt;a href="https://github.com/yuque/yuque-exporter">https://github.com/yuque/yuque-exporter&lt;/a>
&lt;ul>
&lt;li>先执行 crawl 生成想要下载的文档源数据&lt;/li>
&lt;li>执行 build 根据已存在的源数据生成 markdown 文件
&lt;ul>
&lt;li>源码执行：
&lt;ul>
&lt;li>&lt;code>pnpm i&lt;/code>&lt;/li>
&lt;li>&lt;code>pnpm build&lt;/code>&lt;/li>
&lt;li>&lt;code>export YUQUE_TOKEN=&amp;quot;XXXX&amp;quot;&lt;/code>&lt;/li>
&lt;li>&lt;code>node ./dist/bin/cli.js crawl desistdaydream/ycpve3&lt;/code>&lt;/li>
&lt;li>&lt;code>node ./dist/bin/cli.js build&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>语雀文档导出：&lt;a href="https://github.com/yuque/yuque-exporter">https://github.com/yuque/yuque-exporter&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://www.feishu.cn/product/docs">飞书&lt;/a>&lt;/p>
&lt;ul>
&lt;li>飞书转 Markdown: &lt;a href="https://github.com/Wsine/feishu2md">https://github.com/Wsine/feishu2md&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://github.com/dendronhq/dendron">Dendron&lt;/a> # 开源的、本地优先的、基于 MarkDown 的笔记工具&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://mp.weixin.qq.com/s/HbM93O49aOgW6w_ZX9lzlA">公众号-Github 爱好者，专为开发人员构建的个人知识管理工具-Dendron&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://desistdaydream.github.io/docs/%E5%AD%A6%E4%B9%A0/PKM/Obsidian.md">Obsidian&lt;/a> # Markdown 渲染程序&lt;/p></description></item><item><title>Docs: Obsidian</title><link>https://desistdaydream.github.io/docs/%E5%AD%A6%E4%B9%A0/PKM/Obsidian/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/%E5%AD%A6%E4%B9%A0/PKM/Obsidian/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://obsidian.md/">官网&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>Obsidian 也是基于 Chromium 的，使用 &lt;code>Ctrl + Shift + i&lt;/code> 快捷键可以打开 &lt;a href="https://desistdaydream.github.io/docs/Web/Browser/DevTools.md">DevTools&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://forum.obsidian.md/">英文论坛&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://forum-zh.obsidian.md/">中文论坛&lt;/a>&lt;/p>
&lt;p>中文论坛与英文论坛的账户不共享&lt;/p>
&lt;h1 id="obsidian-关联文件与配置">Obsidian 关联文件与配置&lt;a class="td-heading-self-link" href="#obsidian-%e5%85%b3%e8%81%94%e6%96%87%e4%bb%b6%e4%b8%8e%e9%85%8d%e7%bd%ae" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://publish.obsidian.md/help-zh/%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95/Obsidian+%E5%A6%82%E4%BD%95%E5%AD%98%E5%82%A8%E6%95%B0%E6%8D%AE">官方文档，Obsidian 如何存储数据&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>Obsidian 本身的运行时数据保存路径（我们假定设为 &lt;code>${ObsidianData}&lt;/code>）&lt;/p>
&lt;ul>
&lt;li>&lt;strong>~/.config/Obsidian/&lt;/strong> # Linux 系统&lt;/li>
&lt;li>&lt;strong>%APPDATA%/Obsidian/&lt;/strong> # Windows 系统&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>${REPO}/.obsidian/&lt;/strong> # 特定于每个仓的配置的保存路径。在每个仓库的根目录下的 .obsidian/ 目录中。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>workspaces.json&lt;/strong> # 工作区布局的配置文件。通常在每个仓库各自 .obsidian/ 目录下。&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://www.bilibili.com/video/BV1Dy4y1375P">https://www.bilibili.com/video/BV1Dy4y1375P&lt;/a>&lt;/p>
&lt;h1 id="插件">插件&lt;a class="td-heading-self-link" href="#%e6%8f%92%e4%bb%b6" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h2 id="自定义排序目录">自定义排序目录&lt;a class="td-heading-self-link" href="#%e8%87%aa%e5%ae%9a%e4%b9%89%e6%8e%92%e5%ba%8f%e7%9b%ae%e5%bd%95" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>众人的需求: &lt;a href="https://forum.obsidian.md/t/file-explorer-custom-sort/1602">https://forum.obsidian.md/t/file-explorer-custom-sort/1602&lt;/a>&lt;/p>
&lt;p>解决方案：&lt;/p>
&lt;p>&lt;a href="https://forum.obsidian.md/t/file-explorer-custom-sort/1602/212">https://forum.obsidian.md/t/file-explorer-custom-sort/1602/212&lt;/a>&lt;/p>
&lt;ul>
&lt;li>主要是想用 Bartender 插件解决，而安装 Bartender 插件需要使用 Brat 插件（也可以直接下载文件放到 plugin/ 目录中）&lt;/li>
&lt;li>Install BRAT from community plugin panel and then install Bartender beta plugin using BRAT
&lt;ul>
&lt;li>&lt;a href="https://github.com/nothingislost/obsidian-bartender">https://github.com/nothingislost/obsidian-bartender 2&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/TfTHacker/obsidian42-brat">https://github.com/TfTHacker/obsidian42-brat&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>then, step 1-2-3
&lt;ul>
&lt;li>&lt;img src="https://forum.obsidian.md/uploads/default/original/3X/9/1/9150dde8b90e4a93b6edc58cd4cc51c9f4f61abb.png" alt="image">&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>do not forget step 3&lt;/li>
&lt;li>&lt;img src="https://forum.obsidian.md/uploads/default/original/3X/2/d/2d251736195adb913c336f7d309be7ab7c4f25ef.png" alt="image">&lt;/li>
&lt;/ul>
&lt;p>then you can drag as you like&lt;/p>
&lt;h2 id="templater">Templater&lt;a class="td-heading-self-link" href="#templater" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/SilentVoid13/Templater">https://github.com/SilentVoid13/Templater&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>比官方自带的模板功能更强大&lt;/p>
&lt;h2 id="excalidraw">Excalidraw&lt;a class="td-heading-self-link" href="#excalidraw" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>让 Obsidian 可以渲染 Excalidraw 图，并且可以在 Obsidian 中编辑 Excalidraw 图。&lt;/p>
&lt;h2 id="image-auto-upload-plugin">Image auto upload Plugin&lt;a class="td-heading-self-link" href="#image-auto-upload-plugin" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>图片自动上传到图床，依赖系统中启动的 PicGo 或 PicList&lt;/p>
&lt;h2 id="image-toolkit">Image Toolkit&lt;a class="td-heading-self-link" href="#image-toolkit" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>可以在 Obsidian 中打开图片&lt;/p>
&lt;h1 id="最佳实践">最佳实践&lt;a class="td-heading-self-link" href="#%e6%9c%80%e4%bd%b3%e5%ae%9e%e8%b7%b5" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;a href="https://sspai.com/post/68989">用 Git 在 Android 和 Windows 间同步 Obsidian 数据库&lt;/a>&lt;/p>
&lt;ul>
&lt;li>Android 上使用了 MGit 工具&lt;/li>
&lt;/ul>
&lt;h2 id="properties-vs-tags">Properties vs Tags&lt;a class="td-heading-self-link" href="#properties-vs-tags" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;a href="https://forum.obsidian.md/t/the-remaining-advantages-of-tags-over-properties-in-obsidian/69436?page=2">https://forum.obsidian.md/t/the-remaining-advantages-of-tags-over-properties-in-obsidian/69436?page=2&lt;/a>&lt;/p>
&lt;p>先有的 Tag 后有的 Properties&lt;/p>
&lt;p>老式 Tag 需要在文章内部使用 &lt;code>#STRING&lt;/code> 来标识&lt;/p>
&lt;p>Property 可以在开头的 &lt;code>---&lt;/code> 包裹的文章元数据中使用 tags 关键字添加 Tag。&lt;/p>
&lt;p>个人感觉只有在一个知识点被用在多个大类的情况下，才需要添加标签，否则该知识点通过目录即可进行分类，比如一个程序又属于网络工具，又属于安全工具，那么若是放在安全目录下则可以添加网络标签，放在网络目录下则可以添加安全标签。&lt;/p>
&lt;p>或者某个知识点的文章，不太好分类，甚至具有嵌套类型等，都可以通过标签解决。&lt;/p>
&lt;h1 id="常见问题">常见问题&lt;a class="td-heading-self-link" href="#%e5%b8%b8%e8%a7%81%e9%97%ae%e9%a2%98" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h2 id="win11-打开多个仓库的任务栏图标无法合并">Win11 打开多个仓库的任务栏图标无法合并&lt;a class="td-heading-self-link" href="#win11-%e6%89%93%e5%bc%80%e5%a4%9a%e4%b8%aa%e4%bb%93%e5%ba%93%e7%9a%84%e4%bb%bb%e5%8a%a1%e6%a0%8f%e5%9b%be%e6%a0%87%e6%97%a0%e6%b3%95%e5%90%88%e5%b9%b6" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;a href="https://forum.obsidian.md/t/opening-multiple-vaults-creates-multiple-taskbar-icons-is-this-intended-windows-11/55346/3">https://forum.obsidian.md/t/opening-multiple-vaults-creates-multiple-taskbar-icons-is-this-intended-windows-11/55346/3&lt;/a>&lt;/p>
&lt;ul>
&lt;li>取消所有任务栏固定&lt;/li>
&lt;li>打开一个仓库，假如为 A&lt;/li>
&lt;li>再打开另一个仓库，假如为 B&lt;/li>
&lt;li>把 B 固定到任务栏&lt;/li>
&lt;li>关闭所有 obsidian 窗口，再从任务栏打开时，就会发现所有 Obsidian 的仓库都合并到一起了。&lt;/li>
&lt;/ul></description></item><item><title>Docs: WPS</title><link>https://desistdaydream.github.io/docs/%E5%AD%A6%E4%B9%A0/PKM/WPS/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/%E5%AD%A6%E4%B9%A0/PKM/WPS/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;h2 id="参考">参考：&lt;a class="td-heading-self-link" href="#%e5%8f%82%e8%80%83" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;/blockquote>
&lt;p>垃圾软件&lt;/p>
&lt;p>安装时修改路径后提示没有权限，然后点继续就直接安装到 C 盘了，点取消才能安装到其他路径。&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/wps/wps_fuck_1.png" alt="image.png">&lt;/p>
&lt;h1 id="关联文件与配置">关联文件与配置&lt;a class="td-heading-self-link" href="#%e5%85%b3%e8%81%94%e6%96%87%e4%bb%b6%e4%b8%8e%e9%85%8d%e7%bd%ae" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;ul>
&lt;li>&lt;strong>C:/ProgramData/kingsoft/&lt;/strong> # 安装程序运行时下载的文件保存路径&lt;/li>
&lt;li>&lt;strong>C:/rogram Files (x86)/Kingsoft/&lt;/strong> # 不知道干啥用的&lt;/li>
&lt;li>C:/Users/DesistDaydream/AppData/Local/kingsoft/ # 不知道干啥用的&lt;/li>
&lt;li>C:/Users/DesistDaydream/AppData/Roaming/kingsoft/ # 不知道干啥用的&lt;/li>
&lt;li>&lt;strong>%我的文档%/KingsoftData/&lt;/strong> #
&lt;ul>
&lt;li>暂时不知道win中“我的文档”的变量是什么。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>%我的文档%/WPS Cloud Files/&lt;/strong>
&lt;ul>
&lt;li>&lt;code>./${ACCOUNT_ID}/cachedata/${RANDOM_NUM}/&lt;/code> # 金山文档通过 wps 方式打开后，会将文件缓存到该目录。每个文件占一个目录。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>Docs: 写作</title><link>https://desistdaydream.github.io/docs/%E5%AD%A6%E4%B9%A0/PKM/%E5%86%99%E4%BD%9C/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/%E5%AD%A6%E4%B9%A0/PKM/%E5%86%99%E4%BD%9C/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/ruanyf/document-style-guide">GitHub 项目，ruanyf/document-style-guide&lt;/a>中文技术文档写作规范&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h1 id="写作技巧">写作技巧&lt;a class="td-heading-self-link" href="#%e5%86%99%e4%bd%9c%e6%8a%80%e5%b7%a7" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>原文链接：&lt;a href="https://mp.weixin.qq.com/s/I38Wr-CGEbaMrT-xj3QZ8A">https://mp.weixin.qq.com/s/I38Wr-CGEbaMrT-xj3QZ8A&lt;/a>&lt;/p>
&lt;h2 id="技术写作的价值">技术写作的价值&lt;a class="td-heading-self-link" href="#%e6%8a%80%e6%9c%af%e5%86%99%e4%bd%9c%e7%9a%84%e4%bb%b7%e5%80%bc" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>写作并不是一件轻松的事情，特别是技术内容创作，它不仅需要兴趣来驱动，而且需要耐心，所以写作这个活动注定不适合所有人。我想无论是写作、演讲，还是录制视频，除了利益驱动无可厚非之外，大家肯定&lt;strong>都有一个额外的共同目的：分享&lt;/strong>。&lt;/p>
&lt;p>至于分享之后为了得到什么，那都不重要，比如我就是为了满足自己的虚荣心，说白了就是装 x，看着自己的文章被越来越多的人阅读，越来越多的人认识我，加我微信好友的人越来越多，自己在圈内越来越出名，虚荣心得到了极大的满足。既满足了自己的虚荣心，又造福了广大读者，有何不可呢？&lt;/p>
&lt;p>除了我说的这些，写作还有没有其他价值呢？还是拿我亲身经历举例子，我的一部分文章给我带来了全新的工作机会；还有一部分文章吸引了很多社区和团队的目光，主动来和我合作；所有的这一切让我结识了更多志同道合的朋友；当然，获取到大量关注后也给我带来了更多的收入，这个不必避讳。&lt;/p>
&lt;h1 id="写作工具">写作工具&lt;a class="td-heading-self-link" href="#%e5%86%99%e4%bd%9c%e5%b7%a5%e5%85%b7" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>工欲善其事，必先利其器。既然决定了进入“写作”这个战场，首当其冲的就是选一件称手的兵器，对于写作来说，这个兵器就是“写作工具”。选工具之前，先要明确一下自己偏好的排版格式，目前有两种主流的排版格式：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>富文本&lt;/strong>：富文本格式（Rich Text Format, 一般简称为 RTF）是由微软公司开发的跨平台文档格式。最大的特点是：&lt;strong>所见即所得&lt;/strong>，你把格式调整成什么样子，就会直接显示出什么样的效果。这一点和 Word 类似。目前微信公众号文章就是通过富文本来编辑的。&lt;/li>
&lt;li>&lt;strong>Markdown&lt;/strong>：Markdown 是一种轻量的标记语法，你可以理解为一种伪编程语言，和 HTML 有点像，只不过是专门为写作准备的极简格式。Markdown 的语法很简单，只有一些简单的符号，我们只需学习这几个简单的符号，然后插入到写作内容中，不用关心排版。&lt;/li>
&lt;/ul>
&lt;p>程序员大多都不喜欢使用 Word 这类富文本编辑器，因为不可控因素太多，各种形式、用法和风格，而且花样繁多，强依赖于编辑器，换个编辑器用法又不一样了。&lt;/p>
&lt;p>众望所归的选择还是 Markdown，排版都是可复制的，文字的排版只是多打几个符号而已，最终产出的只是一个纯文本，非常利于传播和迁移。所以 Markdown 才是程序员的最爱。&lt;/p>
&lt;p>目前市面上比较流行的 Markdown 编辑器琳琅满目，本文也无法为大家一一介绍，这里只推荐几个我认为最最最优秀的。&lt;/p>
&lt;h2 id="obsidian">Obsidian&lt;a class="td-heading-self-link" href="#obsidian" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>Obsidian 是一个支持双向链接的笔记管理软件，但我们用它来写 Markdown 是极好的！Obsidian 最新版本也实现了即时预览功能，只需在编辑器设置中将默认的编辑模式改为即时预览即可。&lt;/p>
&lt;p>可以看到其实时预览功能目前还有一些小缺陷，比如引用的样式渲染不太理想，不过后续这些问题都会被修复的，现在只是开始。&lt;/p>
&lt;p>&lt;a href="https://desistdaydream.github.io/docs/%E5%AD%A6%E4%B9%A0/PKM/Obsidian.md">Obsidian&lt;/a>&lt;/p>
&lt;h2 id="typora">Typora&lt;a class="td-heading-self-link" href="#typora" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;a href="https://www.typora.io/">https://www.typora.io/&lt;/a>&lt;/p>
&lt;p>Typora 最吸引人的特性就是它的即时渲染，也就是所谓的&lt;strong>所见即所得&lt;/strong>。一般的 Markdown 编辑器都分为编辑栏和预览栏，Typora 将其合二为一，实时预览，只要你敲入相应的标记符号就立马为你转换为对应的样式，就像写 Word 一样流畅自如。这是本文在 Typora 中的排版样式：&lt;/p>
&lt;p>遗憾的是 Typora 目前已经开始收费，但这是合理的，之前 Typora 发布的都是测试版，免费供大家使用，现在正式版开始取消免费，毕竟开发也需要付出，我们要尊重开发者，优质的产品值得付费。我们可以选择不用 Typora，但不必对其收费行为冷嘲热讽。&lt;/p>
&lt;h2 id="typedown">Typedown&lt;a class="td-heading-self-link" href="#typedown" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>Typora 平替，微软商店可直接安装&lt;/p>
&lt;p>&lt;a href="https://apps.microsoft.com/store/detail/typedown-%E8%BD%BB%E9%87%8F%E7%BA%A7-markdown-%E7%BC%96%E8%BE%91%E5%99%A8/9P8TCW4H2HB4">https://apps.microsoft.com/store/detail/typedown-%E8%BD%BB%E9%87%8F%E7%BA%A7-markdown-%E7%BC%96%E8%BE%91%E5%99%A8/9P8TCW4H2HB4&lt;/a>&lt;/p>
&lt;h2 id="vs-code">VS Code&lt;a class="td-heading-self-link" href="#vs-code" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>VS Code 虽然是一个代码编辑器，但由于它的功能过于强大，插件过于丰富，扩展性极强，所以人们也常常用它来写作。&lt;/p>
&lt;blockquote>
&lt;p>Visual Studio Code（简称 VS Code）是一个由微软开发，同时支持 Windows 、 Linux 和 macOS   等操作系统且开放源代码的代码编辑器，它支持测试，并内置了 Git 版本控制功能，同时也具有开发环境功能，例如代码补全（类似于  IntelliSense）、代码片段和代码重构等。该编辑器支持用户个性化配置，例如改变主题颜色、键盘快捷方式等各种属性和参数，同时还在编辑器中内置了扩展程序管理的功能。——维基百科&lt;/p>
&lt;/blockquote>
&lt;p>VS Code 借助插件的力量可以实现和 Typora 旗鼓相当的能力。VS Code 默认情况下内置了 Markdown 的预览功能，效果如下：&lt;/p>
&lt;p>要想实现即时预览的能力，就需要借助一款强大的插件：&lt;strong>Office Viewer&lt;/strong>。&lt;/p>
&lt;p>&lt;strong>这货不但可以实时预览编辑 Markdown，还能显示 PDF 文档和 Excel 表格，简直就是简直了。&lt;/strong>&lt;/p>
&lt;p>装好该插件后，需要在内置文件浏览器里依次&lt;strong>右键&lt;/strong> &amp;ndash;&amp;gt; &lt;strong>打开方式&lt;/strong>，&lt;/p>
&lt;p>然后在弹出的面板中选择 Office Viewer。&lt;/p>
&lt;h2 id="hackmd">Hackmd&lt;a class="td-heading-self-link" href="#hackmd" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;a href="https://hackmd.io/">https://hackmd.io/&lt;/a>&lt;/p>
&lt;p>除了个人创作外，有时我们也需要多人协作编辑 Markdown。即使是个人创作，有时也需要请多人帮忙提出改进建议。如果有这方面的需求，可以使用 Hackmd 来协作。在 Hackmd 中，正在编辑这篇文章的人可以同时看见其他协作者正在编辑的位置，编辑一段文字后还可以看见这段文字是谁写的，不同作者用不同颜色表示在这段文字的左边或者下面。还可以对选中的内容通过留言的形式提出改进的建议。&lt;/p>
&lt;h2 id="输入法">输入法&lt;a class="td-heading-self-link" href="#%e8%be%93%e5%85%a5%e6%b3%95" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>2024 年 4 月 17 日，搜狗自动右下角广告弹窗，卸载&lt;/p>
&lt;p>2024 年 4 月 18 日，讯飞输入法无法配置 ` 符号与 · 符号，就是说无法在中文环境下输入出来 ` 符号。&lt;/p>
&lt;ul>
&lt;li>不过卸载体验很好，&lt;code>${APPDAT}&lt;/code> 目录中的讯飞程序相关的数据在机器重启后，会自动清理了。&lt;/li>
&lt;/ul>
&lt;h1 id="写作类型">写作类型&lt;a class="td-heading-self-link" href="#%e5%86%99%e4%bd%9c%e7%b1%bb%e5%9e%8b" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>笔者目前工作的领域是云原生，更宽泛一点则是基础架构领域，这个领域的技术内容创作类型大概可以分为以下几类：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>问题解决类&lt;/strong>：该类文章以问题为切入点，整篇文章都是围绕着如何解决这个问题，包括问题的前因后果、问题的解决思路与步骤、避坑方法等。比如这篇：&lt;a href="https://mp.weixin.qq.com/s?__biz=Mzg4NTU0MzEyMg==&amp;amp;mid=2247493225&amp;amp;idx=1&amp;amp;sn=5f65300c7ba0e7135f29d0472fb3fe74&amp;amp;scene=21#wechat_redirect">👉 凌晨 12 点突发 Istio 生产事故！一顿操作猛如虎解决了&lt;/a>。&lt;/li>
&lt;li>&lt;strong>安装部署类&lt;/strong>：这一类文章比较容易理解，就是记录某个开源项目的安装部署过程。例如这篇：&lt;a href="https://mp.weixin.qq.com/s?__biz=Mzg4NTU0MzEyMg==&amp;amp;mid=2247497768&amp;amp;idx=1&amp;amp;sn=78cf286f2679c7f4650d9db957fc0aca&amp;amp;scene=21#wechat_redirect">👉 使用 KubeKey 快速离线部署 KubeSphere 集群&lt;/a>。&lt;/li>
&lt;li>&lt;strong>最佳实践类&lt;/strong>：比安装部署类的文章更加深入，涉及到实际业务的落地，需要根据实际业务来规划架构，众多因素都要考虑在内，比如高可用、弹性伸缩、故障检测、保持连接等等。例如这篇：&lt;a href="https://mp.weixin.qq.com/s?__biz=Mzg4NTU0MzEyMg==&amp;amp;mid=2247498622&amp;amp;idx=1&amp;amp;sn=4605e987614e019f82402dff5d5e995a&amp;amp;scene=21#wechat_redirect">👉 去哪儿网业务大规模容器化最佳实践&lt;/a>。&lt;/li>
&lt;li>&lt;strong>技术分享类&lt;/strong>：这类文章纯粹就是为了分享自己学习某个技术的心得体会，比如这篇：&lt;a href="https://mp.weixin.qq.com/s?__biz=Mzg4NTU0MzEyMg==&amp;amp;mid=2247492544&amp;amp;idx=1&amp;amp;sn=e30cc7ba0eb1f714618a004896e1414e&amp;amp;scene=21#wechat_redirect">👉KubeSphere 核心架构浅析&lt;/a>。&lt;/li>
&lt;li>&lt;strong>行业趋势观点类&lt;/strong>：这类文章主要是发表一些个人观点，比如这篇：&lt;a href="https://mp.weixin.qq.com/s?__biz=Mzg4NTU0MzEyMg==&amp;amp;mid=2247484312&amp;amp;idx=1&amp;amp;sn=950fe14a140d1d367e8616f981bd61a4&amp;amp;scene=21#wechat_redirect">👉 云原生的 WebAssembly 能取代 Docker 吗？。&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>还有一些其他的类型我就不列举了，主要就是上面这几类。&lt;/p>
&lt;h2 id="写作流程">写作流程&lt;a class="td-heading-self-link" href="#%e5%86%99%e4%bd%9c%e6%b5%81%e7%a8%8b" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>确定好写作方向后，就可以构思写作内容了。当然了，首先得确定文章主题才能构思内容，没确定文章主题之前是没法提笔就写的。&lt;/p>
&lt;h3 id="构思">构思&lt;a class="td-heading-self-link" href="#%e6%9e%84%e6%80%9d" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>一篇好的文章主题需要一个好的 Idea，好的 Idea 需要持续积累。我会根据自己平时关注的资讯、读到的文章来确定近期准备写的原创文章主题，如果我读到比较优秀的英文文章，也会把它纳入到翻译的计划之内。俗话说得好，好记性不如烂笔头，不管是原创还是翻译，这些文章主题都要靠记录才能积累下来，你可以记到纸上，也可以记到笔记软件里。我自己就在使用 Obsidian 记录平时积累的写作主题：&lt;/p>
&lt;h3 id="大纲">大纲&lt;a class="td-heading-self-link" href="#%e5%a4%a7%e7%ba%b2" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>当你决定开始根据某个文章主题动笔写作之前，还有一件重要的事情要做，那就是列出文章的大纲。先列出文章的大纲会让你的写作事半功倍，有了大纲就有了清晰的脉络，层次分明，不会像无头苍蝇一样想到哪写到哪。我一般都是用思维导图的形式来呈现文章的大纲，VS Code 有专门的插件（markmap[5]）可以帮助我们将文章的多级标题转化为思维导图的形式。&lt;/p>
&lt;p>或者你也可以直接使用专门的思维导图工具来疏理大纲，比如我使用的是在线版的 processon：&lt;/p>
&lt;p>大纲同时也是文章的多级标题，比如我这篇文章的大纲就包含了二级标题和三级标题，一般不建议使用四级标题，除非实在有必要。&lt;/p>
&lt;h1 id="文章排版">文章排版&lt;a class="td-heading-self-link" href="#%e6%96%87%e7%ab%a0%e6%8e%92%e7%89%88" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>技术文章的排版有很多需要注意的规范，本文就不一一说明了，感兴趣的可以参考阮一峰的中文技术文档写作规范[7]。&lt;/p>
&lt;p>本文只强调几个需要重点注意的事项：&lt;/p>
&lt;ul>
&lt;li>Markdown 的标记语法有多种表示形式，比如无序列表既可以使用 &amp;lsquo;+&amp;rsquo; 号，也可以使用 &amp;lsquo;-&amp;rsquo;、&amp;rsquo;*&amp;rsquo; 等符号，大家在写作时尽量统一自己的标记语法，如果你想使用 &amp;lsquo;+&amp;rsquo; 号，就全部使用 &amp;lsquo;+&amp;rsquo; 号，不然看起来会很混乱。&lt;/li>
&lt;li>每一个段落之间隔一个&lt;strong>空行&lt;/strong>，尽量避免冗长的段落，如果你的段落内容很长，想办法把它拆分成更多的段落。&lt;/li>
&lt;li>中英文混排时需要在中英文之间插入一个空格，比如：
&lt;code>错误：KubeSphere集群 正确：KubeSphere 集群&lt;/code>
为了省去自己手动㪣空格的麻烦，可以借助一些第三方工具来完成。如果你有自己的个人博客，可以使用 『赫蹏[8]』这个库，他是专为中文内容展示设计的排版样式增强，基于通行的中文排版规范而来，可自动为你的中英文之间加空格。如果你想在写作时就解决空格的烦恼，搜狗输入法也可以帮你自动加空格，具体的配置方法自己去搜一下，我电脑上没有搜狗输入法，不方便演示。&lt;/li>
&lt;/ul>
&lt;h1 id="辅助工具">辅助工具&lt;a class="td-heading-self-link" href="#%e8%be%85%e5%8a%a9%e5%b7%a5%e5%85%b7" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>真正动笔写作的时候，你会发现有很多地方需要借助第三方工具来辅助自己，比如画架构图、截图等等，如果不选择合适的工具来完成这些操作，你可能会举步维艰。&lt;/p>
&lt;h2 id="截图">截图&lt;a class="td-heading-self-link" href="#%e6%88%aa%e5%9b%be" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>macOS 从 10.14 开始便自带截图 App，只需要按下 Shift-Command-5（或使用启动台）以打开“截屏”就能显示该工具。功能非常丰富，既可以捕捉整个屏幕，也可以捕捉屏幕的一部分或者之间捕捉特定的窗口，除此之外还可以录制屏幕。&lt;/p>
&lt;p>除了自带的截图工具，还有一些第三方的截图工具也很优秀&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Snipaste&lt;/strong> # 老牌的&lt;/li>
&lt;li>&lt;strong>PixPin&lt;/strong> # 像 Snipaste，但是带 OCR 功能&lt;/li>
&lt;li>&lt;strong>Shottr&lt;/strong> # 这个截图工具只有 3.2M，运行速度非常快，包含了智能测距、滚动截图、元素智能删除、OCR 文本识别、距离标注等很多别的工具需要付费才提供的功能&lt;/li>
&lt;li>&lt;strong>iShot&lt;/strong> # 和 Shottr 类似，也很强大，比 Shottr 强的地方在于可以手动控制滚动截屏的速度。&lt;/li>
&lt;/ul>
&lt;h2 id="文章配图">文章配图&lt;a class="td-heading-self-link" href="#%e6%96%87%e7%ab%a0%e9%85%8d%e5%9b%be" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>俗话说得好：&lt;strong>一图胜千言&lt;/strong>。没有配图的文章是枯燥乏味的，尤其是技术文章。好的配图可以帮助读者更轻松地理解文章的内容，增强文章的可读性。大家写技术文章画的最多的配图应该就是架构图了，这方面的画图工具有很多可供选择，还是按照之前的惯例，我只推荐几个特别优秀的。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>excalidraw.com&lt;/strong> # 一款开源的虚拟手绘风格白板。
&lt;ul>
&lt;li>&lt;a href="https://github.com/excalidraw/excalidraw">https://github.com/excalidraw/excalidraw&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>diagrams.net&lt;/strong> # 之前叫 draw.io，现在改名了。这是一个在线的画图工具，非常强大，内置了各种常用的元素和图标。除了网页版之外，还有一个开源的桌面客户端，支持 macOS、Windows 和 Linux 平台，客户端项目地址：&lt;a href="https://github.com/jgraph/drawio-desktop">&lt;strong>https://github.com/jgraph/drawio-desktop&lt;/strong>&lt;/a>。&lt;/li>
&lt;li>&lt;strong>Cloudcraft&lt;/strong> # 如果你更倾向于炫酷的三维架构图，可以选择使用 Cloudcraft，只不过内置的三维图标有点少哦。&lt;/li>
&lt;/ul>
&lt;h2 id="图床">图床&lt;a class="td-heading-self-link" href="#%e5%9b%be%e5%ba%8a" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>无论是截图还是自己画的图，最终都要上传到某个地方然后提供一个外网可以直接访问的链接，这个用来存图片的地方就叫做『&lt;strong>图床&lt;/strong>』。&lt;/p>
&lt;p>目前网上免费的图床太多了，最知名的应该就是 sm.ms 了，登录用户有 5GB 的免费空间，个人用几年足矣。不过服务器不在国内，访问速度不太行。&lt;/p>
&lt;p>除了免费的图床之外，还有一些本身不是图床的平台也可以拿来当图床用，比如 GitHub。。新建个专门的仓库用来存图片，简直不要太香。如果嫌速度慢，可以使用著名的 CDN jsDelivr 来反代，到国内速度贼快，国内线路走的是 CDN 提供商网宿。推荐使用这个 Github 增强油猴脚本，可以直接显示 GitHub 文件的各个加速 CDN 的链接。&lt;/p>
&lt;p>但是很遗憾，去年年底 jsDelivr 在国内的域名备案被吊销了，导致国内 CDN 提供商网宿移除了 jsDelivr 的账号，就是因为滥用的人太多，羊毛薅得太狠了。现在 jsDelivr 到国内的速度也没啥优势了，比 GitHub 也没强多少。&lt;/p>
&lt;p>最靠谱的方式还是得花钱，把图片存到对象存储中，比如 {阿里,华为,etc.} 的 OSS 之类的，40 G 一年 9 块钱。&lt;/p>
&lt;h2 id="图片管理">图片管理&lt;a class="td-heading-self-link" href="#%e5%9b%be%e7%89%87%e7%ae%a1%e7%90%86" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>选择了适合自己的图床后，还要考虑到『上传和管理图片』这个老大难问题。你想想，假设我使用 GitHub 作为图床，我要上传一张图片，就需要先 commit，然后 push，然后再打开仓库复制这张图片的链接，最后再插入到 Markdown 中，想想都能吐血。&lt;/p>
&lt;p>能不能快一点，从上传图片开始到最后将图片插入到 Markdown 中不超过 5 秒钟，能不能做到？当然可以，前辈们早就想到了这个问题，并产出了优秀的图片上传管理工具。这里只推荐两款：&lt;/p>
&lt;h3 id="picgo">PicGo&lt;a class="td-heading-self-link" href="#picgo" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/Molunerfinn/PicGo">GitHub 项目，Molunerfinn/PicGo&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/PicGo/Awesome-PicGo">GitHub 项目，PicGo/Awesome-PicGo&lt;/a> 使用 PicGo 的一系列很棒的项目，包括插件和二次开发的产品。&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>PicGo 支持全平台，开源且免费，支持丰富的插件系统，推荐使用。使用 PicGo 上传图片的流程是这样的：先复制图片，然后通过一个快捷键上传图片到对应的图床（并直接返回一个该图片的直链到你的系统剪切板），此时你只需到你的 Markdown 内容中粘贴就完事了，整个过程不超过 5 秒钟。&lt;/p>
&lt;h4 id="picgo关联文件与配置">PicGo关联文件与配置&lt;a class="td-heading-self-link" href="#picgo%e5%85%b3%e8%81%94%e6%96%87%e4%bb%b6%e4%b8%8e%e9%85%8d%e7%bd%ae" aria-label="Heading self-link">&lt;/a>&lt;/h4>
&lt;p>运行时与配置保存路径&lt;/p>
&lt;p>Windows&lt;/p>
&lt;ul>
&lt;li>&lt;strong>%APPDATA%/picgo/&lt;/strong> # 运行时数据保存路径
&lt;ul>
&lt;li>&lt;strong>./data.json&lt;/strong> # 配置文件&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Linux 下只有基础目录与 Windows 不同，基础目录下的文件和目录都一样&lt;/p>
&lt;ul>
&lt;li>&lt;strong>$XDG_CONFIG_HOME/picgo/&lt;/strong> 或者 &lt;strong>~/.config/picgo/&lt;/strong> # 运行时数据保存路径&lt;/li>
&lt;/ul>
&lt;h3 id="piclist">PicList&lt;a class="td-heading-self-link" href="#piclist" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/Kuingsmile/PicList">GitHub 项目，Kuingsmile/PicList&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>基于PicGo的二次开发版本，增加了云存储管理和相册云端同步删除功能&lt;/p>
&lt;h3 id="upic">uPic&lt;a class="td-heading-self-link" href="#upic" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>uPic 只支持 macOS 平台，使用体验比 PicGo 更好，推荐 macOS 用户使用。&lt;/li>
&lt;/ul>
&lt;h2 id="文章格式化">文章格式化&lt;a class="td-heading-self-link" href="#%e6%96%87%e7%ab%a0%e6%a0%bc%e5%bc%8f%e5%8c%96" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>如果文章写完后你发现有很多中英文之间没加空格，你是不是还得回过头去一个一个加空格？别担心，这个问题也有专门的工具来解决。先推荐一款开源的优化排版工具 HeySpace，这是一个使用 Go 语言编写的命令行工具，核心功能是在中英文之间添加空格，除此之外还可以去除连续两个以上的空行，感兴趣可以自己试用。&lt;/p>
&lt;p>再推荐一款公众号在线排版网站墨滴，可以将 Markdown 转换为富文本，然后直接粘贴到公众号的编辑器中。虽然这是一款公众号排版工具，但我们可以利用它的部分功能来实现格式化的目的，只需将 Markdown 内容粘贴到编辑器中，然后点击『格式化文档』即可。&lt;/p>
&lt;h1 id="引用链接">引用链接&lt;a class="td-heading-self-link" href="#%e5%bc%95%e7%94%a8%e9%93%be%e6%8e%a5" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>[5] markmap: &lt;a href="https://github.com/gera2ld/markmap-vscode">&lt;em>https://github.com/gera2ld/markmap-vscode&lt;/em>&lt;/a>&lt;/p>
&lt;p>[6] processon: &lt;a href="https://www.processon.com/i/564c654de4b02cebc6408721">&lt;em>https://www.processon.com/i/564c654de4b02cebc6408721&lt;/em>&lt;/a>&lt;/p>
&lt;p>[8] 赫蹏: &lt;a href="https://github.com/sivan/heti">&lt;em>https://github.com/sivan/heti&lt;/em>&lt;/a>&lt;/p>
&lt;p>[9] Shottr: &lt;a href="https://shottr.cc/">&lt;em>https://shottr.cc/&lt;/em>&lt;/a>&lt;/p>
&lt;p>[10] iShot: &lt;a href="https://apps.apple.com/cn/app/ishot-%E6%88%AA%E5%9B%BE-%E9%95%BF%E6%88%AA%E5%9B%BE-%E6%A0%87%E6%B3%A8%E5%B7%A5%E5%85%B7/id1485844094">&lt;em>https://apps.apple.com/cn/app/ishot-截图-长截图-标注工具/id1485844094&lt;/em>&lt;/a>&lt;/p>
&lt;p>[11] Omnigraffle: &lt;a href="https://www.omnigroup.com/omnigraffle">&lt;em>https://www.omnigroup.com/omnigraffle&lt;/em>&lt;/a>&lt;/p>
&lt;p>[12] diagrams.net: &lt;a href="https://app.diagrams.net">&lt;em>https://app.diagrams.net&lt;/em>&lt;/a>&lt;/p>
&lt;p>[13] Cloudcraft: &lt;a href="https://app.cloudcraft.co">&lt;em>https://app.cloudcraft.co&lt;/em>&lt;/a>&lt;/p>
&lt;p>[14] sm.ms: &lt;a href="https://sm.ms/">&lt;em>https://sm.ms/&lt;/em>&lt;/a>&lt;/p>
&lt;p>[15] jsDelivr: &lt;a href="https://www.jsdelivr.com">&lt;em>https://www.jsdelivr.com&lt;/em>&lt;/a>&lt;/p>
&lt;p>[16] 网宿: &lt;a href="https://www.wangsu.com/">&lt;em>https://www.wangsu.com/&lt;/em>&lt;/a>&lt;/p>
&lt;p>[17] Github 增强油猴脚本: &lt;a href="https://greasyfork.org/zh-CN/scripts/412245-github-%E5%A2%9E%E5%BC%BA-%E9%AB%98%E9%80%9F%E4%B8%8B%E8%BD%BD">&lt;em>https://greasyfork.org/zh-CN/scripts/412245-github-增强-高速下载&lt;/em>&lt;/a>&lt;/p>
&lt;p>[19] uPic: &lt;a href="https://github.com/gee1k/uPic">&lt;em>https://github.com/gee1k/uPic&lt;/em>&lt;/a>&lt;/p>
&lt;p>[20] HeySpace: &lt;a href="https://github.com/louisun/HeySpace">&lt;em>https://github.com/louisun/HeySpace&lt;/em>&lt;/a>&lt;/p>
&lt;p>[21] 墨滴: &lt;a href="https://www.mdnice.com/">&lt;em>https://www.mdnice.com/&lt;/em>&lt;/a>&lt;/p></description></item></channel></rss>