<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦的站点 – DPI</title><link>https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Network-analysis/</link><description>Recent content in DPI on 断念梦的站点</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Network-analysis/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: NetFlow</title><link>https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Network-analysis/NetFlow/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Network-analysis/NetFlow/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/NetFlow">Wiki，NetFlow&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>NetFlow 是 1996 年左右在 Cisco 路由器上引入的一项功能，它能够在 IP 网络流量进入或退出接口时收集该流量。通过分析 NetFlow 提供的数据，网络管理员可以确定流量的来源和目的地、服务类别以及拥塞原因等信息。&lt;/p>
&lt;p>NetFlow 通常由三个部分组成&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Flow exporter(流导出器)&lt;/strong> # 将数据包聚合成流，并将流记录导出到一个或多个流收集器。&lt;/li>
&lt;li>&lt;strong>Flow collector(流收集器)&lt;/strong> # 负责从流导出器接收的流数据的接收、存储和预处理。&lt;/li>
&lt;li>&lt;strong>Analysis application(分析程序)&lt;/strong> # 在入侵检测或流量分析的情况下分析接收到的流数据。&lt;/li>
&lt;/ul>
&lt;p>截至 2012 年，大多数防火墙和基于软件的 IP 路由器仍在使用类似于 NetFlow 交换的技术。例如 Linux 使用的 &lt;a href="https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Kernel/Network/Linux%20%E7%BD%91%E7%BB%9C%E6%B5%81%E9%87%8F%E6%8E%A7%E5%88%B6/Netfilter%20%E6%B5%81%E9%87%8F%E6%8E%A7%E5%88%B6%E7%B3%BB%E7%BB%9F/Netfilter%20%E6%B5%81%E9%87%8F%E6%8E%A7%E5%88%B6%E7%B3%BB%E7%BB%9F.md">Netfilter&lt;/a> 框架的 conntrack 功能。&lt;/p>
&lt;h1 id="netflow-与-dpi">NetFlow 与 DPI&lt;a class="td-heading-self-link" href="#netflow-%e4%b8%8e-dpi" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>下面回答来自 ChatGPT 3.5&lt;/p>
&lt;p>NetFlow（网络流量流）和DPI（深度数据包检测）是两种不同的网络监测和分析技术，它们在某些方面有联系，但主要关注的方面有所不同。&lt;/p>
&lt;p>&lt;strong>NetFlow:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>NetFlow是一种网络流量分析技术，通常由Cisco开发和使用。&lt;/li>
&lt;li>它通过在网络设备（如路由器和交换机）上捕获和记录网络流量的摘要信息来工作。这些信息包括源IP地址、目标IP地址、端口号、协议等。&lt;/li>
&lt;li>NetFlow生成的报告提供了对流量模式、流量源和目标等的高层次摘要，适用于流量分析和网络性能监测。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>DPI:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>DPI是深度数据包检测的缩写，是一种更为深入地分析网络数据包内容的技术。&lt;/li>
&lt;li>DPI不仅关注流量的源和目标，还深入解析数据包的内容，可以识别应用程序、协议、用户行为等。&lt;/li>
&lt;li>DPI通常用于实时检测网络中的应用层协议，以便对网络流量进行更深入的分析，包括识别特定应用程序或服务，检测潜在的威胁和执行策略。&lt;/li>
&lt;/ul>
&lt;p>联系和区别：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>联系：&lt;/strong>
&lt;ul>
&lt;li>NetFlow和DPI都提供了对网络流量的分析能力，但关注的层次和信息的深度不同。&lt;/li>
&lt;li>在一些情况下，可以将两者结合使用，通过NetFlow提供的摘要信息定位特定流量，然后使用DPI深入分析该流量的内容。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>区别：&lt;/strong>
&lt;ul>
&lt;li>NetFlow更专注于流量的高层次概要，而DPI更关注深入的数据包内容分析。&lt;/li>
&lt;li>NetFlow通常用于流量监测、性能优化和容量规划，而DPI主要用于安全分析、应用层识别和用户行为分析。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="分类">分类&lt;a class="td-heading-self-link" href="#%e5%88%86%e7%b1%bb" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>Wiki 中的分类: &lt;a href="https://en.wikipedia.org/wiki/Category:Computer_network_analysis">Computer network analysis&lt;/a>，还分类下还包括 &lt;a href="https://en.wikipedia.org/wiki/Category:Network_analyzers">Network analyers&lt;/a>，这里有 DPI&lt;/p>
&lt;blockquote>
&lt;p>#network #security&lt;/p>
&lt;/blockquote></description></item><item><title>Docs: DPI</title><link>https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Network-analysis/DPI/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Network-analysis/DPI/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Deep_packet_inspection">Wiki，Deep packet inspection&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;strong>Deep packet inspection(深度数据包检测，简称 DPI)&lt;/strong> 是一种用于 &lt;strong>Network analysis(网络分析)&lt;/strong> 的 行为、技术、方法，它详细检查计算机网络上传输的数据包，并可能根据情况采取警报、阻止、重新路由或记录等行动。可以通过 软件、硬件、软硬结合 多种方式实现 DPI。&lt;/p>
&lt;blockquote>
&lt;p>用白话说：DPI 不是一种特定的技术或协议，而是一种处理流量的方式，凡是可以处理 OSI 模型 4 层往上的程序或设备，都可以称为 DPI 的实现。&lt;/p>
&lt;/blockquote>
&lt;p>可以通过多种手段获取数据包以进行 DPI。比如 &lt;a href="https://en.wikipedia.org/wiki/Port_mirroring">Port mirroring(端口镜像)&lt;/a>、etc. ；也可以通过纯硬件设备，比如 &lt;a href="https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Network%20analysis/Network%20tap.md">Network tap(网络分流器)&lt;/a>、etc. ，通过这些硬件设备复制数据流并将其发送到分析器工具以检查数据包。&lt;/p>
&lt;blockquote>
&lt;p>Notes: 随着技术的发展，DPI 包含的概念也在增加，有时候从广义上来说 DPI 甚至可以看做是由多个组件组成的系统，其中包括的组件甚至可以是 Network tap 以便在复制数据包的同时处理数据包，还不影响原始数据包的传递。&lt;/p>
&lt;/blockquote>
&lt;p>DPI 始于 20 世纪 90 年代。早期的 DPI 实现有：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/RMON" title="RMON">RMON&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Sniffer_(protocol_analyzer)" title="Sniffer (protocol analyzer)">Sniffer&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Wireshark" title="Wireshark">Wireshark&lt;/a>&lt;/li>
&lt;li>etc.&lt;/li>
&lt;/ul>
&lt;p>支持 DPI 的设备或程序能够查看 OSI 模型的第 2 层和第 3 层以外的情况。在某些情况下，可以调用 DPI 来查看 OSI 模型的第 2-7 层。这包括标头和数据协议结构以及消息的有效负载。当设备根据 OSI 模型第 3 层之外的信息查找或采取其他操作时，将调用 DPI 功能。 DPI 可以识别的数据包特征又很多：&lt;/p>
&lt;ul>
&lt;li>协议&lt;/li>
&lt;li>HTTP 请求类型&lt;/li>
&lt;li>etc.&lt;/li>
&lt;/ul>
&lt;p>在许多情况下，End points 可以利用加密或混淆技术来逃避 DPI 的识别。&lt;/p>
&lt;p>&lt;strong>实现 DPI 的可以是硬件或软件&lt;/strong>。基本 DPI 功能包括数据包标头和协议字段的分析。&lt;/p>
&lt;p>基于 DPI 可以实现的功能&lt;/p>
&lt;ul>
&lt;li>僵木蠕系统&lt;/li>
&lt;li>流控系统&lt;/li>
&lt;li>etc.&lt;/li>
&lt;/ul>
&lt;h1 id="最佳实践">最佳实践&lt;a class="td-heading-self-link" href="#%e6%9c%80%e4%bd%b3%e5%ae%9e%e8%b7%b5" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;a href="https://en.wikipedia.org/wiki/Beam_splitter">https://en.wikipedia.org/wiki/Beam_splitter&lt;/a>&lt;/p>
&lt;p>通常来说，为了保证高可用，DPI 等安全设备需要与 &lt;a href="https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Network%20analysis/Bypass%20tap.md">Bypass tap&lt;/a> 共同使用，以保证 DPI 设备异常时流量不会中断。&lt;/p>
&lt;p>在有些不要求高可用的场景中，不需要 DPI 的流量过滤，只需要流量分析的能力时，也可以不用 Bypass tap，而使用市面上的 &lt;a href="https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/Networking%20device/Fiber-optic%20splitter.md">Fiber-optic splitter(分光器)&lt;/a>，将光的 20% 分到 DPI 或其他流量处理设备中进行后续的流量分析。&lt;/p>
&lt;h1 id="deepdynamic-flow-inspection">Deep/Dynamic Flow Inspection&lt;a class="td-heading-self-link" href="#deepdynamic-flow-inspection" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;a href="https://www.telecomtrainer.com/dfi-deep-flow-inspection/">https://www.telecomtrainer.com/dfi-deep-flow-inspection/&lt;/a>&lt;/p>
&lt;p>&lt;strong>Deep/Dynamic Flow Inspection(深度/动态流量监测，简称 DFI)&lt;/strong> 没有 Wiki，也没有什么官方说明。通常是做 DFI 企业内部交流时使用的术语&lt;/p>
&lt;p>由于 DPI 虽然识别精度高，但需要对特定协议的应用层特征被动跟踪，所以对加密或混淆的流量识别比较困难。此时需要使用 DFI。&lt;/p>
&lt;p>DFI 依赖一个“模型”（类似 AI 中的模型的概念），通过流量特征进行识别，比如 P2P 流量。&lt;/p>
&lt;h1 id="待整理">待整理&lt;a class="td-heading-self-link" href="#%e5%be%85%e6%95%b4%e7%90%86" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>基础数据管理&lt;/p>
&lt;p>活跃资源管理&lt;/p>
&lt;p>访问日志管理&lt;/p>
&lt;p>信息安全管理&lt;/p>
&lt;p>流量采集管理&lt;/p>
&lt;p>数据安全管理&lt;/p>
&lt;p>网络安全管理&lt;/p></description></item><item><title>Docs: Bypass tap</title><link>https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Network-analysis/Bypass-tap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Network-analysis/Bypass-tap/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Bypass_switch">Wiki，Bypass tap&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;strong>Bypass tap(旁路分路器)&lt;/strong> 也称为 Bypass switch(旁路交换机)。Bypass tap 是一种硬件设备，可以与安全设备并联并串联到网络链路中，为安全设备提供 &lt;strong>fail-safe access(故障时可安全访问)&lt;/strong> 的能力。&lt;/p>
&lt;p>Bypass tap 通常至少有 4 个端口。&lt;/p>
&lt;ul>
&lt;li>A 和 B 两个端口串联，且中间不经过任何电路，Bypass tap 本身不运行的情况下也可以保证 A 到 B 之间的链路畅通。当安全设备正常运行时，A 到 B 的连接是断开的；&lt;/li>
&lt;li>C 和 D 是用来监控安全设备的端口，安全设备正常运行时，流量通过 C 和 D 端口，相当于将安全设备串联进网络中。&lt;/li>
&lt;li>当检测到安全设备出现异常时，将会切断 C 和 D 的端口，将流量转交给 A 和 B 以保证网络链路上的数据不间断。&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/information_security/202402220011706.png" alt="bypass.drawio.png">&lt;/p>
&lt;p>通常来说，这两种情况可以用两种模式来概括&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Normal mode&lt;/strong> # 流量经过 Bypass 连接的其他设备后，在发送到下一跳的设备
&lt;ul>
&lt;li>有的地方也称为 &lt;strong>控制模式&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Bypass mode&lt;/strong> # 流量直接经过 Bypass tap 到下一跳的设备
&lt;ul>
&lt;li>有的地方也称为 &lt;strong>直通模式&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>很多时候会在 Bypass tap 中加入 &lt;a href="docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/Networking%20device/Fiber-optic%20splitter.md">Fiber-optic splitter&lt;/a> 能力，让 Bypass 可以分光。在中文环境中也有的将 Bypass tap 称为 Optical swap(光切换设备，Optiswap)、光开关、etc.&lt;/p>
&lt;/blockquote></description></item><item><title>Docs: Network tap</title><link>https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Network-analysis/Network-tap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Network-analysis/Network-tap/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Network_tap">Wiki，Network tap&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;strong>Network tap(网络分流器)&lt;/strong> 是监视本地网络上的事件的系统。通常是一个硬件设备，一般至少有 3 个端口：A 端口、B 端口、monitor(监听) 端口。分流器可以让数据在 A 与 B 之间的传输实时无阻碍得通过，同时还将相同的数据复制到 monitor 端口，从而使得第三方分析数据。&lt;/p>
&lt;blockquote>
&lt;p>tap 本身有窃听的意思，Network tap 本质上可以算是 网络窃听器、网络监听器&lt;/p>
&lt;/blockquote>
&lt;h1 id="network-tap-与-fiber-optic-splitter">Network tap 与 Fiber-optic splitter&lt;a class="td-heading-self-link" href="#network-tap-%e4%b8%8e-fiber-optic-splitter" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>下面是来自 ChatGPT 3.5 的回答：&lt;/p>
&lt;p>Network Tap 和 &lt;a href="https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/Networking%20device/Fiber-optic%20splitter.md">Fiber-optic splitter&lt;/a> 在网络中起着类似但不完全相同的作用&lt;/p>
&lt;ul>
&lt;li>&lt;strong>功能相似：&lt;/strong> Network Tap 设备和光纤分路器都用于在网络中监视和管理流量。它们都允许用户获取网络流量并将其转发到指定的目的地进行分析、存储或其他处理。&lt;/li>
&lt;li>&lt;strong>不同之处：&lt;/strong> 光纤分路器主要用于光纤网络中的信号分发，将光信号从一个源头分发到多个目的地。而 Network Tap 设备则是一种专门设计用于复制网络数据流的设备，通常用于复制传统以太网网络中的数据流，使得监视和分析网络流量变得更容易。&lt;/li>
&lt;li>&lt;strong>配合使用：&lt;/strong> 在一些情况下，Network tap 设备和光纤分路器可以结合使用，特别是在光纤网络中。光纤分路器可以用于将光信号分发到多个 Network tap 设备，从而使得网络流量可以被复制到多个目的地进行监视和分析。&lt;/li>
&lt;/ul>
&lt;p>综上所述，Network Tap 和 Fiber-optic splitter 都是网络中重要的监视和管理工具，它们可以在光纤网络中配合使用，以实现更全面和高效的网络流量监视和分析。&lt;/p>
&lt;p>我个人理解，Fiber-optic splitter 的底层原理是物理规则对光子的控制；而 Network tap 可以控制的流量不是单只光纤的流量，还包含电口中的流量，本质是通过设备将传入的流量完全复制一份到另一个端口传出。&lt;/p>
&lt;h1 id="最佳实践">最佳实践&lt;a class="td-heading-self-link" href="#%e6%9c%80%e4%bd%b3%e5%ae%9e%e8%b7%b5" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>有时候 Network tap 镜像的流量并不需要转发到其他的流量分析工具中，而是让一个 DPI 设备把 Network tap、流量分析、etc. 一系列功能集成到一起，组成一个完整而全面的安全设备。&lt;/p>
&lt;p>Network tap 可以接在 Fiber-optic splitter 后，以镜像分光过来的流量而不影响最原始的用户通信流量。&lt;/p></description></item></channel></rss>