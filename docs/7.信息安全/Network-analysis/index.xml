<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦的站点 – Network analysis</title><link>https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Network-analysis/</link><description>Recent content in Network analysis on 断念梦的站点</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Network-analysis/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Network analysis</title><link>https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Network-analysis/Network-analysis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Network-analysis/Network-analysis/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>Network analysis(网络分析) 依赖很多基础的流量处理功能以组成完整的系统&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Network%20analysis/Port%20mirroring.md">Port mirroring&lt;/a> # 流量镜像是网络分析的基础。没有端口镜像将流量镜像出来，那么所有的流量分析程序都要使用原始流量，这是绝对不可接受的。除了具体的流量封堵外，任何分析，都应该使用镜像出来的流量。&lt;/li>
&lt;li>etc.&lt;/li>
&lt;/ul>
&lt;h1 id="最佳实践">最佳实践&lt;a class="td-heading-self-link" href="#%e6%9c%80%e4%bd%b3%e5%ae%9e%e8%b7%b5" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h2 id="基于-dpi-的网络分析">基于 DPI 的网络分析&lt;a class="td-heading-self-link" href="#%e5%9f%ba%e4%ba%8e-dpi-%e7%9a%84%e7%bd%91%e7%bb%9c%e5%88%86%e6%9e%90" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>在网络分析系统中，&lt;a href="https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Network%20analysis/DPI.md">DPI&lt;/a> 设备除了数据包的检查与处置外，通常还可能具有 &lt;a href="https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Network%20analysis/Port%20mirroring.md">Port mirroring&lt;/a>(端口镜像)、&lt;a href="https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/Networking%20device/Fiber-optic%20splitter.md">Fiber-optic splitter&lt;/a>、etc. 相关的流量复制能力，这些被 DPI 复制的流量将会送到 &lt;a href="https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Network%20analysis/Network%20packet%20broker.md">Network packet broker&lt;/a> 设备中以进行聚合、过滤，然后再转发给后端的业务系统。这是一种常见的网络流量分析系统，拿到了流量就相当于有了数据，至于数据如何用，根据具体业务情况而定。&lt;/p>
&lt;p>这些业务系统通常包括&lt;/p>
&lt;ul>
&lt;li>僵木蠕监测与处置系统&lt;/li>
&lt;li>流控系统&lt;/li>
&lt;li>话单系统&lt;/li>
&lt;li>流量深度分析系统&lt;/li>
&lt;li>etc.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="Excalidraw/network_analysis_system.excalidraw.md" alt="network_analysis_system.excalidraw">&lt;/p></description></item><item><title>Docs: Port mirroring</title><link>https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Network-analysis/Port-mirroring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Network-analysis/Port-mirroring/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Port_mirroring">Wiki，Port mirroring&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;strong>Port mirroring(端口镜像)&lt;/strong> 是交换机上的一个功能，可以将一个端口上经过的所有流量复制一份到另一个端口上。这种方式通常用于需要监控网络流量的环境中，原始流量不受影响，被复制的流量发往后端设备以进一步分析，比如 IDS(入侵监测系统)、etc. 。Cisco 公司生成的交换机上的 Port mirroring 功能称为 &lt;strong>Switched Port Analyzer(简称 SPAN)&lt;/strong> 或 &lt;strong>Remote Switched Port Analyzer(简称 RSPAN)&lt;/strong>，有时候称为 Span Port。&lt;/p>
&lt;p>网络工程师或管理员使用端口镜像来分析和调试数据或诊断网络上的错误。它可以帮助管理员密切关注网络性能并在出现问题时向他们发出警报。它可用于镜像单个或多个接口上的入站或出站流量（或两者）。&lt;/p>
&lt;p>随着网络分析需求的增加，很多时候也会把 Port mirroring 形容成流量镜像的功能，只有具备了 Port mirroring 的系统，才能真正实现 &lt;a href="https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Network%20analysis/Network%20analysis.md">Network analysis&lt;/a>。&lt;/p>
&lt;h1 id="span">SPAN&lt;a class="td-heading-self-link" href="#span" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;strong>Switched Port Analyzer(简称 SPAN)&lt;/strong>&lt;/p></description></item><item><title>Docs: DPI</title><link>https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Network-analysis/DPI/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Network-analysis/DPI/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Deep_packet_inspection">Wiki，Deep packet inspection&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;strong>Deep packet inspection(深度数据包检测，简称 DPI)&lt;/strong> 是一种用于 &lt;strong>Network analysis(网络分析)&lt;/strong> 的 行为、技术、方法，它详细检查计算机网络上传输的数据包，并可能根据情况采取 发送警报、阻止数据包传输、重新路由、记录(或者说镜像)流量 等行动。DPI 的这些功能通常用于 确定应用程序行为基线、分析网络使用情况、排除网络性能故障、确保数据格式正确、检查恶意代码、窃听和互联网审查、以及其他目的。&lt;/p>
&lt;p>可以通过 软件、硬件、软硬结合 多种方式实现 DPI。&lt;/p>
&lt;p>支持 DPI 的设备或程序能够查看 OSI 模型的第 2 层和第 3 层以外的情况。在某些情况下，可以调用 DPI 来查看 OSI 模型的第 2-7 层。这包括标头和数据协议结构以及消息的有效负载。当设备根据 OSI 模型第 3 层之外的信息查找或采取其他操作时，将调用 DPI 功能。 DPI 可以识别的数据包特征又很多：&lt;/p>
&lt;ul>
&lt;li>协议&lt;/li>
&lt;li>HTTP 请求类型&lt;/li>
&lt;li>数据包中的数据特征&lt;/li>
&lt;li>etc.&lt;/li>
&lt;/ul>
&lt;p>IP数据包有多个报头；网络设备只需要使用其中第一个（IP 标头）即可正常操作，但使用第二个标头（例如 TCP 或 UDP）通常被认为是 &lt;strong>Stateful packet inspection(浅层数据包检查)&lt;/strong>（通常称为状态数据包检查）&lt;/p>
&lt;blockquote>
&lt;p>用白话说：DPI 不是一种特定的技术或协议，而是一种处理流量的方式。&lt;/p>
&lt;/blockquote>
&lt;p>DPI 始于 20 世纪 90 年代。早期的 DPI 实现有：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/RMON" title="RMON">RMON&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Sniffer_(protocol_analyzer)" title="Sniffer (protocol analyzer)">Sniffer&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Wireshark" title="Wireshark">Wireshark&lt;/a>&lt;/li>
&lt;li>etc.&lt;/li>
&lt;/ul>
&lt;p>在许多情况下，End points 可以利用加密或混淆技术来逃避 DPI 的识别。&lt;/p>
&lt;p>实现 DPI 的设备通常都会 &lt;strong>串联&lt;/strong> 进现有的网络链路中，以便实现阻止或丢弃数据包的能力。为了保证高可用，串联到链路中的 DPI 设备需要与 &lt;a href="https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Network%20analysis/Bypass%20swtich.md">Bypass swtich&lt;/a> 共同使用，以保证 DPI 设备异常时流量不会中断。&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/information_security/bypass_and_dpi_1.png" alt="bypass.drawio.png">&lt;/p>
&lt;p>跟复杂网络环境中，DPI 设备也许还会嵌入流量复制的能力，架构可以参考 &lt;a href="https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Network%20analysis/Network%20analysis.md">Network analysis&lt;/a> 中的最佳实践部分。&lt;/p>
&lt;h1 id="deepdynamic-flow-inspection">Deep/Dynamic Flow Inspection&lt;a class="td-heading-self-link" href="#deepdynamic-flow-inspection" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;a href="https://www.telecomtrainer.com/dfi-deep-flow-inspection/">https://www.telecomtrainer.com/dfi-deep-flow-inspection/&lt;/a>&lt;/p>
&lt;p>&lt;strong>Deep/Dynamic Flow Inspection(深度/动态流量监测，简称 DFI)&lt;/strong> 没有 Wiki，也没有什么官方说明。通常是做 DFI 企业内部交流时使用的术语&lt;/p>
&lt;p>由于 DPI 虽然识别精度高，但需要对特定协议的应用层特征被动跟踪，所以对加密或混淆的流量识别比较困难。此时需要使用 DFI。&lt;/p>
&lt;p>DFI 依赖一个“模型”（类似 AI 中的模型的概念），通过流量特征进行识别，比如 P2P 流量。&lt;/p></description></item><item><title>Docs: Bypass swtich</title><link>https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Network-analysis/Bypass-swtich/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Network-analysis/Bypass-swtich/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Bypass_switch">Wiki，Bypass switch&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;strong>Bypass switch(旁路交换机)&lt;/strong> 是一种硬件设备，可以与安全设备并联并串联到网络链路中，为安全设备提供 &lt;strong>fail-safe access(故障时可安全访问)&lt;/strong> 的能力。&lt;/p>
&lt;blockquote>
&lt;p>tips: Bypass switch 早期也有 &lt;strong>Bypass tap(旁路分路器)&lt;/strong> 的含义，具有一部分 &lt;a href="https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Network%20analysis/Network%20tap.md">Network tap&lt;/a> 的能力，后来随着发展，Bypass 仅仅作为提供高可用所用，Tap 能力由更专业的设备实现。&lt;/p>
&lt;/blockquote>
&lt;p>Bypass tap 通常至少有 4 个端口。&lt;/p>
&lt;ul>
&lt;li>A 和 B 两个端口串联，且中间不经过任何电路，Bypass tap 本身不运行的情况下也可以保证 A 到 B 之间的链路畅通。当安全设备正常运行时，A 到 B 的连接是断开的；&lt;/li>
&lt;li>C 和 D 是用来监控安全设备的端口，安全设备正常运行时，流量通过 C 和 D 端口，相当于将安全设备串联进网络中。&lt;/li>
&lt;li>当检测到安全设备出现异常时，将会切断 C 和 D 的端口，将流量转交给 A 和 B 以保证网络链路上的数据不间断。&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/information_security/bypass_and_dpi_1.png" alt="bypass.drawio.png">&lt;/p>
&lt;p>通常来说，这两种情况可以用两种模式来概括&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Normal mode&lt;/strong> # 流量经过 Bypass 的 C 与 D 端口，到达其他设备后，再发送到下一跳的设备
&lt;ul>
&lt;li>有的地方也称为 &lt;strong>控制模式&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Bypass mode&lt;/strong> # 流量经过 Bypass 的 A 与 B 端口，直接到达下一跳的设备
&lt;ul>
&lt;li>有的地方也称为 &lt;strong>直通模式&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>在中文环境中也有的将 Bypass tap 称为 Optical swap(光切换设备，Optiswap)、光开关、etc.&lt;/p>
&lt;/blockquote></description></item><item><title>Docs: Network tap</title><link>https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Network-analysis/Network-tap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Network-analysis/Network-tap/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Network_tap">Wiki，Network tap&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;strong>Network tap(网络分流器)&lt;/strong> 是一种通过类似 &lt;a href="https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Network%20analysis/Port%20mirroring.md">Port mirroring&lt;/a> 技术实现的流量监听方式。实现了 Network tap 能力的硬件设备可以用来监视本地网络上的事件。Network tap 设备一般至少有 3 个端口：A 端口、B 端口、monitor(监听) 端口。Network tap 可以让数据在 A 与 B 之间的传输实时无阻碍得通过，同时还将相同的数据复制到 monitor 端口，从而使得第三方分析数据。&lt;/p>
&lt;blockquote>
&lt;p>[!tips]
tap 本身有窃听的意思，Network tap 本质上可以算是 网络窃听器、网络监听器。厂商们为了更好的售卖产品而美化了该词的含义，而且也根据 Tap 设备具体的功能（复制流量分到另一个端口就相当于分流了），把 tap 的含义改为了分流。还扩展了一下 tap 这个词成 terminal access point(终端接入点)&lt;/p>
&lt;/blockquote>
&lt;p>Network tap 在狭义上通常只有 1 分 多 的能力，适用在简单的流量不大的网络环境中，若是在流量巨大且复杂的网络中，想实现 多 分 多的能力（汇聚与分流），则需要使用 &lt;a href="https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Network%20analysis/Network%20packet%20broker.md">Network packet broker&lt;/a> 技术。&lt;/p>
&lt;h1 id="network-tap-与-network-packet-broker">Network tap 与 Network packet broker&lt;a class="td-heading-self-link" href="#network-tap-%e4%b8%8e-network-packet-broker" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>Network tap 通常是在小流量场景中串接进链路中；而 Network packet broker 则通常是在大流量、复杂的网络场景中，并接到链路上。&lt;/p>
&lt;p>在 多 分 多 的场景中，数据来源是多条链路，如何处理多条链路中的流量而不会产生混乱，则是 Network packet broker 需要解决的重要问题。&lt;/p>
&lt;h1 id="network-tap-与-fiber-optic-splitter">Network tap 与 Fiber-optic splitter&lt;a class="td-heading-self-link" href="#network-tap-%e4%b8%8e-fiber-optic-splitter" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>Network Tap 和 &lt;a href="https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/Networking%20device/Fiber-optic%20splitter.md">Fiber-optic splitter&lt;/a> 在网络中起着类似但不完全相同的作用。都是用来实现类似流量复制的逻辑。&lt;/p>
&lt;ul>
&lt;li>作用的层次
&lt;ul>
&lt;li>分光器：物理层（i.e. L1 层 ）。基于物理规则对光子产生影响。&lt;/li>
&lt;li>分流器：数据链路层及以上（L2 层 - L7 层）。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>是否有源（i.e. 是否有 5-tuple 需要处理）
&lt;ul>
&lt;li>分光器：无源&lt;/li>
&lt;li>分流器：有源&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>功能
&lt;ul>
&lt;li>分光器：只能做 1 对多全流量复制&lt;/li>
&lt;li>分流器：支持更加智能的功能，比如流量汇聚、负载均衡、报文过滤、报文编辑、流量分发（需要 NPB 的能力）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>在一些情况下，Network tap 和 光纤分路器 可以结合使用。光纤分路器可以用于将光信号分发到 Network tap 设备，从而使得网络流量可以被复制到多个目的地进行监视和分析。&lt;/p></description></item><item><title>Docs: Network packet broker</title><link>https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Network-analysis/Network-Packet-Broker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Network-analysis/Network-Packet-Broker/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Data_monitoring_switch">Wiki，Data monitoring switch&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/164828332">知乎，什么是TAP分流器/交换机，有哪些品牌&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;strong>Network Packet Broker(网络数据包代理，简称 NPB)&lt;/strong> 是一种比 &lt;a href="https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Network%20analysis/Network%20tap.md">Network tap&lt;/a> 更强大的流量处置技术，实现了 NPB 的设备接收来自大量链路上的流量，将其汇聚在设备内部处理（e.g. 过滤、etc.）后，再将流量分发给另一侧的其他设备。这种行为也可以称为&lt;strong>汇聚分流&lt;/strong>，对应的，实现了 NPB 的设备可以称为 &lt;strong>汇聚分流设备&lt;/strong>。&lt;/p>
&lt;blockquote>
&lt;p>Network tap 通常只能是 1 对 2 让流量复制一份；而 NPB 可以实现 1 对 多，多 对 多，且除了基本的窃听流量（i.e. 复制流量）功能外，还可以实现多种多样的流量处理能力&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="Excalidraw/npb.excalidraw.md" alt="npb.excalidraw">&lt;/p>
&lt;blockquote>
&lt;p>还有一些词汇也是用来描述实现 NPB 功能的设备：Data monitoring switch(数据监控交换机)、Data access switch(数据访问交换机)、Tool aggregator(工具聚合器)、Net tool optimizer(网络工具优化器)、Distributed filter tap(分布式过滤器)、Network Traffic Aggregator(网络流量聚合器)、Aggregation Taps(聚合)&lt;/p>
&lt;/blockquote>
&lt;p>NPB 设备通常是作为 &lt;font color="#ff0000">&lt;strong>旁路设备&lt;/strong>&lt;/font> 以 &lt;strong>并接&lt;/strong> 的方式接入到主链路中，接收的是来自 &lt;a href="https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Network%20analysis/DPI.md">DPI&lt;/a>、其他 NPB 设备、etc. 的流量。&lt;/p>
&lt;p>NPB 内部的核心能力是对来自多条链路的流量实现了 &lt;a href="https://desistdaydream.github.io/docs/4.%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1/%E5%90%8C%E6%BA%90%E5%90%8C%E5%AE%BF.md">同源同宿&lt;/a>，保证多条链路的流量不会混乱。NPB 对接收到的大量流量进行汇聚、过滤、分发，NPB 并不需要串联进进链路中执行具体的像安全设备似的丢弃报文、阻断流量相关的任务。主要是基于如下需求产生的&lt;/p>
&lt;p>&lt;img src="Excalidraw/why_we_need_npb.excalidraw.md" alt="why_we_need_npb.excalidraw|600">&lt;/p>
&lt;h1 id="汇聚分流">汇聚分流&lt;a class="td-heading-self-link" href="#%e6%b1%87%e8%81%9a%e5%88%86%e6%b5%81" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/513767410">知乎，TAP交换机初探&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/515058186">知乎，谈谈TAP交换机的架构&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>TAP 交换机其实不是一个合适的叫法，但行业内大部分人都习惯于这个叫法。并且，在国内它还有很多其他叫法，比如：镜像交换机、TAP分流器、流量分流器、流量汇聚分流器、NPB、TAP 等等，一般情况之下，讲的是同一个东西。实际上，这个玩意是从国外传到国内的，由于语言上、理解上、厂商引导上的差异，造成了国内多种不同的叫法。&lt;/p>
&lt;p>追根溯源，先谈谈国外 TAP 交换机的情况。提到国外 TAP 交换机，总归是绕不开一家公司的，那就是 Gigamon。这玩意是不是这个公司的首创我不知道，但这公司在 TAP 交换机市场上的地位，相当于思科在交换机市场上的地位，是绝对的扛把子。当然，近几年随着国内市场的发展，Gigamon 在国内某些行业做的不错之外，由于其高昂的价格和国内市场导入力度的原因（个人感觉），这个品牌也只是少数业内人士了解，市场接受度和品牌影响力并不是很大。&lt;/p>
&lt;p>说完这点渊源，再来澄清几个概念。&lt;/p>
&lt;p>TAP，英文全称是 Test Access Point，直译就是测试接入点。光看名字还是不知道是个啥玩意。我说一样东西，读者朋友可能就知道 TAP 大概是个什么东西了，那就是比较常见的分光器。国内很多做光模块的厂商都涉及这部分业务，实际上一些 TAP 厂商也是从分光器厂商延伸过来的。当然，TAP 并不等同于分光器，后面会简单说下差别。&lt;/p>
&lt;p>国外也有很多做 TAP 的厂商，既然 Gigamon 作为行业老大，我就以他们为标准，来讨论 TAP 的情况，其他大同小异。他们把 TAP 细分成 4 种，简单讲就是 Passive TAP、Active TAP、vTAP 和 Bypass TAP。分的太细了，其中 vTAP 是用于虚拟网络的，这个以后再说。先说另外三种，Passive TAP 功能最简单，跟交换机上的流量镜像功能一样，就是把流量复制一份，可光可电。不同在于流量镜像是交换机的功能，Passive TAP 是在链路上增加一个设备，并且就是一个无源非管理设备（这不就是分光器么，当然分光器不能用在网线上）。Active TAP 是有源的，尤其对于光信号来讲，有源 TAP 是重新调制光信号，可以适应不同波长的模块，进而实现不同长度的传输距离。Bypass TAP也是有源的，增加了一个断电保护，也就是断电后，仍然能够正常工作（断电后应该还是有一些影响的，部分功能会失效）。&lt;/p>
&lt;p>无论什么 TAP，只能做到一路进，两路出，也就是复制一份流量。当然TAP设备上一般是多组一分二组成的，相互之间是独立的。我如果希望一路进三路甚至更多出，也就是复制两份及以上的流量，怎么办，TAP 是搞不定的，这就要提到下面这种设备了。&lt;/p>
&lt;p>NPB，Network Packet Broker，实际上大家通常讲的 TAP 交换机是这个设备，而不是上面的 TAP 设备。因为上面的 TAP 设备在实际应用中，更多的还是使用分光器和交换机镜像功能来解决。从 NPB 的英文名称直译对大多数人来讲，还是很费解，都不知道咋翻译（网络报文代理？网络报文掮客？网络报文经纪人？）。按照 Gigamon 的翻译是流量汇聚器，其实我不喜欢这个名字，我更喜欢流量汇聚分流器，我觉得这个名字更贴切，流量汇聚器只提了流量的汇聚，这个设备的还有一部分重要功能就是分流，汇聚分流器更加全面。下面我就以汇聚分流器来称呼这个设备。&lt;/p>
&lt;p>汇聚分流器从硬件上和交换机的形态类似，有机框式的，更多的是盒式的。功能上要比 TAP 强很多，TAP 就是简单一分二，汇聚分流器除了一分二以外，还可以一分多，还可以增加很多额外很实用功能，这个我会在另外的文章专门介绍。&lt;/p>
&lt;h2 id="国内情况">国内情况&lt;a class="td-heading-self-link" href="#%e5%9b%bd%e5%86%85%e6%83%85%e5%86%b5" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>好的东西自然要拿来，国内有众多优秀的TAP、汇聚分流器厂商，并且有几家依靠这块业务已经做到公司上市了。需要再次说明的是，国内对汇聚分流器的称呼五花八门，基本上说的是同一种东西，比如TAP交换机、镜像交换机、分流器、TAP分流器、流量分流器、流量交换机等，很少有交NPB的，可能都觉得NPB太费解吧。&lt;/p>
&lt;p>不同于交换机市场有几大巨头的存在，国内汇聚分流器市场还没有特别大的厂商，哪怕是上市公司，这部分产值也不是特别巨大，跟交换机产值不在一个量级上，从几百万、几千万到几个亿都哟，能够上亿的就算比较大了（我讲的是汇聚分流器的产值，不是整个公司的）。也可能是市场规模并不是特别大，所以传统大厂看不上，哪怕在方案上用得到，也一般以OEM或者外采为主。&lt;/p>
&lt;p>在技术成熟度上，国内厂商的技术能力还是不错的，不必盲从迷信于国外厂商。每个厂商都有自己独到之处，功能和性能也不输于国外的这些厂商。&lt;/p>
&lt;h1 id="npb-厂家">NPB 厂家&lt;a class="td-heading-self-link" href="#npb-%e5%8e%82%e5%ae%b6" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;ul>
&lt;li>Gigamon，海外市场的扛把子，这个市场的先驱者，必须要尊重，列在第一个。&lt;/li>
&lt;li>上海恒为，一个依靠汇聚分流器做到上市的公司，很不错，不过现在业务扩展得很多。&lt;/li>
&lt;li>中新赛克，也是一家做到上市的公司，特种行业做得不错，以机框式产品为主，应该也会推出盒式产品，不多说。&lt;/li>
&lt;li>苏州盛科，这个做国产化交换芯片起家的公司，基于他们自研的芯片，研发的汇聚分流器产品，品类挺全，技术实力很强。我接触这一块产品就是从他们开始的，也是接触最多的，必须要感谢一个，后面我还会写一些这类产品测评、方案类的文章，也都是以他们产品为基础的。&lt;/li>
&lt;li>其他还有一些厂商，体量都差不多，产品也都有一些独到之处，就不一一列举了&lt;/li>
&lt;/ul></description></item><item><title>Docs: NetFlow</title><link>https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Network-analysis/NetFlow/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Network-analysis/NetFlow/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/NetFlow">Wiki，NetFlow&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>NetFlow 是 1996 年左右在 Cisco 路由器上引入的一项功能，它能够在 IP 网络流量进入或退出接口时收集该流量。通过分析 NetFlow 提供的数据，网络管理员可以确定流量的来源和目的地、服务类别以及拥塞原因等信息。&lt;/p>
&lt;p>NetFlow 通常由三个部分组成&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Flow exporter(流导出器)&lt;/strong> # 将数据包聚合成流，并将流记录导出到一个或多个流收集器。&lt;/li>
&lt;li>&lt;strong>Flow collector(流收集器)&lt;/strong> # 负责从流导出器接收的流数据的接收、存储和预处理。&lt;/li>
&lt;li>&lt;strong>Analysis application(分析程序)&lt;/strong> # 在入侵检测或流量分析的情况下分析接收到的流数据。&lt;/li>
&lt;/ul>
&lt;p>截至 2012 年，大多数防火墙和基于软件的 IP 路由器仍在使用类似于 NetFlow 交换的技术。例如 Linux 使用的 &lt;a href="https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Kernel/Network/Linux%20%E7%BD%91%E7%BB%9C%E6%B5%81%E9%87%8F%E6%8E%A7%E5%88%B6/Netfilter/Netfilter.md">Netfilter&lt;/a> 框架的 conntrack 功能。&lt;/p>
&lt;h1 id="netflow-与-dpi">NetFlow 与 DPI&lt;a class="td-heading-self-link" href="#netflow-%e4%b8%8e-dpi" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>下面回答来自 ChatGPT 3.5&lt;/p>
&lt;p>NetFlow（网络流量流）和DPI（深度数据包检测）是两种不同的网络监测和分析技术，它们在某些方面有联系，但主要关注的方面有所不同。&lt;/p>
&lt;p>&lt;strong>NetFlow:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>NetFlow是一种网络流量分析技术，通常由Cisco开发和使用。&lt;/li>
&lt;li>它通过在网络设备（如路由器和交换机）上捕获和记录网络流量的摘要信息来工作。这些信息包括源IP地址、目标IP地址、端口号、协议等。&lt;/li>
&lt;li>NetFlow生成的报告提供了对流量模式、流量源和目标等的高层次摘要，适用于流量分析和网络性能监测。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>DPI:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>DPI是深度数据包检测的缩写，是一种更为深入地分析网络数据包内容的技术。&lt;/li>
&lt;li>DPI不仅关注流量的源和目标，还深入解析数据包的内容，可以识别应用程序、协议、用户行为等。&lt;/li>
&lt;li>DPI通常用于实时检测网络中的应用层协议，以便对网络流量进行更深入的分析，包括识别特定应用程序或服务，检测潜在的威胁和执行策略。&lt;/li>
&lt;/ul>
&lt;p>联系和区别：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>联系：&lt;/strong>
&lt;ul>
&lt;li>NetFlow和DPI都提供了对网络流量的分析能力，但关注的层次和信息的深度不同。&lt;/li>
&lt;li>在一些情况下，可以将两者结合使用，通过NetFlow提供的摘要信息定位特定流量，然后使用DPI深入分析该流量的内容。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>区别：&lt;/strong>
&lt;ul>
&lt;li>NetFlow更专注于流量的高层次概要，而DPI更关注深入的数据包内容分析。&lt;/li>
&lt;li>NetFlow通常用于流量监测、性能优化和容量规划，而DPI主要用于安全分析、应用层识别和用户行为分析。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="分类">分类&lt;a class="td-heading-self-link" href="#%e5%88%86%e7%b1%bb" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>Wiki 中的分类: &lt;a href="https://en.wikipedia.org/wiki/Category:Computer_network_analysis">Computer network analysis&lt;/a>，还分类下还包括 &lt;a href="https://en.wikipedia.org/wiki/Category:Network_analyzers">Network analyers&lt;/a>，这里有 DPI&lt;/p></description></item></channel></rss>