<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cryptography on 断念梦的站点</title><link>https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Cryptography/</link><description>Recent content in Cryptography on 断念梦的站点</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Cryptography/index.xml" rel="self" type="application/rss+xml"/><item><title>Cryptography</title><link>https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Cryptography/Cryptography/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Cryptography/Cryptography/</guid><description>概述 参考：
Wiki, Cryptography Cryptography(密码学)。大多数现代密码可以通过多种方式进行分类
第一种分类方式：依据加密时对明文的分解方式 具有固定大小的块，称为 Block cipher 适用于连续的符号留，称为 Stream cipher 第二种分类方式：依据密钥的使用方式 使用相同密码加密/解密的，称为 对称密钥加密 使用不同密钥加密/解密的，称为 公开密钥加密 或 非对称密钥加密 密码学背景 在现代时代之前，密码学着眼于消息的机密性（即加密），即将消息从一种可理解的形式转换为一种难以理解的形式，然后又在另一端再次转换，从而使拦截器或窃听者在没有秘密知识（即所需的密钥）的情况下无法读取该消息。用于解密该消息）。加密试图确保保密的通信，如那些间谍，军事领导人和外交官。在最近的几十年中，该领域已经超出了对机密性的关注范围，包括消息完整性检查，发送者/接收者身份验证，数字签名，交互式证明和安全计算等。
经典密码学 现代密码学 现在我们谈论的密码学，都是现代密码学的范畴
Public-key cryptography(公开密钥加密、非对称密钥加密)，以及根据公开密钥加密方式而衍生出的其他认证授权等基础设施，是当代最常见，也是最常用的方式.
现代加密方式 Symmetric Key Algorithm(对称密钥算法) 参考：
Wiki, Symmetir Key Algorithm 使用相同的密钥来加密明文和解密密文。Symmetric Key Algorithm 也称为 对称密钥加密
加密规范：
DES # Data Encryption Standard 数据加密标准。已被破解 3DES # 3 倍的 DES。最常用 AES # Advanced Encryption Standard(高级加密标准)。最常用 Blowfish Twofish IDEA # 商业加密算法 SKA 特点 特性：
加密和解密使用同一个密钥，效率高 将原始数据分割成固定大小的块，逐个进行加密 缺点：
密钥过多 密钥分发(分发密钥过程无法保证),为了解决对称加密算法每个人需要保存密钥过多的问题，可以使用公钥加密 数据来源无法确认 Public Key Cryptography(公开密钥密码学) 参考：</description></item><item><title>加密解密的最佳实践</title><link>https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Cryptography/%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86%E7%9A%84%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Cryptography/%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86%E7%9A%84%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</guid><description>概述 参考：
数据加密、请求参数加密、data 加密。
简单示例 公开密钥加密 与 对称密钥加密的常见流程，以 RSA 和 AES 举例：
向 A 发起请求（比如登录时），A 返回自身的 RSA 公钥，将公钥保存在本地 向 A 发起请求，随机生成 X 位（e.g. 16 位、32 位）长度的字符串，用于对称加密的 AES 密钥，需要携带如下信息 使用 A 的 公钥 加密 密钥 的结果可以放在请求头中 使用 密钥 加密要发送的数据放在请求体中 A 收到请求后 使用 RSA 私钥 解密请求头，以获取 密钥 使用 密钥 解密请求体中的数据 处理数据 使用 密钥 加密响应数据放在响应体中。</description></item></channel></rss>