<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Crawler on 断念梦的站点</title><link>https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Crawler/</link><description>Recent content in Crawler on 断念梦的站点</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Crawler/index.xml" rel="self" type="application/rss+xml"/><item><title>Crawler</title><link>https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Crawler/Crawler/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Crawler/Crawler/</guid><description>概述 参考：
Wiki, Web crawler Web crawler(网络爬虫)，大家习惯性简称 Crawler(爬虫)。Web crawler 是一种可以系统浏览互联网的机器人，通常都是被搜索引擎用来抓取网络资源做成搜索索引。
Crawler 与 Reverse engineering、Browser 都紧密相连。
学习资料 Spider Box # 爬虫逆向资源整合的网站
https://www.bilibili.com/video/BV1ub4y157g1 介绍视频 B 站视频
B 站，【B站最全Python爬虫教程】整整748集，从0基础小白到爬虫大神只要这套就够了！（JS逆向/APP逆向/爬虫实战零基础到精通） 更好一些 B 站，【全268集】清华大佬终于把Python爬虫讲明白了，从JS逆向、APP逆向、逆向算法、爬虫实战，这还学不会我退出IT圈！！ 实用工具 WebDriver # 自动控制浏览器
Easy Scrapper 浏览器插件
Easy Scraper - 可视化网络爬虫，不写代码，鼠标点点获取数据 https://github.com/NanmiCoder/MediaCrawler
小红书笔记 | 评论爬虫、抖音视频 | 评论爬虫、快手视频 | 评论爬虫、B 站视频 ｜ 评论爬虫、微博帖子 ｜ 评论爬虫 https://github.com/unclecode/crawl4ai
Crawl4AI 简化了异步网络爬行和数据提取，使其可供大型语言模型 (LLM) 和 AI 应用程序使用。</description></item><item><title>Python 爬虫工具</title><link>https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Crawler/Python-%E7%88%AC%E8%99%AB%E5%B7%A5%E5%85%B7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Crawler/Python-%E7%88%AC%E8%99%AB%E5%B7%A5%E5%85%B7/</guid><description>概述 参考：
2022 Python Web 爬虫武器库盘点 curl_cffi: 支持原生模拟浏览器 TLS/JA3 指纹的 Python 库
HTTP 请求 Requests Requests 是从 Python 2 就开始流行的 HTTP 请求库，至今已有十一年历史。当初 Python 内置的 http 库过于底层，用起来非常麻烦，Requests 的出现像救世主一样，slogan 就是“http for humans”，标版自己简单好用人性化。Requests 也确实对得起自己的 solgan，至少提供了以下便捷功能：
对常用的 HTTP 请求方法进行封装，可以非常方便的设置 url 参数，表单参数。 可以自动探测响应内容，自动对响应进行解码和解压缩。 自动维护长连接和连接池。 多文件上传。 自动处理分块响应。 会话和 cookie 持久化。 支持 HTTP/HTTPS 代理。 特别是会话维持、 cookie 持久化、设置代理，是写爬虫必须的。有段时间，知乎上 Python 话题非常火，Python 话题下最火的子话题就是 “Python 爬虫”，而 “Python 爬虫”最火的子话题就是 Requests。
但随着 Python 3.6、3.7、3.8、3.9、3.10 的发布，Python 社区对协程、Type Hint 的支持越来越成熟，同时有部分网站开始使用 HTTP/2 协议，Requests 对这些都不支持。从 2011 年开始，Requests 就显得不那么现代了。</description></item><item><title>最佳实践</title><link>https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Crawler/%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Crawler/%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</guid><description>概述 项目示例 https://github.com/lixi5338619/lxSpider 爬虫案例合集
https://github.com/onepureman/spider_draft 各种网站的登陆破解，仅供交流学习
https://github.com/Zero-S1/awesome-python-login-model python模拟登陆一些大型网站，还有一些简单的爬虫
https://github.com/rip-tyang/trend-archive # 来自不同网站的存档热/趋势主题/视频/等。Bilibili 的热门
裁判文书网 检索到想要的文书后如何批量下载？
参考: https://www.bilibili.com/video/BV1zg411a7cN （2023年12月2日10:08:12 已失效）
button=document.getElementsByClassName(&amp;#34;a_xzBox&amp;#34;) for (let i = 0; i&amp;lt;=5; i++){setTimeout(() =&amp;gt;button[i].click(),1000 *i)}</description></item></channel></rss>