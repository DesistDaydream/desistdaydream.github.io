<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>OpenSSL on 断念梦的站点</title><link>https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Crypto-mgmt/OpenSSL/</link><description>Recent content in OpenSSL on 断念梦的站点</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Crypto-mgmt/OpenSSL/index.xml" rel="self" type="application/rss+xml"/><item><title>OpenSSL</title><link>https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Crypto-mgmt/OpenSSL/OpenSSL/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Crypto-mgmt/OpenSSL/OpenSSL/</guid><description>概述 参考：
官网 GitHub 项目，openssl/openssl OpenSSL 是一个商业级且功能齐全的工具包，用于通用密码学和安全通信
OpenSSL 可以实现 TLS(传输层安全性) 和 SSL(安全套接字层) 协议的预期功能，类似于 OpenSSH 是 ssh 协议的实现
OpenSSL 主要包含两组东西：
openssl # 多用途的命令行工具 libraries # OpenSSL 库 libcrypto # 加密解密库 libssl # ssl 库，实现了 ssl 及 tls 的功能 OpenSSL 关联文件与配置 /etc/ssl/openssl.cnf # OpenSSL 的“命令行工具”和 “库”默认使用的配置文件。
RedHat 系默认配置文件在 /etc/pki/tls/openssl.cnf
如果想要使用 CA 功能，需要进行如下配置
touch /etc/pki/CA/index.txt echo 01 &amp;gt; /etc/pki/CA/serial openssl 命令行工具 参考：
Manual(手册)，openssl openssl 程序提供了丰富的子命令，以实现 TLS/SSL 网络协议以及它们所需要的相关加密标准。
Syntax(语法) openssl Command [ OPTIONS ] [ ARGUMENTS ]</description></item><item><title>OpenSSL 配置详解</title><link>https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Crypto-mgmt/OpenSSL/OpenSSL-%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Crypto-mgmt/OpenSSL/OpenSSL-%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/</guid><description>概述 参考：
Manual, 文件格式 Manual(手册), config(5) Manual(手册), x509v3_config(5) Manual(手册), openssl-req(1)-CONFIGURATION FILE FORMAT 部分 https://www.cnblogs.com/f-ck-need-u/p/6091027.html OpenSSL 配置文件为 OpenSSL 库及其二进制程序提供运行时参数。这是一个 INI 格式的配置文件。
配置文件一共有三类格式：
config # OpenSSL 通用配置格式 fips_config # OpenSSL FIPS 配置格式 x509v3_config # X.509 V3 证书扩展配置格式 配置文件格式 OpenSSL 配置文件的语法与 INI 类似，但与常见的 INI 配置并不太一样（Section 用于定义场景，而不是定义某种类型的配置），并且扩展了很多能力：
Section 本身的意义来源于 Openssl 命令行工具，各个 Section 是为各种场景服务的，甚至每个 Section 都可以有很多相同的 K/V 对。 通常可以配合 -extensions 选项以便让命令读取哪个 Section 的内容 特定的 Section 的名字是有意义的，比如 [req] Section 可以为 openssl req 命令提供参数，当执行 openssl req 命令时，会从默认配置文件的 [req] Section 获取配置参数，若没有，则再从 默认 Section 获取参数。 Section 中除了 key/value pair(键值对) 以外，还可以包括 Directives(指令) Section 中的 Key/Value Pair 可以进行变量定义，也可以引用变量。此时 Key 就是变量名，Value 就是变量的值。 引用方式有 $VAR 或 ${VAR} 两种，要想引用其他 Section 中的变量，则使用 $SectionName::VAR 或 ${SectionName::VAR} # 这是默认 Section HOME = /temp configdir = $ENV::HOME/config [ section_one ] # Quotes permit leading and trailing whitespace any = &amp;#34; any variable name &amp;#34; other = A string that can \ cover several lines \ by including \\ characters message = Hello World\n [ section_two ] greeting = $section_one::message 配置文件中的第一部分是一个 默认 Section。若要引用默认 Section 的变量，则使用 ENV 作为 Section 名 可以在 Section 中引用其他 Section。比如： # These must be in the default section config_diagnostics = 1 # 引用 openssl_init 部分的配置 openssl_conf = openssl_init [openssl_init] # 引用 oids 部分的配置 oid_section = oids # 以此类推 providers = providers alg_section = evp_properties ssl_conf = ssl_configuration engines = engines random = random [oids] .</description></item><item><title>Standard commands</title><link>https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Crypto-mgmt/OpenSSL/Standard-commands/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Crypto-mgmt/OpenSSL/Standard-commands/</guid><description>概述 参考：
其他标准命令 openssl passwd - 对指定的字符串生成 hash 过的密码 openssl password [OPTIONS] [STRING]
MD5 算法加密后的格式为：$算法简称$SALT$XXXXXX，算法简称为 1 或者 apr1，SALT 为指定的盐的字符串，XXXX 为生成的加密的字符串
OPTIONS
-crypt # standard Unix password algorithm (default) -1 # -1 基于 MD5 的密码算法（注意：不指定 salt 的话，会使用随机的 slat） -salt # 在生成加密的密码中加盐(salt)。（为什么叫盐详见https://zh.wikipedia.org/wiki/%E7%9B%90_(%E5%AF%86%E7%A0%81%E5%AD%A6)这是密码学的一个概念）,加盐与不加盐得出的结果是不一样的 EXAMPLE
openssl passwd -1 123456 结果为：$1$ONQ8XSuX$Cv0wy2WbbbwOt/YkXuAlU/ openssl passwd -1 -salt 123 123456 结果为：$1$123$7mft0jKnzzvAdU4t0unTG1 openssl rand - 生成伪随机数字节 EXAMPLE
openssl rand -hex 6 # 生成随机数 RSA 标准命令 openssl genrsa - 生成 RSA 密钥 Syntax(语法) openssl genrsa [ OPTIONS ] [ ARGUMENTS ]</description></item></channel></rss>