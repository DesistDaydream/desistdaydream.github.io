<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>浏览器 on 断念梦的站点</title><link>https://desistdaydream.github.io/docs/Web/Browser/</link><description>Recent content in 浏览器 on 断念梦的站点</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/Web/Browser/index.xml" rel="self" type="application/rss+xml"/><item><title>Browser</title><link>https://desistdaydream.github.io/docs/Web/Browser/Browser/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/Web/Browser/Browser/</guid><description>概述 参考：
Wiki, Web_browser 在访问一个网页时，除非收到 3XX 重定向的响应，否则浏览器地址栏中的地址是不会改变的。比如 Nginx 中的 rewrite 功能，如果不使用 redirect 或 permanent 标志，那么所有的 URL 改变都是针对 Nginx 内部来说的。
解决网页播放【鼠标移开屏幕或点击屏外视频暂停播放】 原文： https://www.jianshu.com/p/945851ea95da
从网页的 F12 中，元素-事件监听器 中
将【blur】所有内容【remove】掉 单击【mouseout】左边的倒三角，将出现的子元素全部remove掉， 将【mouseup】也用同样的操作移除掉子元素，现在就可以成功切换页面而不受限制啦! （点击Remove要精准，remove会把blur清除，不会进入其他设置）
注：可同时点开多个网页播放器并行播放不暂停，提高效率</description></item><item><title>Chromium</title><link>https://desistdaydream.github.io/docs/Web/Browser/Chromium/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/Web/Browser/Chromium/</guid><description>概述 参考：
源码 GitHub 项目，chromium/chromium Chromium 官网 Chromium 文档源码 文档 https://github.com/chromium/permission.site 用于测试 Web API 和浏览器权限交互的站点。比如通过浏览器调用位置信息、蓝牙、等等。
用户数据 https://chromium.googlesource.com/chromium/src/+/HEAD/docs/user_data_dir.md
Chrome 运行产生的用户数据包含 Profile 数据、运行时状态数据。Chrome 可以支持多人同时使用
Profile 数据则是特定于某个具体用户的数据，包括 历史记录、书签、Cookie、扩展程序、等等。 每个 Profile 数据所在位置都是用户数据目录的一个子目录。 保存用户数据的目录根据不同环境，有不同的默认值，一般来说，取决于如下几点：
操作系统。Linux、Windows、Macos 等等 基于 Chromium 的各种品牌。Chrome、Edge、等等 Release 版本。比如 stable、beta、dev、canary、等等。 不同系统下的默认路径详见官网，这里就不写了，在 Chrome 里有概述
可以通过 &amp;ndash;user-data-dir 命令行标志改变用户数据目录的位置，通过 &amp;ndash;profile-directory 命令行标志改变启动 Chrome 时要使用具体哪个用户运行。</description></item><item><title>Chrome</title><link>https://desistdaydream.github.io/docs/Web/Browser/Chrome/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/Web/Browser/Chrome/</guid><description>概述 参考：
官网 Chrome
Headless 模式 https://developer.chrome.com/docs/chromium/new-headless
https://developer.chrome.com/blog/headless-chrome
https://chromium.googlesource.com/chromium/src/+/lkgr/headless/README.md
Headless Chrome 是 Chrome 浏览器的无界面形态，可以在不打开浏览器的前提下，使用所有 Chrome 支持的特性运行你的程序。相比于现代浏览器，Headless Chrome 更加方便测试 web 应用，获得网站的截图，做爬虫抓取信息等。相比于出道较早的 PhantomJS，SlimerJS 等，Headless Chrome 则更加贴近浏览器环境。
Chrome 关联文件与配置 %LOCALAPPDATA%/Google/Chrome/ # 数据存储目录
./User Data/ # 用户数据目录。可以通过 &amp;ndash;user-data-dir 标志指定其他路径。 ./Default/ # 默认用户数据存储目录 ./Profile X/ # 其他用户数据存储目录，X 是从 1 开始正整数。 配置详解 命令行参数
&amp;ndash;user-data-dir(STRING) # 用户数据目录。 Windows 默认值: %LOCALAPPDATA%/Google/Chrome/User Data/ 注意：这个并不是某个具体用户的数据目录，而是整个 Chrome 运行时，所有用户的数据保存目录。 在该目录下有 Default、Profile X 这些目录，这些是具体到某个用户的数据保存路径。 &amp;ndash;profile-directory(STRING) # 特定于某个具体用户的数据目录。 Windows 默认值: Default 注意：这个值并不需要填写绝对路径。只需要填写相对路径，该选项的值是 &amp;ndash;user-data-dir 配置的目录的子目录。 &amp;ndash;remote-debugging-port(INT) # 开启 debug 端口，可以通过其他程序连接浏览器。 插件推荐 GitHub 项目，FelisCatus/SwitchyOmega # 快速切换浏览器要使用的代理</description></item><item><title>Edge</title><link>https://desistdaydream.github.io/docs/Web/Browser/Edge/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/Web/Browser/Edge/</guid><description>概述 参考：
使用 Edge 的用户常会用 newibing 的 AI , 但当用了浏览器自带的搜索时，会访问 cn.bing.com 这时 BING 会把你的位置定位在中国，你再打开 bing.com , 会发现“聊天” 消失了，最筒单的恢复方法是 在浏览器上输入 sg.bing.com 就切回新加坡地点了, 页面上的“聊天”也会重新出现.
问题 无法像 Chrome 一样，在收藏夹中的文件夹上右键点击“将此页添加到收藏夹”
https://answers.microsoft.com/zh-hans/microsoftedge/forum/all/edge%E4%B8%8D%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87/ef685d0b-a348-4556-978d-64937cad0a9f</description></item><item><title>DevTools</title><link>https://desistdaydream.github.io/docs/Web/Browser/DevTools/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/Web/Browser/DevTools/</guid><description>概述 参考：
Chrome 开发者工具官方文档 Wiki, Web_development_tools Chrome DevTools 是一组内置于 Chrome 浏览器中的 Web 开发者工具（通常使用 F12 快捷键打开；Ctrl + Shift +i 也是常见的默认快捷键）。
元素 # 当前网页被渲染的数据 控制台 # 可以输入 JS 代码 源代码/来源 # HTML、JS、CSS、字体等静态资源文件 网络 # 数据传输内容 &amp;hellip;.. 应用 # 元素 使用 Ctrl+Shift+C 快捷键可以选定页面上的元素以定位到 HTML 中的位置。
网络 控制台 在控制台中，通过查看日志消息和运行 JS 代码以控制页面的控制。
可以直接输出当前页面 js 代码中的各种变量、函数等等 等等 源代码 参考：
官方文档，源代码 在源代码中可以检查静态资源、打断点、等等。
当浏览器的请求被断点暂停时，我们可以将鼠标悬停后，看到 FunctionLocation 关键字，从这里追踪函数的位置。
在控制台输出该函数，也可以通过点击跳转到函数位置。
代码段 https://developer.chrome.com/docs/devtools/javascript/snippets?hl=zh-cn
若我们需要在控制台反复运行相同的代码，可以将代码保存为代码段，以便随时使用
最常见的用法是替换 JS 中的函数以 Debug，比如下面这个，可以通过 JSON.stringify = function (params) {} 和 JSON.</description></item></channel></rss>