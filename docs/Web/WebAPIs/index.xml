<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>WebAPIs on 断念梦的站点</title><link>https://desistdaydream.github.io/docs/Web/WebAPIs/</link><description>Recent content in WebAPIs on 断念梦的站点</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/Web/WebAPIs/index.xml" rel="self" type="application/rss+xml"/><item><title>WebAPIs</title><link>https://desistdaydream.github.io/docs/Web/WebAPIs/WebAPIs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/Web/WebAPIs/WebAPIs/</guid><description>概述 参考：
MDN，参考 - Web API 在编写 Web 代码时，有许多 Web APIs 可供调用。下面是开发 Web 应用程序或网站时可能使用的所有 API 和接口（对象类型）的列表。
Web APIs 主要用于 JavaScript，但也可能有例外。
Window https://developer.mozilla.org/zh-CN/docs/Web/API/Window
Window 接口是各种函数、对象、等等的家。window 对象表示一个包含 DOM 的窗口（通常来说都是具有浏览器功能的窗口），document 属性指向窗口中载入的 DOM 文档。
Navigator 接口表示用户代理的状态和标识。它允许脚本查询它和注册自己进行一些活动。用白话说：这里面包含了浏览器相关的信息。
appVersion # 浏览器的版本号 appName # 浏览器的名称 language # 浏览器使用的语言 platform # 浏览器所使用的平台 userAgent # 浏览器的 user-agent 信息。常用来区分浏览网站的人使用了什么设备 webdriver # 当前窗口是否使用了 WebDriver。在爬虫技术中，移除这个是很重要的一点避免被网站识别成 WebDriver。</description></item><item><title>DOM</title><link>https://desistdaydream.github.io/docs/Web/WebAPIs/DOM/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/Web/WebAPIs/DOM/</guid><description>概述 参考：
WHATWG，DOM 标准 MDN，参考-WebAPIs-DOM Document Ojbect Model(文档对象模型，简称 DOM) 是 Web 文档(i.e. HTML 和 XML)的编程接口(通常描述为 WebAPI 中的 DOM 接口)。应用程序可以通过该接口更改 Web 文档的 结构、样式、内容 等。DOM 将 Web 文档抽象为 Node(节点) 和 Ojbect(对象，包含属性和方法的对象) 组成的结构集合。
一个 Web 页面即是一个文档，这个文档可以在浏览器中作为 HTML 源码展示出来。DOM 则可以将文档表示为另一种形式，以便 JavaScript 等编程语言可以对其进行修改。
比如：
// 我们通过 document.querySelectorAll() 获取 Web 文档中所有 &amp;lt;p&amp;gt; 元素的列表 // 将所有 &amp;lt;p&amp;gt; 元素实例化为 paragraphs 变量 var paragraphs = document.querySelectorAll(&amp;#34;p&amp;#34;) // 之后，通过代码对 paragraphs 的所有操作都会直接反应到前端 Web 页面上 // 这里表示将将会弹出提示框，并将其中第一个 &amp;lt;p&amp;gt; 元素的名称显示在提示框中 alert(paragraphs[0].nodeName) 从上面的示例中可以看到，JavaScript 中使用 Document 类型的对象 表示 Web 文档本身；document 对象里包含了非常多的方法来控制 Web 文档中的元素，在 MDN 官方文档，WebAPIs-Document 中可以看到所有 document 对象下的属性、方法、事件。示例中的 querySelectorAll() 方法将会返回匹配到的元素列表。</description></item></channel></rss>