<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦的站点 – 🕸Web</title><link>https://desistdaydream.github.io/docs/Web/</link><description>Recent content in 🕸Web on 断念梦的站点</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/Web/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Web</title><link>https://desistdaydream.github.io/docs/Web/Web/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/Web/Web/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/World_Wide_Web">Wiki, World_Wide_Web&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;strong>World Wide Web(万维网，简称 WWW)&lt;/strong> 常被简称为 Web&lt;/p>
&lt;p>Web 还有有很多种理解&lt;/p>
&lt;p>Nginx 等软件可以提供 Web 服务。&lt;/p>
&lt;h1 id="学习资料">学习资料&lt;a class="td-heading-self-link" href="#%e5%ad%a6%e4%b9%a0%e8%b5%84%e6%96%99" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;a href="https://developer.mozilla.org/en-US/docs/Web">MDN，Web 开发技术&lt;/a>(通常指的是网站首页的 References 标签中的文档)&lt;/p>
&lt;h1 id="web-开发技术">Web 开发技术&lt;a class="td-heading-self-link" href="#web-%e5%bc%80%e5%8f%91%e6%8a%80%e6%9c%af" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h2 id="web-apis">Web APIs&lt;a class="td-heading-self-link" href="#web-apis" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>不管用什么语言编写 Web 代码，通常都有一些标准的 APIs，有点类似于操作系统的 &lt;a href="https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Operating%20system/POSIX.md">POSIX&lt;/a>。这些 Web API 的标准通常都是由 &lt;a href="https://desistdaydream.github.io/docs/Standard/Internet/W3C.md">W3C&lt;/a>、&lt;a href="https://desistdaydream.github.io/docs/Standard/Internet/IETF.md">IETF&lt;/a>、等多个组织和公司一起制定的，其中 W3C 和 IETF 占了很重要的地位。&lt;/p>
&lt;p>详见 &lt;a href="https://desistdaydream.github.io/docs/Web/WebAPIs/WebAPIs.md">WebAPIs&lt;/a>&lt;/p>
&lt;h2 id="编程语言">编程语言&lt;a class="td-heading-self-link" href="#%e7%bc%96%e7%a8%8b%e8%af%ad%e8%a8%80" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;a href="https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80/HTML.md">HTML&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80/CSS.md">CSS&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/ECMAScript/ECMAScript.md">ECMAScript&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://desistdaydream.github.io/docs/2.%E7%BC%96%E7%A8%8B/%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80/XML.md">XML&lt;/a>&lt;/p>
&lt;h2 id="webassembly">WebAssembly&lt;a class="td-heading-self-link" href="#webassembly" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>详见 &lt;a href="https://desistdaydream.github.io/docs/Web/WebAssembly.md">WebAssembly&lt;/a>&lt;/p>
&lt;h2 id="webdriver">WebDriver&lt;a class="td-heading-self-link" href="#webdriver" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>WebDriver 是一种&lt;strong>浏览器自动化&lt;/strong>机制，通过模拟真实的人使用浏览器的动作来远程控制浏览器。它被广泛用于网络应用的跨浏览器测试。&lt;/p>
&lt;p>详见 &lt;a href="https://desistdaydream.github.io/docs/Web/WebDriver/WebDriver.md">WebDriver&lt;/a>&lt;/p>
&lt;h1 id="glossary术语">Glossary(术语)&lt;a class="td-heading-self-link" href="#glossary%e6%9c%af%e8%af%ad" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;strong>Window(窗口)&lt;/strong> # 打开浏览器就相当于打开了一个窗口，这个窗口是用户可以在显示器上直接看到的，可以最小化、最大化、移动、关闭。这是 Windows 系统常用的术语。&lt;/p>
&lt;p>&lt;strong>User-Agent(用户代理)&lt;/strong> # 在我们发送一个请求时，User-Agent 是可以表示用户的代理方（proxy）。大多数情况下，这个&lt;strong>用户代理都是一个网页浏览器&lt;/strong>，不过它也可能是任何东西，比如一个爬取网页来充实、维护搜索引擎索引的机器 &lt;a href="https://desistdaydream.github.io/docs/7.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/Crawler/Crawler.md">Crawler&lt;/a>(爬虫)（其实就是代码写的具有发起 HTTP 请求的程序，毕竟浏览器也是代码写的）。说白了，任何可以发起 HTTP 请求的都可以称为 User-Agent。&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/User_agent">https://en.wikipedia.org/wiki/User_agent&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Docs: WebAPIs</title><link>https://desistdaydream.github.io/docs/Web/WebAPIs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/Web/WebAPIs/</guid><description/></item><item><title>Docs: WebDriver</title><link>https://desistdaydream.github.io/docs/Web/WebDriver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/Web/WebDriver/</guid><description/></item><item><title>Docs: WebAssembly</title><link>https://desistdaydream.github.io/docs/Web/WebAssembly/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/Web/WebAssembly/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://webassembly.org/">官网&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://developer.mozilla.org/zh-CN/docs/WebAssembly">MDN，WebAssembly&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;a href="https://geektutu.com/post/quick-go-wasm.html">Go WebAssembly (Wasm) 简明教程&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.jiqizhixin.com/articles/2020-06-30-10">可能是世界上最简单的用 Go 来写 WebAssembly 的教程&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://mp.weixin.qq.com/s/fR1MIiISFvmKYK2AKbIiHQ?sessionid=1712830502&amp;amp;subscene=0&amp;amp;ascene=0&amp;amp;fasttmpl_type=0&amp;amp;fasttmpl_fullversion=7158664-zh_CN-zip&amp;amp;fasttmpl_flag=0&amp;amp;realreporttime=1712830813803&amp;amp;clicktime=1710255726&amp;amp;enterid=1710255726">生来取代Docker、JS，这项技术发布7年后，现状如何？&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://mp.weixin.qq.com/s/MbTRStn8ETB9GygWETy3Ng">公众号 - k8s技术圈，在 Kubernetes 上使用 WebAssembly: 从容器到 Wasm&lt;/a>&lt;/p>
&lt;h1 id="webassembly-文本格式">WebAssembly 文本格式&lt;a class="td-heading-self-link" href="#webassembly-%e6%96%87%e6%9c%ac%e6%a0%bc%e5%bc%8f" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;a href="https://developer.mozilla.org/en-US/docs/WebAssembly/Understanding_the_text_format">https://developer.mozilla.org/en-US/docs/WebAssembly/Understanding_the_text_format&lt;/a>&lt;/p>
&lt;h1 id="webassembly-工具">WebAssembly 工具&lt;a class="td-heading-self-link" href="#webassembly-%e5%b7%a5%e5%85%b7" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;a href="https://github.com/webassembly/wabt">GitHub 项目，webassembly/wabt&lt;/a> # WebAssembly Binary Toolkit(WebAssembly 二进制工具包，简称 wabt)。&lt;/p>
&lt;ul>
&lt;li>该工具可以将 wasm 文本格式转为二进制格式、wasm 二进制格式转为 c 代码、etc.&lt;/li>
&lt;/ul></description></item><item><title>Docs: 浏览器</title><link>https://desistdaydream.github.io/docs/Web/Browser/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/Web/Browser/</guid><description/></item><item><title>Docs: WebServer</title><link>https://desistdaydream.github.io/docs/Web/WebServer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/Web/WebServer/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Web_server">MDN，Web server&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Web_server">Wiki, Web server&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;strong>Web server(Web 服务器)&lt;/strong> 是用以响应静态资源的程序，可以提供 Web 服务。&lt;/p>
&lt;p>在最基本的层面上，每当浏览器需要托管在 Web server 上的文件时，浏览器都会通过 HTTP 请求该文件。当请求到达正确的 Web server 时，HTTP 服务器接受该请求，找到所请求的文档，并将其发送回浏览器（同样通过 HTTP）。 （如果服务器找不到所请求的文档，则会返回 404 响应。）&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/web/webserver_1.png" alt="image.png">&lt;/p>
&lt;p>实现 Web server 的软/硬件&lt;/p>
&lt;ul>
&lt;li>Tomcat&lt;/li>
&lt;li>&lt;a href="https://desistdaydream.github.io/docs/Web/Nginx/Nginx.md">Nginx&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="tomcat">Tomcat&lt;a class="td-heading-self-link" href="#tomcat" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://tomcat.apache.org/">官网&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Apache_Tomcat">Wiki, Apache Tomcat&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>Apache Tomcat（简称“Tomcat”）是 Jakarta Servlet、Jakarta Expression Language 和 WebSocket 技术的免费开源实现。使用 Java 开发的 HTTP Web server 环境，Java 代码也可以在其中运行。因此，它是一个 Java Web 应用程序服务器，尽管不是完整的 JEE 应用程序服务器。&lt;/p></description></item><item><title>Docs: 代理</title><link>https://desistdaydream.github.io/docs/Web/%E4%BB%A3%E7%90%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/Web/%E4%BB%A3%E7%90%86/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Proxy_server">Wiki, Proxy_server&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>在计算机网络中，&lt;strong>Proxy server(代理服务器)&lt;/strong> 是一种服务器应用程序，充当资源请求的客户端和提供该资源的服务器之间的中介。&lt;/p>
&lt;p>&lt;strong>Proxy(代理)&lt;/strong> 有很多种理解，还可以表示一种服务、一个概念。&lt;/p>
&lt;p>Proxy 服务在整个 IT 圈子中非常常见，隧道、VPN 等等都可以看做是代理的一种。&lt;/p>
&lt;h1 id="squid">Squid&lt;a class="td-heading-self-link" href="#squid" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/squid-cache/squid">GitHub 项目，squid-cache/squid&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Squid_(software)">Wiki, Squid&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>Squid 是一款老牌的可以提供代理服务的程序。Squid 版本 1.0.0 于 1996 年 7 月发布。&lt;/p>
&lt;p>在服务端安装完成后，将 /etc/squid/squid.conf 文件中的 &lt;code>http_access deny all&lt;/code> 修改为 &lt;code>http_access allow all&lt;/code>；之后在客户端通过 &lt;a href="https://desistdaydream.github.io/docs/1.%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux%20%E7%AE%A1%E7%90%86/Linux%20%E7%AE%A1%E7%90%86%E6%A1%88%E4%BE%8B/Linux%20%E4%BB%A3%E7%90%86%E9%85%8D%E7%BD%AE.md">Linux 代理配置&lt;/a> 指定服务端的 3128 端口即可。&lt;/p>
&lt;h2 id="关联文件与配置">关联文件与配置&lt;a class="td-heading-self-link" href="#%e5%85%b3%e8%81%94%e6%96%87%e4%bb%b6%e4%b8%8e%e9%85%8d%e7%bd%ae" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;strong>/etc/squid/&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>./squid.conf&lt;/strong> # 主要配置文件&lt;/li>
&lt;/ul>
&lt;h1 id="其他">其他&lt;a class="td-heading-self-link" href="#%e5%85%b6%e4%bb%96" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;a href="https://github.com/ginuerzh/gost">GitHub 项目，ginuerzh/gost&lt;/a>&lt;/p>
&lt;ul>
&lt;li>Golang 语言编写，简单隧道&lt;/li>
&lt;li>&lt;code>gost -L http://:8080 -L socks5://:1080&lt;/code> 使用命令直接启动一个简单的代理。
&lt;ul>
&lt;li>然后在 Shell 中配置代理即可&lt;/li>
&lt;li>export http_proxy=&amp;ldquo;http://${hostip}:8080&amp;rdquo;&lt;/li>
&lt;li>export https_proxy=&amp;ldquo;http://${hostip}:8080&amp;rdquo;&lt;/li>
&lt;li>export all_proxy=&amp;ldquo;sock5://${hostip}:1080&amp;rdquo;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://github.com/vacuityv/vacproxy">GitHub 项目，vacuityv/vacproxy&lt;/a>&lt;/p>
&lt;ul>
&lt;li>Go 语言编写，简单的 http 代理&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="github.com/mitmproxy/mitmproxy">GitHub 项目，mitmproxy/mitmproxy&lt;/a>&lt;/p>
&lt;ul>
&lt;li>Python 编写，为渗透测试人员和软件开发人员提供的交互式、支持 TLS 的拦截 HTTP 代理。&lt;/li>
&lt;/ul>
&lt;h2 id="proxychains">proxychains&lt;a class="td-heading-self-link" href="#proxychains" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>项目地址: &lt;a href="https://github.com/haad/proxychains">https://github.com/haad/proxychains&lt;/a>&lt;/p>
&lt;p>凡是通过 proxychains 程序运行的程序都会通过 proxychains 配置文件中设置的代理配置来发送数据包。&lt;/p>
&lt;p>apt install proxychains 即可&lt;/p>
&lt;p>修改配置文件&lt;/p>
&lt;p>sock5 127.0.0.1 10808 # 指定本地代理服务所监听的地址&lt;/p>
&lt;p>proxychains /opt/google/chrome/chrome # 即可通过代理打开 chrome 浏览器&lt;/p>
&lt;p>&lt;code>proxychains curl -I https://www.google.com&lt;/code> 会成功&lt;/p></description></item><item><title>Docs: Nginx</title><link>https://desistdaydream.github.io/docs/Web/Nginx/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/Web/Nginx/</guid><description/></item><item><title>Docs: 网站搭建</title><link>https://desistdaydream.github.io/docs/Web/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/Web/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/</guid><description/></item></channel></rss>