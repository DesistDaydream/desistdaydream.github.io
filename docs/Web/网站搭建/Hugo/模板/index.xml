<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦的站点 – 模板</title><link>https://desistdaydream.github.io/docs/Web/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/Hugo/%E6%A8%A1%E6%9D%BF/</link><description>Recent content in 模板 on 断念梦的站点</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/Web/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/Hugo/%E6%A8%A1%E6%9D%BF/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: 模板</title><link>https://desistdaydream.github.io/docs/Web/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/Hugo/%E6%A8%A1%E6%9D%BF/%E6%A8%A1%E6%9D%BF/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/Web/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/Hugo/%E6%A8%A1%E6%9D%BF/%E6%A8%A1%E6%9D%BF/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://gohugo.io/templates/">官网文档，模板&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>Hugo 为了将 Content 添加到 Layout 中，将所有的 Content 抽象为如下几种类型的 Page：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Home Page(主页)&lt;/strong> # &lt;code>$Kind&lt;/code> 值为 &lt;strong>home&lt;/strong>。&lt;/li>
&lt;li>&lt;strong>Regular Pages(常规页)&lt;/strong> # &lt;code>$Kind&lt;/code> 值为 &lt;strong>page&lt;/strong>。&lt;/li>
&lt;li>&lt;strong>Section Pages(部分页)&lt;/strong> # &lt;code>$Kind&lt;/code> 值为 &lt;strong>section&lt;/strong>。&lt;/li>
&lt;li>&lt;strong>Taxonomy Pages&lt;/strong> # &lt;code>$Kind&lt;/code> 值为 &lt;strong>taxonomy&lt;/strong>。&lt;/li>
&lt;li>&lt;strong>Term Pages&lt;/strong> # &lt;code>$Kind&lt;/code> 值为 &lt;strong>term&lt;/strong>。&lt;/li>
&lt;/ul>
&lt;p>Hugo 将模板分为如下几种类型：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Base Templates(&lt;a href="#%E5%9F%BA%E6%9C%AC%E6%A8%A1%E6%9D%BF">基本模板&lt;/a>)&lt;/strong>&lt;/li>
&lt;li>List Templates&lt;/li>
&lt;li>Homepage Templates&lt;/li>
&lt;li>&lt;strong>Section Templates(&lt;a href="#%E9%83%A8%E5%88%86%E6%A8%A1%E6%9D%BF">部分模板&lt;/a>)&lt;/strong>&lt;/li>
&lt;li>Taxonomy Templates&lt;/li>
&lt;li>Single Page Templates&lt;/li>
&lt;li>Content View Templates&lt;/li>
&lt;li>Data Templates&lt;/li>
&lt;li>Partial Templates&lt;/li>
&lt;li>Shortcode Templates&lt;/li>
&lt;li>Local File Templates&lt;/li>
&lt;li>Menu Templates&lt;/li>
&lt;li>RSS Templates&lt;/li>
&lt;li>Internal Templates&lt;/li>
&lt;li>404 Page&lt;/li>
&lt;li>Pagination(分页)&lt;/li>
&lt;li>Template Debugging&lt;/li>
&lt;/ul>
&lt;p>Hugo 的每种模板都可以渲染一种或多种类型的页面。在开始准备渲染页面时，首先要确定页面的 Kind 变量的值，即.确定页面的类型。比如 section 类型的页面&lt;/p>
&lt;h2 id="渲染页面时查找模板的顺序">渲染页面时查找模板的顺序&lt;a class="td-heading-self-link" href="#%e6%b8%b2%e6%9f%93%e9%a1%b5%e9%9d%a2%e6%97%b6%e6%9f%a5%e6%89%be%e6%a8%a1%e6%9d%bf%e7%9a%84%e9%a1%ba%e5%ba%8f" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://gohugo.io/templates/lookup-order/">官方文档，模板-查找顺序&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>Hugo 基于 Content 决定要使用的 Template。从 &lt;code>content/&lt;/code> 目录下逐一处理每个内容(i.e. Page(页面))，从 &lt;code>layouts/&lt;/code> 目录中为每个内容选择要使用的布局(i.e. 模板)。&lt;/p>
&lt;p>一个 Content 的 Page 类型可以通过 &lt;code>$Kind&lt;/code> 变量查看，每种类型的 Page 都会匹配不同的模板文件，并且会在 &lt;code>layouts/&lt;/code> 目录下根据规则逐一查找模板文件，并使用找到的第一个文件与基本模板文件(baseof.html)一起将内容根据模板布局渲染成可供浏览的页面，然后转译成静态站点文件，保存到 &lt;code>public/&lt;/code> 目录下。&lt;/p>
&lt;h3 id="基本模板的查找顺序">基本模板的查找顺序&lt;a class="td-heading-self-link" href="#%e5%9f%ba%e6%9c%ac%e6%a8%a1%e6%9d%bf%e7%9a%84%e6%9f%a5%e6%89%be%e9%a1%ba%e5%ba%8f" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>每种 Page 所使用的模板都要与基本模板组合在一起，共同将内容渲染成页面。所以在查找下面的模板之前，都要先按照如下顺序查找基本模板&lt;/p>
&lt;p>这里用 &lt;code>content/posts/&lt;/code> 目录下的所有 Content 举例，这些 Content 将会按照如下顺序逐一查找基本模板文件：&lt;/p>
&lt;ul>
&lt;li>&lt;code>layouts/posts/baseof.html&lt;/code>&lt;/li>
&lt;li>&amp;hellip;&amp;hellip;&lt;/li>
&lt;li>&lt;code>layouts/_default/baseof.html&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>&lt;code>layouts/_default/baseof.html&lt;/code> 这个基本模板相当于是所有页面的后盾，任何找不到模板的页面，最后都会使用该模板，这算是一个万金油的位置。&lt;/p>
&lt;h3 id="home-page-的模板查找顺序">Home Page 的模板查找顺序&lt;a class="td-heading-self-link" href="#home-page-%e7%9a%84%e6%a8%a1%e6%9d%bf%e6%9f%a5%e6%89%be%e9%a1%ba%e5%ba%8f" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>Hugo 在渲染主页时，就算没有任何 &lt;code>content/&lt;/code>，Hugo 也会自动去寻找适用于 Home Page 的模板，只需要在 layous/ 下创建一个 index.html 文件即可，此时访问 &lt;code>/&lt;/code> 就不会显示 &lt;a href="https://desistdaydream.github.io/docs/Web/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/Hugo/Hugo.md">Hugo&lt;/a> 基本使用示例中的 &lt;code>Page Not Found&lt;/code>，而是一个空白的页面，这是因为在 index.html 中没有任何布局，并且也没有任何 Content 根据布局被渲染成页面。&lt;/p>
&lt;h3 id="section-pages-的模板查找顺序">Section Pages 的模板查找顺序&lt;a class="td-heading-self-link" href="#section-pages-%e7%9a%84%e6%a8%a1%e6%9d%bf%e6%9f%a5%e6%89%be%e9%a1%ba%e5%ba%8f" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>&lt;a href="https://gohugo.io/templates/lookup-order/#examples-layout-lookup-for-section-pages">https://gohugo.io/templates/lookup-order/#examples-layout-lookup-for-section-pages&lt;/a>&lt;/p>
&lt;p>Section Pages 通常都是在每个目录下的 &lt;code>_index.md&lt;/code> 文件。&lt;/p>
&lt;ul>
&lt;li>Hugo 首先在 &lt;code>layouts/&lt;/code> 目录中查找 &lt;code>_index.md&lt;/code> 文件所在目录的同名目录下的同名 .html 文件。&lt;/li>
&lt;li>然后从 &lt;code>_default/&lt;/code> 目录查找匹配目标&lt;/li>
&lt;li>根据页面类型匹配&lt;/li>
&lt;/ul>
&lt;p>举个例子：现在想要渲染 &lt;code>content/posts/_index.md&lt;/code> 页面，那就按照如下顺序逐一查找模板文件&lt;/p>
&lt;ul>
&lt;li>&lt;code>layouts/posts/posts.html&lt;/code>&lt;/li>
&lt;li>&lt;code>layouts/posts/section.html&lt;/code>&lt;/li>
&lt;li>&lt;code>layouts/posts/list.html&lt;/code>&lt;/li>
&lt;li>&amp;hellip;&amp;hellip;&lt;/li>
&lt;/ul>
&lt;p>后续还有很多要查找的文件，在笔记就不再一一列出，可以直接去官网查看。这里只是总结出大体规律。&lt;/p>
&lt;h3 id="regular-pages-的模板查找顺序">Regular Pages 的模板查找顺序&lt;a class="td-heading-self-link" href="#regular-pages-%e7%9a%84%e6%a8%a1%e6%9d%bf%e6%9f%a5%e6%89%be%e9%a1%ba%e5%ba%8f" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>Regular Pages 通常是指每个 Content，比如 &lt;code>content/posts/my_first_post.md&lt;/code> 就是一个常规的页面，Hugo 将会按照如下顺序逐一为该文件查找模板文件&lt;/p>
&lt;ul>
&lt;li>&lt;code>layouts/posts/single.html&lt;/code>&lt;/li>
&lt;li>&lt;code>layouts/_default_/single.html&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="taxonomy-pages-的模板查找顺序">Taxonomy Pages 的模板查找顺序&lt;a class="td-heading-self-link" href="#taxonomy-pages-%e7%9a%84%e6%a8%a1%e6%9d%bf%e6%9f%a5%e6%89%be%e9%a1%ba%e5%ba%8f" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;h3 id="term-pages-的模板查找顺序">Term Pages 的模板查找顺序&lt;a class="td-heading-self-link" href="#term-pages-%e7%9a%84%e6%a8%a1%e6%9d%bf%e6%9f%a5%e6%89%be%e9%a1%ba%e5%ba%8f" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;h2 id="block">Block&lt;a class="td-heading-self-link" href="#block" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>Hugo 可以基于 &lt;strong>Block(块)&lt;/strong> 将多个模板组合起来一同渲染，通常基于 block、define 关键字。在内层模板中使用 define 关键字定义块，然后在外层模板中使用 block 引用定义的块&lt;/p>
&lt;p>比如现在有模板 A.html，其中定义一个名为 main 的块。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>{{ define &amp;#34;main&amp;#34; }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">p&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;&lt;/span>在这里定义了名为 main 的&lt;span style="color:#000;font-weight:bold">&amp;lt;/&lt;/span>&lt;span style="color:#204a87;font-weight:bold">p&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{{ end }}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在模板 B.html 中，引用名为 main 的块。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">body&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{ block &amp;#34;main&amp;#34; . }}{{ end }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">&amp;lt;/&lt;/span>&lt;span style="color:#204a87;font-weight:bold">body&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>最后渲染出来的效果就像这样：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">body&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">p&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;&lt;/span>在这里定义了名为 main 的&lt;span style="color:#000;font-weight:bold">&amp;lt;/&lt;/span>&lt;span style="color:#204a87;font-weight:bold">p&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">&amp;lt;/&lt;/span>&lt;span style="color:#204a87;font-weight:bold">body&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="基本模板">基本模板&lt;a class="td-heading-self-link" href="#%e5%9f%ba%e6%9c%ac%e6%a8%a1%e6%9d%bf" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>基本模板通常名称为 &lt;strong>baseof.html&lt;/strong>，通常作为网站所有页面的外壳使用，以便让页面具有统一的风格，通常来说，一个基本模板是这样的：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>{{/* 这是一个基本模板，用来作为网站的外壳，以便让网站保持相同的风格 */}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&amp;lt;!DOCTYPE html&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">html&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">head&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">meta&lt;/span> &lt;span style="color:#c4a000">charset&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;utf-8&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">title&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{ block &amp;#34;title&amp;#34; . }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{ .Site.Title }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{ end }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">&amp;lt;/&lt;/span>&lt;span style="color:#204a87;font-weight:bold">title&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">&amp;lt;/&lt;/span>&lt;span style="color:#204a87;font-weight:bold">head&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">body&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">&amp;lt;!-- 引用其他模板中定义的名为 main 的块 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{ block &amp;#34;main&amp;#34; . }}{{ end }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">&amp;lt;!-- 引用其他模板中定义的名为 footer 的块 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{ block &amp;#34;footer&amp;#34; . }}{{ end }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">&amp;lt;/&lt;/span>&lt;span style="color:#204a87;font-weight:bold">body&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">&amp;lt;/&lt;/span>&lt;span style="color:#204a87;font-weight:bold">html&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="列表模板">列表模板&lt;a class="td-heading-self-link" href="#%e5%88%97%e8%a1%a8%e6%a8%a1%e6%9d%bf" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;a href="https://gohugo.io/templates/lists/">https://gohugo.io/templates/lists/&lt;/a>&lt;/p>
&lt;p>列表模板在 Hugo 中是很特别的，是用于在单个 HTML 页面中呈现多跳内容的模板，绝大部分类型的 Page 通常都可以使用 list.html 作为其渲染模板。&lt;/p>
&lt;h1 id="部分模板">部分模板&lt;a class="td-heading-self-link" href="#%e9%83%a8%e5%88%86%e6%a8%a1%e6%9d%bf" aria-label="Heading self-link">&lt;/a>&lt;/h1></description></item><item><title>Docs: 变量</title><link>https://desistdaydream.github.io/docs/Web/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/Hugo/%E6%A8%A1%E6%9D%BF/%E5%8F%98%E9%87%8F/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/Web/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/Hugo/%E6%A8%A1%E6%9D%BF/%E5%8F%98%E9%87%8F/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://gohugo.io/variables/">官方文档，变量&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>Hugo 的模板具有上下文感知能力，让我们在创建网站视图时，可以使用大量的变量。&lt;/p>
&lt;p>比如获取当前页面的类型、种类、创建时间、修改时间，我们在配置文件中的很多定义也会被 Hugo 感知到并使用在模板中。&lt;/p>
&lt;p>Hugo 的变量用法与 Go 模板变量的用法相同。&lt;/p>
&lt;h1 id="site-变量">Site 变量&lt;a class="td-heading-self-link" href="#site-%e5%8f%98%e9%87%8f" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h1 id="page-变量">Page 变量&lt;a class="td-heading-self-link" href="#page-%e5%8f%98%e9%87%8f" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h1 id="shortcode-变量">Shortcode 变量&lt;a class="td-heading-self-link" href="#shortcode-%e5%8f%98%e9%87%8f" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h1 id="taxonomy-变量">Taxonomy 变量&lt;a class="td-heading-self-link" href="#taxonomy-%e5%8f%98%e9%87%8f" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h1 id="file-变量">File 变量&lt;a class="td-heading-self-link" href="#file-%e5%8f%98%e9%87%8f" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h1 id="menu-变量">Menu 变量&lt;a class="td-heading-self-link" href="#menu-%e5%8f%98%e9%87%8f" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h1 id="git-变量">Git 变量&lt;a class="td-heading-self-link" href="#git-%e5%8f%98%e9%87%8f" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h1 id="sitemap-变量">Sitemap 变量&lt;a class="td-heading-self-link" href="#sitemap-%e5%8f%98%e9%87%8f" aria-label="Heading self-link">&lt;/a>&lt;/h1></description></item><item><title>Docs: 函数</title><link>https://desistdaydream.github.io/docs/Web/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/Hugo/%E6%A8%A1%E6%9D%BF/%E5%87%BD%E6%95%B0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/Web/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/Hugo/%E6%A8%A1%E6%9D%BF/%E5%87%BD%E6%95%B0/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://gohugo.io/functions/">官方文档，函数&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>与 Hugo 的变量一样，我们还可以在模板中使用函数功能，用法与 Go 模板中的函数一样，只不过 Hugo 基于这些基本的 Go 模板函数还增加了额外的功能。&lt;/p></description></item></channel></rss>