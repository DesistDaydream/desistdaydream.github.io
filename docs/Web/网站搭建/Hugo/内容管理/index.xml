<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦 – 内容管理</title><link>https://desistdaydream.github.io/docs/Web/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/Hugo/%E5%86%85%E5%AE%B9%E7%AE%A1%E7%90%86/</link><description>Recent content in 内容管理 on 断念梦</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/Web/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/Hugo/%E5%86%85%E5%AE%B9%E7%AE%A1%E7%90%86/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: 内容管理</title><link>https://desistdaydream.github.io/docs/Web/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/Hugo/%E5%86%85%E5%AE%B9%E7%AE%A1%E7%90%86/%E5%86%85%E5%AE%B9%E7%AE%A1%E7%90%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/Web/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/Hugo/%E5%86%85%E5%AE%B9%E7%AE%A1%E7%90%86/%E5%86%85%E5%AE%B9%E7%AE%A1%E7%90%86/</guid><description>
&lt;h1 id="概述">概述&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://gohugo.io/content-management/">官方文档，内容管理&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;strong>Content(内容)&lt;/strong>&lt;/p>
&lt;p>为了让静态站点生成器实现可扩展性和可管理型，我们可以为文章添加 &lt;strong>FrontMatter(前页)&lt;/strong> 和 &lt;strong>Templates(模板)&lt;/strong>。Hugo 基于这种特性，设计时不仅考虑了开发人员，还考虑到了内容管理者和作者。&lt;/p>
&lt;h2 id="内容的部分">内容的部分&lt;/h2>
&lt;p>&lt;strong>Content Sections(内容部分)&lt;/strong> 是根据 &lt;code>content/&lt;/code> 目录下的组织结构定义的页面集合。&lt;/p>
&lt;p>所有包含 &lt;code>_index.md&lt;/code> 文件的目录都称为一个 &lt;strong>Section(部分)&lt;/strong>。默认情况下 &lt;code>content/&lt;/code> 下的所有一级目录都是自己的 &lt;strong>Root Section(根部分)&lt;/strong>。&lt;/p>
&lt;p>比如：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>content/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── _index.md
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── blog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── _index.md
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── docs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── _index.md
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── front-matter-demo.md
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── markdown-demo.md
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── posts
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └── _index.md
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>整个网站分为三个 Sections，分为是 blog、docs、posts。说白了，&lt;code>blog/_index.md&lt;/code> 文件就表示 &lt;strong>blog/ 目录及其内的所有文件&lt;/strong>都属于 &lt;strong>blog Section&lt;/strong>。&lt;/p>
&lt;p>部分的嵌套：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>content
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── blog &amp;lt;-- blog 部分, 因为这是在 content/ 下的一级目录
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── funny-cats
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │ ├── mypost.md
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │ └── kittens &amp;lt;-- kittens 部分, 因为包含 _index.md 文件
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │ └── _index.md
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └── tech &amp;lt;-- tech 部分, 因为包含 _index.md 文件
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └── _index.md
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>同时，若没有指定内容的类型，则内容的类型默认就是其 Section 的名称，详见下文&lt;a href="#%E5%86%85%E5%AE%B9%E7%9A%84%E7%B1%BB%E5%9E%8B">内容的类型&lt;/a>&lt;/p>
&lt;h2 id="内容的类型">内容的类型&lt;/h2>
&lt;p>&lt;strong>Content Types(内容类型&lt;/strong>) 是一种组织内容的方式。用于：&lt;/p>
&lt;ul>
&lt;li>确定内容的呈现方式。比如&lt;a href="https://gohugo.io/templates/lookup-order/">模板的查找顺序&lt;/a>和&lt;a href="https://gohugo.io/templates/views">内容视图&lt;/a>&lt;/li>
&lt;li>确定用于新内容的原型模板&lt;/li>
&lt;/ul>
&lt;p>Hugo 将内容放在 &lt;code>content/&lt;/code> 目录下，如果没有手动设置类型，那么 &lt;code>content/blog/my-first-event.md&lt;/code> 这个路径下的 my-first-event.md 内容就是 &lt;strong>blog 类型&lt;/strong>，即使用文件所在目录的&lt;strong>目录名作为类型的名称&lt;/strong>。&lt;/p>
&lt;h2 id="url-的生成逻辑">URL 的生成逻辑&lt;/h2>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://gohugo.io/content-management/organization/#path-breakdown-in-hugo">官方文档，内容管理-内容组织-Hugo 中的路径分解&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gohugo.io/content-management/urls/">官方文档，上下文管理-URL 管理&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;ul>
&lt;li>网页中的 URL 将会根据目录名和文件名生成&lt;/li>
&lt;li>目录名、文件名中各种字符、特殊符号变成 URL 之后将会进行一些特殊处理
&lt;ul>
&lt;li>空格在 URL 中为 &lt;code>-&lt;/code> 符号&lt;/li>
&lt;li>字母在 URL 中为小写&lt;/li>
&lt;li>&lt;code>()&lt;/code> 符号被删除&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>比如&lt;/p>
&lt;ul>
&lt;li>&lt;code>content/zh-cn/docs/10.云原生/Cloud Native(云原生)/Cloud Native(云原生).md&lt;/code>，访问该文件时，URL 为 &lt;code>http://localhost/docs/10.云原生/cloud-native云原生/cloud-native云原生/&lt;/code>&lt;/li>
&lt;/ul>
&lt;h1 id="frontmatter前页">FrontMatter(前页)&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://gohugo.io/content-management/front-matter/">官方文档，内容管理-前页&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>在每篇文档的开头，我们可以使用 TOML、YAML、JSON、ORG 这四种格式配置文档的元数据，通过这些元数据，我们可以让 Hugo 或 Hugo 主题提供更强大的功能。&lt;/p>
&lt;p>各种格式使用不同的符号来识别：&lt;/p>
&lt;pre tabindex="0">&lt;code>+++
TOML 格式
+++
---
YAML 格式
---
{JSON 格式}
&lt;/code>&lt;/pre>&lt;h2 id="前页变量">前页变量&lt;/h2>
&lt;p>在 FrontMatter 配置的元数据可以生成 FrontMatter Variables(前页变量)，Hugo 具有如下预定义的前页变量&lt;/p>
&lt;p>&lt;strong>title&lt;/strong> # 文档的标题。&lt;/p>
&lt;p>&lt;strong>linktitle&lt;/strong> # 用于创建内容链接；如果设置，Hugo 将会使用 linkTitle 的值作为菜单栏、导航栏中文章的链接名称。 Hugo 还可以通过链接标题对内容列表进行排序。&lt;/p>
&lt;p>下图是使用 Docsy 主题时，对这两个变量的使用效果：&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/hugo/content/20230323122828.png" alt="image.png">&lt;/p>
&lt;p>&lt;strong>data&lt;/strong> # 分配给此页面的日期时间。这通常是从 front matter 的日期字段中获取的，但这种行为是可配置的。&lt;/p>
&lt;p>&lt;strong>lastmod&lt;/strong> # 上次修改内容的日期&lt;/p>
&lt;p>&lt;strong>slug&lt;/strong> #&lt;/p>
&lt;h1 id="url-管理">URL 管理&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://gohugo.io/content-management/urls/">官方文档，内容管理-URL 管理&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>官方生成 URL 的默认规则：&lt;/p>
&lt;ul>
&lt;li>全部变为小写。可以通过 &lt;code>disablePathToLower&lt;/code> 配置改变&lt;/li>
&lt;li>空格使用 &lt;code>-&lt;/code> 代替&lt;/li>
&lt;li>TODO: 待整理&lt;/li>
&lt;/ul></description></item></channel></rss>