<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦 – 浏览器</title><link>https://desistdaydream.github.io/docs/Web/%E6%B5%8F%E8%A7%88%E5%99%A8/</link><description>Recent content in 浏览器 on 断念梦</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/Web/%E6%B5%8F%E8%A7%88%E5%99%A8/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Chrome</title><link>https://desistdaydream.github.io/docs/Web/%E6%B5%8F%E8%A7%88%E5%99%A8/Chrome/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/Web/%E6%B5%8F%E8%A7%88%E5%99%A8/Chrome/</guid><description>
&lt;h1 id="概述">概述&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.chromium.org/Home/">Chromium 官网&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>Chrome&lt;/p>
&lt;h2 id="headless-模式">Headless 模式&lt;/h2>
&lt;p>&lt;a href="https://developer.chrome.com/docs/chromium/new-headless">https://developer.chrome.com/docs/chromium/new-headless&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://developer.chrome.com/blog/headless-chrome">https://developer.chrome.com/blog/headless-chrome&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://chromium.googlesource.com/chromium/src/+/lkgr/headless/README.md">https://chromium.googlesource.com/chromium/src/+/lkgr/headless/README.md&lt;/a>&lt;/p>
&lt;p>Headless Chrome 是 Chrome 浏览器的无界面形态，可以在不打开浏览器的前提下，使用所有 Chrome 支持的特性运行你的程序。相比于现代浏览器，Headless Chrome 更加方便测试 web 应用，获得网站的截图，做爬虫抓取信息等。相比于出道较早的 PhantomJS，SlimerJS 等，Headless Chrome 则更加贴近浏览器环境。&lt;/p>
&lt;h1 id="chrome-关联文件与配置">Chrome 关联文件与配置&lt;/h1>
&lt;p>&lt;strong>%LOCALAPPDATA%/Google/Chrome/&lt;/strong> # 数据存储目录&lt;/p>
&lt;ul>
&lt;li>&lt;strong>./User Data/&lt;/strong>
&lt;ul>
&lt;li>&lt;strong>./Default/&lt;/strong> # 默认用户数据存储目录&lt;/li>
&lt;li>&lt;strong>./Profile X/&lt;/strong> # 其他用户数据存储目录，X 是从 1 开始正整数。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="配置详解">配置详解&lt;/h1>
&lt;p>命令行参数&lt;/p>
&lt;ul>
&lt;li>&lt;strong>&amp;ndash;remote-debugging-port&lt;/strong>(INT) # 开启 debug 端口，可以通过其他程序连接浏览器。&lt;/li>
&lt;/ul>
&lt;h1 id="常见问题">常见问题&lt;/h1>
&lt;h2 id="如何避免打开谷歌自动跳转到香港-googlecomhk">如何避免打开谷歌自动跳转到香港 GOOGLE.COM.HK？&lt;/h2>
&lt;p>原文链接：&lt;a href="https://www.jianshu.com/p/c00e35ec4c3e">https://www.jianshu.com/p/c00e35ec4c3e&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>自从 google 的服务器搬离中国大陆后，大陆地区用户用 google 服务时会自动跳转到香港的 &lt;a href="https://link.jianshu.com?t=http://google.com.hk">&lt;strong>http://google.com.hk&lt;/strong>&lt;/a> ，有关键字过滤而且偶尔不是很稳定，这对我们的生活工作都造成了困扰。&lt;/p>
&lt;/blockquote>
&lt;h4 id="一可以通过以下的方法访问-httpgooglecom">一、可以通过以下的方法访问 &lt;a href="http://google.com">http://google.com&lt;/a>&lt;/h4>
&lt;ul>
&lt;li>直接用 &lt;a href="http://www.google.com/ncr">http://www.google.com/ncr&lt;/a> ，&lt;code>ncr&lt;/code> 是 &lt;code>no country redirection&lt;/code> ，是一个强制不跳转的命令；&lt;/li>
&lt;li>用 &lt;a href="https://link.jianshu.com?t=https://www.google.com/">&lt;strong>https://www.google.com/&lt;/strong>&lt;/a> ，&lt;code>https&lt;/code> 协议。&lt;/li>
&lt;/ul>
&lt;h4 id="二另外一个问题是-chrome-浏览器的默认搜索也是设置为-httpwwwgooglecomhk-我们可以自行修改一下">二、另外一个问题是 Chrome 浏览器的默认搜索也是设置为 &lt;a href="http://www.google.com.hk/">http://www.google.com.hk/&lt;/a> ，我们可以自行修改一下。&lt;/h4>
&lt;ul>
&lt;li>Chrome – 设置 -搜索 - 管理搜索引擎 – 其他搜索引擎&lt;/li>
&lt;li>拉到最下，有一个“添加”&lt;/li>
&lt;li>名字：自己写，我写 &lt;a href="https://link.jianshu.com?t=http://google.com">&lt;strong>http://google.com&lt;/strong>&lt;/a>&lt;/li>
&lt;li>关键字（keyword），我写 G&lt;/li>
&lt;li>最后一个空最重要，写入 Url ( &lt;a href="https://link.jianshu.com?t=http://www.google.com/search?hl=zh-CN&amp;amp;q=%25s">&lt;strong>http://www.google.com/search?hl=zh-CN&amp;amp;q=%s&lt;/strong>&lt;/a>) 或者 ( &lt;a href="https://link.jianshu.com?t=http://www.google.com/search?q=%25s">&lt;strong>http://www.google.com/search?q=%s&lt;/strong>&lt;/a> ) &lt;code>括号为填写部分&lt;/code>&lt;/li>
&lt;li>然后将之设置成默认搜索引擎，搞定！&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;strong>so easy！好好享受 google&lt;/strong> 原汁原味的搜索吧！&lt;/p>
&lt;/blockquote>
&lt;h2 id="chrome浏览器访问https网页提示不是私密连接点击高级没有继续访问按钮提示">chrome浏览器访问https网页提示不是私密连接，点击高级没有继续访问按钮提示&lt;/h2>
&lt;p>&lt;a href="https://blog.csdn.net/zhangxingyu126/article/details/105010443/">https://blog.csdn.net/zhangxingyu126/article/details/105010443/&lt;/a>&lt;/p>
&lt;p>访问https的网页，以前正常访问提示不是私密连接，可以点击高级，继续访问，但是最近突然没有继续访问的按钮了。&lt;/p>
&lt;p>&lt;img src="https://img-blog.csdnimg.cn/20200321151204453.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3poYW5neGluZ3l1MTI2,size_16,color_FFFFFF,t_70" alt="">&lt;/p>
&lt;p>&lt;strong>解决方案：&lt;/strong>&lt;/p>
&lt;p>经过很多尝试，发现只有一种有效方法可以有效（&lt;strong>别不信，可以试试，不行再来骂我&lt;/strong>）：&lt;/p>
&lt;h3 id="在chrome该页面上直接键盘敲入这11个字符thisisunsafe">在chrome该页面上，直接键盘敲入这11个字符：&lt;code>**thisisunsafe**&lt;/code>&lt;/h3>
&lt;p>（鼠标点击当前页面任意位置，让页面处于最上层即可输入）&lt;/p>
&lt;h2 id="software-report-tool-进程占用大量-cpu-时间">Software Report Tool 进程占用大量 CPU 时间&lt;/h2>
&lt;p>&lt;strong>Software Reporter Tool 其实就是 Chrome 的清理工具&lt;/strong>，用于清理谷歌浏览器中不必要或恶意的扩展，应用程序，劫持开始页面等等。当你安装 Chrome 时，Software_reporter_tool.exe 也就会被下载在 SwReporter 文件夹下的 Chrome 应用数据文件夹中。这个软件在运行的过程中可能会&lt;strong>长时间地占用 CPU&lt;/strong>，导致高 CPU 使用率。我们虽然可以通过任务管理器手动结束进程或者选择删除 SRT，但这都不是长久的解决办法。因为前者过一段时间它又会再次运行，后者在浏览器更新的时候就又会重新被下载下来。查询该文件，发现 software_reporter_tool.exe 会扫描系统，类似 Chrome 的一个计划任务，每周启动扫描一次，运行大约 20-25 分钟。&lt;/p>
&lt;p>修改 Chrome 设置&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/yg65yy/1632309843432-ea1d257f-b402-4181-b0c3-d36c32c32eeb.png" alt="image.png">
若修改没用，则找到 &lt;code>C:\Users\DesistDaydream\AppData\Local\Google\Chrome\User Data\SwReporter\93.269.200\manifest.json&lt;/code> 文件。将 allow-reporter-logs 的值改为 false&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;launch_params&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;allow-reporter-logs&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">false&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;arguments&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;--engine=2&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;--scan-locations=1,2,3,4,5,6,7,8,10&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;--disabled-locations=9,11&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;prompt&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;suffix&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;ESET&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;manifest_version&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">2&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Software Reporter Tool&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;version&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;93.269.200&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="滚动条冻结问题">滚动条冻结问题&lt;/h2>
&lt;blockquote>
&lt;p>&lt;a href="https://leadscloud.github.io/314048/chrome%E6%B5%8F%E8%A7%88%E5%99%A8%E6%BB%9A%E5%8A%A8%E6%9D%A1%E5%86%BB%E7%BB%93%E9%97%AE%E9%A2%98/">https://leadscloud.github.io/314048/chrome%E6%B5%8F%E8%A7%88%E5%99%A8%E6%BB%9A%E5%8A%A8%E6%9D%A1%E5%86%BB%E7%BB%93%E9%97%AE%E9%A2%98/&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>chrome://flags/#smooth-scrolling # 将该参数改为 disabled&lt;/p>
&lt;h2 id="chrome-打包插件">Chrome 打包插件&lt;/h2>
&lt;p>C:\Users\DesistDaydream\AppData\Local\Google\Chrome\User Data\Profile 2\Extensions&lt;/p></description></item><item><title>Docs: Edge</title><link>https://desistdaydream.github.io/docs/Web/%E6%B5%8F%E8%A7%88%E5%99%A8/Edge/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/Web/%E6%B5%8F%E8%A7%88%E5%99%A8/Edge/</guid><description>
&lt;h1 id="概述">概述&lt;/h1>
&lt;blockquote>
&lt;h2 id="参考">参考：&lt;/h2>
&lt;/blockquote>
&lt;p>使用 Edge 的用户常会用 newibing 的AI , 但当用了浏览器自带的搜索时，会访问 cn.bing.com 这时BING会把你的位置定位在中国，你再打开 bing.com , 会发现“聊天” 消失了，最筒单的恢复方法是 在浏览器上输入 sg.bing.com 就切回新加坡地点了, 页面上的“聊天”也会重新出现.&lt;/p>
&lt;h1 id="问题">问题&lt;/h1>
&lt;p>无法像 Chrome 一样，在收藏夹中的文件夹上右键点击“将此页添加到收藏夹”&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://answers.microsoft.com/zh-hans/microsoftedge/forum/all/edge%E4%B8%8D%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87/ef685d0b-a348-4556-978d-64937cad0a9f">https://answers.microsoft.com/zh-hans/microsoftedge/forum/all/edge%E4%B8%8D%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87/ef685d0b-a348-4556-978d-64937cad0a9f&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Docs: 开发者工具</title><link>https://desistdaydream.github.io/docs/Web/%E6%B5%8F%E8%A7%88%E5%99%A8/%E5%BC%80%E5%8F%91%E8%80%85%E5%B7%A5%E5%85%B7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/Web/%E6%B5%8F%E8%A7%88%E5%99%A8/%E5%BC%80%E5%8F%91%E8%80%85%E5%B7%A5%E5%85%B7/</guid><description>
&lt;h1 id="概述">概述&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://developer.chrome.com/docs/devtools/">Chrome 开发者工具官方文档&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>Chrome DevTools 是一组内置于 Chrome 浏览器中的 Web 开发者工具（通常使用 F12 快捷键打开）。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>元素&lt;/strong> # 当前网页被渲染的数据&lt;/li>
&lt;li>&lt;strong>控制台&lt;/strong> # 可以输入 JS 代码&lt;/li>
&lt;li>&lt;strong>源代码/来源&lt;/strong> # HTML、JS、CSS、字体等静态资源文件&lt;/li>
&lt;li>&lt;strong>网络&lt;/strong> # 数据传输内容&lt;/li>
&lt;li>&amp;hellip;..&lt;/li>
&lt;li>&lt;strong>应用&lt;/strong> #&lt;/li>
&lt;/ul>
&lt;h1 id="元素">元素&lt;/h1>
&lt;p>使用 &lt;code>Ctrl+Shift+C&lt;/code> 快捷键可以选定页面上的元素以定位到 HTML 中的位置。&lt;/p>
&lt;h1 id="网络">网络&lt;/h1>
&lt;h1 id="控制台">控制台&lt;/h1>
&lt;p>在控制台中，通过查看日志消息和运行 JS 代码以控制页面的控制。&lt;/p>
&lt;ul>
&lt;li>可以直接输出当前页面 js 代码中的各种变量、函数等等&lt;/li>
&lt;li>等等&lt;/li>
&lt;/ul>
&lt;h1 id="源代码">源代码&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://developer.chrome.com/docs/devtools/sources/">官方文档，源代码&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>在源代码中可以检查静态资源、打断点、等等。&lt;/p>
&lt;p>当浏览器的请求被断点暂停时，我们可以将鼠标悬停后，看到 FunctionLocation 关键字，从这里追踪函数的位置。&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/devtools/202311202258018.png" alt="image.png">&lt;/p>
&lt;blockquote>
&lt;p>在控制台输出该函数，也可以通过点击跳转到函数位置。&lt;/p>
&lt;/blockquote>
&lt;h2 id="代码段">代码段&lt;/h2>
&lt;p>&lt;a href="https://developer.chrome.com/docs/devtools/javascript/snippets?hl=zh-cn">https://developer.chrome.com/docs/devtools/javascript/snippets?hl=zh-cn&lt;/a>&lt;/p>
&lt;p>若我们需要在&lt;a href="#%E6%8E%A7%E5%88%B6%E5%8F%B0">控制台&lt;/a>反复运行相同的代码，可以将代码保存为&lt;strong>代码段&lt;/strong>，以便随时使用&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/devtools/202312090821304.png" alt="image.png">&lt;/p>
&lt;p>最常见的用法是替换 JS 中的函数以 Debug，比如下面这个，可以通过 &lt;code>JSON.stringify = function (params) {}&lt;/code> 和 &lt;code>JSON.parse = function (params) {}&lt;/code> 修改原始 &lt;code>JSON.stringify&lt;/code> 和 &lt;code>JSON.parse&lt;/code> 方法的逻辑：在其中加入文本输出和 debug 暂停能力。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#66d9ef">function&lt;/span> () {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">my_stringify&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">JSON&lt;/span>.&lt;span style="color:#a6e22e">stringify&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">JSON&lt;/span>.&lt;span style="color:#a6e22e">stringify&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span> (&lt;span style="color:#a6e22e">params&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Hook 字符串化&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">params&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">debugger&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">my_stringify&lt;/span>(&lt;span style="color:#a6e22e">params&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">my_parse&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">JSON&lt;/span>.&lt;span style="color:#a6e22e">parse&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">JSON&lt;/span>.&lt;span style="color:#a6e22e">parse&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span> (&lt;span style="color:#a6e22e">params&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Hook 解析&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">params&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">debugger&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">my_parse&lt;/span>(&lt;span style="color:#a6e22e">params&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})();
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这时，凡是页面的 JS 代码中调用了 JSON.stringify 和 JSON.parse 这俩方法的地方，都会输出参数，并被 debugger 关键字暂停以进行断点检查。然后可以在右侧 &lt;em>调用堆栈&lt;/em> 中点击直接跳转到网页的代码中，对应的位置。&lt;/p>
&lt;h2 id="断点">断点&lt;/h2>
&lt;p>可以通过多种方式添加断点&lt;/p>
&lt;ul>
&lt;li>断点 # 与 IDE 类型，直接点击代码的行号能添加。&lt;/li>
&lt;li>XHR/提取 断点&lt;/li>
&lt;li>DOM 断点&lt;/li>
&lt;li>事件监听器断点&lt;/li>
&lt;li>CSP 违规断点&lt;/li>
&lt;/ul>
&lt;h3 id="最佳实践">最佳实践&lt;/h3>
&lt;p>从 &lt;code>网络 - XHR/Fetch&lt;/code> 找到的 请求，可以提取出其中部分路径当做要断点的检查点。比如 Grafana 点击首页是，会向 &lt;code>https://DOMAIN/api/dashboards/home&lt;/code> 发起请求，那么在断点处添加 &lt;code>/api/dashboards/home&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/devtools/202311201206181.png" alt="image.png">&lt;/p>
&lt;p>此时访问首页时，即可让页面在发起这个请求时暂停并定位到源码位置&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/devtools/202311201207139.png" alt="image.png">&lt;/p></description></item><item><title>Docs: 浏览器</title><link>https://desistdaydream.github.io/docs/Web/%E6%B5%8F%E8%A7%88%E5%99%A8/%E6%B5%8F%E8%A7%88%E5%99%A8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/Web/%E6%B5%8F%E8%A7%88%E5%99%A8/%E6%B5%8F%E8%A7%88%E5%99%A8/</guid><description>
&lt;h1 id="概述">概述&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>在访问一个网页时，除非收到 3XX 重定向的响应，否则浏览器地址栏中的地址是不会改变的，比如 Nginx 中的 rewrite 功能，如果不使用 &lt;strong>redirect&lt;/strong> 或 &lt;strong>permanent&lt;/strong> 标志，那么所有的 URL 改变都是针对 Nginx 内部来说的。&lt;/p>
&lt;h1 id="解决网页播放鼠标移开屏幕或点击屏外视频暂停播放">解决网页播放【鼠标移开屏幕或点击屏外视频暂停播放】&lt;/h1>
&lt;p>原文： &lt;a href="https://www.jianshu.com/p/945851ea95da">https://www.jianshu.com/p/945851ea95da&lt;/a>&lt;/p>
&lt;p>从网页的 F12 中，元素-事件监听器 中&lt;/p>
&lt;ul>
&lt;li>将【blur】所有内容【remove】掉&lt;/li>
&lt;li>单击【mouseout】左边的倒三角，将出现的子元素全部remove掉，&lt;/li>
&lt;li>将【mouseup】也用同样的操作移除掉子元素，现在就可以成功切换页面而不受限制啦!&lt;/li>
&lt;/ul>
&lt;p>（点击Remove要精准，remove会把blur清除，不会进入其他设置）&lt;/p>
&lt;p>注：可同时点开多个网页播放器并行播放不暂停，提高效率&lt;/p></description></item></channel></rss>