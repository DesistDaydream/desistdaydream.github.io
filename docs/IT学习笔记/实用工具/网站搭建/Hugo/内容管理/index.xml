<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦 – 内容管理</title><link>https://desistdaydream.github.io/docs/IT%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/Hugo/%E5%86%85%E5%AE%B9%E7%AE%A1%E7%90%86/</link><description>Recent content in 内容管理 on 断念梦</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://desistdaydream.github.io/docs/IT%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/Hugo/%E5%86%85%E5%AE%B9%E7%AE%A1%E7%90%86/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: 内容管理</title><link>https://desistdaydream.github.io/docs/IT%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/Hugo/%E5%86%85%E5%AE%B9%E7%AE%A1%E7%90%86/%E5%86%85%E5%AE%B9%E7%AE%A1%E7%90%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/IT%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/Hugo/%E5%86%85%E5%AE%B9%E7%AE%A1%E7%90%86/%E5%86%85%E5%AE%B9%E7%AE%A1%E7%90%86/</guid><description>
&lt;h1 id="概述">概述&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://gohugo.io/content-management/">官方文档，内容管理&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>为了让静态站点生成器实现可扩展性和可管理型，我们可以为文章添加 &lt;strong>FrontMatter(前页)&lt;/strong> 和 &lt;strong>Templates(模板)&lt;/strong>。Hugo 基于这种特性，设计时不仅考虑了开发人员，还考虑到了内容管理者和作者。&lt;/p>
&lt;h2 id="页面渲染逻辑">页面渲染逻辑&lt;/h2>
&lt;p>网页中 URL 的生成逻辑&lt;/p>
&lt;ul>
&lt;li>网页中的 URL 将会根据目录名和文件名生成&lt;/li>
&lt;li>目录名、文件名中各种字符、特殊符号变成 URL 之后将会进行一些特殊处理
&lt;ul>
&lt;li>空格在 URL 中为 &lt;code>-&lt;/code> 符号&lt;/li>
&lt;li>字母在 URL 中为小写&lt;/li>
&lt;li>&lt;code>()&lt;/code> 符号被删除&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>比如&lt;/p>
&lt;ul>
&lt;li>content/zh-cn/docs/IT学习笔记/10.云原生/Cloud Native(云原生)/Cloud Native(云原生).md，访问该文件时时，URL 为 &lt;code>http://localhost/docs/it学习笔记/10.云原生/cloud-native云原生/cloud-native云原生/&lt;/code>&lt;/li>
&lt;/ul>
&lt;h1 id="frontmatter前页">FrontMatter(前页)&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://gohugo.io/content-management/front-matter/">官方文档，内容管理-前页&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>在每篇文档的开头，我们可以使用 TOML、YAML、JSON、ORG 这四种格式配置文档的元数据，通过这些元数据，我们可以让 Hugo 或 Hugo 主题提供更强大的功能。&lt;/p>
&lt;p>各种格式使用不同的符号来识别：&lt;/p>
&lt;pre tabindex="0">&lt;code>+++
TOML 格式
+++
---
YAML 格式
---
{JSON 格式}
&lt;/code>&lt;/pre>&lt;h2 id="前页变量">前页变量&lt;/h2>
&lt;p>在 FrontMatter 配置的元数据可以生成 FrontMatter Variables(前页变量)，Hugo 具有如下预定义的前页变量&lt;/p>
&lt;p>&lt;strong>title&lt;/strong> # 文档的标题。&lt;/p>
&lt;p>&lt;strong>linktitle&lt;/strong> # 用于创建内容链接；如果设置，Hugo 将会使用 linkTitle 的值作为菜单栏、导航栏中文章的链接名称。 Hugo 还可以通过链接标题对内容列表进行排序。&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/hugo/content/20230323122828.png" alt="image.png">&lt;/p>
&lt;p>&lt;strong>data&lt;/strong> # 分配给此页面的日期时间。这通常是从 front matter 的日期字段中获取的，但这种行为是可配置的。&lt;/p>
&lt;p>&lt;strong>lastmod&lt;/strong> # 上次修改内容的日期&lt;/p>
&lt;p>&lt;strong>slug&lt;/strong> #&lt;/p>
&lt;h1 id="url-管理">URL 管理&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://gohugo.io/content-management/urls/">官方文档，内容管理-URL 管理&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>官方生成 URL 的默认规则：&lt;/p>
&lt;ul>
&lt;li>全部变为小写。可以通过 &lt;code>disablePathToLower&lt;/code> 配置改变&lt;/li>
&lt;li>空格使用 &lt;code>-&lt;/code> 代替&lt;/li>
&lt;li>TODO: 待整理&lt;/li>
&lt;/ul></description></item></channel></rss>