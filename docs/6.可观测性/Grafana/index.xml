<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦的站点 – Grafana</title><link>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Grafana/</link><description>Recent content in Grafana on 断念梦的站点</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Grafana/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Grafana</title><link>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Grafana/Grafana/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Grafana/Grafana/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://grafana.com/">官网&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/grafana/grafana">GitHub 项目，grafana/grafana&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>Grafana 是开源的可视化和分析软件。它使我们可以查询，可视化，警报和浏览指标，无论它们存储在哪里。它为您提供了将 &lt;a href="https://desistdaydream.github.io/docs/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97%E6%95%B0%E6%8D%AE/%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97%E6%95%B0%E6%8D%AE.md">时间序列数据&lt;/a> 转换为精美的图形和可视化效果的工具。&lt;/p>
&lt;h1 id="grafana-部署">Grafana 部署&lt;a class="td-heading-self-link" href="#grafana-%e9%83%a8%e7%bd%b2" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://grafana.com/docs/grafana/latest/setup-grafana/installation/">官方文档，安装-安装 Grafana&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h2 id="docker-方式运行-grafana">docker 方式运行 grafana&lt;a class="td-heading-self-link" href="#docker-%e6%96%b9%e5%bc%8f%e8%bf%90%e8%a1%8c-grafana" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>获取配置文件&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>mkdir -p /opt/monitoring/server/config/grafana
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir -p /opt/monitoring/server/data/grafana
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chown -R &lt;span style="color:#0000cf;font-weight:bold">472&lt;/span> /opt/monitoring/server/data/grafana
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker run -d --name grafana --rm grafana/grafana
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker cp grafana:/etc/grafana /opt/monitoring/server/config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker stop grafana
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>运行 Grafana&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>docker run -d --name grafana &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --network host &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> -v /opt/monitoring/server/config/grafana:/etc/grafana &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> -v /opt/monitoring/server/data/grafana:/var/lib/grafana &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> -v /etc/localtime:/etc/localtime &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> grafana/grafana
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="grafana-关联文件与配置">Grafana 关联文件与配置&lt;a class="td-heading-self-link" href="#grafana-%e5%85%b3%e8%81%94%e6%96%87%e4%bb%b6%e4%b8%8e%e9%85%8d%e7%bd%ae" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;strong>/etc/grafana/&lt;/strong> # Grafana 配置文件保存路径&lt;/p>
&lt;ul>
&lt;li>&lt;strong>./grafana.ini&lt;/strong> # Grafana 运行所需配置文件&lt;/li>
&lt;li>&lt;strong>./provisioning/&lt;/strong> # Grafana 的 Provisioning 功能要读取的路径。该功能详见 &lt;a href="https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Grafana/Grafana%20%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/Provisioning%20%E9%85%8D%E7%BD%AE.md">Provisioning 配置&lt;/a>
&lt;ul>
&lt;li>&lt;strong>./dashboards/*.yaml&lt;/strong> # Grafana 启动时，会根据该路径下配置文件内的 .providers.options.path 字段的路径配置，去对应路径加载 grafana 的 dashboard 的 json 文件。&lt;/li>
&lt;li>&lt;strong>./datasources/*.yaml&lt;/strong> # Grafana 启动时，会根据该路径下配置文件，自动加载数据源信息。&lt;/li>
&lt;li>&lt;strong>./notifiers/*.yaml&lt;/strong> # Grafana 启动时，加载的告警配置文件。&lt;/li>
&lt;li>&lt;strong>./plugins/*.yaml&lt;/strong> # Grafana 启动时，加载的插件的配置文件。用来管理 Grafana 插件&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>/var/lib/grafana/&lt;/strong> # Grafana 数据保存路径&lt;/p>
&lt;ul>
&lt;li>&lt;strong>./grafana.db&lt;/strong> # Grafana 数据文件，包括 用户信息、dashboard、datasource 等等。这是一个 SQLite3 数据库文件。&lt;/li>
&lt;li>&lt;strong>./plugins/&lt;/strong> # Grafana 安装的插件保存在该目录下&lt;/li>
&lt;/ul></description></item><item><title>Docs: Panel 与 Dashboard</title><link>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Grafana/Panel-%E4%B8%8E-Dashboard/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Grafana/Panel-%E4%B8%8E-Dashboard/</guid><description/></item><item><title>Docs: Grafana 告警</title><link>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Grafana/Grafana-%E5%91%8A%E8%AD%A6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Grafana/Grafana-%E5%91%8A%E8%AD%A6/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://mp.weixin.qq.com/s/1aJOqhGOXaOas2lPUcP2-g">Grafana 8.0 告警使用&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>Grafana 除了支持丰富的数据源和图表功能之外，还支持告警功能，该功能也使得 Grafana 从一个数据可视化工具成为了一个真正的监控利器。Grafana 可以通过 Alerting 模块的配置把监控数据中的异常信息进行告警，告警的规则可以直接基于现有的数据图表进行配置，在告警的时候也会把出现异常的图表进行通知，使得我们的告警通知更加友好。&lt;/p>
&lt;h2 id="渠道">渠道&lt;a class="td-heading-self-link" href="#%e6%b8%a0%e9%81%93" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>Grafana Alerting 支持多种告警渠道，比如钉钉、Discord、Email、Kafka、Pushover、Telegram、Webhook 等等，我们这里可以使用钉钉和 Email 进行展示说明。&lt;/p>
&lt;h3 id="email">Email&lt;a class="td-heading-self-link" href="#email" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>邮箱告警通常是最常见的告警接收方式，通过 Grafana 告警需要在 Grafana 的配置文件中配置 stmp 服务。在配置文件 &lt;code>/etc/grafana/grafana.ini&lt;/code> 文件中添加 &lt;code>SMTP/Emailing&lt;/code> 配置块并开启 &lt;code>Alerting&lt;/code>：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">#################################### SMTP / Emailing ##########################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">[smtp]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c4a000">enabled&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c4a000">host&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">smtp.163.com:465  # 我们这里使用 163 的邮箱&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c4a000">user&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;lt;xxx@163.com&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c4a000">password&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">  # 使用网易邮箱的授权码&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c4a000">skip_verify&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c4a000">from_address&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;lt;xxx@163.com&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">#################################### Alerting ############################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">[alerting]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c4a000">enabled&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c4a000">execute_alerts&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>需要注意的是这里我们使用的是 163 的邮箱进行发送，在配置 &lt;code>smtp&lt;/code> 的时候需要在邮箱中开启 &lt;code>IMAP/SMTP&lt;/code> 和 &lt;code>POP3/SMTP&lt;/code> 两个服务，并添加一个授权码，上面的 password 密码使用的就是授权码进行认证：&lt;/p>
&lt;p>配置完成后重新启动 Grafana：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>systemctl daemon-reload
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>systemctl restart grafana-server
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>回到 Grafana 页面中点击左侧的 &lt;code>Notification channels&lt;/code> 开始添加消息通知渠道：&lt;/p>
&lt;p>点击 &lt;code>Add channel&lt;/code> 按钮新建一个通知渠道，这里我们选择渠道类型为 &lt;code>Email&lt;/code>，添加接收通知的邮件地址，此外还可以对通知进行简单的配置：&lt;/p>
&lt;p>点击下方的 &lt;code>Test&lt;/code> 按钮可以测试是否可以正常发送邮件，如果出现 &lt;code>Test notification sent&lt;/code> 的提示证明发送成功，正常也可以收到一封如下所示的告警通知邮件：&lt;/p>
&lt;p>测试成功后点击 &lt;code>Save&lt;/code> 按钮，保存这个通知渠道。&lt;/p>
&lt;h3 id="钉钉">钉钉&lt;a class="td-heading-self-link" href="#%e9%92%89%e9%92%89" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>Grafana 还内置支持了钉钉，所以如果我们想把告警消息接入钉钉群也是非常方便的。创建一个自定义群机器人，需要注意的是现在的钉钉群机器人新增了 3 种安全认证方式，这里我们选择关键字的方式即可，设置关键字 &lt;code>alert&lt;/code> 即可：&lt;/p>
&lt;p>创建后会生成一个 Webhook 的地址，复制该地址：&lt;/p>
&lt;p>然后回到 Grafana 中新建一个新的通知渠道，选择类型为 &lt;code>DingDing&lt;/code>，将上面复制的 Webhook 地址拷贝到 &lt;code>Url&lt;/code> 栏目中：&lt;/p>
&lt;p>同样点击 &lt;code>Test&lt;/code> 按钮可以测试消息：&lt;/p>
&lt;p>测试通过后点击 &lt;code>Save&lt;/code> 保存该通知渠道即可。这样我们就创建了两个通知渠道，也可以根据需要设置一个默认的渠道，如果还有其他的渠道需求，可以自行添加即可。&lt;/p>
&lt;h2 id="规则">规则&lt;a class="td-heading-self-link" href="#%e8%a7%84%e5%88%99" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>在通知渠道的左侧就是一个 &lt;code>Alert rules&lt;/code> 告警规则的选项卡，点击该页面下面的 &lt;code>How to add an alert&lt;/code> 按钮就有提示如果创建一个告警：&lt;/p>
&lt;p>提示非常清晰，在任何仪表板图形面板的 &lt;code>Alert&lt;/code> 选项卡中添加和配置告警即可，可以使用现有查询构建和可视化告警，所以我们需要前往仪表板的图形面板中进行配置，这里我们同样以 CPU 使用率这个面板进行说明。&lt;/p>
&lt;p>进入 CPU 使用率的面板编辑页面：&lt;/p>
&lt;p>在编辑页面图形下方有 &lt;code>Query&lt;/code>、&lt;code>Transform&lt;/code>、&lt;code>Alert&lt;/code> 三个选项卡，前两个我们都已经使用过了，这里需要使用到的是 &lt;code>Alert&lt;/code> 这个选项卡：&lt;/p>
&lt;p>但是我们切换到 &lt;code>Alert&lt;/code> 选项卡页面的时候出现了 &lt;code>Template variables are not supported in alert queries&lt;/code> 这样的提示信息，意思就是在告警查询中是不支持模板变量的，但是我们这里的图形查询中定义了好几个变量，应该怎么处理该问题呢？&lt;/p>
&lt;p>首先我们需要在该面板中添加一个没有变量的查询语句，该语句用于报警使用，比如我们对节点总的使用率进行监控报警，添加新的查询语句 &lt;code>(1 - sum(rate(node_cpu_seconds_total{instance=~&amp;quot;node1:9100&amp;quot;, mode=&amp;quot;idle&amp;quot;}[5m])) by (instance) / sum(rate(node_cpu_seconds_total{instance=~&amp;quot;node1:9100&amp;quot;}[5m])) by (instance) ) * 100&lt;/code>，去掉对节点参数的使用，因为 Grafana 的报警不支持多维数据，所以这里我们暂时只对 &lt;code>node1&lt;/code> 节点进行监控，然后需要将该查询设置成 &lt;code>Disable query&lt;/code>，这样图表中就不会有该指标数据了，因为该指标是用来监控报警的：&lt;/p>
&lt;p>现在我们再切换到 &lt;code>Alert&lt;/code> 选项卡页面就可以正常创建报警规则了：&lt;/p>
&lt;p>点击 &lt;code>Create Alert&lt;/code> 按钮创建报警规则：&lt;/p>
&lt;p>在 Rule Name 中，添加一个描述性名称，该名称显示在警报规则列表中，后面的 &lt;code>Evaluate every&lt;/code> 表示的评估时间，这里我们设置 &lt;code>1m&lt;/code>，表示每隔 1 分钟 Grafana 会来评估我们的报警规则，&lt;code>For&lt;/code> 表示的是 &lt;code>Pending Duration&lt;/code> 的时长，意思就是如果报警规则持续 &lt;code>1m&lt;/code> 的时间则表示要真正去触发报警了。&lt;/p>
&lt;p>然后就是配置报警的条件，在 &lt;code>WHEN&lt;/code> 后面可以点击选择各种计算方式，我们这里选择 &lt;code>avg()&lt;/code> 表示平均值，&lt;code>OF&lt;/code> 后面的查询就是我们真正用于监控报警的语句，点击可以选择用于查询的语句，这里我们需要选择上面新建的语句 &lt;code>D&lt;/code>，&lt;code>query(D, 5m, now)&lt;/code> 就表示语句 D 从现在开始的前 5 分钟内平均值大于（IS ABOVE）1 这个阈值。&lt;/p>
&lt;p>在下方还可以配置用于报警通知的渠道：&lt;/p>
&lt;p>然后配置好过后 &lt;code>Apply&lt;/code> 该面板并保存 Dashboard，正常隔一会儿就可以收到报警通知了：&lt;/p>
&lt;p>但是通知里面的图形并没有渲染出来，这是因为我们没有安装 &lt;code>grafana-image-renderer&lt;/code> 插件，在 Grafana 安装节点上执行下面命令安装：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># grafana-cli plugins install grafana-image-renderer&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>✔ Downloaded grafana-image-renderer v3.3.0 zip successfully
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Please restart Grafana after installing plugins. Refer to Grafana documentation &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> instructions &lt;span style="color:#204a87;font-weight:bold">if&lt;/span> necessary.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>~&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># systemctl restart grafana-server&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>再一次触发报警的时候可能还是不会正常渲染图形，查看 &lt;code>Grafana&lt;/code> 的日志可以了解到相关错误信息：&lt;/p>
&lt;p>&lt;code>☸ ➜ journalctl -u grafana-server -f ...... Nov 30 18:19:01 node2 grafana-server[62536]: t=2021-11-30T18:19:01+0800 lvl=eror msg=&amp;quot;Render request failed&amp;quot; logger=plugins.backend pluginId=grafana-image-renderer url=&amp;quot;http://localhost:3000/d-solo/oq26nAFnz/nodejie-dian-jian-kong?orgId=1&amp;amp;panelId=2&amp;amp;render=1&amp;quot; error=&amp;quot;Error: Failed to launch the browser process!\n/var/lib/grafana/plugins/grafana-image-renderer/chrome-linux/chrome: error while loading shared libraries: libatk-1.0.so.0: cannot open shared object file: No such file or directory\n\n\nTROUBLESHOOTING: https://github.com/puppeteer/puppeteer/blob/main/docs/troubleshooting.md\n&amp;quot; ......&lt;/code>&lt;/p>
&lt;p>要解决这个问题我们需要安装几个 &lt;code>puppeteer&lt;/code> 的依赖包：&lt;/p>
&lt;p>&lt;code>☸ ➜ yum install atk at-spi2-atk libxkbcommon-x11-devel libXcomposite gtk3 -y&lt;/code>&lt;/p>
&lt;p>依赖安装完成后正常收到的告警消息通知就包含图形数据了：&lt;/p>
&lt;p>只是渲染的图形中文是乱码，这主要是 Linux 字体库对中文支持不好的原因，我们只需要给服务器的 Linux 系统安装支持的中文字体库即可，这里我们安装文泉驿字体库：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>☸ ➜ yum search wqy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Loaded plugins: fastestmirror
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Loading mirror speeds from cached hostfile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> *base: mirrors.aliyun.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * epel: mirrors.bfsu.edu.cn
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> *extras: mirrors.aliyun.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * updates: mirrors.aliyun.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">\=&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">===============================================&lt;/span> N/S matched: &lt;span style="color:#000">wqy&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=================================================&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wqy-microhei-fonts.noarch : Compact Chinese fonts derived from Droid
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wqy-unibit-fonts.noarch : WenQuanYi Unibit Bitmap Font
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wqy-zenhei-fonts.noarch : WenQuanYi Zen Hei CJK Font
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Name and summary matches only, use &lt;span style="color:#4e9a06">&amp;#34;search all&amp;#34;&lt;/span> &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> everything.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>☸ ➜ yum install wqy-microhei-fonts.noarch wqy-unibit-fonts.noarch wqy-zenhei-fonts.noarch -y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这个时候渲染的图形就可以正常显示了：&lt;/p>
&lt;p>但是钉钉通知中没有将图形显示出来：&lt;/p>
&lt;p>这是因为在邮件告警通知中的图片是通过邮件服务器发送出去的，是一个图片附件，所以可以正常看到，但是对于钉钉、webhook 这些告警渠道则是直接显示的图片，所以需要设置 &lt;code>external storage&lt;/code> 才能进行显示，设置后图片变为一个指向 &lt;code>external_image_storage&lt;/code> 中图片地址的链接，如果本机无法访问 &lt;code>external_image_storage&lt;/code> 图片是无法显示的，所以如果设置成 local 的时候邮件中的图片可能也不能显示了，因为这个时候是直接一张图片链接。不过 &lt;code>external_image_storage&lt;/code> 可设置的 provider 包括 s3、webdav、gcs、azure_blob、local，如果是线上服务的话建议接入对象存储，比如 s3 服务，这里我们使用阿里云 OSS 来配置 s3 进行说明。&lt;/p>
&lt;p>在 Grafana 配置文件 &lt;code>/etc/grafana/grafana.ini&lt;/code> 中配置 &lt;code>external_image_storage&lt;/code>：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">#################################### External image storage ##########################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">[external_image_storage]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c4a000">provider&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">s3  # 使用 s3 模式&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">[external_image_storage.s3]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c4a000">endpoint&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">oss-cn-beijing.aliyuncs.com&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c4a000">bucket&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c4a000">region&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">oss-cn-beijing&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c4a000">access_key&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">  # 使用阿里云后台的 ak 和 sk 进行配置&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c4a000">secret_key&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">#################################### Server ####################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">[server]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c4a000">domain&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">192.168.31.46  # 设置 Grafana 访问地址为内网 IP&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>另外注意需要将 Grafana 的访问域名设置成内网 IP，否则在局域网其他节点上访问不到，配置完成后重启 Grafana 即可：&lt;/p>
&lt;p>&lt;code>systemctl daemon-reload ☸ ➜ systemctl restart grafana-server&lt;/code>&lt;/p>
&lt;p>配置完成后我们重新去触发下报警，正常在邮件和钉钉中收到的图片都可以正常显示了：&lt;/p></description></item><item><title>Docs: Plugins(插件)</title><link>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Grafana/Plugins%E6%8F%92%E4%BB%B6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Grafana/Plugins%E6%8F%92%E4%BB%B6/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h1 id="clickhouse">Clickhouse&lt;a class="td-heading-self-link" href="#clickhouse" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/grafana/clickhouse-datasource">GitHub 项目，grafana/clickhouse-datasource&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://grafana.com/grafana/plugins/grafana-clickhouse-datasource/">https://grafana.com/grafana/plugins/grafana-clickhouse-datasource/&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;a href="https://desistdaydream.github.io/docs/5.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE/ClickHouse/ClickHouse.md">ClickHouse&lt;/a> 插件&lt;/p>
&lt;h2 id="macros">Macros&lt;a class="td-heading-self-link" href="#macros" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;a href="https://github.com/grafana/clickhouse-datasource?tab=readme-ov-file#macros">https://github.com/grafana/clickhouse-datasource?tab=readme-ov-file#macros&lt;/a>&lt;/p>
&lt;p>Grafana 的 ClickHouse 插件会改变一些 Grafana 中某些变量、函数的用法；还有一些新增加的 Macros 功能可以使用&lt;/p>
&lt;p>&lt;code>$__timeFilter(COLUMN_NAME)&lt;/code> #&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Macro&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>渲染结果示例&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>$__dateFilter(ColumnName)&lt;/code>&lt;/td>
&lt;td>Replaced by a conditional that filters the data (using the provided column) based on the date range of the panel&lt;/td>
&lt;td>&lt;code>date &amp;gt;= toDate('2022-10-21') AND date &amp;lt;= toDate('2022-10-23')&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>$__timeFilter(ColumnName)&lt;/code>&lt;/td>
&lt;td>利用 toDateTime() 函数转换 Grafana 面板时间范围选择器选择时间范围的值&lt;/td>
&lt;td>&lt;code>time &amp;gt;= toDateTime(1415792726) AND time &amp;lt;= toDateTime(1447328726)&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>etc.&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>Docs: Grafana 管理</title><link>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Grafana/Grafana-%E7%AE%A1%E7%90%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Grafana/Grafana-%E7%AE%A1%E7%90%86/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://grafana.com/docs/grafana/latest/administration/">官方文档,管理&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h1 id="grafana-密码重置">Grafana 密码重置&lt;a class="td-heading-self-link" href="#grafana-%e5%af%86%e7%a0%81%e9%87%8d%e7%bd%ae" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://grafana.com/docs/grafana/latest/administration/cli/#reset-admin-password">官方文档,管理-CLI-重置 admin 密码&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h2 id="sqlite3-重置">SQLite3 重置&lt;a class="td-heading-self-link" href="#sqlite3-%e9%87%8d%e7%bd%ae" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>首先需要安装 sqlite3 命令行工具，然后通过 &lt;code>sqlite3 /PATH/TO/grafana.db&lt;/code> 命令进入 Grafana 数据库&lt;/p>
&lt;p>通过 &lt;code>select login, password, salt from user where login = 'admin';&lt;/code> 语句可以查询到 admin 的当前密码信息&lt;/p>
&lt;p>使用下面的 SQL，可以更新 admin 用户的密码为 admin：&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-plsql" data-lang="plsql">sqlite&amp;gt; update user set password = &amp;#39;59acf18b94d7eb0694c61e60ce44c110c7a683ac6a8f09580d626f90f4a242000746579358d77dd9e570e83fa24faa88a8a6&amp;#39;, salt = &amp;#39;F3FAxVm33R&amp;#39; where login = &amp;#39;admin&amp;#39;;
&lt;/code>&lt;/pre>&lt;h2 id="api-修改密码">API 修改密码&lt;a class="td-heading-self-link" href="#api-%e4%bf%ae%e6%94%b9%e5%af%86%e7%a0%81" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>前提是没有忘记密码&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>curl -X PUT -H &lt;span style="color:#4e9a06">&amp;#34;Content-Type: application/json&amp;#34;&lt;/span> -d &lt;span style="color:#4e9a06">&amp;#39;{
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> &amp;#34;oldPassword&amp;#34;: &amp;#34;旧密码&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> &amp;#34;newPassword&amp;#34;: &amp;#34;新密码&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> &amp;#34;confirmNew&amp;#34;: &amp;#34;新密码&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">}&amp;#39;&lt;/span> http://账号:旧密码@IP:PORT/api/user/password
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="grafana-cli-密码重置">grafana-cli 密码重置&lt;a class="td-heading-self-link" href="#grafana-cli-%e5%af%86%e7%a0%81%e9%87%8d%e7%bd%ae" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>grafana-cli admin reset-admin-password 新密码
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="常用-dashboard-推荐">常用 Dashboard 推荐&lt;a class="td-heading-self-link" href="#%e5%b8%b8%e7%94%a8-dashboard-%e6%8e%a8%e8%8d%90" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>Kubernetes&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://grafana.com/grafana/dashboards/13105-k8s-dashboard-cn-20240513-starsl-cn/">13105&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Node exporter&lt;/p>
&lt;ul>
&lt;li>1860
&lt;ul>
&lt;li>&lt;a href="https://github.com/rfmoz/grafana-dashboards">https://github.com/rfmoz/grafana-dashboards&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://grafana.com/grafana/dashboards/8919-1-node-exporter-for-prometheus-dashboard-cn-0413-consulmanager/">8919&lt;/a>
&lt;ul>
&lt;li>国人出的，22 年4月12日之后不维护了&lt;/li>
&lt;li>&lt;a href="https://grafana.com/grafana/dashboards/16098-1-node-exporter-for-prometheus-dashboard-cn-0417-job/">16098&lt;/a> 新的，代替 8919&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Nginx&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://grafana.com/grafana/dashboards/9614-nginx-ingress-controller/">9614&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://grafana.com/grafana/dashboards/12559-loki-nginx-service-mesh-json-version/">12559&lt;/a> # Loki NGINX Service Mesh - JSON version&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://mp.weixin.qq.com/s/zcY_8c_7eVcRpKh9IHasLg">如何用 Loki 来绘制 Ingress Nginx 监控大屏&lt;/a>&lt;/p>
&lt;h1 id="在代理后面使用-grafana">在代理后面使用 Grafana&lt;a class="td-heading-self-link" href="#%e5%9c%a8%e4%bb%a3%e7%90%86%e5%90%8e%e9%9d%a2%e4%bd%bf%e7%94%a8-grafana" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;a href="https://grafana.com/tutorials/run-grafana-behind-a-proxy/">https://grafana.com/tutorials/run-grafana-behind-a-proxy/&lt;/a>&lt;/p></description></item><item><title>Docs: Grafana 配置详解</title><link>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Grafana/Grafana-%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Grafana/Grafana-%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/</guid><description/></item><item><title>Docs: Grafana数据模型</title><link>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Grafana/Grafana-%E6%95%B0%E6%8D%AE%E6%A8%A1%E5%9E%8B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Grafana/Grafana-%E6%95%B0%E6%8D%AE%E6%A8%A1%E5%9E%8B/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://grafana.com/docs/grafana/latest/developers/plugins/data-frames/">官方文档，开发者-构建插件-数据框架&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h1 id="data-frames数据框架">Data Frames(数据框架)&lt;a class="td-heading-self-link" href="#data-frames%e6%95%b0%e6%8d%ae%e6%a1%86%e6%9e%b6" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>Grafana 支持各种不同的数据源，每个数据源都有自己的数据模型。为了实现这一点，Grafana 将来自每个数据源的查询结果合并为一个统一的数据结构，称为 &lt;strong>Data Frames(数据框架)&lt;/strong>。
数据框架结构是从 R 编程语言和 Pandas 等数据分析工具中借用的概念。&lt;/p>
&lt;blockquote>
&lt;p>数据帧在 Grafana 7.0+中可用，并且用更通用的数据结构代替了时间序列和表结构，该数据结构可以支持更大范围的数据类型。&lt;/p>
&lt;/blockquote>
&lt;p>本文档概述了数据框架结构以及如何在 Grafana 中处理数据。&lt;/p>
&lt;h2 id="数据框">数据框&lt;a class="td-heading-self-link" href="#%e6%95%b0%e6%8d%ae%e6%a1%86" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>数据框是面向列的表结构，这意味着它按列而不是按行存储数据。要了解这意味着什么，让我们看一下 Grafana 使用的 TypeScript 定义：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">interface&lt;/span> &lt;span style="color:#000">DataFrame&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">name&lt;/span>&lt;span style="color:#a40000">?&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">string&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic">// reference to query that create the frame
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">refId&lt;/span>&lt;span style="color:#a40000">?&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">string&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">fields&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[]&lt;/span>&lt;span style="color:#000">Field&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>本质上，数据框是 &lt;strong>Fields(字段)&lt;/strong>_ _的集合，其中每个字段对应于一列。每个字段又由值的集合以及元信息（例如这些值的数据类型）组成。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">interface&lt;/span> &lt;span style="color:#000">Field&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">string&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// Prometheus like Labels / Tags
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">labels&lt;/span>&lt;span style="color:#a40000">?&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000">Record&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#204a87;font-weight:bold">string&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">string&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// For example string, number, time (or more specific primitives in the backend)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000">FieldType&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// Array of values all of the same type
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">values&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000">Vector&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;lt;&lt;/span>&lt;span style="color:#000">T&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;gt;;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">// Optional display data for the field (e.g. unit, name over-ride, etc)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span> &lt;span style="color:#000">config&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000">FieldConfig&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>让我们来看一个例子。下表说明了一个具有两个字段（_时间_和_温度）_的数据框。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>时间&lt;/td>
&lt;td>温度&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>2020-01-02 03:04:00&lt;/td>
&lt;td>45.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>2020-01-02 03:05:00&lt;/td>
&lt;td>47.0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>2020-01-02 03:06:00&lt;/td>
&lt;td>48.0&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>每个字段具有三个值，并且字段中的每个值必须共享相同的类型。在这种情况下，时间字段中的所有值都是时间戳，而温度字段中的所有值都是数字。&lt;/p>
&lt;p>数据帧的一个限制是，帧中的所有字段必须具有相同的长度才能成为有效的数据帧。&lt;/p>
&lt;h3 id="现场配置">现场配置&lt;a class="td-heading-self-link" href="#%e7%8e%b0%e5%9c%ba%e9%85%8d%e7%bd%ae" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>数据帧中的每个字段都包含有关字段中值的可选信息，例如单位，缩放比例等。&lt;/p>
&lt;p>通过将字段配置添加到数据框，Grafana 可以自动配置可视化。例如，您可以将 Grafana 配置为自动设置数据源提供的单位。&lt;/p>
&lt;h2 id="转变">转变&lt;a class="td-heading-self-link" href="#%e8%bd%ac%e5%8f%98" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>除类型信息外，字段配置还支持在 Grafana 中进行_数据转换_。&lt;/p>
&lt;p>数据转换是任何接受一个数据帧作为输入并返回另一个数据帧作为输出的函数。通过在插件中使用数据框，您可以免费获得一系列转换。&lt;/p>
&lt;h2 id="数据帧作为时间序列">数据帧作为时间序列&lt;a class="td-heading-self-link" href="#%e6%95%b0%e6%8d%ae%e5%b8%a7%e4%bd%9c%e4%b8%ba%e6%97%b6%e9%97%b4%e5%ba%8f%e5%88%97" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>具有至少一个时间字段的数据帧被视为_时间序列_。&lt;/p>
&lt;p>有关时间序列的更多信息，请参阅我们的时间序列简介。&lt;/p>
&lt;h3 id="宽幅">宽幅&lt;a class="td-heading-self-link" href="#%e5%ae%bd%e5%b9%85" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>当时间序列集合共享相同的_时间索引_时（每个时间序列中的时间字段都相同），它们可以以_宽_格式存储在一起。通过重用时间字段，我们可以减少发送到浏览器的数据量。&lt;/p>
&lt;p>在此示例中，&lt;code>cpu&lt;/code>每个主机的使用情况共享时间索引，因此我们可以将它们存储在同一数据帧中。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>Name: Wide
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Dimensions: &lt;span style="color:#0000cf;font-weight:bold">3&lt;/span> fields by &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span> rows
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+---------------------+-----------------+-----------------+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">|&lt;/span> Name: &lt;span style="color:#204a87">time&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> Name: cpu &lt;span style="color:#000;font-weight:bold">|&lt;/span> Name: cpu &lt;span style="color:#000;font-weight:bold">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">|&lt;/span> Labels: &lt;span style="color:#000;font-weight:bold">|&lt;/span> Labels: &lt;span style="color:#000">host&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>a &lt;span style="color:#000;font-weight:bold">|&lt;/span> Labels: &lt;span style="color:#000">host&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>b &lt;span style="color:#000;font-weight:bold">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">|&lt;/span> Type: &lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span>time.Time &lt;span style="color:#000;font-weight:bold">|&lt;/span> Type: &lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span>float64 &lt;span style="color:#000;font-weight:bold">|&lt;/span> Type: &lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span>float64 &lt;span style="color:#000;font-weight:bold">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+---------------------+-----------------+-----------------+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">|&lt;/span> 2020-01-02 03:04:00 &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">3&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">4&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">|&lt;/span> 2020-01-02 03:05:00 &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">6&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">7&lt;/span> &lt;span style="color:#000;font-weight:bold">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+---------------------+-----------------+-----------------+
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>但是，如果两个时间序列不共享相同的时间值，则它们将表示为两个不同的数据帧。&lt;/p>
&lt;pre>&lt;code>Name: cpu
Dimensions: 2 fields by 2 rows
+---------------------+-----------------+
| Name: time | Name: cpu |
| Labels: | Labels: host=a |
| Type: []time.Time | Type: []float64 |
+---------------------+-----------------+
| 2020-01-02 03:04:00 | 3 |
| 2020-01-02 03:05:00 | 6 |
+---------------------+-----------------+
Name: cpu
Dimensions: 2 fields by 2 rows
+---------------------+-----------------+
| Name: time | Name: cpu |
| Labels: | Labels: host=b |
| Type: []time.Time | Type: []float64 |
+---------------------+-----------------+
| 2020-01-02 03:04:01 | 4 |
| 2020-01-02 03:05:01 | 7 |
+---------------------+-----------------+
&lt;/code>&lt;/pre>
&lt;p>当通过同一过程收集多个时间序列时，通常可以使用宽格式。在这种情况下，每次测量均以相同的间隔进行，因此将共享相同的时间值。&lt;/p>
&lt;h3 id="长格式">长格式&lt;a class="td-heading-self-link" href="#%e9%95%bf%e6%a0%bc%e5%bc%8f" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>某些数据源以_长_格式（也称为_窄_格式）返回数据。这是 SQL 数据库返回的常见格式。&lt;/p>
&lt;p>在长格式中，字符串值表示为单独的字段，而不是标签。结果，长格式的数据形式可能具有重复的时间值。&lt;/p>
&lt;p>Grafana 可以检测长格式的数据帧并将其转换为宽格式。&lt;/p>
&lt;blockquote>
&lt;p>**注意：**当前仅在后端中支持长格式：。&lt;/p>
&lt;/blockquote>
&lt;p>例如，以下长格式的数据帧：&lt;/p>
&lt;pre>&lt;code>Name: Long
Dimensions: 4 fields by 4 rows
+---------------------+-----------------+-----------------+----------------+
| Name: time | Name: aMetric | Name: bMetric | Name: host |
| Labels: | Labels: | Labels: | Labels: |
| Type: []time.Time | Type: []float64 | Type: []float64 | Type: []string |
+---------------------+-----------------+-----------------+----------------+
| 2020-01-02 03:04:00 | 2 | 10 | foo |
| 2020-01-02 03:04:00 | 5 | 15 | bar |
| 2020-01-02 03:05:00 | 3 | 11 | foo |
| 2020-01-02 03:05:00 | 6 | 16 | bar |
+---------------------+-----------------+-----------------+----------------+
&lt;/code>&lt;/pre>
&lt;p>可以转换为宽格式的数据帧：&lt;/p>
&lt;pre>&lt;code>Name: Wide
Dimensions: 5 fields by 2 rows
+---------------------+------------------+------------------+------------------+------------------+
| Name: time | Name: aMetric | Name: bMetric | Name: aMetric | Name: bMetric |
| Labels: | Labels: host=foo | Labels: host=foo | Labels: host=bar | Labels: host=bar |
| Type: []time.Time | Type: []float64 | Type: []float64 | Type: []float64 | Type: []float64 |
+---------------------+------------------+------------------+------------------+------------------+
| 2020-01-02 03:04:00 | 2 | 10 | 5 | 15 |
| 2020-01-02 03:05:00 | 3 | 11 | 6 | 16 |
+---------------------+------------------+------------------+------------------+------------------+
&lt;/code>&lt;/pre>
&lt;h2 id="技术参考">技术参考&lt;a class="td-heading-self-link" href="#%e6%8a%80%e6%9c%af%e5%8f%82%e8%80%83" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>本节包含技术参考和数据帧实现的链接。&lt;/p>
&lt;h3 id="阿帕奇箭">阿帕奇箭&lt;a class="td-heading-self-link" href="#%e9%98%bf%e5%b8%95%e5%a5%87%e7%ae%ad" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>数据框架结构受 Apache Arrow Project 启发并使用。Javascript 数据框架使用箭头表作为基础结构，后端 Go 代码在箭头表中序列化其框架以进行传输。&lt;/p>
&lt;h3 id="java-脚本">Java 脚本&lt;a class="td-heading-self-link" href="#java-%e8%84%9a%e6%9c%ac" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>JavaScript 实现数据帧是在&lt;code>/src/dataframe&lt;/code>文件夹和&lt;code>/src/types/dataframe.ts&lt;/code>该的&lt;code>@grafana/data&lt;/code>包。&lt;/p>
&lt;h3 id="go">Go&lt;a class="td-heading-self-link" href="#go" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>有关数据帧的 Go 实现的文档，请参阅 github.com/grafana/grafana-plugin-sdk-go/data 软件包。&lt;/p></description></item><item><title>Docs: 访问控制</title><link>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Grafana/%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Grafana/%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://grafana.com/docs/grafana/next/setup-grafana/configure-security/configure-authentication/">官方文档，安装-配置安全性-配置身份验证&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>Grafana 以 Organizations(组织) 为最大分类&lt;/p>
&lt;p>组织可以包含 Teams，Teams 又可以包含 Users。&lt;/p>
&lt;p>当我们正常登录或者匿名访问时，首先进到组织中，不同的组织，可以看到的面板、数据源等等配置都是不一样的。&lt;/p></description></item></channel></rss>