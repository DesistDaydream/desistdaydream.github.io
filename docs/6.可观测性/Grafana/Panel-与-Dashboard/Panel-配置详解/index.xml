<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦的站点 – Panel(面板) 配置详解</title><link>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Grafana/Panel-%E4%B8%8E-Dashboard/Panel-%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/</link><description>Recent content in Panel(面板) 配置详解 on 断念梦的站点</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Grafana/Panel-%E4%B8%8E-Dashboard/Panel-%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Panel 配置详解</title><link>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Grafana/Panel-%E4%B8%8E-Dashboard/Panel-%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/Panel-%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Grafana/Panel-%E4%B8%8E-Dashboard/Panel-%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/Panel-%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://grafana.com/docs/grafana/latest/panels/panel-editor/">官方文档,面板-面板编辑器&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>当我们开始创建一个新的 Panel 时，可以看到下图所示的界面，这个界面分为三大部分，分别用三种颜色的框体括起来&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/ldaq0w/1636261571312-2e5d4a25-2009-495d-919a-973f3d2cd178.png" alt="image.png">&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://grafana.com/docs/grafana/latest/panels/panel-editor/#header">&lt;strong>Header(标题)&lt;/strong>&lt;/a>&lt;strong>,绿色部分&lt;/strong> # 左边是面板的名称，右侧有 4 个按钮，分别是 设置整个 Dashboard、放弃、保存、应用&lt;/li>
&lt;li>&lt;a href="https://grafana.com/docs/grafana/latest/panels/panel-editor/#visualization-preview">&lt;strong>Visualization preview(可视化的预览)&lt;/strong>&lt;/a>&lt;strong>,蓝色部分&lt;/strong> # 在 数据处理 与 面板样式处理 两部分设置的内容将会反应在这个预览部分&lt;/li>
&lt;li>&lt;a href="https://grafana.com/docs/grafana/latest/panels/panel-editor/#data-section-bottom-pane">&lt;strong>Data section(数据处理)&lt;/strong>&lt;/a>&lt;strong>,红色部分&lt;/strong> #&lt;a href="https://grafana.com/docs/grafana/latest/panels/panel-editor/#data-section-bottom-pane">&lt;/a>通过数据查询语句来获取数据，以便在面板展示&lt;/li>
&lt;li>&lt;a href="https://grafana.com/docs/grafana/latest/panels/panel-editor/#panel-display-options-side-pane">&lt;strong>Panel dispaly options(面板显示选项)&lt;/strong>&lt;/a>&lt;strong>,黄色部分&lt;/strong> # 用来配置面板的信息。包括 面板类型、面板名称、展示效果 等等&lt;/li>
&lt;/ul>
&lt;h1 id="header标题">Header(标题)&lt;a class="td-heading-self-link" href="#header%e6%a0%87%e9%a2%98" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>标题部分列出了面板所在的仪表板的名称和一些仪表板命令。您还可以单击&lt;strong>返回&lt;/strong>箭头以返回仪表板。&lt;/p>
&lt;p>&lt;a href="https://grafana.com/static/img/docs/panel-editor/edit-panel-header-7-0.png">&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/ldaq0w/1636274879674-172ae5e2-cbdb-42d2-a0de-404c9f32cce7.png" alt="image.png">&lt;/a>&lt;/p>
&lt;p>标题的右侧是以下选项：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>⚙齿轮图标(设置)&lt;/strong> - 单击以访问仪表板设置。&lt;/li>
&lt;li>&lt;strong>Discard(放弃)&lt;/strong> - 放弃自上次保存仪表板以来对面板所做的所有更改。&lt;/li>
&lt;li>&lt;strong>Save(保存)&lt;/strong> - 保存仪表板，包括您在面板编辑器中所做的所有更改。&lt;/li>
&lt;li>&lt;strong>Apply(应用)&lt;/strong> - 应用您所做的更改，然后关闭面板编辑器，将您返回到仪表板。您必须保存仪表板以保留应用的更改。&lt;/li>
&lt;/ul>
&lt;h1 id="visualization-preview可视化的预览">Visualization preview(可视化的预览)&lt;a class="td-heading-self-link" href="#visualization-preview%e5%8f%af%e8%a7%86%e5%8c%96%e7%9a%84%e9%a2%84%e8%a7%88" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/ldaq0w/1636266413475-671d1896-dc09-44f7-8018-772384c8ebac.png" alt="image.png">&lt;/p>
&lt;p>在可视化的预览部分，可以图像的形式查看从数据源获取到的数据。包含如下几个部分&lt;/p>
&lt;ul>
&lt;li>Axes 横、纵 坐标轴
&lt;ul>
&lt;li>横轴是时间&lt;/li>
&lt;li>纵轴是值。即该时间点上，数据源中的值。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Panel title 面板标题&lt;/li>
&lt;li>Legend 图例(即 图片的文字说明)&lt;/li>
&lt;li>时间范围控件&lt;/li>
&lt;/ul>
&lt;p>在左上角是 Grafana 模板&lt;/p>
&lt;ul>
&lt;li>在没有配置 Grafana 变量时，这一块是空白的。详见 [模板与变量](/docs/6.可观测性/Grafana/Panel(面板)%20 与%20Dashboard(仪表盘)/Panel(面板)%20 配置详解/Templates%20and%20Variables(模板与变量).md 配置详解/Templates and Variables(模板与变量).md)&lt;/li>
&lt;/ul>
&lt;p>在右上角可以控制部分显示效果&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Table view(表格视图)&lt;/strong> # 将可视化预览区域转换为表格，以便查看数据。常用来故障排除&lt;/li>
&lt;li>&lt;strong>Fill(填充)&lt;/strong> # 可视化预览将填充预览部分中的可用空间。如果您更改侧窗格的宽度或底部窗格的高度，则可视化将适应以填充任何可用空间。&lt;/li>
&lt;li>&lt;strong>Fit(适合)&lt;/strong> # 可视化预览将填充其中的可用空间，但保留面板的纵横比。&lt;/li>
&lt;li>&lt;strong>Exact(确切)&lt;/strong> # 可视化预览的大小将与仪表板上的大小完全相同。如果没有足够的可用空间，则可视化将按比例缩小以保留宽高比。&lt;/li>
&lt;li>&lt;strong>Time range controls(时间范围控件)&lt;/strong> # 有关更多信息，请参阅&lt;a href="https://grafana.com/docs/grafana/latest/dashboards/time-range-controls/">时间范围控件&lt;/a>。&lt;/li>
&lt;/ul>
&lt;h1 id="data-section数据处理">Data section(数据处理)&lt;a class="td-heading-self-link" href="#data-section%e6%95%b0%e6%8d%ae%e5%a4%84%e7%90%86" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>该部分包含一些 tab(标签)，可以在其中 输入查询，转换数据 以及 创建警报规则(如果适用)。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Query tab(查询标签)&lt;/strong> # 选择数据源并通过查询语句获取数据。参考：&lt;a href="https://grafana.com/docs/grafana/latest/panels/queries/">Queries&lt;/a>.
&lt;ul>
&lt;li>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/ldaq0w/1636266421210-10e7bbbd-f661-463b-bb0f-1d53b53ffa47.png" alt="image.png">&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Transform tab(转换标签)&lt;/strong> # 将 Query 中获取到的数据进行转换。参考：&lt;a href="https://grafana.com/docs/grafana/latest/panels/transformations/">Transformations&lt;/a>.
&lt;ul>
&lt;li>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/ldaq0w/1636274705492-be88d84d-0e38-40d3-8e80-fe71204480ad.png" alt="image.png">&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Alert tab(告警标签)&lt;/strong># 配置告警规则。参考：&lt;a href="https://grafana.com/docs/grafana/latest/alerting/create-alerts/">Create alerts&lt;/a>
&lt;ul>
&lt;li>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/ldaq0w/1636274711891-c3fbf5e9-144d-40d6-a434-170d49a7b3f3.png" alt="image.png">&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="query查询">Query(查询)&lt;a class="td-heading-self-link" href="#query%e6%9f%a5%e8%af%a2" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>在查询标签中，可以配置 Grafana 与数据源并获取可视化数据的方式。&lt;/p>
&lt;p>Query 标签的页面由一下几个元素组成&lt;/p>
&lt;ul>
&lt;li>Data source selector(数据源选择器)&lt;/li>
&lt;li>Query options(查询选项)&lt;/li>
&lt;li>Query inspector button(查询检查器按钮)&lt;/li>
&lt;li>Query editor list(查询编辑器)&lt;/li>
&lt;li>Expressions(表达式)&lt;/li>
&lt;/ul>
&lt;p>可以输入数据源的查询语句，查询结果将会实时展现在面板上，比如，从 Prometheus 中获取了节点内存使用率的数据：&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/ldaq0w/1636274684211-5c3cddae-a4f0-4fc1-b10b-0c43417df8dc.png" alt="image.png">&lt;/p>
&lt;p>Query 详解见 &lt;a href="https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Grafana/Panel%20%E4%B8%8E%20Dashboard/Panel%20%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/Query(%E6%9F%A5%E8%AF%A2).md">Query(查询)&lt;/a>&lt;/p>
&lt;h2 id="transform转换">Transform(转换)&lt;a class="td-heading-self-link" href="#transform%e8%bd%ac%e6%8d%a2" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;strong>Transform(转换)&lt;/strong> 用于将查询结果在面板展示之前进行处理。Transform 可以重命名字段、将单独的时间序列连接在一起、在查询中进行数学运算等等。常用于 Table 类型的面板&lt;/p>
&lt;blockquote>
&lt;p>官方文档称为 Tranformations&lt;/p>
&lt;/blockquote>
&lt;p>Transformations process the result set of a query before it’s passed on for visualization. They allow you to rename fields, join separate time series together, do math across queries, and more. For users, with numerous dashboards or with a large volume of queries, the ability to reuse the query result from one panel in another panel can be a huge performance gain.&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>注意&lt;/strong>：转换是 Grafana 7.0 测试版的特性。官方文档的内容会在开发者们研究该特性时经常更新。&lt;/p>
&lt;/blockquote>
&lt;p>Transformations sometimes result in data that cannot be graphed. When that happens, Grafana displays a suggestion on the visualization that you can click to switch to table visualization. This often helps you better understand what the transformation is doing to your data&lt;/p>
&lt;p>Transform 的用法详见：&lt;a href="https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Grafana/Panel%20%E4%B8%8E%20Dashboard/Panel%20%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/Transformations(%E8%BD%AC%E6%8D%A2).md">Transformations(转换)&lt;/a>&lt;/p>
&lt;h2 id="alert告警">Alert(告警)&lt;a class="td-heading-self-link" href="#alert%e5%91%8a%e8%ad%a6" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;h1 id="panel-display-options面板显示选项">Panel display options(面板显示选项)&lt;a class="td-heading-self-link" href="#panel-display-options%e9%9d%a2%e6%9d%bf%e6%98%be%e7%a4%ba%e9%80%89%e9%a1%b9" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>该部分包含一些 tab(标签)，可以在这部分配置几乎都有数据可视化的方面。但是并不是所有选项都可用于每个面板类型。这里只介绍所有面板的通用配置，不同的面板，这部分的可配置的项目不同
可以用来配置面板的样式、面板的字段、以及如何为每个字段进行单独配置&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Panel(面板标签)&lt;/strong> # 配置面板&lt;/li>
&lt;li>&lt;strong>Field(字段标签)&lt;/strong> # 配置所有字段&lt;/li>
&lt;li>&lt;strong>Overrides(替换标签)&lt;/strong> # 根据匹配规则替换指定字段的配置。这是对 Field 的补充，可以实现个性化为每个字段配置不同的样式&lt;/li>
&lt;/ul>
&lt;h2 id="visualization可视化---指定面板的类型">Visualization(可视化) - 指定面板的类型&lt;a class="td-heading-self-link" href="#visualization%e5%8f%af%e8%a7%86%e5%8c%96---%e6%8c%87%e5%ae%9a%e9%9d%a2%e6%9d%bf%e7%9a%84%e7%b1%bb%e5%9e%8b" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;a href="https://grafana.com/docs/grafana/latest/panels/visualizations/">Visualizations(可视化)&lt;/a> 用来指定当前面板的类型。Grafana 提供了多种多样的 Visualizations 来适应不同的环境。说白了，一个 Visualizations 就是一个 Panel Type(面板类型)。并且，可以通过 &lt;a href="https://grafana.com/docs/grafana/latest/plugins/">plugins&lt;/a> 来添加更多类型的面板。&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/ldaq0w/1636262032681-56ebd4dc-2991-4b02-a4e9-c126dcf099e0.png" alt="image.png">&lt;/p>
&lt;p>在添加面板时，右侧的最上面点击一下就能看到当前可以使用的所有面板。Visualization 标签内可以看到 Grafana 默认自带的一些面板&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/ldaq0w/1636262106569-8229fbdc-eca7-4e02-85cf-992099d794d1.png" alt="image.png">&lt;/p>
&lt;h2 id="panel--面板配置">Panel # 面板配置&lt;a class="td-heading-self-link" href="#panel--%e9%9d%a2%e6%9d%bf%e9%85%8d%e7%bd%ae" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://grafana.com/docs/grafana/latest/panels/field-options/">官方文档&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>Grafna 中使用的 [数据模型]&lt;a href="%E6%95%B0%E6%8D%AE%E6%A8%A1%E5%9E%8B">/docs/6.可观测性/Grafana/Grafana%20数据模型.md&lt;/a>是面向列的表结构，该结构将时间序列和表查询结果统一在一起。此结构中的每一列称为一个 &lt;strong>Field(字段)&lt;/strong>。一个字段可以代表&lt;code>一条时间序列(Prometheus源)&lt;/code>或&lt;code>表格的列(数据库源)。&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>每条序列的时间，也算作一个 Field
在 Table 类型的面板中，每条时间序列的标签也算作一个 Field&lt;/p>
&lt;/blockquote>
&lt;p>这里只介绍所有面板的通用配置，不同的面板，这部分的可配置的项目不同&lt;/p>
&lt;h3 id="panel-options面板选项---面板的基本信息名字描述透明度">Panel options(面板选项) - 面板的基本信息。名字、描述、透明度。&lt;a class="td-heading-self-link" href="#panel-options%e9%9d%a2%e6%9d%bf%e9%80%89%e9%a1%b9---%e9%9d%a2%e6%9d%bf%e7%9a%84%e5%9f%ba%e6%9c%ac%e4%bf%a1%e6%81%af%e5%90%8d%e5%ad%97%e6%8f%8f%e8%bf%b0%e9%80%8f%e6%98%8e%e5%ba%a6" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>参考&lt;a href="https://grafana.com/docs/grafana/latest/panels/add-a-panel/">此处&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/ldaq0w/1636268147075-e492ebe5-f2a3-4cfe-9b8b-ec466199f0ad.png" alt="image.png">&lt;/p>
&lt;h3 id="standard-optionshttpsgrafanacomdocsgrafanalatestpanelsstandard-options标准选项">&lt;a href="https://grafana.com/docs/grafana/latest/panels/standard-options/">Standard options&lt;/a>(标准选项)&lt;a class="td-heading-self-link" href="#standard-optionshttpsgrafanacomdocsgrafanalatestpanelsstandard-options%e6%a0%87%e5%87%86%e9%80%89%e9%a1%b9" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/ldaq0w/1636269601040-63c30a7e-cf11-4cc1-9e86-08466afe414e.png" alt="image.png">
设置 单位、显示名、小数点 等等&lt;/p>
&lt;h3 id="thresholds阈值">Thresholds(阈值)&lt;a class="td-heading-self-link" href="#thresholds%e9%98%88%e5%80%bc" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>Thresholds(阈值) 可以用于 Bar、Gauge、Graph、Stat、Table 这几种类型的面板&lt;/p>
&lt;p>当在下方的 Alert 标签内开始配置告警后，该标签变为不可用状态
&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/ldaq0w/1616067971510-785cd511-5ead-4465-8f72-88c0898a1922.png" alt="">
这是一个 Graph 面板配置阈值的样子
&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/ldaq0w/1616067971526-3a0fa5b8-96bc-458c-9395-3d43fb0ca76c.png" alt="">&lt;/p>
&lt;h3 id="value-mappings值映射">Value mappings(值映射)&lt;a class="td-heading-self-link" href="#value-mappings%e5%80%bc%e6%98%a0%e5%b0%84" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;h3 id="data-links链接">Data links(链接)&lt;a class="td-heading-self-link" href="#data-links%e9%93%be%e6%8e%a5" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;h2 id="overrides---替换替换-field">Overrides - 替换，替换 Field&lt;a class="td-heading-self-link" href="#overrides---%e6%9b%bf%e6%8d%a2%e6%9b%bf%e6%8d%a2-field" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;blockquote>
&lt;p>参考:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://grafana.com/docs/grafana/latest/panels/field-options/">官方文档，面板与&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>这里只介绍所有面板的通用配置，不同的面板，这部分的可配置的项目不同
根据匹配规则，替换面板上某些字段。常用于 Table 类型的面板。Overrides 的概念与 [Graph 类型面板里的 Series overrides](/docs/6.可观测性/Grafana/Panel(面板)%20 与%20Dashboard(仪表盘)/Time%20series%20 类型面板/(弃用)Graph%20 类型面板详解.md series 类型面板/(弃用)Graph 类型面板详解.md) 概念类似&lt;/p></description></item><item><title>Docs: Query(查询)</title><link>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Grafana/Panel-%E4%B8%8E-Dashboard/Panel-%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/Query%E6%9F%A5%E8%AF%A2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Grafana/Panel-%E4%B8%8E-Dashboard/Panel-%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/Query%E6%9F%A5%E8%AF%A2/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://grafana.com/docs/grafana/latest/panels/queries">官方文档,面板-查询&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>Query 标签由如下几个元素组成&lt;/p>
&lt;ul>
&lt;li>Data source selector(数据源选择器)&lt;/li>
&lt;li>Query options(查询选项)&lt;/li>
&lt;li>Query inspector button()&lt;/li>
&lt;li>Query editor list&lt;/li>
&lt;li>Expressions&lt;/li>
&lt;/ul>
&lt;h1 id="data-source数据源--数据源选择器">Data source(数据源) # 数据源选择器&lt;a class="td-heading-self-link" href="#data-source%e6%95%b0%e6%8d%ae%e6%ba%90--%e6%95%b0%e6%8d%ae%e6%ba%90%e9%80%89%e6%8b%a9%e5%99%a8" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/yvp51u/1636275083307-1fa893ed-814b-434d-9e51-e2c6499c6f45.png" alt="image.png">
这部分是一个下拉列表，通过这里选择要使用的数据源，Query editor 中的查询语句，必须要是此数据源可以可以识别的。&lt;/p>
&lt;h1 id="query-options查询选项">Query options(查询选项)&lt;a class="td-heading-self-link" href="#query-options%e6%9f%a5%e8%af%a2%e9%80%89%e9%a1%b9" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h2 id="max-data-points最大数据点">Max data points(最大数据点)&lt;a class="td-heading-self-link" href="#max-data-points%e6%9c%80%e5%a4%a7%e6%95%b0%e6%8d%ae%e7%82%b9" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;h2 id="min-interval最小间隔">Min interval(最小间隔)&lt;a class="td-heading-self-link" href="#min-interval%e6%9c%80%e5%b0%8f%e9%97%b4%e9%9a%94" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;h2 id="interval间隔">Interval(间隔)&lt;a class="td-heading-self-link" href="#interval%e9%97%b4%e9%9a%94" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>Interval 是一个，通过时间来聚合或分组的一些数据点时，使用的 &lt;strong>time span(时间跨度)&lt;/strong>。该选项也可以实现查询编辑器中的 Min step 和 Resolution 类似的效果。但是，更多的是用在 Prometheus 范围向量查询语句中，比如 &lt;code>rate(http_requests_total[$__interval])&lt;/code>。interval 选项可以为两个 Grafana 的内置变量提供值，&lt;code>$__interval&lt;/code> 与 &lt;code>$__interval_ms&lt;/code>。&lt;/p>
&lt;p>也就是说，Interval 常用来计算 总和、平均值、速率 等一段时间范围的变化量。&lt;/p>
&lt;p>除了在这里可以定义 Interval，还可以通过 [Grafana 的模板与变量](/docs/6.可观测性/Grafana/Panel(面板)%20 与%20Dashboard(仪表盘)/Panel(面板)%20 配置详解/Templates%20and%20Variables(模板与变量).md and Variables(模板与变量).md)定义。&lt;/p>
&lt;h2 id="relative-time相对时间">Relative time(相对时间)&lt;a class="td-heading-self-link" href="#relative-time%e7%9b%b8%e5%af%b9%e6%97%b6%e9%97%b4" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;h2 id="time-shift时移">Time shift(时移)&lt;a class="td-heading-self-link" href="#time-shift%e6%97%b6%e7%a7%bb" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;h1 id="query-inspector查询检查器">Query inspector(查询检查器)&lt;a class="td-heading-self-link" href="#query-inspector%e6%9f%a5%e8%af%a2%e6%a3%80%e6%9f%a5%e5%99%a8" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>用于调试查询编辑器中的查询语句，里面会显示 HTTP 的请求和响应的原始数据&lt;/p>
&lt;h1 id="query-editor查询编辑器">Query editor(查询编辑器)&lt;a class="td-heading-self-link" href="#query-editor%e6%9f%a5%e8%af%a2%e7%bc%96%e8%be%91%e5%99%a8" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>查询编辑器可以编写查询语句，以便从数据源中获取数据，不同的数据源，其查询编辑器也各不相同。&lt;/p>
&lt;h3 id="legend图例--改变-series-的名称">Legend(图例) # 改变 series 的名称&lt;a class="td-heading-self-link" href="#legend%e5%9b%be%e4%be%8b--%e6%94%b9%e5%8f%98-series-%e7%9a%84%e5%90%8d%e7%a7%b0" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>Legend 可以通过一种模式来改变 series 的名称。这个模式类似于 Go 模板的语法，使用 &lt;code>{{ }}&lt;/code> 符号，引用 series 名称中，标签的值。
例如，上图我在 Legend 框内填 &lt;code>设备：{{instance}}&lt;/code> 那么，将会出现这种效果。
&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/yvp51u/1636266519763-257b682f-43aa-42aa-ae64-4dc0dd9df523.png" alt="image.png">&lt;/p>
&lt;blockquote>
&lt;p>这里的&lt;code>{{instance}}&lt;/code> 符号会获取 instance 这个标签的值&lt;/p>
&lt;/blockquote>
&lt;h3 id="min-step-最小步长">Min step# 最小步长&lt;a class="td-heading-self-link" href="#min-step-%e6%9c%80%e5%b0%8f%e6%ad%a5%e9%95%bf" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>可以控制 Prometheus 查询数据时的最小步长(Step)，从而减少或增加从 Prometheus 返回的数据量。&lt;/p>
&lt;ul>
&lt;li>步长指起始时间与结束时间之间获取的所有数据的间隔时间。假如 step=10 则每隔 10 秒获取一次样本值。
&lt;ul>
&lt;li>就好像人走路，一步迈多长，这里就是返回样本值时，每隔多久返回一次。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>比如，我想要查询 14 点到 15 点之间的数据，假如 Min step 为 1m，则一共返回 60 个样本。假如 Min step 为 30m，则一共返回 2 个样本，效果如下&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/yvp51u/1636273461647-2dbebd5e-b5ca-47d8-a23e-07d4e0d72ebe.png" alt="image.png">
&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/yvp51u/1636273507618-65072c3a-f3bd-46c9-aa79-979c6bf388b8.png" alt="image.png">&lt;/p>
&lt;h3 id="resolution--分辨率">Resolution # 分辨率&lt;a class="td-heading-self-link" href="#resolution--%e5%88%86%e8%be%a8%e7%8e%87" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>则可以控制 Grafana 自身渲染的数据量。例如，如果&lt;strong>Resolution&lt;/strong>的值为&lt;strong>1/10&lt;/strong>，Grafana 会将 Prometeus 返回的 10 个样本数据合并成一个点。因此 &lt;strong>Resolution&lt;/strong>越小可视化的精确性越高，反之，可视化的精度越低。&lt;/p>
&lt;h3 id="format--格式化获取到的样本数据">Format # 格式化获取到的样本数据&lt;a class="td-heading-self-link" href="#format--%e6%a0%bc%e5%bc%8f%e5%8c%96%e8%8e%b7%e5%8f%96%e5%88%b0%e7%9a%84%e6%a0%b7%e6%9c%ac%e6%95%b0%e6%8d%ae" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;ul>
&lt;li>Time series # 时间序列格式。默认格式&lt;/li>
&lt;li>Table # 表格式。用于 Table 面板&lt;/li>
&lt;li>Heatmap # 热力图格式。用于 Heatmap 面板&lt;/li>
&lt;/ul>
&lt;h3 id="instant--瞬时控制是否获取指标的瞬时值">Instant # 瞬时。控制是否获取指标的瞬时值&lt;a class="td-heading-self-link" href="#instant--%e7%9e%ac%e6%97%b6%e6%8e%a7%e5%88%b6%e6%98%af%e5%90%a6%e8%8e%b7%e5%8f%96%e6%8c%87%e6%a0%87%e7%9a%84%e7%9e%ac%e6%97%b6%e5%80%bc" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>开启后，只会显示最近一次的序列的值。常用于 Stat、Gauge 这种面板，以及 Graph 面板下 Series 模式的 X 轴。&lt;/p>
&lt;p>因为开启瞬时值，只会显示当前值，是没有时间的概念的。&lt;/p></description></item><item><title>Docs: Templates and Variables(模板与变量)</title><link>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Grafana/Panel-%E4%B8%8E-Dashboard/Panel-%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/Templates-and-Variables%E6%A8%A1%E6%9D%BF%E4%B8%8E%E5%8F%98%E9%87%8F/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Grafana/Panel-%E4%B8%8E-Dashboard/Panel-%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/Templates-and-Variables%E6%A8%A1%E6%9D%BF%E4%B8%8E%E5%8F%98%E9%87%8F/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://grafana.com/docs/grafana/latest/variables/">官方文档,模板与变量&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://yunlzheng.gitbook.io/prometheus-book/part-ii-prometheus-jin-jie/grafana/templating">Prometheus 天降奇兵文章&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>在前面的小节中介绍了 Grafana 中 4 中常用的可视化面板的使用，通过在面板中使用 PromQL 表达式，Grafana 能够方便的将 Prometheus 返回的数据进行可视化展示。例如，在展示主机 CPU 使用率时，我们使用了如下表达式：&lt;/p>
&lt;pre>&lt;code>1 - (avg(irate(node_cpu{mode='idle'}[5m])) without (cpu))
&lt;/code>&lt;/pre>
&lt;p>该表达式会返回当前 Promthues 中存储的所有时间序列，每一台主机都会有一条单独的曲线用于体现其 CPU 使用率的变化情况：
&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/kct3zl/1616067851128-b841ca2a-6a47-4d36-a92c-1b1b28f4000d.png" alt="">&lt;/p>
&lt;p>而当用户只想关注其中某些主机时，基于当前我们已经学习到的知识只有两种方式，要么每次手动修改 Panel 中的 PromQL 表达式，要么直接为这些主机创建单独的 Panel。但是无论如何，这些硬编码方式都会直接导致 Dashboard 配置的频繁修改。在这一小节中我们将学习使用 Dashboard 变量的方式解决以上问题。&lt;/p>
&lt;h1 id="变量">变量&lt;a class="td-heading-self-link" href="#%e5%8f%98%e9%87%8f" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>在 Grafana 中用户可以为 Dashboard 定义一组变量（Variables），变量一般包含一个到多个可选值。如下所示，Grafana 通过将变量渲染为一个下拉框选项，从而使用户可以动态的改变变量的值：&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/kct3zl/1616067851360-808effbf-a69f-4123-86d3-1a90d373fa18.png" alt="">&lt;/p>
&lt;p>Dashboard 变量&lt;/p>
&lt;p>例如，这里定义了一个名为 node 的变量，用户可以通过在 PromQL 表达式或者 Panel 的标题中通过以下形式使用该变量：&lt;/p>
&lt;pre>&lt;code>1 - (avg(irate(node_cpu{mode='idle', instance=~&amp;quot;$node&amp;quot;}[5m])) without (cpu))
&lt;/code>&lt;/pre>
&lt;p>变量的值可以支持单选或者多选，当对接 Prometheus 时，Grafana 会自动将$node 的值格式化为如“&lt;strong>host1|host2|host3&lt;/strong>”的形式。配合使用 PromQL 的标签正则匹配“&lt;strong>=~&lt;/strong>”，通过动态改变 PromQL 从而实现基于标签快速对时间序列进行过滤。&lt;/p>
&lt;h1 id="变量定义">变量定义&lt;a class="td-heading-self-link" href="#%e5%8f%98%e9%87%8f%e5%ae%9a%e4%b9%89" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>通过 Dashboard 页面的 Settings 选项，可以进入 Dashboard 的配置页面并且选择 Variables 子菜单:
&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/kct3zl/1616067851069-bf8ea850-c067-42af-b078-7fa1bbd154e9.png" alt="">
为 Dashboard 添加变量&lt;/p>
&lt;p>用户需要指定变量的名称，后续用户就可以通过$variable_name 的形式引用该变量。Grafana 目前支持 6 种不同的变量类型，而能和 Prometheus 一起工作的主要包含以下 5 种类型：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>类型&lt;/td>
&lt;td>工作方式&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Query&lt;/td>
&lt;td>允许用户通过 Datasource 查询表达式的返回值动态生成变量的可选值&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Interval&lt;/td>
&lt;td>该变量代表时间跨度，通过 Interval 类型的变量，可以动态改变 PromQL 区间向量表达式中的时间范围。如 rate(node_cpu[$interval])&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Datasource&lt;/td>
&lt;td>允许用户动态切换当前 Dashboard 的数据源，特别适用于同一个 Dashboard 展示多个数据源数据的情况&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Custom&lt;/td>
&lt;td>用户直接通过手动的方式，定义变量的可选值&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Constant&lt;/td>
&lt;td>常量，在导入 Dashboard 时，会要求用户设置该常量的值&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Label 属性用于指定界面中变量的显示名称，Hide 属性则用于指定在渲染界面时是否隐藏该变量的下拉框。&lt;/p>
&lt;h1 id="使用变量过滤时间序列">使用变量过滤时间序列&lt;a class="td-heading-self-link" href="#%e4%bd%bf%e7%94%a8%e5%8f%98%e9%87%8f%e8%bf%87%e6%bb%a4%e6%97%b6%e9%97%b4%e5%ba%8f%e5%88%97" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>当 Prometheus 同时采集了多个主机节点的监控样本数据时，用户希望能够手动选择并查看其中特定主机的监控数据。这时我们需要使用 Query 类型的变量。
&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/kct3zl/1616067851059-59709ed9-d567-4859-89ae-6344f4bf1f92.png" alt="">&lt;/p>
&lt;p>新建 Query 类型的变量&lt;/p>
&lt;p>如上所示，这里我们为 Dashboard 创建了一个名为 node 的变量，并且指定其类型为 Query。Query 类型的变量，允许用户指定数据源以及查询表达式，并通过正则匹配（Regex）的方式对查询结果进行处理，从而动态生成变量的可选值。在这里指定了数据源为 Prometheus，通过使用 node_load1 我们得到了两条时间序列：&lt;/p>
&lt;pre>&lt;code>node_load1{instance=&amp;quot;foo:9100&amp;quot;,job=&amp;quot;node&amp;quot;}
node_load1{instance=&amp;quot;localhost:9100&amp;quot;,job=&amp;quot;node&amp;quot;}
&lt;/code>&lt;/pre>
&lt;p>通过指定正则匹配表达式为&lt;code>/.*instance=&amp;quot;([^&amp;quot;]*).*/&lt;/code>从而匹配出标签 instance 的值作为 node 变量的所有可选项，即：&lt;/p>
&lt;pre>&lt;code>foo:9100
localhost:9100
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Selection Options&lt;/strong>选项中可以指定该变量的下拉框是否支持多选，以及是否包含全选（All）选项。&lt;/p>
&lt;p>保存变量后，用户可以在 Panel 的 General 或者 Metrics 中通过$node 的方式使用该变量，如下所示：
&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/kct3zl/1616067851042-b846b8f9-37c3-48b8-9e4b-127319beb2df.png" alt="">&lt;/p>
&lt;p>在 Metrics 中使用变量&lt;/p>
&lt;p>这里需要注意的是，如果允许用户多选在 PromQL 表达式中应该使用标签的正则匹配模式，因为 Grafana 会自动将多个选项格式化为如“foo:9100|localhost:9100”的形式。&lt;/p>
&lt;p>使用 Query 类型的变量能够根据允许用户能够根据时间序列的特征维度对数据进行过滤。在定义 Query 类型变量时，除了使用 PromQL 查询时间序列以过滤标签的方式以外，Grafana 还提供了几个有用的函数：&lt;/p>
&lt;ul>
&lt;li>label_values(LABEL) # 返回 Promthues 所有监控指标中，标签名为 LABEL 的所有可选值&lt;/li>
&lt;li>label_values(METRIC, LABEL) # 返回监控指标 METRIC 中，标签名为 LABEL 的所有可选值&lt;/li>
&lt;li>metrics(RegEx) # 返回所有满足 RegEx(正则表达式) 匹配到的指标名称&lt;/li>
&lt;li>query_result(PromQL) # 返回 PromQL 的查询结果&lt;/li>
&lt;/ul>
&lt;p>例如，当需要监控 Prometheus 所有采集任务的状态时，可以使用如下方式，获取当前所有采集任务的名称：&lt;/p>
&lt;pre>&lt;code>label_values(up, job)
&lt;/code>&lt;/pre>
&lt;p>例如，有时候我们想要动态修改变量查询结果。比如某一个节点绑定了多个 ip，一个用于内网访问，一个用于外网访问，此时 prometheus 采集到的指标是内网的 ip，但我们需要的是外网 ip。这里我们想要能在 Grafana 中动态改变标签值，进行 ip 段的替换，而避免从 prometheus 或 exporter 中修改采集指标。&lt;/p>
&lt;p>这时需要使用 grafana 的 query_result 函数&lt;/p>
&lt;pre>&lt;code># 将10.10.15.xxx段的ip地址替换为10.20.15.xxx段 注：替换端口同理
query_result(label_replace(kube_pod_info{pod=~&amp;quot;$pod&amp;quot;}, &amp;quot;node&amp;quot;, &amp;quot;10.20.15.$1&amp;quot;, &amp;quot;node&amp;quot;, &amp;quot;10.10.15.(.*)&amp;quot;))
# 通过正则从返回结果中匹配出所需要的ip地址
regex：/.*node=&amp;quot;(.*?)&amp;quot;.*/
&lt;/code>&lt;/pre>
&lt;p>在 grafana 中配置如图：
&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/kct3zl/1616067851071-4ddd8696-d110-474a-8014-49824a3f7119.png" alt="">&lt;/p>
&lt;h1 id="使用变量动态创建-panel-和-row">使用变量动态创建 Panel 和 Row&lt;a class="td-heading-self-link" href="#%e4%bd%bf%e7%94%a8%e5%8f%98%e9%87%8f%e5%8a%a8%e6%80%81%e5%88%9b%e5%bb%ba-panel-%e5%92%8c-row" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>当在一个 Panel 中展示多条时间序列数据时，通过使用变量可以轻松实现对时间序列的过滤，提高用户交互性。除此以外，我们还可以使用变量自动生成 Panel 或者 Row。 如下所示，当需要可视化当前系统中所有采集任务的监控任务运行状态时，由于 Prometheus 的采集任务配置可能随时发生变更，通过硬编码的形式实现，会导致 Dashboard 配置的频繁变更：&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/kct3zl/1616067851119-aa1bcd6d-8e23-4cd9-95be-3db2e40ce360.png" alt="">
Prometheus 采集任务状态&lt;/p>
&lt;p>如下所示，这里为 Dashboard 定义了一遍名为 job 的变量：
&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/kct3zl/1616067851059-05a9e06b-9215-4768-9126-542c61e9d70f.png" alt="">
使用变量获取当前所有可选任务&lt;/p>
&lt;p>通过使用 label_values 函数，获取到当前 Promthues 监控指标 up 中所有可选的 job 标签的值：&lt;/p>
&lt;pre>&lt;code>label_values(up, job)
&lt;/code>&lt;/pre>
&lt;p>如果变量启用了 Multi-value 或者 Include All Option 选项的变量，那么在 Panel 的 General 选项的 Repeat 中可以选择自动迭代的变量，这里使用了 Singlestat 展示所有监控采集任务的状态：
&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/kct3zl/1616067851091-b6fcaadd-b2aa-41c1-957e-039bc878dbc6.png" alt="">
General 中的 Repeat 选项&lt;/p>
&lt;p>Repeat 选项设置完成后，Grafana 会根据当前用户的选择，自动创建一个到多个 Panel 实例。 为了能够使 Singlestat Panel 能够展示正确的数据，如下所示，在 Prometheus 中，我们依然使用了$job变量，不过此时的$job 反应的是当前迭代的值：
&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/kct3zl/1616067851115-f60eb991-5dbb-4c33-8cd2-58639c7001c6.png" alt="">
在 Metric 中使用变量&lt;/p>
&lt;p>而如果还希望能够自动生成 Row，只需要在 Row 的设置中，选择需要 Repeat 的变量即可：
&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/kct3zl/1616067851130-ac817567-fee3-40c3-b4e1-d5f07f86cf8d.png" alt="">
Repeat Row&lt;/p></description></item><item><title>Docs: Transformations(转换)</title><link>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Grafana/Panel-%E4%B8%8E-Dashboard/Panel-%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/Transformations%E8%BD%AC%E6%8D%A2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Grafana/Panel-%E4%B8%8E-Dashboard/Panel-%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/Transformations%E8%BD%AC%E6%8D%A2/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://grafana.com/docs/grafana/latest/panels/transformations/">官方文档,面板-转换&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://grafana.com/docs/grafana/latest/panels/transformations/types-options/">官方文档,面板-转换-转换类型和选项&lt;/a>(这里就是详解了每一种转换类型)&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;strong>Transformations(转换)&lt;/strong> 经常用在 Table 面板中，我先以一个 Table 作为基础例子来说明 Transformations 的功能
&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/gxof32/1616067878482-d907b3a2-1f60-4894-bc9c-75cc6ba232eb.png" alt="">&lt;/p>
&lt;h2 id="转换顺序">转换顺序&lt;a class="td-heading-self-link" href="#%e8%bd%ac%e6%8d%a2%e9%a1%ba%e5%ba%8f" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>如果同时存在多个转换, 则从上往下一次执行它们，这就有点像 Linux 中的管道，每一个转换会产生一个新的结果，这个结果将会传递给下一个转换继续进行处理。直到所有转换执行完成，在面板展示最终数据。&lt;/p>
&lt;p>转换顺序的特性可以在这个例子中可以得到充分体现&lt;/p>
&lt;h1 id="add-field-from-calculation">Add field from calculation&lt;a class="td-heading-self-link" href="#add-field-from-calculation" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>Use the row values to calculate a new field&lt;/p>
&lt;h1 id="filter-by-name根据字段名称进行过滤">Filter by name(根据字段名称进行过滤)&lt;a class="td-heading-self-link" href="#filter-by-name%e6%a0%b9%e6%8d%ae%e5%ad%97%e6%ae%b5%e5%90%8d%e7%a7%b0%e8%bf%9b%e8%a1%8c%e8%bf%87%e6%bb%a4" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>使用 regex pattern(正则表达式模式) 删除部分查询结果，模式可以是包含或者排除。过滤的对象是 Field(字段)。&lt;/p>
&lt;p>下图经过过滤后，我们仅显示 instance、pod、Value 这几个字段&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/gxof32/1616067878535-d9af4670-b2e2-4973-9b34-63ea43dafacb.png" alt="">&lt;/p>
&lt;h1 id="filter-data-by-query">Filter data by query&lt;a class="td-heading-self-link" href="#filter-data-by-query" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>Filter data by query. This is useful if you are sharing the results from a different panel that has many queries and you want to only visualize a subset of that in this panel.&lt;/p>
&lt;h1 id="group-by">Group by&lt;a class="td-heading-self-link" href="#group-by" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>Group the data by a field values then process calculations for each group&lt;/p>
&lt;h1 id="join-by-field连接字段-outer-join">Join by field(连接字段) Outer join&lt;a class="td-heading-self-link" href="#join-by-field%e8%bf%9e%e6%8e%a5%e5%ad%97%e6%ae%b5-outer-join" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>Joins many time series/tables by a field. This can be used to outer join multiple time series on the &lt;em>time&lt;/em> field to show many time series in one table.&lt;/p>
&lt;h1 id="labels-to-fields">Labels to fields&lt;a class="td-heading-self-link" href="#labels-to-fields" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>Groups series by time and return labels or tags as fields. Useful for showing time series with labels in a table where each label key becomes a seperate column&lt;/p>
&lt;h1 id="merge合并">Merge(合并)&lt;a class="td-heading-self-link" href="#merge%e5%90%88%e5%b9%b6" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>Merge many series/tables and return a single table where mergeable values will be combined into the same row. Useful for showing multiple series, tables or a combination of both visualized in a table.&lt;/p>
&lt;p>合并多个系列/表并返回一个表，其中可合并的值将被合并到同一行中。用于在一个表中显示多个序列、表或两者的组合。&lt;/p>
&lt;h1 id="organize-fields组织字段">Organize fields(组织字段)&lt;a class="td-heading-self-link" href="#organize-fields%e7%bb%84%e7%bb%87%e5%ad%97%e6%ae%b5" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>重命名，重新排序或隐藏查询返回的字段。&lt;/p>
&lt;p>下图经过组织后，字段的名称得以改变&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/gxof32/1616067878497-a4cf0af9-8b5b-4b90-b2a4-d2510cac5503.png" alt="">&lt;/p>
&lt;h1 id="reduce裁剪">Reduce(裁剪)&lt;a class="td-heading-self-link" href="#reduce%e8%a3%81%e5%89%aa" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>裁剪所有行或数据点，变为单个值。裁剪之后，可以通过 max、min、mean、last 之类的函数，显示对应的值。&lt;/p>
&lt;p>下图就是裁剪之后的样式，原先的多个 Field，被整合到一个 Field，作为整个 Fild 的元素，每个元素都可以有一个或多个值(在对话框中可以选择要显示的值类型)。
&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/gxof32/1616067878475-55c70061-ae9d-4057-ad1e-62c82249897b.png" alt="">
我们使用 DeBug 模式可以看到这些数据在转换前后的样子：&lt;/p>
&lt;p>从下图可以看出来，转换前有 10 个 Fields(包括时间)。转换后，原 Fields 的 name 会作为新 Fields 的元素进行填充。
&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/gxof32/1616067878506-6be06d38-2181-4238-bba5-d17711a6525b.png" alt="">&lt;/p>
&lt;h1 id="rename-by-regexhttpsgrafanacomdocsgrafanalatestpanelstransformationstypes-optionsrename-by-regex通过正则表达式重命名">&lt;a href="https://grafana.com/docs/grafana/latest/panels/transformations/types-options/#rename-by-regex">Rename by regex&lt;/a>(通过正则表达式重命名)&lt;a class="td-heading-self-link" href="#rename-by-regexhttpsgrafanacomdocsgrafanalatestpanelstransformationstypes-optionsrename-by-regex%e9%80%9a%e8%bf%87%e6%ad%a3%e5%88%99%e8%a1%a8%e8%be%be%e5%bc%8f%e9%87%8d%e5%91%bd%e5%90%8d" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>使用正则表达式和替换模式重命名查询结果。&lt;/p>
&lt;p>在下面的示例中，可以看到 instance 标签的值都带着 &lt;code>:9100&lt;/code>，实际情况下，我们并不需要显示端口，那么就可以通过 Rename by regex 将其去掉
&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/gxof32/1636270563979-9e684764-6cd5-435c-93c9-be126a8593f1.png" alt="image.png">
应用这个转换类型后，可以看到只剩下除了 9100 以外的字符串了。
&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/gxof32/1636270580325-7250a179-2386-4cf9-8918-d372612715d4.png" alt="image.png">&lt;/p>
&lt;h1 id="series-to-rows">Series to rows&lt;a class="td-heading-self-link" href="#series-to-rows" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>Merge many series and return a single series with time, metric and value as columns. Useful for showing multiple time series visualized in a table.&lt;/p>
&lt;p>合并多个系列，并以时间，度量和值作为列返回单个系列。 用于显示表格中可视化的多个时间序列。&lt;/p>
&lt;p>将来自多个时间序列数据查询的结果合并为一个结果。 使用表格面板可视化效果时，这很有帮助。&lt;/p></description></item></channel></rss>