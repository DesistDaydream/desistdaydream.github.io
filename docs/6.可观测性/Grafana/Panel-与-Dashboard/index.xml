<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦的站点 – Panel 与 Dashboard</title><link>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Grafana/Panel-%E4%B8%8E-Dashboard/</link><description>Recent content in Panel 与 Dashboard on 断念梦的站点</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Grafana/Panel-%E4%B8%8E-Dashboard/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Panel 与 Dashboard</title><link>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Grafana/Panel-%E4%B8%8E-Dashboard/Panel-%E4%B8%8E-Dashboard/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Grafana/Panel-%E4%B8%8E-Dashboard/Panel-%E4%B8%8E-Dashboard/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://grafana.com/docs/grafana/latest/panels/">官方文档，面板&lt;/a>&lt;/li>
&lt;li>借助 &lt;a href="https://play.grafana.org/d/000000041/">Grafana Play&lt;/a>，您可以探索并了解 Grafana 的各种 Panel 工作原理，从实际示例中学习以加速您的开发
&lt;ul>
&lt;li>&lt;a href="https://play.grafana.org/dashboards/f/PGJ1Fr4Zz/demo3a-grafana-features">https://play.grafana.org/dashboards/f/PGJ1Fr4Zz/demo3a-grafana-features&lt;/a> 这是各种 Panel 的 Demo 集合。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;strong>Panel(面板)&lt;/strong> 与 &lt;strong>Dashboard(仪表盘)&lt;/strong>&lt;/p>
&lt;p>&lt;strong>Panel(面板)&lt;/strong> 是 Grafana 用于展示的基本 &lt;strong>Visualization(可视化)&lt;/strong> 模块。多个 Panel(面板) 组成了一个 &lt;strong>Dashboard(仪表盘)&lt;/strong>。每个面板都有各种各样的样式和格式设置选项。 面板可以在仪表板上拖放和重新排列。 它们也可以调整大小&lt;/p>
&lt;p>对于 Grafana 来说，页面处理的数据实际上是一个一个的 &lt;strong>Field(字段)&lt;/strong>。从 Grafana 数据模型 章节，可以发现，Grafana 从数据源拿到的数据都是统一的格式，Grafana 在面板处理数据时，其实就是对一堆 Field(字段) 来操作。从各个数据源获取到的数据，统一被放在 Field 中了。&lt;/p>
&lt;h1 id="时间选择器">时间选择器&lt;a class="td-heading-self-link" href="#%e6%97%b6%e9%97%b4%e9%80%89%e6%8b%a9%e5%99%a8" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/grafana/time-picker_1.png" alt="time-picker_1">&lt;/p>
&lt;h1 id="panels面板-的类型">Panels(面板) 的类型&lt;a class="td-heading-self-link" href="#panels%e9%9d%a2%e6%9d%bf-%e7%9a%84%e7%b1%bb%e5%9e%8b" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>其实就是说有多少种 Visualizations&lt;/p>
&lt;/blockquote>
&lt;h3 id="alert-list">Alert list&lt;a class="td-heading-self-link" href="#alert-list" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>警报列表面板允许您显示仪表板警报。您可以配置列表以显示当前状态或最近的状态更改。您可以在“警报”概述中了解有关警报的更多信息。&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/pkl4xq/1616067984679-ae1c7be6-6e4e-4446-a674-ecad72d5ea97.png" alt="">&lt;/p>
&lt;h3 id="bar-gauge">Bar gauge&lt;a class="td-heading-self-link" href="#bar-gauge" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>条形表通过将每个字段减小为单个值来简化数据。您选择 Grafana 如何计算减少量&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/pkl4xq/1616067984672-8ab42ac2-73be-4c36-8ccf-6f87db0bcf48.png" alt="">&lt;/p>
&lt;h3 id="dashboard-list">Dashboard list&lt;a class="td-heading-self-link" href="#dashboard-list" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>仪表板列表面板允许您显示指向其他仪表板的动态链接。可以将列表配置为使用加星标的仪表板，最近查看的仪表板，搜索查询和仪表板标签。&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/pkl4xq/1616067984683-7e6736e3-adc8-4a04-bd39-f5b6725de555.png" alt="">&lt;/p>
&lt;h3 id="gauge">Gauge&lt;a class="td-heading-self-link" href="#gauge" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>仪表是一个单值面板，可以为每个系列，列或行重复一个仪表。&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/pkl4xq/1616067984690-0e8784ba-2105-4902-8bf9-e279372d17d8.png" alt="">&lt;/p>
&lt;h3 id="time-series---最常用的面板">Time series - 最常用的面板&lt;a class="td-heading-self-link" href="#time-series---%e6%9c%80%e5%b8%b8%e7%94%a8%e7%9a%84%e9%9d%a2%e6%9d%bf" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>该可视化是 Grafana 生态系统中最常用的。它可以渲染为一条线，一条点的路径或一系列条形图。这种类型的图具有足够的通用性，几乎可以显示任何时间序列数据。&lt;/p>
&lt;p>详见: &lt;a href="https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Grafana/Panel%20%E4%B8%8E%20Dashboard/Time%20series%20%E7%B1%BB%E5%9E%8B%E9%9D%A2%E6%9D%BF/Time%20series%20%E7%B1%BB%E5%9E%8B%E9%9D%A2%E6%9D%BF.md">Time series 类型面板&lt;/a>&lt;/p>
&lt;p>老版本称为 Graph&lt;/p>
&lt;h3 id="heatmap">Heatmap&lt;a class="td-heading-self-link" href="#heatmap" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>通过“热图”面板可视化，您可以查看一段时间内的直方图。有关直方图的更多信息，请参阅直方图和热图简介。&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/pkl4xq/1616067984704-f817d555-9bb6-4b2c-99c6-b61580ea35dc.png" alt="">&lt;/p>
&lt;h3 id="logs">Logs&lt;a class="td-heading-self-link" href="#logs" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>日志面板可视化显示了来自支持日志的数据源的日志行，例如 Elastic，Influx 和 Loki。通常，您将在图形面板旁边使用此面板来显示相关过程的日志输出。&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/pkl4xq/1616067984673-d77300c9-b33b-45ab-a171-ca6c64f394c7.png" alt="">&lt;/p>
&lt;h3 id="news">News&lt;a class="td-heading-self-link" href="#news" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>此面板显示 RSS feed。默认情况下，它显示 Grafana Labs 博客中的文章。&lt;/p>
&lt;p>在“显示”部分的“ URL”字段中输入 RSS 的 URL。此面板类型不接受任何其他查询。&lt;/p>
&lt;h3 id="stat">Stat&lt;a class="td-heading-self-link" href="#stat" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>“状态”面板显示一个较大的状态值，并带有可选的图形迷你图。您可以使用阈值控制背景或值颜色。&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/pkl4xq/1616067984686-ae274958-840c-4cdf-83be-10279eb5bc68.png" alt="">&lt;/p>
&lt;h3 id="table">Table&lt;a class="td-heading-self-link" href="#table" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>表格面板非常灵活，支持时间序列以及表格，注释和原始 JSON 数据的多种模式。该面板还提供日期格式，值格式和着色选项&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/pkl4xq/1616067984704-6cac5049-5d7b-4eb9-bd9f-111d6867b0ec.png" alt="">&lt;/p>
&lt;h3 id="text">Text&lt;a class="td-heading-self-link" href="#text" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>文本面板使您可以为仪表板制作信息和描述面板。&lt;/p>
&lt;p>在“模式”下，选择要使用 markdown 还是 HTML 设置文本样式，然后在下面的框中输入内容。 Grafana 包含标题和段落以帮助您入门，或者您可以从其他编辑器粘贴内容。&lt;/p></description></item><item><title>Docs: Panel 配置</title><link>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Grafana/Panel-%E4%B8%8E-Dashboard/Panel-%E9%85%8D%E7%BD%AE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Grafana/Panel-%E4%B8%8E-Dashboard/Panel-%E9%85%8D%E7%BD%AE/</guid><description/></item><item><title>Docs: Time series 类型面板</title><link>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Grafana/Panel-%E4%B8%8E-Dashboard/Time-series-%E7%B1%BB%E5%9E%8B%E9%9D%A2%E6%9D%BF/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Grafana/Panel-%E4%B8%8E-Dashboard/Time-series-%E7%B1%BB%E5%9E%8B%E9%9D%A2%E6%9D%BF/</guid><description/></item><item><title>Docs: Variable</title><link>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Grafana/Panel-%E4%B8%8E-Dashboard/Variable/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Grafana/Panel-%E4%B8%8E-Dashboard/Variable/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://grafana.com/docs/grafana/latest/dashboards/variables/">官方文档，仪表盘 - 变量&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>可以人为添加如下几类变量&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Query&lt;/strong> # 变量值从数据源查询中获取&lt;/li>
&lt;li>&lt;strong>Custom&lt;/strong> # 手动定义一个变量的值&lt;/li>
&lt;li>&lt;strong>Text box&lt;/strong> # 定义一个文本框变量，用户可以在其中输入任意字符串作为变量的值&lt;/li>
&lt;li>&lt;strong>Constant&lt;/strong> # 定义一个隐藏常量变量，对于要共享的仪表板中的指标前缀很有用。TODO: 没看懂有啥用&lt;/li>
&lt;/ul>
&lt;h1 id="全局内置变量">全局内置变量&lt;a class="td-heading-self-link" href="#%e5%85%a8%e5%b1%80%e5%86%85%e7%bd%ae%e5%8f%98%e9%87%8f" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>&lt;a href="https://grafana.com/docs/grafana/latest/dashboards/variables/add-template-variables/#global-variables">https://grafana.com/docs/grafana/latest/dashboards/variables/add-template-variables/#global-variables&lt;/a>&lt;/p>
&lt;h2 id="时间相关">时间相关&lt;a class="td-heading-self-link" href="#%e6%97%b6%e9%97%b4%e7%9b%b8%e5%85%b3" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;h3 id="__from-与-__to">&lt;code>$__from&lt;/code> 与 &lt;code>$__to&lt;/code>&lt;a class="td-heading-self-link" href="#__from-%e4%b8%8e-__to" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>&lt;a href="https://grafana.com/docs/grafana/latest/dashboards/variables/add-template-variables/#__from-and-__to">https://grafana.com/docs/grafana/latest/dashboards/variables/add-template-variables/#__from-and-__to&lt;/a>&lt;/p>
&lt;p>Grafana 有两个内置时间范围变量：&lt;code>$__from&lt;/code> 和 &lt;code>$__to&lt;/code>。这两个变量的来源是 Grafana 的时间选择器，下图中的 From 与 To 选择的时间就是这两个变量的值。假如当前时间是 2024 年 11 月 24 日 0 点 0 分 0 秒，选择了 Last 6 hours 这个时间范围，则 &lt;code>${__from}&lt;/code> 的值为 1732356000000（i.e. 2024-11-23 18:00:00）；&lt;code>${__to}&lt;/code> 的值为 1732377600000（i.e. 2024-11-24 00:00:00）。&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/grafana/time-picker_1.png" alt="time-picker_1">&lt;/p>
&lt;p>可以通过如下语法控制显示出来的时间格式：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Syntax&lt;/th>
&lt;th>Example result&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>${__from}&lt;/code>&lt;/td>
&lt;td>1594671549254&lt;/td>
&lt;td>默认格式。毫秒级 Unix 时间戳&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>${__from:date}&lt;/code>&lt;/td>
&lt;td>2020-07-13T20:19:09.254Z&lt;/td>
&lt;td>No args, defaults to ISO 8601/RFC 3339&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>${__from:date:iso}&lt;/code>&lt;/td>
&lt;td>2020-07-13T20:19:09.254Z&lt;/td>
&lt;td>ISO 8601/RFC 3339&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>${__from:date:seconds}&lt;/code>&lt;/td>
&lt;td>1594671549&lt;/td>
&lt;td>Unix seconds epoch&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>${__from:date:YYYY-MM}&lt;/code>&lt;/td>
&lt;td>2020-07&lt;/td>
&lt;td>使用 &lt;a href="https://momentjs.com/docs/#/displaying/">date format&lt;/a> 标准，自定义时间格式&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="timefilter-或-__timefilter">&lt;code>$timeFilter&lt;/code> 或 &lt;code>$__timeFilter&lt;/code>&lt;a class="td-heading-self-link" href="#timefilter-%e6%88%96-__timefilter" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>&lt;a href="https://grafana.com/docs/grafana/latest/dashboards/variables/add-template-variables/#timefilter-or-__timefilter">https://grafana.com/docs/grafana/latest/dashboards/variables/add-template-variables/#timefilter-or-__timefilter&lt;/a>&lt;/p>
&lt;p>timeFilter 用以显示时间范围选择器选定的时间间隔。是一种类似把 from 与 to 两个变量合在一起的变量。&lt;/p>
&lt;p>该变量主要应用在 SQL 的 WHERE 条件用，用以过滤特定时间范围内的数据。&lt;/p>
&lt;p>&lt;span style="background:rgba(255, 183, 139, 0.55)">TODO: 为什么在文本模式下渲染不出来？&lt;/span>&lt;/p>
&lt;h3 id="__interval">&lt;code>$__interval&lt;/code>&lt;a class="td-heading-self-link" href="#__interval" aria-label="Heading self-link">&lt;/a>&lt;/h3>
&lt;p>&lt;a href="https://grafana.com/docs/grafana/latest/dashboards/variables/add-template-variables/#__interval">https://grafana.com/docs/grafana/latest/dashboards/variables/add-template-variables/#__interval&lt;/a>&lt;/p>
&lt;p>可以使用 &lt;code>$__interval&lt;/code> 变量作为参数按时间（对于 InfluxDB、MySQL、Postgres、MSSQL）、日期直方图间隔（对于 Elasticsearch）进行分组，或作为汇总函数参数（对于 Graphite）。&lt;/p>
&lt;p>步长，格式是 30s、1h、5d、etc.&lt;/p>
&lt;h1 id="手动创建变量">手动创建变量&lt;a class="td-heading-self-link" href="#%e6%89%8b%e5%8a%a8%e5%88%9b%e5%bb%ba%e5%8f%98%e9%87%8f" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://grafana.com/docs/grafana/latest/variables/">官方文档，模板与变量&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://yunlzheng.gitbook.io/prometheus-book/part-ii-prometheus-jin-jie/grafana/templating">Prometheus 天降奇兵文章&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>在前面的小节中介绍了 Grafana 中 4 中常用的可视化面板的使用，通过在面板中使用 PromQL 表达式，Grafana 能够方便的将 Prometheus 返回的数据进行可视化展示。例如，在展示主机 CPU 使用率时，我们使用了如下表达式：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-promql" data-lang="promql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">avg&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">irate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">node_cpu&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#f57900">mode&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;#39;&lt;/span>&lt;span style="color:#4e9a06">idle&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;#39;}[&lt;/span>&lt;span style="color:#4e9a06">5m&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">without&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">cpu&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>该表达式会返回当前 Promthues 中存储的所有时间序列，每一台主机都会有一条单独的曲线用于体现其 CPU 使用率的变化情况：&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/kct3zl/1616067851128-b841ca2a-6a47-4d36-a92c-1b1b28f4000d.png" alt="">&lt;/p>
&lt;p>而当用户只想关注其中某些主机时，基于当前我们已经学习到的知识只有两种方式，要么每次手动修改 Panel 中的 PromQL 表达式，要么直接为这些主机创建单独的 Panel。但是无论如何，这些硬编码方式都会直接导致 Dashboard 配置的频繁修改。在这一小节中我们将学习使用 Dashboard 变量的方式解决以上问题。&lt;/p>
&lt;h2 id="dashboard-变量">Dashboard 变量&lt;a class="td-heading-self-link" href="#dashboard-%e5%8f%98%e9%87%8f" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>在 Grafana 中用户可以为 Dashboard 定义一组变量（Variables），变量一般包含一个到多个可选值。如下所示，Grafana 通过将变量渲染为一个下拉框选项，从而使用户可以动态的改变变量的值：&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/kct3zl/1616067851360-808effbf-a69f-4123-86d3-1a90d373fa18.png" alt="">&lt;/p>
&lt;p>例如，这里定义了一个名为 node 的变量，用户可以通过在 PromQL 表达式或者 Panel 的标题中通过以下形式使用该变量：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-promql" data-lang="promql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">avg&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">irate&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">node_cpu&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#f57900">mode&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;#39;&lt;/span>&lt;span style="color:#4e9a06">idle&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;#39;,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#f57900">instance&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=~&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;#34;&lt;/span>&lt;span style="color:#4e9a06">$node&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;#34;}[&lt;/span>&lt;span style="color:#4e9a06">5m&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">without&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">cpu&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>变量的值可以支持单选或者多选，当对接 Prometheus 时，Grafana 会自动将$node 的值格式化为如 “host1|host2|host3” 的形式。配合使用 PromQL 的标签正则匹配 “&lt;strong>=~&lt;/strong>”，通过动态改变 PromQL 从而实现基于标签快速对时间序列进行过滤。&lt;/p>
&lt;h2 id="变量定义">变量定义&lt;a class="td-heading-self-link" href="#%e5%8f%98%e9%87%8f%e5%ae%9a%e4%b9%89" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>通过 Dashboard 页面的 Settings 选项，可以进入 Dashboard 的配置页面并且选择 Variables 子菜单:&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/kct3zl/1616067851069-bf8ea850-c067-42af-b078-7fa1bbd154e9.png" alt="">
为 Dashboard 添加变量&lt;/p>
&lt;p>用户需要指定变量的名称，后续用户就可以通过$variable_name 的形式引用该变量。Grafana 目前支持 6 种不同的变量类型，而能和 Prometheus 一起工作的主要包含以下 5 种类型：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>类型&lt;/th>
&lt;th>工作方式&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Query&lt;/td>
&lt;td>允许用户通过 Datasource 查询表达式的返回值动态生成变量的可选值&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Interval&lt;/td>
&lt;td>该变量代表时间跨度，通过 Interval 类型的变量，可以动态改变 PromQL 区间向量表达式中的时间范围。如 rate(node_cpu[$interval])&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Datasource&lt;/td>
&lt;td>允许用户动态切换当前 Dashboard 的数据源，特别适用于同一个 Dashboard 展示多个数据源数据的情况&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Custom&lt;/td>
&lt;td>用户直接通过手动的方式，定义变量的可选值&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Constant&lt;/td>
&lt;td>常量，在导入 Dashboard 时，会要求用户设置该常量的值&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Label 属性用于指定界面中变量的显示名称，Hide 属性则用于指定在渲染界面时是否隐藏该变量的下拉框。&lt;/p>
&lt;h2 id="使用变量过滤时间序列">使用变量过滤时间序列&lt;a class="td-heading-self-link" href="#%e4%bd%bf%e7%94%a8%e5%8f%98%e9%87%8f%e8%bf%87%e6%bb%a4%e6%97%b6%e9%97%b4%e5%ba%8f%e5%88%97" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>当 Prometheus 同时采集了多个主机节点的监控样本数据时，用户希望能够手动选择并查看其中特定主机的监控数据。这时我们需要使用 Query 类型的变量。&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/kct3zl/1616067851059-59709ed9-d567-4859-89ae-6344f4bf1f92.png" alt="">&lt;/p>
&lt;p>新建 Query 类型的变量&lt;/p>
&lt;p>如上所示，这里我们为 Dashboard 创建了一个名为 node 的变量，并且指定其类型为 Query。Query 类型的变量，允许用户指定数据源以及查询表达式，并通过正则匹配（Regex）的方式对查询结果进行处理，从而动态生成变量的可选值。在这里指定了数据源为 Prometheus，通过使用 node_load1 我们得到了两条时间序列：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-promql" data-lang="promql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">node_load1&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#f57900">instance&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;#34;&lt;/span>&lt;span style="color:#4e9a06">foo:9100&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;#34;,&lt;/span>&lt;span style="color:#f57900">job&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;#34;&lt;/span>&lt;span style="color:#4e9a06">node&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;#34;}&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">node_load1&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#f57900">instance&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;#34;&lt;/span>&lt;span style="color:#4e9a06">localhost:9100&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;#34;,&lt;/span>&lt;span style="color:#f57900">job&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;#34;&lt;/span>&lt;span style="color:#4e9a06">node&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;#34;}&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过指定正则匹配表达式为&lt;code>/.*instance=&amp;quot;([^&amp;quot;]*).*/&lt;/code>从而匹配出标签 instance 的值作为 node 变量的所有可选项，即：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">foo:9100&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">localhost:9100&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Selection Options&lt;/strong>选项中可以指定该变量的下拉框是否支持多选，以及是否包含全选（All）选项。&lt;/p>
&lt;p>保存变量后，用户可以在 Panel 的 General 或者 Metrics 中通过$node 的方式使用该变量，如下所示：&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/kct3zl/1616067851042-b846b8f9-37c3-48b8-9e4b-127319beb2df.png" alt="">&lt;/p>
&lt;p>在 Metrics 中使用变量&lt;/p>
&lt;p>这里需要注意的是，如果允许用户多选在 PromQL 表达式中应该使用标签的正则匹配模式，因为 Grafana 会自动将多个选项格式化为如“foo:9100|localhost:9100”的形式。&lt;/p>
&lt;p>使用 Query 类型的变量能够根据允许用户能够根据时间序列的特征维度对数据进行过滤。在定义 Query 类型变量时，除了使用 PromQL 查询时间序列以过滤标签的方式以外，Grafana 还提供了几个有用的函数：&lt;/p>
&lt;ul>
&lt;li>label_values(LABEL) # 返回 Promthues 所有监控指标中，标签名为 LABEL 的所有可选值&lt;/li>
&lt;li>label_values(METRIC, LABEL) # 返回监控指标 METRIC 中，标签名为 LABEL 的所有可选值&lt;/li>
&lt;li>metrics(RegEx) # 返回所有满足 RegEx(正则表达式) 匹配到的指标名称&lt;/li>
&lt;li>query_result(PromQL) # 返回 PromQL 的查询结果&lt;/li>
&lt;/ul>
&lt;p>例如，当需要监控 Prometheus 所有采集任务的状态时，可以使用如下方式，获取当前所有采集任务的名称：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-promql" data-lang="promql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">label_values&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">up&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">job&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>例如，有时候我们想要动态修改变量查询结果。比如某一个节点绑定了多个 ip，一个用于内网访问，一个用于外网访问，此时 prometheus 采集到的指标是内网的 ip，但我们需要的是外网 ip。这里我们想要能在 Grafana 中动态改变标签值，进行 ip 段的替换，而避免从 prometheus 或 exporter 中修改采集指标。&lt;/p>
&lt;p>这时需要使用 grafana 的 query_result 函数&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-promql" data-lang="promql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># 将10.10.15.xxx段的ip地址替换为10.20.15.xxx段 注：替换端口同理&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">query_result&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">label_replace&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">kube_pod_info&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#f57900">pod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=~&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;#34;&lt;/span>&lt;span style="color:#4e9a06">$pod&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;#34;},&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;#34;&lt;/span>&lt;span style="color:#4e9a06">node&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;#34;,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;#34;&lt;/span>&lt;span style="color:#4e9a06">10.20.15.$1&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;#34;,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;#34;&lt;/span>&lt;span style="color:#4e9a06">node&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;#34;,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;#34;&lt;/span>&lt;span style="color:#4e9a06">10.10.15.(.*)&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">))&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-promql" data-lang="promql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># 通过正则从返回结果中匹配出所需要的ip地址&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">regex&lt;/span>&lt;span style="color:#a40000">：&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">/&lt;/span>&lt;span style="color:#a40000">.&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">node&lt;/span>&lt;span style="color:#a40000">=&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;#34;&lt;/span>&lt;span style="color:#4e9a06">(.*?)&lt;/span>&lt;span style="color:#000;font-weight:bold">&amp;#34;&lt;/span>&lt;span style="color:#a40000">.&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">*/&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在 grafana 中配置如图：&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/kct3zl/1616067851071-4ddd8696-d110-474a-8014-49824a3f7119.png" alt="">&lt;/p>
&lt;h2 id="使用变量动态创建-panel-和-row">使用变量动态创建 Panel 和 Row&lt;a class="td-heading-self-link" href="#%e4%bd%bf%e7%94%a8%e5%8f%98%e9%87%8f%e5%8a%a8%e6%80%81%e5%88%9b%e5%bb%ba-panel-%e5%92%8c-row" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>当在一个 Panel 中展示多条时间序列数据时，通过使用变量可以轻松实现对时间序列的过滤，提高用户交互性。除此以外，我们还可以使用变量自动生成 Panel 或者 Row。 如下所示，当需要可视化当前系统中所有采集任务的监控任务运行状态时，由于 Prometheus 的采集任务配置可能随时发生变更，通过硬编码的形式实现，会导致 Dashboard 配置的频繁变更：&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/kct3zl/1616067851119-aa1bcd6d-8e23-4cd9-95be-3db2e40ce360.png" alt="">&lt;/p>
&lt;p>Prometheus 采集任务状态&lt;/p>
&lt;p>如下所示，这里为 Dashboard 定义了一遍名为 job 的变量：&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/kct3zl/1616067851059-05a9e06b-9215-4768-9126-542c61e9d70f.png" alt="">&lt;/p>
&lt;p>使用变量获取当前所有可选任务&lt;/p>
&lt;p>通过使用 label_values 函数，获取到当前 Promthues 监控指标 up 中所有可选的 job 标签的值：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-promql" data-lang="promql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">label_values&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#000">up&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">job&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果变量启用了 Multi-value 或者 Include All Option 选项的变量，那么在 Panel 的 General 选项的 Repeat 中可以选择自动迭代的变量，这里使用了 Singlestat 展示所有监控采集任务的状态：&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/kct3zl/1616067851091-b6fcaadd-b2aa-41c1-957e-039bc878dbc6.png" alt="">&lt;/p>
&lt;p>General 中的 Repeat 选项&lt;/p>
&lt;p>Repeat 选项设置完成后，Grafana 会根据当前用户的选择，自动创建一个到多个 Panel 实例。 为了能够使 Singlestat Panel 能够展示正确的数据，如下所示，在 Prometheus 中，我们依然使用了&lt;code>$job&lt;/code>变量，不过此时的 &lt;code>$job&lt;/code> 反应的是当前迭代的值：&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/kct3zl/1616067851115-f60eb991-5dbb-4c33-8cd2-58639c7001c6.png" alt="">
在 Metric 中使用变量&lt;/p>
&lt;p>而如果还希望能够自动生成 Row，只需要在 Row 的设置中，选择需要 Repeat 的变量即可：&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/kct3zl/1616067851130-ac817567-fee3-40c3-b4e1-d5f07f86cf8d.png" alt="">&lt;/p></description></item><item><title>Docs: Table 类型面板</title><link>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Grafana/Panel-%E4%B8%8E-Dashboard/Table-%E7%B1%BB%E5%9E%8B%E9%9D%A2%E6%9D%BF/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Grafana/Panel-%E4%B8%8E-Dashboard/Table-%E7%B1%BB%E5%9E%8B%E9%9D%A2%E6%9D%BF/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>Table 面板需要配合 Table 格式&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/pydb2y/1636267921152-4752376b-9ab6-4156-ae67-1aeaf6af76e5.png" alt="image.png">&lt;/p>
&lt;p>当从 Prometheus 获取了一条 Serie 的数据后，使用 Table 对数据进行格式化，那么就会形成上图所示的样子。这条 serie 的所有标签、时间、值 都会被 Grafana 转换为 [Field(字段)](/docs/6.可观测性/Grafana/Panel(面板)%20 与%20Dashboard(仪表盘)/Panel(面板)%20 配置详解.md 配置详解.md)。&lt;/p>
&lt;h1 id="panel--面板配置">Panel # 面板配置&lt;a class="td-heading-self-link" href="#panel--%e9%9d%a2%e6%9d%bf%e9%85%8d%e7%bd%ae" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h1 id="field--字段相关配置">Field # 字段相关配置&lt;a class="td-heading-self-link" href="#field--%e5%ad%97%e6%ae%b5%e7%9b%b8%e5%85%b3%e9%85%8d%e7%bd%ae" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h1 id="overrides--字段替换配置">Overrides # 字段替换配置&lt;a class="td-heading-self-link" href="#overrides--%e5%ad%97%e6%ae%b5%e6%9b%bf%e6%8d%a2%e9%85%8d%e7%bd%ae" aria-label="Heading self-link">&lt;/a>&lt;/h1></description></item></channel></rss>