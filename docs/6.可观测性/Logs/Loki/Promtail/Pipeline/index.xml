<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pipeline on 断念梦的站点</title><link>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Logs/Loki/Promtail/Pipeline/</link><description>Recent content in Pipeline on 断念梦的站点</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Logs/Loki/Promtail/Pipeline/index.xml" rel="self" type="application/rss+xml"/><item><title>Stages(阶段) 详解</title><link>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Logs/Loki/Promtail/Pipeline/Stages%E9%98%B6%E6%AE%B5-%E8%AF%A6%E8%A7%A3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Logs/Loki/Promtail/Pipeline/Stages%E9%98%B6%E6%AE%B5-%E8%AF%A6%E8%A7%A3/</guid><description>概述 参考：
官方文档，发送数据 - Promtail - 阶段 官方文档，发送数据 - Promtail - 配置 - pipelinie_stages 对于 Stages 的详解，需要配合配置文件来描述。所以，本篇笔记既是 Stages 详解，也是 Promtail 配置 文件中 pipeline_stages 字段的详解。
pipeline_stages 字段配置 pipeline_stages 字段用于配置转换日志条目及其标签。Promtail 工作流程中的 日志发现 步骤完成后，将执行 pipeline。
在大多数情况下，可以使用 regex 或 json 阶段从日志中提取数据。提取的数据将转换为临时 map 对象。这些提取出来的数据可以被 promtail 使用(比如这些数据可以作为标签的值或作为 i 内容直接输出)。此外，除 docker 和 cri 之外的任何其他阶段都可以访问提取的数据。
scrape_configs: - pipeline_stages: - docker: {} - cri: {} - regex: ... - json: .... ...... 阶段太多，其余略 Parsing stages(解析阶段) docker - 根据标准的 docker 日志文件格式来解析每行日志，并提取数据(默认行为) 来自 docker 的每行日志，都是以 JSON 格式编写，该 JSON 格式中有下列几个 key：</description></item><item><title>Pipeline</title><link>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Logs/Loki/Promtail/Pipeline/Pipeline/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Logs/Loki/Promtail/Pipeline/Pipeline/</guid><description>概述 参考：
官方文档 公众号，Promtail Pipeline 日志处理配置 Pipeline 用来处理 tail 到的每一行日志的内容、标签、时间戳。Pipeline 的行为在配置文件的 .scrape_config.pipeline_stages 字段定义。是 Promtail 处理日志必不可少的一个环节。
Pipeline 由一组 stages(阶段) 组成，Loki 将 Stages 分为 4 大类型：
Parsing stages(解析阶段)# 解析每行日志，并从中提取数据。提取的数据可供后面几个阶段使用 Transform stages(转换阶段) # (可省略)转换解析阶段提取到的数据 Actions stages(行动阶段)# (可省略)处理转换阶段转换后的数据。行动包括以下几种 为每行日志添加标签或修改现有标签 更改每行日志的时间戳 改变日志行内容 根据提取到的数据创建 metrics(指标) Filtering stages(过滤阶段) # (可省略)根据指定的条件，保留或删除日志行。 注意：过滤阶段的类型中，有一个名为 match 的过滤阶段。match 是一个通用的阶段，不受阶段顺序影响，在处理日志行之前，match 阶段可以使用 LogQL，来过滤要使用某些阶段进行处理的日志行。 各阶段类型 Parsing stages(解析阶段) 类型： cri # 使用标准的 CRI 日志格式来解析每行日志，并提取数据 docker # 使用标准的 docker 日志文件格式来解析每行日志，并提取数据(Pipeline 的默认行为，该阶段包括 json、labels、timestamp、output 四个阶段) regex # 使用正则表达式从每行日志提取数据 json # 使用 JSON 格式解析每行日志，并提取数据 replace # 使用正则表达式替换数据 Transform stages(转换阶段) 类型： multiline # 多行阶段将多行日志进行合并，然后再将其传递到 pipeline 的下一个阶段。 pack # Packs a log line in a JSON object allowing extracted values and labels to be placed inside the log line.</description></item></channel></rss>