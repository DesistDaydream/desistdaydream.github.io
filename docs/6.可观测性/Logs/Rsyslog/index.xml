<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Rsyslog on 断念梦的站点</title><link>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Logs/Rsyslog/</link><description>Recent content in Rsyslog on 断念梦的站点</description><generator>Hugo</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Logs/Rsyslog/index.xml" rel="self" type="application/rss+xml"/><item><title>Module</title><link>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Logs/Rsyslog/Module/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Logs/Rsyslog/Module/</guid><description>概述 参考：
官方文档，模块 在配置模块时，可以会利用各种 Rsyslog objects(对象) 对模块进行更多配置，比如 input、action、etc. 这些对象。
objects 的概念是 Rsyslog 设计的 RainerScript 脚本语言中的。
module 对象 # 用于加载模块 input 对象 # 用于描述 Input 行为的主要手段，用于收集 rsyslog 处理的消息。 action 对象 # TODO TODO 在阅读各种模块文档时，通常能看到这种标题，这部分内容就是在说利用 input 对象对该模块进行配置。
比如我 module(load=&amp;quot;imuxsock&amp;quot;) 这样加载了 imuxsock 模块，然后可以这样 input(type=&amp;quot;imuxsock&amp;quot; Socket=&amp;quot;/root/tmp/log&amp;quot;) 利用 input 对象控制 imuxsock 模块的行为。Socket 参数是告诉 imuxsock 模块要在 /root/tmp/log 文件处监听 Unix Socket。
还有类似这样的标题: Action Parameters，这就是在说可以利用 action 对象对该模块进行配置。
Output 模块 https://www.rsyslog.com/doc/configuration/modules/idx_output.html
Input 模块 https://www.rsyslog.com/doc/configuration/modules/idx_input.html
Input 模块用于从各种来源收集消息。它们与消息生成器交互。它们通常是通过输入配置对象定义的。如果要配置具体的输入参数，通常是利用 input 对象实现的。
imuxsock https://www.</description></item><item><title>RsysLog 配置</title><link>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Logs/Rsyslog/RsysLog-%E9%85%8D%E7%BD%AE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Logs/Rsyslog/RsysLog-%E9%85%8D%E7%BD%AE/</guid><description>概述 参考：
Manual(手册), rsyslog.conf(5) 本笔记中的 Facility 概念见 日志系统 中 Facility(设施) 的介绍 Rsyslog 已经发展了几十年。因此有多种不同格式进行配置
basic # 以前称为 sysklogd 格式。这种格式最适合在单独一行上表达基本配置，源于原始的 syslog.conf 格式。最常见的用例是匹配设施/严重性并将匹配消息写入日志文件。 advanced # 以前称为 RainerScript 格式。这种格式首先在 rsyslog v6 中提供，对于需要多行的重要用例来说是最好、最精确的格式。此格式专为高级用例而设计，例如转发到可能部分离线的远程主机。 obsolete legacy # 过失的遗留格式。在编写新配置时不应该使用。 RainerScript https://www.rsyslog.com/doc/rainerscript/index.html
RainerScript 是一种专门设计的脚本语言，非常适合处理网络事件和配置事件处理器。它是 rsyslog 使用的主要配置语言。请注意，RainerScript 可能不会缩写为 rscript，因为那是别人的商标。
自 rsyslog 3.12.0 起提供了一些有限的 RainerScript 支持（用于表达式支持）。在 v5 中，支持“if .. then”语句。自 rsyslog v6 以来，第一个完整的实现可用。
Data Types Expressions Functions Control Structures Objects MODULES 模块配置 参考：
https://www.rsyslog.com/doc/configuration/modules/index.html 配置文件新老版本有两种格式，下面这两种写法，都可以表示让 Rsyslog 加载 imuxsock 模块
$ModLoad imuxsock # 老版本语法 module(load=&amp;ldquo;imuxsock&amp;rdquo;) # 新版本语法 更多模块配置详情见 Module</description></item><item><title>Rsyslog</title><link>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Logs/Rsyslog/Rsyslog/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Logs/Rsyslog/Rsyslog/</guid><description>概述 参考：
官网 官方文档，配置 - 模块 GitHub 项目，rsyslog/rsyslog Wiki, Rsyslog Manual(手册), syslog(3) Manual(手册), rsyslogd(8) Arch 文档，Systemd-Journal-配合 syslog 使用 Rocket-fast system for log processing(像火箭一样快的日志处理系统，简称 rsyslog) 是一款开源应用程序，用于 Unix-like OS，可以在 IP 网络中转发日志消息。Rsyslog 实现了基本的 Syslog 协议，并扩展了丰富的功能，比如基于内容的过滤、排队处理离线输出、支持模块、灵活的配置、使用 TCP 传输 等等.
RsysLog 是一个日志统一管理的程序。通过 rsyslogd 这个守护进程提供服务，rsyslogd 程序是对 syslogd 的扩展，提供了更多的功能和可靠性。
Rsyslog 提供了一个符合 RFC 5424 标准的日志消息系统。
RsysLog 的特点：
可以监听在某个端口上作为日志服务器，来收集多个主机的日志 RsysLog 自带多个模块，可以通过模块来实现更多的功能。以 im 开头的是在收集日志时候所用到的，以 om 开头的是在输出日志时用到的(比如把收集到的日志保存在某一文件中)。 Rsyslog 项目始于 2004 年，当时 rsyslog 的主要作者 Rainer Gerhards 决定编写一个新的强大的 syslog 守护进程来与 syslog-ng 竞争，因为根据作者的说法，“一个新的主要参与者将防止单一文化并提供丰富的选择自由。”
Moules(模块) Rsyslog 采用模块化设计，可以通过加载模块来动态加载功能，模块也可以由任何第三方编写，只要符合 Rsyslog 规范即可。</description></item></channel></rss>