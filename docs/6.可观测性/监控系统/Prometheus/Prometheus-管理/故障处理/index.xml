<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦 – 故障处理</title><link>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F/Prometheus/Prometheus-%E7%AE%A1%E7%90%86/%E6%95%85%E9%9A%9C%E5%A4%84%E7%90%86/</link><description>Recent content in 故障处理 on 断念梦</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F/Prometheus/Prometheus-%E7%AE%A1%E7%90%86/%E6%95%85%E9%9A%9C%E5%A4%84%E7%90%86/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Prometheus 大量读操作</title><link>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F/Prometheus/Prometheus-%E7%AE%A1%E7%90%86/%E6%95%85%E9%9A%9C%E5%A4%84%E7%90%86/Prometheus-%E5%A4%A7%E9%87%8F%E8%AF%BB%E6%93%8D%E4%BD%9C/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F/Prometheus/Prometheus-%E7%AE%A1%E7%90%86/%E6%95%85%E9%9A%9C%E5%A4%84%E7%90%86/Prometheus-%E5%A4%A7%E9%87%8F%E8%AF%BB%E6%93%8D%E4%BD%9C/</guid><description>
&lt;p>故障现象&lt;/p>
&lt;p>Prometheus 的读请求无故瞬间激增。&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/mk7rw5/1616068308575-35d1480d-561e-494a-be22-fb863770bbb9.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/mk7rw5/1616068308611-92cbab4f-01c8-4a00-844c-3944f3924dd3.png" alt="">&lt;/p>
&lt;h1 id="故障排查">故障排查&lt;/h1>
&lt;p>重启 Prometheus 后解决，后续需要跟进看是否还会继续发生&lt;/p>
&lt;p>当使用 Grafana 查询 30 天的指标时，Prometheus 的读请求就会激增：
&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/mk7rw5/1616068308639-c7a19793-f268-4562-9f5b-1deea68be7e1.png" alt="">
怀疑可能是 Grafana 与 Prometheus 之间的连接没有中断，持续查询导致，但是暂无证据&lt;/p>
&lt;p>1 月 20 日早晨进行 30 天查询后再次出现该问题，添加 netfilter 规则，阻断 grafana 与 prometheus 问题依旧；使用 docker 重启 prometheus 容器问题依旧；删除 grafana 问题依旧。&lt;/p>
&lt;p>故障处理&lt;/p>
&lt;p>实际上是由于每次评估规则时，有很多条规则的表达式是 30 天的范围表达式导致的。&lt;/p></description></item><item><title>Docs: 故障处理</title><link>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F/Prometheus/Prometheus-%E7%AE%A1%E7%90%86/%E6%95%85%E9%9A%9C%E5%A4%84%E7%90%86/%E6%95%85%E9%9A%9C%E5%A4%84%E7%90%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F/Prometheus/Prometheus-%E7%AE%A1%E7%90%86/%E6%95%85%E9%9A%9C%E5%A4%84%E7%90%86/%E6%95%85%E9%9A%9C%E5%A4%84%E7%90%86/</guid><description>
&lt;h1 id="概述">概述&lt;/h1>
&lt;p>&lt;a href="https://mp.weixin.qq.com/s/OY5MtTUHB0UMZ3I2D4xF_A">公众号-CNCF，记一次远程写性能问题引发的Prometheus版本升级事件&lt;/a>&lt;/p>
&lt;h1 id="compaction-failed">compaction failed&lt;/h1>
&lt;p>compaction failed 是一个 Prometheus 在压缩数据时产生的错误，导致该问题的因素多种多样，最常见的就是使用 NFS 作为 Prometehus 时序数据库的后端存储。&lt;/p>
&lt;p>&lt;a href="https://prometheus.io/docs/prometheus/latest/storage/">官方文档&lt;/a>中曾明确表明不支持 NFS 文件系统&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/mhabk3/1633918055761-a5d5266e-c5ce-455c-92c1-0b219b2a2c60.png" alt="image.png">&lt;/p>
&lt;p>该问题的表现形式通常为文件丢失，比如，某个 Block 中的 meta.json 文件丢失&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>msg&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;compaction failed&amp;#34;&lt;/span> err&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;plan compaction: open /prometheus/01FHHPS3NR7M2E8MAV37S61ME6/meta.json: no such file or directory&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>msg&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Failed to read meta.json for a block during reloadBlocks. Skipping&amp;#34;&lt;/span> dir&lt;span style="color:#f92672">=&lt;/span>/prometheus/01FHHPS3NR7M2E8MAV37S61ME6 err&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;open /prometheus/01FHHPS3NR7M2E8MAV37S61ME6/meta.json: no such file or directory&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>经过日志筛选，该问题起源于一次 Deleting obsolete block 操作之后的 compact blocks，也就是删除过期块后压缩块。 失败操作源于：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>msg&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;compaction failed&amp;#34;&lt;/span> err&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;delete compacted block after failed db reloadBlocks:01FHHPS3NR7M2E8MAV37S61ME6: unlinkat /prometheus/01FHHPS3NR7M2E8MAV37S61ME6/chunks: directory not empty&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/mhabk3/1633919258306-20285a8b-186e-4177-a043-5f06f54f7f2a.png" alt="image.png">&lt;/p>
&lt;p>这些报错日志信息，可以在 &lt;a href="https://github.com/prometheus/prometheus/blob/release-2.28/tsdb/db.go">./prometheus/tsdb/db.go&lt;/a> 代码中找到&lt;/p>
&lt;h2 id="解决方式">解决方式&lt;/h2>
&lt;p>可以直接删除 01FHHPS3NR7M2E8MAV37S61ME6 块，也就是直接删除这个目录，并重启 Prometheus&lt;/p>
&lt;h1 id="error-on-ingesting-out-of-order-result-from-rule-evaluation">Error on ingesting out-of-order result from rule evaluation&lt;/h1>
&lt;p>Error on ingesting out-of-order result from rule evaluation&lt;/p>
&lt;p>该问题通常是由于记录规则的处理结果中，包含 NaN 而产生的告警，所有 NaN 的时间序列都会被丢弃，并不会保存到数据库中。&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/bprr89/1633938701153-3857ea39-4849-4d33-89e3-ad34ac5313e0.png" alt="image.png">&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/bprr89/1633938707935-150d51c1-9dec-41a9-9346-f2e62bf74a53.png" alt="image.png">&lt;/p>
&lt;p>下面是报错的具体内容，可以看到 numDropped 是记录规则查询后生成的新时间序列中，被丢弃的时间序列。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>caller&lt;span style="color:#f92672">=&lt;/span>manager.go:651 component&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;rule manager&amp;#34;&lt;/span> group&lt;span style="color:#f92672">=&lt;/span>kube-apiserver.rules msg&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Error on ingesting out-of-order result from rule evaluation&amp;#34;&lt;/span> numDropped&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">231&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>caller&lt;span style="color:#f92672">=&lt;/span>manager.go:651 component&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;rule manager&amp;#34;&lt;/span> group&lt;span style="color:#f92672">=&lt;/span>kube-apiserver-availability.rules msg&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Error on ingesting out-of-order result from rule evaluation&amp;#34;&lt;/span> numDropped&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">121&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这个错误日志，可以从 Prometheus 代码中 &lt;a href="https://github.com/prometheus/prometheus/blob/release-2.28/rules/manager.go#L651">./prometheus/rules/manager.go&lt;/a> 的 Group.Eval() 方法中看到，每次评估规则时，只要有异常值得序列，都会抛出该错误日志信息。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Eval runs a single evaluation cycle in which all rules are evaluated sequentially.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">g&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">Group&lt;/span>) &lt;span style="color:#a6e22e">Eval&lt;/span>(&lt;span style="color:#a6e22e">ctx&lt;/span> &lt;span style="color:#a6e22e">context&lt;/span>.&lt;span style="color:#a6e22e">Context&lt;/span>, &lt;span style="color:#a6e22e">ts&lt;/span> &lt;span style="color:#a6e22e">time&lt;/span>.&lt;span style="color:#a6e22e">Time&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">samplesTotal&lt;/span> &lt;span style="color:#66d9ef">float64&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#a6e22e">i&lt;/span>, &lt;span style="color:#a6e22e">rule&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#66d9ef">range&lt;/span> &lt;span style="color:#a6e22e">g&lt;/span>.&lt;span style="color:#a6e22e">rules&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">select&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#f92672">&amp;lt;-&lt;/span>&lt;span style="color:#a6e22e">g&lt;/span>.&lt;span style="color:#a6e22e">done&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">default&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">func&lt;/span>(&lt;span style="color:#a6e22e">i&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>, &lt;span style="color:#a6e22e">rule&lt;/span> &lt;span style="color:#a6e22e">Rule&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">......&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#a6e22e">_&lt;/span>, &lt;span style="color:#a6e22e">s&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#66d9ef">range&lt;/span> &lt;span style="color:#a6e22e">vector&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">_&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">app&lt;/span>.&lt;span style="color:#a6e22e">Append&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#a6e22e">s&lt;/span>.&lt;span style="color:#a6e22e">Metric&lt;/span>, &lt;span style="color:#a6e22e">s&lt;/span>.&lt;span style="color:#a6e22e">T&lt;/span>, &lt;span style="color:#a6e22e">s&lt;/span>.&lt;span style="color:#a6e22e">V&lt;/span>); &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">rule&lt;/span>.&lt;span style="color:#a6e22e">SetHealth&lt;/span>(&lt;span style="color:#a6e22e">HealthBad&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">rule&lt;/span>.&lt;span style="color:#a6e22e">SetLastError&lt;/span>(&lt;span style="color:#a6e22e">err&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">switch&lt;/span> &lt;span style="color:#a6e22e">errors&lt;/span>.&lt;span style="color:#a6e22e">Cause&lt;/span>(&lt;span style="color:#a6e22e">err&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#a6e22e">storage&lt;/span>.&lt;span style="color:#a6e22e">ErrOutOfOrderSample&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">numOutOfOrder&lt;/span>&lt;span style="color:#f92672">++&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">level&lt;/span>.&lt;span style="color:#a6e22e">Debug&lt;/span>(&lt;span style="color:#a6e22e">g&lt;/span>.&lt;span style="color:#a6e22e">logger&lt;/span>).&lt;span style="color:#a6e22e">Log&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;msg&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;Rule evaluation result discarded&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;err&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;sample&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">s&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#a6e22e">storage&lt;/span>.&lt;span style="color:#a6e22e">ErrDuplicateSampleForTimestamp&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">numDuplicates&lt;/span>&lt;span style="color:#f92672">++&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">level&lt;/span>.&lt;span style="color:#a6e22e">Debug&lt;/span>(&lt;span style="color:#a6e22e">g&lt;/span>.&lt;span style="color:#a6e22e">logger&lt;/span>).&lt;span style="color:#a6e22e">Log&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;msg&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;Rule evaluation result discarded&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;err&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;sample&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">s&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">default&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">level&lt;/span>.&lt;span style="color:#a6e22e">Warn&lt;/span>(&lt;span style="color:#a6e22e">g&lt;/span>.&lt;span style="color:#a6e22e">logger&lt;/span>).&lt;span style="color:#a6e22e">Log&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;msg&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;Rule evaluation result discarded&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;err&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;sample&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">s&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">seriesReturned&lt;/span>[&lt;span style="color:#a6e22e">s&lt;/span>.&lt;span style="color:#a6e22e">Metric&lt;/span>.&lt;span style="color:#a6e22e">String&lt;/span>()] = &lt;span style="color:#a6e22e">s&lt;/span>.&lt;span style="color:#a6e22e">Metric&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">numOutOfOrder&lt;/span> &amp;gt; &lt;span style="color:#ae81ff">0&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">level&lt;/span>.&lt;span style="color:#a6e22e">Warn&lt;/span>(&lt;span style="color:#a6e22e">g&lt;/span>.&lt;span style="color:#a6e22e">logger&lt;/span>).&lt;span style="color:#a6e22e">Log&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;msg&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;Error on ingesting out-of-order result from rule evaluation&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;numDropped&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">numOutOfOrder&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">numDuplicates&lt;/span> &amp;gt; &lt;span style="color:#ae81ff">0&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">level&lt;/span>.&lt;span style="color:#a6e22e">Warn&lt;/span>(&lt;span style="color:#a6e22e">g&lt;/span>.&lt;span style="color:#a6e22e">logger&lt;/span>).&lt;span style="color:#a6e22e">Log&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;msg&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;Error on ingesting results from rule evaluation with different value but same timestamp&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;numDropped&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">numDuplicates&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">......&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }(&lt;span style="color:#a6e22e">i&lt;/span>, &lt;span style="color:#a6e22e">rule&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">g&lt;/span>.&lt;span style="color:#a6e22e">metrics&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">g&lt;/span>.&lt;span style="color:#a6e22e">metrics&lt;/span>.&lt;span style="color:#a6e22e">GroupSamples&lt;/span>.&lt;span style="color:#a6e22e">WithLabelValues&lt;/span>(&lt;span style="color:#a6e22e">GroupKey&lt;/span>(&lt;span style="color:#a6e22e">g&lt;/span>.&lt;span style="color:#a6e22e">File&lt;/span>(), &lt;span style="color:#a6e22e">g&lt;/span>.&lt;span style="color:#a6e22e">Name&lt;/span>())).&lt;span style="color:#a6e22e">Set&lt;/span>(&lt;span style="color:#a6e22e">samplesTotal&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">g&lt;/span>.&lt;span style="color:#a6e22e">cleanupStaleSeries&lt;/span>(&lt;span style="color:#a6e22e">ctx&lt;/span>, &lt;span style="color:#a6e22e">ts&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="error-on-ingesting-out-of-order-samples">Error on ingesting out-of-order samples&lt;/h1>
&lt;h2 id="故障现象">故障现象&lt;/h2>
&lt;p>查看日志发现很多 &lt;code>Error on ingesting out-of-order samples&lt;/code> Warn 信息&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/rpaa9g/1629643964887-eaa5bc33-94fb-4add-8424-f40dfd65ec02.png" alt="image.png">&lt;/p>
&lt;h2 id="故障原因">故障原因&lt;/h2>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.robustperception.io/debugging-out-of-order-samples">https://www.robustperception.io/debugging-out-of-order-samples&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>当一个 job 中从多个 Prometheus 中采集相同指标时，就容易产生这个问题。比如，下图示例：&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/rpaa9g/1629687458928-d2444080-a4ff-406c-8a70-76fa687459ae.jpeg" alt="">&lt;/p>
&lt;p>当采集目标是具有相同数据的多个 Prometheus，并且采集时轮流采集，就会很容易产生上述问题&lt;/p>
&lt;h2 id="故障处理">故障处理&lt;/h2>
&lt;p>每个 Job 配置中，添加 &lt;code>honor_timestamps: false&lt;/code> 配置。&lt;/p></description></item></channel></rss>