<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦的站点 – ELK _ EFK</title><link>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F/ELK-_-EFK/</link><description>Recent content in ELK _ EFK on 断念梦的站点</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F/ELK-_-EFK/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: EFK 部署</title><link>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F/ELK-_-EFK/EFK-%E9%83%A8%E7%BD%B2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F/ELK-_-EFK/EFK-%E9%83%A8%E7%BD%B2/</guid><description>
&lt;h1 id="在-kubernetes-中部署-efk-套件">在 Kubernetes 中部署 EFK 套件&lt;a class="td-heading-self-link" href="#%e5%9c%a8-kubernetes-%e4%b8%ad%e9%83%a8%e7%bd%b2-efk-%e5%a5%97%e4%bb%b6" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>官方 addons：&lt;a href="https://github.com/kubernetes/kubernetes/tree/release-1.18/cluster/addons/fluentd-elasticsearch">https://github.com/kubernetes/kubernetes/tree/release-1.18/cluster/addons/fluentd-elasticsearch&lt;/a>&lt;/p>
&lt;p>官方 addons 问题：&lt;a href="https://github.com/kubernetes/kubernetes/issues/94429">https://github.com/kubernetes/kubernetes/issues/94429&lt;/a>&lt;/p>
&lt;p>参考：&lt;a href="https://www.qikqiak.com/post/install-efk-stack-on-k8s/">https://www.qikqiak.com/post/install-efk-stack-on-k8s/&lt;/a>&lt;/p>
&lt;p>es-service.yaml&lt;/p>
&lt;pre tabindex="0">&lt;code>kind: Service
apiVersion: v1
metadata:
name: elasticsearch
namespace: logging
labels:
app: elasticsearch
spec:
selector:
app: elasticsearch
clusterIP: None
ports:
- port: 9200
name: rest
- port: 9300
name: inter-node
&lt;/code>&lt;/pre>&lt;p>es-statefulset.yaml&lt;/p>
&lt;pre>&lt;code>apiVersion: apps/v1
kind: StatefulSet
metadata:
name: es
namespace: logging
spec:
serviceName: elasticsearch
replicas: 3
selector:
matchLabels:
app: elasticsearch
template:
metadata:
labels:
app: elasticsearch
spec:
containers:
- name: elasticsearch
image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
ports:
- name: rest
containerPort: 9200
- name: inter
containerPort: 9300
resources:
limits:
cpu: 1000m
requests:
cpu: 1000m
volumeMounts:
- name: data
mountPath: /usr/share/elasticsearch/data
env:
- name: cluster.name
value: k8s-logs
- name: node.name
valueFrom:
fieldRef:
fieldPath: metadata.name
- name: cluster.initial_master_nodes
value: &amp;quot;es-0,es-1,es-2&amp;quot;
- name: discovery.zen.minimum_master_nodes
value: &amp;quot;2&amp;quot;
- name: discovery.seed_hosts
value: &amp;quot;elasticsearch&amp;quot;
- name: ES_JAVA_OPTS
value: &amp;quot;-Xms512m -Xmx512m&amp;quot;
- name: network.host
value: &amp;quot;0.0.0.0&amp;quot;
volumes:
- name: data
emptyDir: {}
&lt;/code>&lt;/pre>
&lt;p>fluentd-configmap.yaml&lt;/p>
&lt;pre>&lt;code>kind: ConfigMap
apiVersion: v1
metadata:
name: fluentd-config
namespace: logging
data:
system.conf: |-
&amp;lt;system&amp;gt;
root_dir /tmp/fluentd-buffers/
&amp;lt;/system&amp;gt;
containers.input.conf: |-
&amp;lt;source&amp;gt;
@id fluentd-containers.log
@type tail # Fluentd 内置的输入方式，其原理是不停地从源文件中获取新的日志。
path /var/log/containers/*.log # 挂载的服务器Docker容器日志地址
pos_file /var/log/es-containers.log.pos
tag raw.kubernetes.* # 设置日志标签
read_from_head true
&amp;lt;parse&amp;gt; # 多行格式化成JSON
@type multi_format # 使用 multi-format-parser 解析器插件
&amp;lt;pattern&amp;gt;
format json # JSON解析器
time_key time # 指定事件时间的时间字段
time_format %Y-%m-%dT%H:%M:%S.%NZ # 时间格式
&amp;lt;/pattern&amp;gt;
&amp;lt;pattern&amp;gt;
format /^(?&amp;lt;time&amp;gt;.+) (?&amp;lt;stream&amp;gt;stdout|stderr) [^ ]* (?&amp;lt;log&amp;gt;.*)$/
time_format %Y-%m-%dT%H:%M:%S.%N%:z
&amp;lt;/pattern&amp;gt;
&amp;lt;/parse&amp;gt;
&amp;lt;/source&amp;gt;
# 在日志输出中检测异常，并将其作为一条日志转发
# https://github.com/GoogleCloudPlatform/fluent-plugin-detect-exceptions
&amp;lt;match raw.kubernetes.**&amp;gt; # 匹配tag为raw.kubernetes.**日志信息
@id raw.kubernetes
@type detect_exceptions # 使用detect-exceptions插件处理异常栈信息
remove_tag_prefix raw # 移除 raw 前缀
message log
stream stream
multiline_flush_interval 5
max_bytes 500000
max_lines 1000
&amp;lt;/match&amp;gt;
&amp;lt;filter **&amp;gt; # 拼接日志
@id filter_concat
@type concat # Fluentd Filter 插件，用于连接多个事件中分隔的多行日志。
key message
multiline_end_regexp /\n$/ # 以换行符“\n”拼接
separator &amp;quot;&amp;quot;
&amp;lt;/filter&amp;gt;
# 添加 Kubernetes metadata 数据
&amp;lt;filter kubernetes.**&amp;gt;
@id filter_kubernetes_metadata
@type kubernetes_metadata
&amp;lt;/filter&amp;gt;
# 修复 ES 中的 JSON 字段
# 插件地址：https://github.com/repeatedly/fluent-plugin-multi-format-parser
&amp;lt;filter kubernetes.**&amp;gt;
@id filter_parser
@type parser # multi-format-parser多格式解析器插件
key_name log # 在要解析的记录中指定字段名称。
reserve_data true # 在解析结果中保留原始键值对。
remove_key_name_field true # key_name 解析成功后删除字段。
&amp;lt;parse&amp;gt;
@type multi_format
&amp;lt;pattern&amp;gt;
format json
&amp;lt;/pattern&amp;gt;
&amp;lt;pattern&amp;gt;
format none
&amp;lt;/pattern&amp;gt;
&amp;lt;/parse&amp;gt;
&amp;lt;/filter&amp;gt;
# 删除一些多余的属性
&amp;lt;filter kubernetes.**&amp;gt;
@type record_transformer
remove_keys $.docker.container_id,$.kubernetes.container_image_id,$.kubernetes.pod_id,$.kubernetes.namespace_id,$.kubernetes.master_url,$.kubernetes.labels.pod-template-hash
&amp;lt;/filter&amp;gt;
# 只保留具有logging=true标签的Pod日志
&amp;lt;filter kubernetes.**&amp;gt;
@id filter_log
@type grep
&amp;lt;regexp&amp;gt;
key $.kubernetes.labels.logging
pattern ^true$
&amp;lt;/regexp&amp;gt;
&amp;lt;/filter&amp;gt;
###### 监听配置，一般用于日志聚合用 ######
forward.input.conf: |-
# 监听通过TCP发送的消息
&amp;lt;source&amp;gt;
@id forward
@type forward
&amp;lt;/source&amp;gt;
output.conf: |-
&amp;lt;match **&amp;gt;
@id elasticsearch
@type elasticsearch
@log_level info
include_tag_key true
host elasticsearch
port 9200
logstash_format true
logstash_prefix k8s # 设置 index 前缀为 k8s
request_timeout 30s
&amp;lt;buffer&amp;gt;
@type file
path /var/log/fluentd-buffers/kubernetes.system.buffer
flush_mode interval
retry_type exponential_backoff
flush_thread_count 2
flush_interval 5s
retry_forever
retry_max_interval 30
chunk_limit_size 2M
queue_limit_length 8
overflow_action block
&amp;lt;/buffer&amp;gt;
&amp;lt;/match&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>fluentd-daemonset.yaml&lt;/p>
&lt;pre>&lt;code>apiVersion: v1
kind: ServiceAccount
metadata:
name: fluentd-es
namespace: logging
labels:
k8s-app: fluentd-es
kubernetes.io/cluster-service: &amp;quot;true&amp;quot;
addonmanager.kubernetes.io/mode: Reconcile
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
name: fluentd-es
labels:
k8s-app: fluentd-es
kubernetes.io/cluster-service: &amp;quot;true&amp;quot;
addonmanager.kubernetes.io/mode: Reconcile
rules:
- apiGroups:
- &amp;quot;&amp;quot;
resources:
- &amp;quot;namespaces&amp;quot;
- &amp;quot;pods&amp;quot;
verbs:
- &amp;quot;get&amp;quot;
- &amp;quot;watch&amp;quot;
- &amp;quot;list&amp;quot;
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
name: fluentd-es
labels:
k8s-app: fluentd-es
kubernetes.io/cluster-service: &amp;quot;true&amp;quot;
addonmanager.kubernetes.io/mode: Reconcile
subjects:
- kind: ServiceAccount
name: fluentd-es
namespace: logging
apiGroup: &amp;quot;&amp;quot;
roleRef:
kind: ClusterRole
name: fluentd-es
apiGroup: &amp;quot;&amp;quot;
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
name: fluentd-es
namespace: logging
labels:
k8s-app: fluentd-es
kubernetes.io/cluster-service: &amp;quot;true&amp;quot;
addonmanager.kubernetes.io/mode: Reconcile
spec:
selector:
matchLabels:
k8s-app: fluentd-es
template:
metadata:
labels:
k8s-app: fluentd-es
kubernetes.io/cluster-service: &amp;quot;true&amp;quot;
# 此注释确保如果节点被驱逐，fluentd不会被驱逐，支持关键的基于 pod 注释的优先级方案。
annotations:
scheduler.alpha.kubernetes.io/critical-pod: ''
spec:
serviceAccountName: fluentd-es
containers:
- name: fluentd-es
image: quay.io/fluentd_elasticsearch/fluentd:v3.0.1
env:
- name: FLUENTD_ARGS
value: --no-supervisor -q
resources:
limits:
memory: 500Mi
requests:
cpu: 100m
memory: 200Mi
volumeMounts:
- name: varlog
mountPath: /var/log
- name: varlibdockercontainers
mountPath: /var/lib/docker/containers
readOnly: true
- name: config-volume
mountPath: /etc/fluent/config.d
tolerations:
- operator: Exists
terminationGracePeriodSeconds: 30
volumes:
- name: varlog
hostPath:
path: /var/log
- name: varlibdockercontainers
hostPath:
path: /var/lib/docker/containers
- name: config-volume
configMap:
name: fluentd-config
&lt;/code>&lt;/pre>
&lt;p>kibana.yaml&lt;/p>
&lt;pre>&lt;code>apiVersion: v1
kind: Service
metadata:
name: kibana
namespace: logging
labels:
app: kibana
spec:
ports:
- port: 5601
nodePort: 30003
type: NodePort
selector:
app: kibana
---
apiVersion: apps/v1
kind: Deployment
metadata:
name: kibana
namespace: logging
labels:
app: kibana
spec:
selector:
matchLabels:
app: kibana
template:
metadata:
labels:
app: kibana
spec:
containers:
- name: kibana
image: docker.elastic.co/kibana/kibana:7.6.2
resources:
limits:
cpu: 1000m
requests:
cpu: 1000m
env:
- name: ELASTICSEARCH_HOSTS
value: http://elasticsearch:9200
ports:
- containerPort: 5601
&lt;/code>&lt;/pre>
&lt;h1 id="常见问题">常见问题&lt;a class="td-heading-self-link" href="#%e5%b8%b8%e8%a7%81%e9%97%ae%e9%a2%98" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;h2 id="elasticsearch_logging_discoverygo142-found-">elasticsearch_logging_discovery.go:142] Found []&lt;a class="td-heading-self-link" href="#elasticsearch_logging_discoverygo142-found-" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>&lt;a href="https://github.com/kubernetes/kubernetes/issues/94429">https://github.com/kubernetes/kubernetes/issues/94429&lt;/a>&lt;/p></description></item></channel></rss>