<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>断念梦的站点 – Prometheus 开发</title><link>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Metrics/Prometheus/Prometheus-%E5%BC%80%E5%8F%91/</link><description>Recent content in Prometheus 开发 on 断念梦的站点</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Metrics/Prometheus/Prometheus-%E5%BC%80%E5%8F%91/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Prometheus 开发</title><link>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Metrics/Prometheus/Prometheus-%E5%BC%80%E5%8F%91/Prometheus-%E5%BC%80%E5%8F%91/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Metrics/Prometheus/Prometheus-%E5%BC%80%E5%8F%91/Prometheus-%E5%BC%80%E5%8F%91/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/prometheus">GitHub 组织，prometheus&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h1 id="prometheus-源码目录结构">Prometheus 源码目录结构&lt;a class="td-heading-self-link" href="#prometheus-%e6%ba%90%e7%a0%81%e7%9b%ae%e5%bd%95%e7%bb%93%e6%9e%84" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>更新日期：&lt;/p>
&lt;p>Prometheus 的源码目录随着更新迭代，也在不断变化中&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>cmd/ #&lt;/li>
&lt;li>config/ # 用于处理 yaml 格式的配置文件，包含与配置文件对应内容的 struct。&lt;/li>
&lt;li>console_libraries/&lt;/li>
&lt;li>consoles/&lt;/li>
&lt;li>discovery/&lt;/li>
&lt;li>docs/&lt;/li>
&lt;li>documentation/&lt;/li>
&lt;li>notifier/&lt;/li>
&lt;li>pkg/&lt;/li>
&lt;li>prompb/&lt;/li>
&lt;li>promql/&lt;/li>
&lt;li>rules/&lt;/li>
&lt;li>scrape/&lt;/li>
&lt;li>scripts/&lt;/li>
&lt;li>storage/&lt;/li>
&lt;li>template/&lt;/li>
&lt;li>tsdb/&lt;/li>
&lt;li>util/&lt;/li>
&lt;li>web/&lt;/li>
&lt;/ul>
&lt;h1 id="prometheus-通用包">Prometheus 通用包&lt;a class="td-heading-self-link" href="#prometheus-%e9%80%9a%e7%94%a8%e5%8c%85" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/prometheus/common">GitHub, prometheus/common&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>该存储库包含在 Prometheus 组件和库之间共享的 Go 库。它们被认为是 Prometheus 内部的，外部使用没有任何稳定性保证。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>config&lt;/strong> : 通用配置文件对应的 struct
&lt;ul>
&lt;li>很多 Prometheus 的周边都会使用该包中的内容比如 blackbox-exporter 的配置文件中，就引用了该包中的 HTTPClientConfig 结构体，作为配置文件内容的一部分。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>expfmt&lt;/strong> : 展示格式的解码和编码&lt;/li>
&lt;li>&lt;strong>model&lt;/strong>：共享数据结构&lt;/li>
&lt;li>&lt;strong>promlog&lt;/strong> : &lt;a href="https://github.com/go-kit/kit/tree/master/log">go-kit/log 的&lt;/a>日志包装器&lt;/li>
&lt;li>&lt;strong>route&lt;/strong>：使用 &lt;a href="https://github.com/julienschmidt/httprouter">httprouter&lt;/a> 的路由包装器 context.Context&lt;/li>
&lt;li>&lt;strong>server&lt;/strong>：普通服务器&lt;/li>
&lt;li>&lt;strong>version&lt;/strong>：版本信息和指标&lt;/li>
&lt;/ul>
&lt;h1 id="go-客户端库">Go 客户端库&lt;a class="td-heading-self-link" href="#go-%e5%ae%a2%e6%88%b7%e7%ab%af%e5%ba%93" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://pkg.go.dev/github.com/prometheus/client_golang/prometheus?utm_source=gopls#section-documentation">prometheus/client_golang&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/SongLee24/prometheus-exporter">https://github.com/SongLee24/prometheus-exporter&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>prometheus 包是一个 Core Instrumentation(核心仪器化) 的包。这个包为监控提供了用来编写 Exporter 代码的 metrics 原语&lt;/p>
&lt;p>&lt;a href="https://github.com/prometheus/exporter-toolkit/blob/master/docs/introduction.md">https://github.com/prometheus/exporter-toolkit/blob/master/docs/introduction.md&lt;/a>&lt;/p></description></item><item><title>Docs: PromQL 查询逻辑</title><link>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Metrics/Prometheus/Prometheus-%E5%BC%80%E5%8F%91/PromQL-%E6%9F%A5%E8%AF%A2%E9%80%BB%E8%BE%91/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Metrics/Prometheus/Prometheus-%E5%BC%80%E5%8F%91/PromQL-%E6%9F%A5%E8%AF%A2%E9%80%BB%E8%BE%91/</guid><description>
&lt;h1 id="概述">概述&lt;a class="td-heading-self-link" href="#%e6%a6%82%e8%bf%b0" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;blockquote>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h1 id="查询结果数据结构">查询结果数据结构&lt;a class="td-heading-self-link" href="#%e6%9f%a5%e8%af%a2%e7%bb%93%e6%9e%9c%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84" aria-label="Heading self-link">&lt;/a>&lt;/h1>
&lt;p>代码中的查询结果类型，与 Querying API 中描述的一致&lt;/p>
&lt;p>从 web/api/v1/api.go 文件可以看到所有可用的 HTTP API，从 &lt;code>r.Get(&amp;quot;/query&amp;quot;, wrap(api.query))&lt;/code> 可以跳转到即时向量表达式的查询逻辑。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">func&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">api&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">API&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#000">query&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">r&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">http&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Request&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">result&lt;/span> &lt;span style="color:#000">apiFuncResult&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">......&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">apiFuncResult&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&lt;/span>&lt;span style="color:#000">queryData&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">ResultType&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000">res&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Value&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Type&lt;/span>&lt;span style="color:#000;font-weight:bold">(),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">Result&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000">res&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Value&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">Stats&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000">qs&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">},&lt;/span> &lt;span style="color:#204a87;font-weight:bold">nil&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">res&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Warnings&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">qry&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Close&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>代码中的查询结果类型，与 Querying API 中描述的一致，主要是 4 个字段：status、data 中的 resultType 与 result&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">queryData&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">ResultType&lt;/span> &lt;span style="color:#000">parser&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ValueType&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;resultType&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">Result&lt;/span> &lt;span style="color:#000">parser&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Value&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;result&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">Stats&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">stats&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">QueryStats&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;stats,omitempty&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>parser.Value 是一个接口&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">Value&lt;/span> &lt;span style="color:#204a87;font-weight:bold">interface&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">Type&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span> &lt;span style="color:#000">ValueType&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">String&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span> &lt;span style="color:#204a87;font-weight:bold">string&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>一共有 4 个结构体实现了该接口&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/dg9h9g/1616068620395-100edb14-c157-4c00-9d02-60937abc9df5.png" alt="">&lt;/p>
&lt;p>这四个结构体也就是 4 个结果类型 matrix、vector、scalar、string&lt;/p>
&lt;h2 id="直接看最常用的-matrix-和-vector">直接看最常用的 matrix 和 vector&lt;a class="td-heading-self-link" href="#%e7%9b%b4%e6%8e%a5%e7%9c%8b%e6%9c%80%e5%b8%b8%e7%94%a8%e7%9a%84-matrix-%e5%92%8c-vector" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>Matrix 是 Series 类型的数组&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">Series&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">Metric&lt;/span> &lt;span style="color:#000">labels&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Labels&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;metric&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">Points&lt;/span> &lt;span style="color:#000;font-weight:bold">[]&lt;/span>&lt;span style="color:#000">Point&lt;/span> &lt;span style="color:#4e9a06">`json:&amp;#34;values&amp;#34;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span> &lt;span style="color:#000">Point&lt;/span> &lt;span style="color:#204a87;font-weight:bold">struct&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">T&lt;/span> &lt;span style="color:#204a87;font-weight:bold">int64&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">V&lt;/span> &lt;span style="color:#204a87;font-weight:bold">float64&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Series 结构体的属性结构与通过 API 查询获取的结果保持一致&lt;/p>
&lt;p>&lt;img src="https://notes-learning.oss-cn-beijing.aliyuncs.com/dg9h9g/1616068620417-18503054-4f3f-4421-9eea-25d62ca25884.png" alt="">&lt;/p>
&lt;p>有两个字段分别对应 Metrics 与 Points 属性，Metrics 就是表示指标的唯一标识符，即一组标签的合集，Points 就是指标的值数组，Point 里有两个，样本值和时间戳。&lt;/p></description></item><item><title>Docs: Prometheus 规则处理逻辑</title><link>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Metrics/Prometheus/Prometheus-%E5%BC%80%E5%8F%91/Prometheus-%E8%A7%84%E5%88%99%E5%A4%84%E7%90%86%E9%80%BB%E8%BE%91/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://desistdaydream.github.io/docs/6.%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7/Metrics/Prometheus/Prometheus-%E5%BC%80%E5%8F%91/Prometheus-%E8%A7%84%E5%88%99%E5%A4%84%E7%90%86%E9%80%BB%E8%BE%91/</guid><description/></item></channel></rss>